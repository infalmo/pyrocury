{
    "metadata": {
        "id": "ZA-tUyM_y7s",
        "avgHeat": 0.36,
        "runtime": 2732.98,
        "dale-challReadabilityScore": 8.04118645330379,
        "lexicalDiversity": 0.4766677620768978,
        "posComposition": {
            "NN": 0.139,
            "NNP": 0.035,
            ":": 0.017,
            "POS": 0.003,
            "PRP": 0.085,
            "VBP": 0.048,
            "VBG": 0.023,
            "TO": 0.035,
            "VB": 0.058,
            "DT": 0.111,
            "IN": 0.119,
            "CD": 0.017,
            "JJ": 0.061,
            "NNS": 0.031,
            "RB": 0.054,
            "CC": 0.03,
            "MD": 0.019,
            "VBZ": 0.048,
            "WP": 0.012,
            "JJR": 0.004,
            "PRP$": 0.01,
            "RBR": 0.002,
            "WRB": 0.008,
            "UH": 0.0,
            "VBN": 0.006,
            "WDT": 0.01,
            "EX": 0.004,
            "VBD": 0.007,
            "RP": 0.002,
            "PDT": 0.001,
            "JJS": 0.001,
            "NNPS": 0.0
        },
        "syllableRate": 3.098,
        "topicScores": [
            [
                "JASON KU",
                0.04890368556779856
            ],
            [
                "ok",
                0.07869693202683663
            ],
            [
                "algorithm",
                0.11887682818598382
            ],
            [
                "student",
                0.12165217072513085
            ],
            [
                "problem",
                0.13482823320263507
            ],
            [
                "input",
                0.1416025379944945
            ],
            [
                "time",
                0.1538713283909267
            ],
            [
                "K student",
                0.15501768962116594
            ],
            [
                "thing",
                0.15502248157446813
            ],
            [
                "class",
                0.15765715141393072
            ],
            [
                "output",
                0.1582647292813657
            ],
            [
                "K prime",
                0.17330252263258605
            ],
            [
                "kind",
                0.18139430716714772
            ],
            [
                "correct",
                0.18260829384994504
            ],
            [
                "constant",
                0.19148327381611113
            ],
            [
                "birthday",
                0.19218074074326044
            ],
            [
                "computer",
                0.20025645626244296
            ],
            [
                "right",
                0.20450037698480925
            ],
            [
                "memory",
                0.2055687901032176
            ],
            [
                "CPU",
                0.20732543156403296
            ],
            [
                "match",
                0.20774501442168122
            ],
            [
                "size",
                0.20921503642683306
            ],
            [
                "case",
                0.2094893336825966
            ],
            [
                "look",
                0.20977732208285543
            ],
            [
                "solve",
                0.21454184857476422
            ],
            [
                "check",
                0.2157794033127943
            ],
            [
                "bit",
                0.21611945284475956
            ],
            [
                "address",
                0.21709938430926307
            ],
            [
                "operation",
                0.22414093086240164
            ],
            [
                "linear",
                0.22520217909876644
            ]
        ],
        "topicsList": [
            "JASON KU",
            "ok",
            "algorithm",
            "student",
            "problem",
            "input",
            "time",
            "K student",
            "thing",
            "class",
            "output",
            "K prime",
            "kind",
            "correct",
            "constant",
            "birthday",
            "computer",
            "right",
            "memory",
            "CPU",
            "match",
            "size",
            "case",
            "look",
            "solve",
            "check",
            "bit",
            "address",
            "operation",
            "linear"
        ]
    },
    "chunks": {
        "ZA-tUyM_y7s-0": {
            "id": "ZA-tUyM_y7s-0",
            "heat": 0.1,
            "start": 0.0,
            "text": " [SQUEAKING] [RUSTLING] [CLICKING] JASON KU: Good morning, everybody. STUDENT: Morning-- JASON KU: My name's Jason Ku. I'm going to be teaching this class in Introduction to Algorithms with two other instructors here-- faculty in the department-- Eric Demaine and Justin Solomon. They're excellent people, and so they will be working on teaching this class with me. I will be teaching the first lecture, and we'll have each of them teach one of the next two lectures, and then we'll go from there. This is Intro to Algorithms. OK, so we're going to start talking about this course content now. What is this course about? It's about algorithms-- introduction to algorithms. Really what the course is about is teaching you to solve computational problems. But it's more than that. It's not just about teaching you to solve computational problems. Goal 1-- solve computational problems. But it's more than that. It's also about communicating those solutions to others",
            "metrics": {
                "relativeDCReadability": 1.0975124963009608,
                "lexicalDiversity": 0.5174418604651163,
                "posComposition": {
                    "NN": 0.093,
                    "NNP": 0.116,
                    ":": 0.029,
                    "POS": 0.006,
                    "PRP": 0.093,
                    "VBP": 0.029,
                    "VBG": 0.058,
                    "TO": 0.047,
                    "VB": 0.064,
                    "DT": 0.064,
                    "IN": 0.105,
                    "CD": 0.023,
                    "JJ": 0.041,
                    "NNS": 0.047,
                    "RB": 0.052,
                    "CC": 0.035,
                    "MD": 0.023,
                    "VBZ": 0.052,
                    "WP": 0.012,
                    "JJR": 0.012
                },
                "syllableRate": 2.175,
                "topicScores": [
                    [
                        "squeaking",
                        0.33332053207844325
                    ],
                    [
                        "KU",
                        0.3494677979002679
                    ],
                    [
                        "problem",
                        0.3718644856857845
                    ],
                    [
                        "Algorithms",
                        0.38006862544607767
                    ],
                    [
                        "computational",
                        0.39258580531001347
                    ],
                    [
                        "solve",
                        0.40273217033540537
                    ],
                    [
                        "course",
                        0.4374025003824953
                    ],
                    [
                        "JASON KU",
                        0.4380619000330218
                    ],
                    [
                        "introduction",
                        0.4688408599905931
                    ],
                    [
                        "class",
                        0.5406670517423701
                    ],
                    [
                        "STUDENT",
                        0.5461745904637874
                    ],
                    [
                        "lecture",
                        0.54715990843873
                    ],
                    [
                        "good",
                        0.5499608156161363
                    ],
                    [
                        "Justin Solomon",
                        0.5591157947421078
                    ],
                    [
                        "jason",
                        0.579426025573113
                    ],
                    [
                        "Eric",
                        0.6280039186879619
                    ],
                    [
                        "Demaine",
                        0.6280039186879619
                    ],
                    [
                        "Eric Demaine",
                        0.6512247482601895
                    ],
                    [
                        "Intro",
                        0.6625559229512212
                    ],
                    [
                        "computational problem",
                        0.701792712217656
                    ],
                    [
                        "morning",
                        0.8556430617615741
                    ],
                    [
                        "goal",
                        0.888025814236612
                    ],
                    [
                        "good morning",
                        0.8888243863935394
                    ],
                    [
                        "excellent",
                        0.8954537993966127
                    ],
                    [
                        "people",
                        0.8954537993966127
                    ],
                    [
                        "instructor",
                        0.8987095608794371
                    ],
                    [
                        "here--",
                        0.8987095608794371
                    ],
                    [
                        "faculty",
                        0.8987095608794371
                    ],
                    [
                        "department--",
                        0.8987095608794371
                    ],
                    [
                        "content",
                        0.9063325260967987
                    ]
                ],
                "topTopicSimilarity": 0.13333333333333333,
                "sharedTopicScores": [
                    [
                        "problem",
                        0.3718644856857845
                    ],
                    [
                        "solve",
                        0.40273217033540537
                    ],
                    [
                        "JASON KU",
                        0.4380619000330218
                    ],
                    [
                        "class",
                        0.5406670517423701
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-90": {
            "id": "ZA-tUyM_y7s-90",
            "heat": 0.1,
            "start": 90.0,
            "text": " and being able to communicate that your way of solving the problem is correct and efficient. So it's about two more things-- prove correctness, argue efficiency, and in general, it's about communication-- I can't spell, by the way-- communication of these ideas. And you'll find that, over the course of this class, you'll be doing a lot more writing than you do in a lot of your other courses. It really should maybe be a CI kind of class, because you'll be doing a lot more writing than you will be coding, for sure. Of course, solving the computational problem is important, but really, the thing that you're getting out of this class and other theory classes that you're not getting in other classes in this department is that we really concentrate on being able to prove that the things you're doing are correct and better than other things, and being able to communicate those ideas to others, and not just to a computer-- to other people, convince them that it's correct. OK, so that's what this class is about. So what do I mean when I say solve a computational problem?",
            "metrics": {
                "relativeDCReadability": 0.897007752475293,
                "lexicalDiversity": 0.4251207729468599,
                "posComposition": {
                    "CC": 0.043,
                    "VBG": 0.053,
                    "JJ": 0.077,
                    "TO": 0.029,
                    "VB": 0.063,
                    "IN": 0.155,
                    "PRP$": 0.01,
                    "NN": 0.13,
                    "DT": 0.092,
                    "VBZ": 0.039,
                    "PRP": 0.082,
                    "CD": 0.005,
                    "JJR": 0.01,
                    "NNS": 0.048,
                    ":": 0.019,
                    "MD": 0.029,
                    "RB": 0.039,
                    "RBR": 0.01,
                    "VBP": 0.039,
                    "NNP": 0.014,
                    "WP": 0.01,
                    "WRB": 0.005
                },
                "syllableRate": 2.467,
                "topicScores": [
                    [
                        "class",
                        0.2899871316790721
                    ],
                    [
                        "able",
                        0.3820022740527094
                    ],
                    [
                        "problem",
                        0.38933932579663166
                    ],
                    [
                        "lot",
                        0.39115105460785793
                    ],
                    [
                        "correct",
                        0.39536609812749646
                    ],
                    [
                        "course",
                        0.4110739459469276
                    ],
                    [
                        "thing",
                        0.42181696335122926
                    ],
                    [
                        "writing",
                        0.48975054681797625
                    ],
                    [
                        "computational",
                        0.5190883677182481
                    ],
                    [
                        "idea",
                        0.5196131466641123
                    ],
                    [
                        "CI",
                        0.6064099903273299
                    ],
                    [
                        "efficient",
                        0.7135407394931611
                    ],
                    [
                        "way",
                        0.7628393949555405
                    ],
                    [
                        "communication--",
                        0.789421317890182
                    ],
                    [
                        "correctness",
                        0.8168969060829478
                    ],
                    [
                        "general",
                        0.8168969060829478
                    ],
                    [
                        "sure",
                        0.8357098664510929
                    ],
                    [
                        "important",
                        0.8761020460389344
                    ],
                    [
                        "people",
                        0.8761020460389344
                    ],
                    [
                        "kind",
                        0.878185056531327
                    ],
                    [
                        "theory",
                        0.8846956251006715
                    ],
                    [
                        "department",
                        0.8846956251006715
                    ],
                    [
                        "well",
                        0.8846956251006715
                    ],
                    [
                        "computer--",
                        0.8846956251006715
                    ],
                    [
                        "computational problem",
                        1.124806615214608
                    ],
                    [
                        "CI kind",
                        1.1392213450422792
                    ],
                    [
                        "lot more writing",
                        2.2761232420319297
                    ],
                    [
                        "theory class",
                        2.5743375543903997
                    ]
                ],
                "topTopicSimilarity": 0.17857142857142858,
                "sharedTopicScores": [
                    [
                        "class",
                        0.2899871316790721
                    ],
                    [
                        "problem",
                        0.38933932579663166
                    ],
                    [
                        "correct",
                        0.39536609812749646
                    ],
                    [
                        "thing",
                        0.42181696335122926
                    ],
                    [
                        "kind",
                        0.878185056531327
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-180": {
            "id": "ZA-tUyM_y7s-180",
            "heat": 0.1,
            "start": 180.0,
            "text": " What is a problem? What is an algorithm? People make fun of me because I start with this question, but anyone want to answer that question? No? What's a problem, computationally? No? OK, so it's not such a stupid question. Yeah? STUDENT: [INAUDIBLE] JASON KU: Something you want to compute-- OK, yes, that's true. Right. But a little bit more abstractly, what I'm going to think of a computational problem being-- and this is where your prerequisite in discrete mathematics should come in-- a problem is-- you've got a set of inputs. Maybe I have one, two, three, four, five possible inputs I could have to my algorithm. Then I have a space of outputs. I don't know. Maybe I have more of them than I do inputs, but these are the possible outputs to my problem. And what a problem is is a binary relation between these inputs and outputs. Essentially, for each input, I specify which of these outputs is correct. It doesn't necessarily have to be one. If I say, give me the index in an array containing the value",
            "metrics": {
                "relativeDCReadability": 1.1077490787824156,
                "lexicalDiversity": 0.4639175257731959,
                "posComposition": {
                    "WP": 0.026,
                    "VBZ": 0.057,
                    "DT": 0.124,
                    "NN": 0.108,
                    "JJ": 0.057,
                    "NNS": 0.052,
                    "VBP": 0.077,
                    "IN": 0.082,
                    "PRP": 0.088,
                    "CC": 0.031,
                    "TO": 0.031,
                    "VB": 0.046,
                    "RB": 0.052,
                    "NNP": 0.046,
                    ":": 0.021,
                    "UH": 0.005,
                    "RBR": 0.005,
                    "VBG": 0.015,
                    "WRB": 0.005,
                    "PRP$": 0.015,
                    "MD": 0.01,
                    "VBN": 0.005,
                    "CD": 0.031,
                    "JJR": 0.005,
                    "WDT": 0.005
                },
                "syllableRate": 2.333,
                "topicScores": [
                    [
                        "problem",
                        0.3117796561870215
                    ],
                    [
                        "input",
                        0.3552332771238723
                    ],
                    [
                        "output",
                        0.39255964839454377
                    ],
                    [
                        "question",
                        0.43419005106429964
                    ],
                    [
                        "algorithm",
                        0.5470822886322096
                    ],
                    [
                        "possible",
                        0.5822231321456645
                    ],
                    [
                        "STUDENT",
                        0.5831301310034274
                    ],
                    [
                        "KU",
                        0.6283649266039797
                    ],
                    [
                        "JASON",
                        0.6604053366804142
                    ],
                    [
                        "JASON KU",
                        0.7093302708271769
                    ],
                    [
                        "People",
                        0.8648539907175172
                    ],
                    [
                        "fun",
                        0.8985524178364969
                    ],
                    [
                        "compute--",
                        0.9085910941315806
                    ],
                    [
                        "true",
                        0.9103639760791041
                    ],
                    [
                        "being--",
                        0.9132787349024963
                    ],
                    [
                        "stupid",
                        0.9163027004354735
                    ],
                    [
                        "correct",
                        0.919779400814958
                    ],
                    [
                        "value",
                        0.9210422618896962
                    ],
                    [
                        "little",
                        0.9357988762248912
                    ],
                    [
                        "bit",
                        0.9357988762248912
                    ],
                    [
                        "computational",
                        0.9357988762248912
                    ],
                    [
                        "prerequisite",
                        0.9367227924180677
                    ],
                    [
                        "discrete",
                        0.9367227924180677
                    ],
                    [
                        "mathematic",
                        0.9367227924180677
                    ],
                    [
                        "in--",
                        0.9367227924180677
                    ],
                    [
                        "is--",
                        0.9367227924180677
                    ],
                    [
                        "set",
                        0.9367227924180677
                    ],
                    [
                        "space",
                        0.9383034214803128
                    ],
                    [
                        "binary",
                        0.9401887042535594
                    ],
                    [
                        "relation",
                        0.9401887042535594
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "problem",
                        0.3117796561870215
                    ],
                    [
                        "input",
                        0.3552332771238723
                    ],
                    [
                        "output",
                        0.39255964839454377
                    ],
                    [
                        "algorithm",
                        0.5470822886322096
                    ],
                    [
                        "JASON KU",
                        0.7093302708271769
                    ],
                    [
                        "correct",
                        0.919779400814958
                    ],
                    [
                        "bit",
                        0.9357988762248912
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-270": {
            "id": "ZA-tUyM_y7s-270",
            "heat": 0.1,
            "start": 270.0,
            "text": " 5, there could be multiple 5's in that array, and so any of those indices would be correct. So maybe this guy maps to that output, and maybe this guy maps to-- I don't know-- two or three outputs. This input goes to one, two-- I don't know. There's some kind of mapping here. These edges represent a binary relation, and it's kind of a graph, a bipartite graph between these inputs and outputs. And these are specifying which of these outputs are correct for these inputs. That's really the formal definition of what a problem is. Now, generally, if I have a problem-- a computational problem, I'm not going to specify the problem to you by saying, OK, for input 1, the correct answer is 0, and for input 2, the correct answer's 3, and so on and so forth. That would take forever, right? Usually what we do when defining a problem is specify some kind of predicate, saying that, oh, we can check-- if I give you an input and an output, I can check whether that output is correct or not. That's usually how we define a problem is, if I am checking for whether this index contains a 5, I can just go to that array, look at index 5, and-- or the index you gave me, and see if it equals 5. So usually, we're putting it in terms of predicates",
            "metrics": {
                "relativeDCReadability": 1.1419939043641605,
                "lexicalDiversity": 0.48221343873517786,
                "posComposition": {
                    "CD": 0.051,
                    "EX": 0.008,
                    "MD": 0.024,
                    "VB": 0.043,
                    "JJ": 0.036,
                    "POS": 0.008,
                    "IN": 0.099,
                    "DT": 0.134,
                    "NN": 0.134,
                    "CC": 0.055,
                    "RB": 0.075,
                    "NNS": 0.036,
                    "NNP": 0.012,
                    "VBZ": 0.055,
                    "TO": 0.024,
                    ":": 0.024,
                    "PRP": 0.075,
                    "VBP": 0.047,
                    "VBG": 0.028,
                    "WDT": 0.012,
                    "WP": 0.008,
                    "WRB": 0.008,
                    "VBD": 0.004
                },
                "syllableRate": 2.9,
                "topicScores": [
                    [
                        "output",
                        0.29077626036933063
                    ],
                    [
                        "input",
                        0.29102981892248764
                    ],
                    [
                        "correct",
                        0.31314930303407235
                    ],
                    [
                        "problem",
                        0.31696528135861235
                    ],
                    [
                        "index",
                        0.38206134465098157
                    ],
                    [
                        "kind",
                        0.41612234914471696
                    ],
                    [
                        "guy",
                        0.5065456103633041
                    ],
                    [
                        "array",
                        0.5396187230689263
                    ],
                    [
                        "predicate",
                        0.5479994297053532
                    ],
                    [
                        "graph",
                        0.5544381934318768
                    ],
                    [
                        "answer",
                        0.5605091310982221
                    ],
                    [
                        "multiple",
                        0.8059821763626874
                    ],
                    [
                        "to--",
                        0.8621079298649872
                    ],
                    [
                        "mapping",
                        0.8973074109972827
                    ],
                    [
                        "right",
                        0.8981353270964437
                    ],
                    [
                        "edge",
                        0.9029089521593483
                    ],
                    [
                        "binary",
                        0.9029089521593483
                    ],
                    [
                        "relation",
                        0.9029089521593483
                    ],
                    [
                        "bipartite",
                        0.9029089521593483
                    ],
                    [
                        "computational",
                        0.9130872158094749
                    ],
                    [
                        "formal",
                        0.9154597029969115
                    ],
                    [
                        "definition",
                        0.9154597029969115
                    ],
                    [
                        "and--",
                        0.9188112612030841
                    ],
                    [
                        "check--",
                        0.9218870323272895
                    ],
                    [
                        "term",
                        0.9247648413724205
                    ],
                    [
                        "correct answer",
                        1.6154107432993667
                    ],
                    [
                        "computational problem",
                        2.970332928566311
                    ],
                    [
                        "bipartite graph",
                        3.841293976462095
                    ],
                    [
                        "binary relation",
                        4.412560983334761
                    ],
                    [
                        "formal definition",
                        5.175373231740843
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "output",
                        0.29077626036933063
                    ],
                    [
                        "input",
                        0.29102981892248764
                    ],
                    [
                        "correct",
                        0.31314930303407235
                    ],
                    [
                        "problem",
                        0.31696528135861235
                    ],
                    [
                        "kind",
                        0.41612234914471696
                    ],
                    [
                        "right",
                        0.8981353270964437
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-360": {
            "id": "ZA-tUyM_y7s-360",
            "heat": 0.162,
            "start": 360.0,
            "text": " because, in general, we don't really want to talk about small instances of problems. So let's say I had the problem of, among the students in this classroom, do any pair of you have the same birthday? All right, well, probably, if there's more than 365 of you, the answer is yes. Right? By what? Pigeonhole principle-- two of you must have the same birthday. So let's generalize it a little bit, say that-- I don't know-- I need a bigger space of birthdays for this question to be interesting. Maybe I tack on the year. Maybe I tack on the hour that you were born. And that's a bigger space of inputs, and I wouldn't necessarily expect that two of you would be born in the same year on the same day in the same hour. That would be a little less likely. In fact, as long as that space is larger than something like the square of the number of you, then I'm less likely than even to have a pair of you. That's a birthday problem you may have seen in 042, potentially. But in general, I don't-- I'm not going to mess with probability so much here. I want a deterministic algorithm, right away of checking whether two of you have the same birth time,",
            "metrics": {
                "relativeDCReadability": 0.8088811049905963,
                "lexicalDiversity": 0.4700854700854701,
                "posComposition": {
                    "IN": 0.167,
                    "JJ": 0.068,
                    "PRP": 0.09,
                    "VBP": 0.056,
                    "RB": 0.094,
                    "VB": 0.06,
                    "TO": 0.017,
                    "NNS": 0.021,
                    "NNP": 0.021,
                    "POS": 0.009,
                    "VBD": 0.009,
                    "DT": 0.111,
                    "NN": 0.124,
                    "EX": 0.004,
                    "VBZ": 0.021,
                    "JJR": 0.017,
                    "CD": 0.021,
                    "WP": 0.004,
                    ":": 0.017,
                    "MD": 0.021,
                    "VBN": 0.013,
                    "CC": 0.013,
                    "WDT": 0.004,
                    "RBR": 0.009,
                    "VBG": 0.009
                },
                "syllableRate": 2.55,
                "topicScores": [
                    [
                        "birthday",
                        0.37000362689320737
                    ],
                    [
                        "right",
                        0.42387876450153006
                    ],
                    [
                        "problem",
                        0.4349157440744226
                    ],
                    [
                        "space",
                        0.43770813947059095
                    ],
                    [
                        "general",
                        0.5433517992412182
                    ],
                    [
                        "big",
                        0.5466790547737936
                    ],
                    [
                        "pair",
                        0.5520627554116618
                    ],
                    [
                        "year",
                        0.5535097212336514
                    ],
                    [
                        "hour",
                        0.5543669522965333
                    ],
                    [
                        "likely",
                        0.5572267545514935
                    ],
                    [
                        "little",
                        0.5587820738531863
                    ],
                    [
                        "small",
                        0.8622482954728051
                    ],
                    [
                        "instance",
                        0.8622482954728051
                    ],
                    [
                        "classroom",
                        0.8739187150236143
                    ],
                    [
                        "student",
                        0.8838187546595007
                    ],
                    [
                        "Pigeonhole",
                        0.8859857540581565
                    ],
                    [
                        "answer",
                        0.8865490423059471
                    ],
                    [
                        "interesting",
                        0.8899443073464021
                    ],
                    [
                        "don't--",
                        0.8948603849860032
                    ],
                    [
                        "principle--",
                        0.9046974821734379
                    ],
                    [
                        "time",
                        0.9069116268794695
                    ],
                    [
                        "bit",
                        0.9080737746016125
                    ],
                    [
                        "that--",
                        0.9080737746016125
                    ],
                    [
                        "fact",
                        0.9104777059491326
                    ],
                    [
                        "input",
                        0.9150105013042437
                    ],
                    [
                        "question",
                        0.9155510796870403
                    ],
                    [
                        "deterministic",
                        0.9224895039116511
                    ],
                    [
                        "algorithm",
                        0.9224895039116511
                    ],
                    [
                        "large",
                        0.9248469861203223
                    ],
                    [
                        "square",
                        0.9248469861203223
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "birthday",
                        0.37000362689320737
                    ],
                    [
                        "right",
                        0.42387876450153006
                    ],
                    [
                        "problem",
                        0.4349157440744226
                    ],
                    [
                        "student",
                        0.8838187546595007
                    ],
                    [
                        "time",
                        0.9069116268794695
                    ],
                    [
                        "bit",
                        0.9080737746016125
                    ],
                    [
                        "input",
                        0.9150105013042437
                    ],
                    [
                        "algorithm",
                        0.9224895039116511
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-450": {
            "id": "ZA-tUyM_y7s-450",
            "heat": 0.114,
            "start": 450.0,
            "text": " let's say. OK, so in general, in this class, we're not going to concentrate on inputs such as, is there a pair of you in this class that have the same birthday? That's kind of boring. I could do a lot of different things, but what we do in this class-- this is for a fixed classroom of you. I want to make algorithms that are general to any classroom-- to go to your recitation. I want an algorithm that will apply to your recitation. I want an algorithm that not only applies to this classroom, but also the machine learning class before you. I want an algorithm that can change its-- it can accept an arbitrarily sized input. Here we have a class of maybe 300, 400 students, but I want my algorithm to work for a billion students. Maybe I'm trying to check if there's a match of something in the Facebook database or something like that. So in general, we are looking for general problems that have arbitrarily sized inputs. So these inputs could grow very large, but we want kind of a fixed size algorithm",
            "metrics": {
                "relativeDCReadability": 0.9116213865241046,
                "lexicalDiversity": 0.4517766497461929,
                "posComposition": {
                    "NN": 0.152,
                    "POS": 0.005,
                    "VB": 0.056,
                    "NNP": 0.015,
                    "RB": 0.056,
                    "IN": 0.117,
                    "JJ": 0.051,
                    "DT": 0.117,
                    "PRP": 0.081,
                    "VBP": 0.071,
                    "VBG": 0.02,
                    "TO": 0.046,
                    "NNS": 0.036,
                    "VBZ": 0.025,
                    "EX": 0.01,
                    "WDT": 0.025,
                    "MD": 0.025,
                    "CC": 0.025,
                    "WP": 0.005,
                    ":": 0.015,
                    "PRP$": 0.02,
                    "VBN": 0.01,
                    "CD": 0.015
                },
                "syllableRate": 2.292,
                "topicScores": [
                    [
                        "algorithm",
                        0.3193196043841968
                    ],
                    [
                        "input",
                        0.39372091836604106
                    ],
                    [
                        "class",
                        0.393966563417787
                    ],
                    [
                        "general",
                        0.39574390960820005
                    ],
                    [
                        "recitation",
                        0.5023215488209399
                    ],
                    [
                        "student",
                        0.5733349129403468
                    ],
                    [
                        "classroom",
                        0.5745571355440635
                    ],
                    [
                        "size",
                        0.5803021498486021
                    ],
                    [
                        "Facebook",
                        0.7092479736442795
                    ],
                    [
                        "birthday",
                        0.8353700288016932
                    ],
                    [
                        "boring",
                        0.8604682503337882
                    ],
                    [
                        "pair",
                        0.8848775722522835
                    ],
                    [
                        "different",
                        0.9024978145780798
                    ],
                    [
                        "thing",
                        0.9024978145780798
                    ],
                    [
                        "lot",
                        0.9132808348766631
                    ],
                    [
                        "machine",
                        0.9275027486847546
                    ],
                    [
                        "learning",
                        0.9275027486847546
                    ],
                    [
                        "large",
                        0.9287250953712135
                    ],
                    [
                        "match",
                        0.9340283877465395
                    ],
                    [
                        "database",
                        0.9340283877465395
                    ],
                    [
                        "problem",
                        0.9355238085159168
                    ],
                    [
                        "Facebook database",
                        1.9625920142753164
                    ],
                    [
                        "different thing",
                        4.390902575449463
                    ],
                    [
                        "size algorithm",
                        4.698339535843324
                    ],
                    [
                        "sized input",
                        5.337662289335838
                    ],
                    [
                        "learning class",
                        5.598234142043026
                    ],
                    [
                        "general problem",
                        6.124661028079482
                    ],
                    [
                        "machine learning",
                        6.156216204605826
                    ],
                    [
                        "machine learning class",
                        47.06857478850422
                    ]
                ],
                "topTopicSimilarity": 0.3103448275862069,
                "sharedTopicScores": [
                    [
                        "algorithm",
                        0.3193196043841968
                    ],
                    [
                        "input",
                        0.39372091836604106
                    ],
                    [
                        "class",
                        0.393966563417787
                    ],
                    [
                        "student",
                        0.5733349129403468
                    ],
                    [
                        "size",
                        0.5803021498486021
                    ],
                    [
                        "birthday",
                        0.8353700288016932
                    ],
                    [
                        "thing",
                        0.9024978145780798
                    ],
                    [
                        "match",
                        0.9340283877465395
                    ],
                    [
                        "problem",
                        0.9355238085159168
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-540": {
            "id": "ZA-tUyM_y7s-540",
            "heat": 0.195,
            "start": 540.0,
            "text": " to solve those problems. So what is an algorithm, then? I really can't spell-- told you. I didn't lie to you. So an algorithm is a little different than a problem. A problem specification-- I can tell you what this graph looks like. An algorithm is really-- I don't know what the outputs are. I don't know what these edges are. But I want a fixed size machine or procedure that, if I give it an input, it will generate an output. And if it generates an output, it better be one of these correct outputs. So if I have an algorithm that takes in this input, I really want it to output this output, or else it's not a correct algorithm. Similarly, for this one, it could output any of these three outputs, but if it outputs this guy for this input, that would not be a correct algorithm. And so generally, what we want is an algorithm is a function. It takes inputs to outputs. An algorithm is some kind of function that takes these inputs, maps it to a single output, and that output better be correct based on our problem.",
            "metrics": {
                "relativeDCReadability": 0.9956392081334128,
                "lexicalDiversity": 0.4405940594059406,
                "posComposition": {
                    "TO": 0.025,
                    "VB": 0.059,
                    "DT": 0.153,
                    "NNS": 0.035,
                    "VBP": 0.054,
                    "WP": 0.025,
                    "VBZ": 0.064,
                    "JJ": 0.05,
                    "RB": 0.069,
                    "PRP": 0.114,
                    "MD": 0.025,
                    ":": 0.015,
                    "IN": 0.089,
                    "VBD": 0.005,
                    "NN": 0.139,
                    "CC": 0.035,
                    "JJR": 0.005,
                    "CD": 0.015,
                    "WDT": 0.015,
                    "VBN": 0.005,
                    "PRP$": 0.005
                },
                "syllableRate": 2.35,
                "topicScores": [
                    [
                        "output",
                        0.25417919486490526
                    ],
                    [
                        "algorithm",
                        0.27474710364484956
                    ],
                    [
                        "input",
                        0.35493455899318427
                    ],
                    [
                        "problem",
                        0.3831303860623452
                    ],
                    [
                        "correct",
                        0.3916080079506281
                    ],
                    [
                        "function",
                        0.5861214037311792
                    ],
                    [
                        "really--",
                        0.9149370032159166
                    ],
                    [
                        "little",
                        0.9301667591712399
                    ],
                    [
                        "different",
                        0.9301667591712399
                    ],
                    [
                        "graph",
                        0.9341075515074807
                    ],
                    [
                        "edge",
                        0.9352896356684245
                    ],
                    [
                        "procedure",
                        0.9369823472662224
                    ],
                    [
                        "size",
                        0.9427749651387456
                    ],
                    [
                        "machine",
                        0.9427749651387456
                    ],
                    [
                        "single",
                        0.9432746767252126
                    ],
                    [
                        "guy",
                        0.9461917590443542
                    ],
                    [
                        "kind",
                        0.9485206780796592
                    ],
                    [
                        "correct algorithm",
                        2.4012501651080917
                    ],
                    [
                        "correct output",
                        5.90851748365946
                    ],
                    [
                        "little different",
                        6.418958994035337
                    ],
                    [
                        "single output",
                        7.866850177368864
                    ],
                    [
                        "size machine",
                        7.9947984342738785
                    ]
                ],
                "topTopicSimilarity": 0.3181818181818182,
                "sharedTopicScores": [
                    [
                        "output",
                        0.25417919486490526
                    ],
                    [
                        "algorithm",
                        0.27474710364484956
                    ],
                    [
                        "input",
                        0.35493455899318427
                    ],
                    [
                        "problem",
                        0.3831303860623452
                    ],
                    [
                        "correct",
                        0.3916080079506281
                    ],
                    [
                        "size",
                        0.9427749651387456
                    ],
                    [
                        "kind",
                        0.9485206780796592
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-630": {
            "id": "ZA-tUyM_y7s-630",
            "heat": 0.203,
            "start": 630.0,
            "text": " So that's what our algorithm is. It solves the problem if it returns a correct output for every problem input that is in our domain. Does anyone have a possible algorithm for checking whether any two of you have the same birth time, as specified before? I'm going to let someone else have a try. Sure. STUDENT: Just ask everyone one by one, and every time [INAUDIBLE] JASON KU: Great-- so what your colleague has said is a great algorithm. Essentially, what it's going to do is I'm going to put you guys in some order, I'm going to give you each of you a number, one through however many number of students there are in this class. And I'm going to interview you one by one. I'm going to say, what's your birthday? And I'm going to write it down. I'm going to put it in some kind of record. And then, as I keep interviewing you, I'm going to find out your birthday. I'm going to check the record. I'm going to look through all the birthdays in the record. If I find a match, then I return, yay-- I found a pair-- and I can stop. Otherwise, if I get through the record list, I don't-- and I don't find a match, I just stick you at the end of the record-- I add you to the record, and then I move on to the next person. I keep doing this. OK, so that's a proposed algorithm for this birthday problem.",
            "metrics": {
                "relativeDCReadability": 0.8526971659023866,
                "lexicalDiversity": 0.46545454545454545,
                "posComposition": {
                    "IN": 0.105,
                    "DT": 0.109,
                    "VBZ": 0.04,
                    "WP": 0.015,
                    "PRP$": 0.018,
                    "NN": 0.142,
                    "PRP": 0.127,
                    "JJ": 0.025,
                    "WDT": 0.004,
                    "NNP": 0.029,
                    "VB": 0.055,
                    "VBG": 0.051,
                    "CD": 0.022,
                    "VBP": 0.08,
                    "VBN": 0.007,
                    "TO": 0.047,
                    "RB": 0.044,
                    "CC": 0.025,
                    ":": 0.018,
                    "VBD": 0.007,
                    "NNS": 0.011,
                    "EX": 0.004,
                    "RP": 0.007,
                    "PDT": 0.004,
                    "MD": 0.004
                },
                "syllableRate": 3.025,
                "topicScores": [
                    [
                        "record",
                        0.32817929346929825
                    ],
                    [
                        "algorithm",
                        0.36197569036506005
                    ],
                    [
                        "birthday",
                        0.3741421417487189
                    ],
                    [
                        "student",
                        0.43917804403964394
                    ],
                    [
                        "problem",
                        0.4413657920083558
                    ],
                    [
                        "time",
                        0.545866047341114
                    ],
                    [
                        "match",
                        0.5556852021285025
                    ],
                    [
                        "number",
                        0.5667921031445773
                    ],
                    [
                        "INAUDIBLE",
                        0.6195903225017201
                    ],
                    [
                        "JASON",
                        0.6195903225017201
                    ],
                    [
                        "KU",
                        0.6195903225017201
                    ],
                    [
                        "JASON KU",
                        0.6230924971822168
                    ],
                    [
                        "domain",
                        0.8402585954989903
                    ],
                    [
                        "correct",
                        0.8683914700132525
                    ],
                    [
                        "output",
                        0.8683914700132525
                    ],
                    [
                        "input",
                        0.8683914700132525
                    ],
                    [
                        "try",
                        0.878154508952786
                    ],
                    [
                        "possible",
                        0.889123670814469
                    ],
                    [
                        "class",
                        0.901094229891772
                    ],
                    [
                        "great",
                        0.9108103303671901
                    ],
                    [
                        "order",
                        0.9139906506240852
                    ],
                    [
                        "colleague",
                        0.916545087312026
                    ],
                    [
                        "person",
                        0.9174076541832586
                    ],
                    [
                        "guy",
                        0.9195389825485926
                    ],
                    [
                        "kind",
                        0.9271493466596809
                    ],
                    [
                        "list",
                        0.9283460976971365
                    ],
                    [
                        "don't--",
                        0.9283460976971365
                    ],
                    [
                        "pair--",
                        0.9322908175384288
                    ],
                    [
                        "end",
                        0.9330362287851879
                    ],
                    [
                        "possible algorithm",
                        2.9571365950988757
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "algorithm",
                        0.36197569036506005
                    ],
                    [
                        "birthday",
                        0.3741421417487189
                    ],
                    [
                        "student",
                        0.43917804403964394
                    ],
                    [
                        "problem",
                        0.4413657920083558
                    ],
                    [
                        "time",
                        0.545866047341114
                    ],
                    [
                        "match",
                        0.5556852021285025
                    ],
                    [
                        "JASON KU",
                        0.6230924971822168
                    ],
                    [
                        "correct",
                        0.8683914700132525
                    ],
                    [
                        "output",
                        0.8683914700132525
                    ],
                    [
                        "input",
                        0.8683914700132525
                    ],
                    [
                        "class",
                        0.901094229891772
                    ],
                    [
                        "kind",
                        0.9271493466596809
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-720": {
            "id": "ZA-tUyM_y7s-720",
            "heat": 0.143,
            "start": 720.0,
            "text": " For birthday problem, what's the algorithm here? Maintain a record. Interview students in some order. And what does interviewing a student mean? It means two things. It means check if birthday in record. And if it is, return a pair. So return pair. Otherwise, add a new student to record. And then, at the very end, if I go through everybody and I haven't found a match yet, I'm going to return that there is none. OK, so that's a statement of an algorithm. That's kind of the level of description that we'll be looking for you in the three parts of this--",
            "metrics": {
                "relativeDCReadability": 0.8054278153734731,
                "lexicalDiversity": 0.4727272727272727,
                "posComposition": {
                    "IN": 0.155,
                    "NN": 0.209,
                    "WP": 0.018,
                    "VBZ": 0.082,
                    "DT": 0.127,
                    "RB": 0.055,
                    "NNP": 0.027,
                    "NNS": 0.027,
                    "CC": 0.036,
                    "VBG": 0.036,
                    "PRP": 0.073,
                    "CD": 0.018,
                    "JJ": 0.027,
                    "TO": 0.018,
                    "VBP": 0.027,
                    "VBN": 0.009,
                    "VB": 0.018,
                    "EX": 0.009,
                    "WDT": 0.009,
                    "MD": 0.009,
                    ":": 0.009
                },
                "syllableRate": 1.233,
                "topicScores": [
                    [
                        "record",
                        0.42681375101738445
                    ],
                    [
                        "student",
                        0.44668968942148995
                    ],
                    [
                        "pair",
                        0.5319995748676861
                    ],
                    [
                        "interview",
                        0.5510972215290209
                    ],
                    [
                        "birthday",
                        0.5618797141577144
                    ],
                    [
                        "algorithm",
                        0.5673000367199664
                    ],
                    [
                        "problem",
                        0.8189081702525478
                    ],
                    [
                        "order",
                        0.8586926880335533
                    ],
                    [
                        "thing",
                        0.8816042781672049
                    ],
                    [
                        "this--",
                        0.9060520897419417
                    ],
                    [
                        "end",
                        0.9261222434196585
                    ],
                    [
                        "match",
                        0.9261222434196585
                    ],
                    [
                        "new",
                        0.9332840477573423
                    ],
                    [
                        "statement",
                        0.9364999310642665
                    ],
                    [
                        "level",
                        0.9377685936255757
                    ],
                    [
                        "description",
                        0.9377685936255757
                    ],
                    [
                        "part",
                        0.9377685936255757
                    ],
                    [
                        "birthday problem",
                        2.6939277786079847
                    ],
                    [
                        "interview student",
                        3.5524629331704483
                    ],
                    [
                        "new student",
                        5.016004600938115
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "student",
                        0.44668968942148995
                    ],
                    [
                        "birthday",
                        0.5618797141577144
                    ],
                    [
                        "algorithm",
                        0.5673000367199664
                    ],
                    [
                        "problem",
                        0.8189081702525478
                    ],
                    [
                        "thing",
                        0.8816042781672049
                    ],
                    [
                        "match",
                        0.9261222434196585
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-810": {
            "id": "ZA-tUyM_y7s-810",
            "heat": 0.193,
            "start": 810.0,
            "text": " theory questions that we ask you on your problem sets. It's a verbal description in words that-- it's maybe not enough for a computer to know what to do, but if you said this algorithm to any of your friends in this class, right they would at least understand what it is that you're doing. Yeah? STUDENT: Does an algorithm have to be a pure function in a mathematical sense? JASON KU: Does an algorithm have to be a pure function in a mathematical sense? As in it needs to map to a single output? STUDENT: As in it can't modify some external state. It can't take in state and it can't do I/O. JASON KU: So we're talking about kind of a functional programming definition of a function. I am talking about the mathematical-- I have a binary relation, and this thing has an output for every input, and there is exactly one output to every input. That's the mathematical definition of function that I'm using for when I'm defining an algorithm. Yeah? STUDENT: Basically, is an algorithm like a plan? JASON KU: Yeah. An algorithm's a procedure that somehow-- I can do whatever I want, but I have to take one of these inputs and I have to produce an output. And at the end, it better be correct. So it's just a procedure. You can think of it as like a recipe.",
            "metrics": {
                "relativeDCReadability": 1.086929646431179,
                "lexicalDiversity": 0.464,
                "posComposition": {
                    "NN": 0.148,
                    "NNS": 0.016,
                    "IN": 0.128,
                    "PRP": 0.1,
                    "VBP": 0.056,
                    "PRP$": 0.008,
                    "VBZ": 0.04,
                    "DT": 0.128,
                    "JJ": 0.052,
                    "WDT": 0.016,
                    ":": 0.012,
                    "RB": 0.032,
                    "TO": 0.04,
                    "VB": 0.052,
                    "WP": 0.008,
                    "CC": 0.028,
                    "VBD": 0.004,
                    "MD": 0.024,
                    "JJS": 0.004,
                    "VBG": 0.02,
                    "NNP": 0.06,
                    "EX": 0.004,
                    "CD": 0.008,
                    "WRB": 0.004,
                    "POS": 0.004,
                    "JJR": 0.004
                },
                "syllableRate": 3.008,
                "topicScores": [
                    [
                        "JASON KU",
                        0.2241640077183969
                    ],
                    [
                        "algorithm",
                        0.29173297807573806
                    ],
                    [
                        "STUDENT",
                        0.343780733357126
                    ],
                    [
                        "function",
                        0.3504807619480708
                    ],
                    [
                        "output",
                        0.3725260181786335
                    ],
                    [
                        "mathematical",
                        0.41875904414554765
                    ],
                    [
                        "input",
                        0.432294714807402
                    ],
                    [
                        "sense",
                        0.4869732392469886
                    ],
                    [
                        "pure",
                        0.5169480877538117
                    ],
                    [
                        "O. JASON",
                        0.5528564675965095
                    ],
                    [
                        "state",
                        0.5564976919428226
                    ],
                    [
                        "procedure",
                        0.5592368895954563
                    ],
                    [
                        "definition",
                        0.561359486848719
                    ],
                    [
                        "theory",
                        0.7449020009749798
                    ],
                    [
                        "set",
                        0.7449020009749798
                    ],
                    [
                        "question",
                        0.781045900544237
                    ],
                    [
                        "problem",
                        0.781045900544237
                    ],
                    [
                        "word",
                        0.8146333651868845
                    ],
                    [
                        "that--",
                        0.8422961288420695
                    ],
                    [
                        "verbal",
                        0.8549059646390683
                    ],
                    [
                        "description",
                        0.8549059646390683
                    ],
                    [
                        "class",
                        0.8671025560119602
                    ],
                    [
                        "computer",
                        0.8774627626422141
                    ],
                    [
                        "friend",
                        0.8774627626422141
                    ],
                    [
                        "plan",
                        0.8992602475868817
                    ],
                    [
                        "single",
                        0.8993536416046591
                    ],
                    [
                        "correct",
                        0.9036853539072445
                    ],
                    [
                        "recipe",
                        0.9053864515266391
                    ],
                    [
                        "external",
                        0.905773163011054
                    ],
                    [
                        "binary",
                        0.9101875289902239
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "JASON KU",
                        0.2241640077183969
                    ],
                    [
                        "algorithm",
                        0.29173297807573806
                    ],
                    [
                        "output",
                        0.3725260181786335
                    ],
                    [
                        "input",
                        0.432294714807402
                    ],
                    [
                        "problem",
                        0.781045900544237
                    ],
                    [
                        "class",
                        0.8671025560119602
                    ],
                    [
                        "computer",
                        0.8774627626422141
                    ],
                    [
                        "correct",
                        0.9036853539072445
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-900": {
            "id": "ZA-tUyM_y7s-900",
            "heat": 0.151,
            "start": 900.0,
            "text": " It's just some kind of procedure. It's a sequence of things that you should do, and then, at the end, you will return an output. S here's a possible algorithm for solving this birthday problem. Now, I've given you-- what I argue to you, or I'm asserting to you, is a solution to this birthday problem. And maybe you guys agree with me, and maybe some of you don't. So how do I convince you that this is correct? If I was just running this algorithm on, say, the four students in the front row here, I could argue it pretty well to you. I could assign these for people birthdays in various combinations of either their-- none of them have the same birthday, some two of them have the same birthday. I could try all possibilities, and I could go through lots of different possibilities and I need to check that this algorithm returns the right answer in all such cases. But when I have-- I don't know-- 300 of you, that's going to be a little bit more difficult to argue. And so if I want to argue something is correct in-- I want to prove something to you for some large value, what kind of technique do I use to prove such things? Yeah? Induction, right? And in general, what we do in this class, what we do",
            "metrics": {
                "relativeDCReadability": 0.9150770864293785,
                "lexicalDiversity": 0.4098360655737705,
                "posComposition": {
                    "PRP": 0.139,
                    "VBZ": 0.033,
                    "RB": 0.053,
                    "DT": 0.102,
                    "NN": 0.111,
                    "IN": 0.111,
                    "NNS": 0.041,
                    "MD": 0.025,
                    "VB": 0.07,
                    "CC": 0.037,
                    "NNP": 0.008,
                    "JJ": 0.061,
                    "VBG": 0.016,
                    "VBP": 0.07,
                    "VBN": 0.004,
                    ":": 0.02,
                    "WP": 0.016,
                    "TO": 0.045,
                    "WRB": 0.008,
                    "VBD": 0.004,
                    "CD": 0.012,
                    "PRP$": 0.004,
                    "WDT": 0.004,
                    "RBR": 0.004
                },
                "syllableRate": 2.658,
                "topicScores": [
                    [
                        "birthday",
                        0.32109987231450626
                    ],
                    [
                        "algorithm",
                        0.4309853646086678
                    ],
                    [
                        "problem",
                        0.4672773111575772
                    ],
                    [
                        "S",
                        0.5300892915591504
                    ],
                    [
                        "kind",
                        0.5423104341797167
                    ],
                    [
                        "correct",
                        0.5445046884671618
                    ],
                    [
                        "thing",
                        0.5470164418223848
                    ],
                    [
                        "right",
                        0.5522206579313369
                    ],
                    [
                        "possibility",
                        0.5584137669867759
                    ],
                    [
                        "procedure",
                        0.7450630580923501
                    ],
                    [
                        "output",
                        0.8147613451030342
                    ],
                    [
                        "end",
                        0.8418250589300592
                    ],
                    [
                        "sequence",
                        0.8533065851051288
                    ],
                    [
                        "possible",
                        0.8760759852970212
                    ],
                    [
                        "induction",
                        0.8864191763433179
                    ],
                    [
                        "case",
                        0.887331092904902
                    ],
                    [
                        "solution",
                        0.8885177735921972
                    ],
                    [
                        "guy",
                        0.8965087394531367
                    ],
                    [
                        "row",
                        0.8985635139939868
                    ],
                    [
                        "student",
                        0.9063845363096863
                    ],
                    [
                        "large",
                        0.909473892129476
                    ],
                    [
                        "value",
                        0.909473892129476
                    ],
                    [
                        "people",
                        0.9097070263579481
                    ],
                    [
                        "combination",
                        0.9097070263579481
                    ],
                    [
                        "their--",
                        0.9097070263579481
                    ],
                    [
                        "lot",
                        0.9123992875020261
                    ],
                    [
                        "different",
                        0.9123992875020261
                    ],
                    [
                        "answer",
                        0.9123992875020261
                    ],
                    [
                        "general",
                        0.91412054022013
                    ],
                    [
                        "class",
                        0.91412054022013
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "birthday",
                        0.32109987231450626
                    ],
                    [
                        "algorithm",
                        0.4309853646086678
                    ],
                    [
                        "problem",
                        0.4672773111575772
                    ],
                    [
                        "kind",
                        0.5423104341797167
                    ],
                    [
                        "correct",
                        0.5445046884671618
                    ],
                    [
                        "thing",
                        0.5470164418223848
                    ],
                    [
                        "right",
                        0.5522206579313369
                    ],
                    [
                        "output",
                        0.8147613451030342
                    ],
                    [
                        "case",
                        0.887331092904902
                    ],
                    [
                        "student",
                        0.9063845363096863
                    ],
                    [
                        "class",
                        0.91412054022013
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-990": {
            "id": "ZA-tUyM_y7s-990",
            "heat": 0.115,
            "start": 990.0,
            "text": " is-- as a computer scientist is we write a constant sized piece of code that can take on any arbitrarily large size input. If the input can be arbitrarily large, but our code is small, then that code needs to loop, or recurse, or repeat some of these lines of code in order to just read that output. And so that's another way you can arrive at this conclusion, that we're going to probably need to use recursion, induction. And that's part of the reason why we ask you to take a course on proofs, and inductive reasoning, and discrete mathematics before this class. OK, so how do we prove that this thing is correct? We got to use induction. So how can we set up this induction? What do I need for an inductive proof? Sure. STUDENT: [INAUDIBLE] JASON KU: Base case-- we need a base case. We need some kind of a predicate. Yeah, but we need some kind of statement of a hypothesis of something that should be maintained. And then we need to have an inductive step, which basically says I take a small value of this thing,",
            "metrics": {
                "relativeDCReadability": 0.9842865008549959,
                "lexicalDiversity": 0.47715736040609136,
                "posComposition": {
                    "VBZ": 0.036,
                    ":": 0.01,
                    "IN": 0.117,
                    "DT": 0.122,
                    "NN": 0.193,
                    "PRP": 0.071,
                    "VBP": 0.056,
                    "JJ": 0.061,
                    "WDT": 0.015,
                    "MD": 0.025,
                    "VB": 0.076,
                    "RB": 0.041,
                    "CC": 0.046,
                    "PRP$": 0.005,
                    "NNS": 0.015,
                    "TO": 0.036,
                    "VBG": 0.005,
                    "WRB": 0.015,
                    "NNP": 0.036,
                    "VBD": 0.005,
                    "RP": 0.005,
                    "WP": 0.005,
                    "VBN": 0.005
                },
                "syllableRate": 2.217,
                "topicScores": [
                    [
                        "code",
                        0.3794687235047947
                    ],
                    [
                        "induction",
                        0.40306178346241495
                    ],
                    [
                        "inductive",
                        0.43753086505902267
                    ],
                    [
                        "large",
                        0.5256701694860265
                    ],
                    [
                        "input",
                        0.5296409519779637
                    ],
                    [
                        "proof",
                        0.5529933927245507
                    ],
                    [
                        "kind",
                        0.5548254180379422
                    ],
                    [
                        "thing",
                        0.5573793595899028
                    ],
                    [
                        "small",
                        0.5688063643785299
                    ],
                    [
                        "STUDENT",
                        0.5813848428795971
                    ],
                    [
                        "JASON",
                        0.6695233249087964
                    ],
                    [
                        "KU",
                        0.6695233249087964
                    ],
                    [
                        "Base",
                        0.685511340894665
                    ],
                    [
                        "JASON KU",
                        0.8124527624187134
                    ],
                    [
                        "is--",
                        0.8130820371113968
                    ],
                    [
                        "output",
                        0.8409311042034029
                    ],
                    [
                        "size",
                        0.8481917446372718
                    ],
                    [
                        "recurse",
                        0.8574474709798994
                    ],
                    [
                        "computer",
                        0.8623331809048944
                    ],
                    [
                        "scientist",
                        0.8623331809048944
                    ],
                    [
                        "constant",
                        0.8623331809048944
                    ],
                    [
                        "piece",
                        0.8623331809048944
                    ],
                    [
                        "class",
                        0.8662740730876712
                    ],
                    [
                        "correct",
                        0.8733294167914133
                    ],
                    [
                        "line",
                        0.8838921378150961
                    ],
                    [
                        "order",
                        0.8838921378150961
                    ],
                    [
                        "conclusion",
                        0.884464429827829
                    ],
                    [
                        "recursion",
                        0.884464429827829
                    ],
                    [
                        "reasoning",
                        0.8927108534542577
                    ],
                    [
                        "discrete",
                        0.8927108534542577
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "input",
                        0.5296409519779637
                    ],
                    [
                        "kind",
                        0.5548254180379422
                    ],
                    [
                        "thing",
                        0.5573793595899028
                    ],
                    [
                        "JASON KU",
                        0.8124527624187134
                    ],
                    [
                        "output",
                        0.8409311042034029
                    ],
                    [
                        "size",
                        0.8481917446372718
                    ],
                    [
                        "computer",
                        0.8623331809048944
                    ],
                    [
                        "constant",
                        0.8623331809048944
                    ],
                    [
                        "class",
                        0.8662740730876712
                    ],
                    [
                        "correct",
                        0.8733294167914133
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-1080": {
            "id": "ZA-tUyM_y7s-1080",
            "heat": 0.1,
            "start": 1080.0,
            "text": " I use the inductive hypothesis, and I argue it for a larger value of my well-ordered set that I'm inducting over. For this algorithm, if we're going to try to prove correctness, what I'm going to do is I'm going to-- what do I want to prove for this thing? That, at the end of interviewing all of you, that my algorithm has either already-- it has returned with a pair that match, or if we're in a case where there wasn't a pair somewhere in my set, that it returned none. Right? That would be correct. So how can I generalize that concept to make it something I can induct on? What I'm going to do is I'm going to say-- let's say, after I've interviewed the first K students, if there was a match in those first K students, I want to be sure that I've returned a pair-- because if, after I interview all of you, I've maintained that property, then I'll be sure, at the end of the process, I will have returned a pair, if one exists. So here's going to be my inductive hypothesis. If first K students contain a match,",
            "metrics": {
                "relativeDCReadability": 0.9525798545655036,
                "lexicalDiversity": 0.4372093023255814,
                "posComposition": {
                    "PRP": 0.116,
                    "VBP": 0.07,
                    "DT": 0.088,
                    "JJ": 0.042,
                    "NN": 0.112,
                    "CC": 0.014,
                    "IN": 0.135,
                    "JJR": 0.005,
                    "PRP$": 0.019,
                    "VBG": 0.037,
                    "RP": 0.005,
                    "TO": 0.047,
                    "VB": 0.079,
                    "WP": 0.014,
                    "VBZ": 0.028,
                    ":": 0.019,
                    "WDT": 0.009,
                    "RB": 0.033,
                    "VBN": 0.023,
                    "WRB": 0.009,
                    "EX": 0.009,
                    "VBD": 0.014,
                    "NNP": 0.028,
                    "MD": 0.023,
                    "POS": 0.005,
                    "NNS": 0.014,
                    "CD": 0.005
                },
                "syllableRate": 2.35,
                "topicScores": [
                    [
                        "K",
                        0.28764964549495925
                    ],
                    [
                        "student",
                        0.4208768751856965
                    ],
                    [
                        "match",
                        0.4253506089628354
                    ],
                    [
                        "pair",
                        0.4259083938193951
                    ],
                    [
                        "K student",
                        0.4694813773012037
                    ],
                    [
                        "set",
                        0.49203910872797946
                    ],
                    [
                        "algorithm",
                        0.5228353978671755
                    ],
                    [
                        "hypothesis",
                        0.5246116063294023
                    ],
                    [
                        "end",
                        0.5275139949570264
                    ],
                    [
                        "inductive",
                        0.5281358605979184
                    ],
                    [
                        "sure",
                        0.5607365946781467
                    ],
                    [
                        "large",
                        0.7951034839185271
                    ],
                    [
                        "value",
                        0.7951034839185271
                    ],
                    [
                        "thing",
                        0.8153628876619317
                    ],
                    [
                        "correctness",
                        0.8423557197339633
                    ],
                    [
                        "to--",
                        0.8538054159778349
                    ],
                    [
                        "case",
                        0.8765085942005902
                    ],
                    [
                        "say--",
                        0.8802431662657313
                    ],
                    [
                        "property",
                        0.9024853766042825
                    ],
                    [
                        "process",
                        0.9024853766042825
                    ],
                    [
                        "concept",
                        0.9025008141187859
                    ],
                    [
                        "inductive hypothesis",
                        1.4446316004339417
                    ],
                    [
                        "large value",
                        1.7187917047461378
                    ]
                ],
                "topTopicSimilarity": 0.2608695652173913,
                "sharedTopicScores": [
                    [
                        "student",
                        0.4208768751856965
                    ],
                    [
                        "match",
                        0.4253506089628354
                    ],
                    [
                        "K student",
                        0.4694813773012037
                    ],
                    [
                        "algorithm",
                        0.5228353978671755
                    ],
                    [
                        "thing",
                        0.8153628876619317
                    ],
                    [
                        "case",
                        0.8765085942005902
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-1170": {
            "id": "ZA-tUyM_y7s-1170",
            "heat": 0.223,
            "start": 1170.0,
            "text": " algorithm returns a match before interviewing, say, student K plus 1. So that's going to be my inductive hypothesis. Now, if there's n students in this class, and at the end of my thing, I'm trying to interview a student n plus 1-- oh, student n plus 1's not there. If I have maintained this, then, if I replace K with n, then I will have returned a match before interviewing the last student-- when I have no more students left. And then this algorithm returns none, as it should. OK, so this inductive hypothesis sets up a nice variable to induct on. This K I can have increasing, up to n, starting at some base case. So what's my base case here?",
            "metrics": {
                "relativeDCReadability": 1.224105429859273,
                "lexicalDiversity": 0.49230769230769234,
                "posComposition": {
                    "NN": 0.154,
                    "VBZ": 0.054,
                    "DT": 0.1,
                    "IN": 0.092,
                    "VBG": 0.046,
                    "VBP": 0.031,
                    "NNP": 0.031,
                    "CC": 0.038,
                    "CD": 0.023,
                    "NNPS": 0.008,
                    "WDT": 0.008,
                    "TO": 0.031,
                    "VB": 0.054,
                    "PRP$": 0.023,
                    "JJ": 0.069,
                    "RB": 0.062,
                    "EX": 0.008,
                    "NNS": 0.015,
                    "PRP": 0.054,
                    ":": 0.015,
                    "VBN": 0.015,
                    "MD": 0.023,
                    "WRB": 0.008,
                    "JJR": 0.008,
                    "VBD": 0.008,
                    "RP": 0.015,
                    "WP": 0.008
                },
                "syllableRate": 1.475,
                "topicScores": [
                    [
                        "student",
                        0.3302593442697559
                    ],
                    [
                        "K",
                        0.3516036419886087
                    ],
                    [
                        "match",
                        0.48841560630676806
                    ],
                    [
                        "algorithm",
                        0.5216187151422766
                    ],
                    [
                        "hypothesis",
                        0.5320343047683885
                    ],
                    [
                        "inductive",
                        0.53821255188607
                    ],
                    [
                        "case",
                        0.5416479695952645
                    ],
                    [
                        "base",
                        0.5539903888010917
                    ],
                    [
                        "oh",
                        0.8228651779894309
                    ],
                    [
                        "class",
                        0.8699508584084107
                    ],
                    [
                        "thing",
                        0.8699508584084107
                    ],
                    [
                        "end",
                        0.8817032006302367
                    ],
                    [
                        "nice",
                        0.9067184290792002
                    ],
                    [
                        "variable",
                        0.9067184290792002
                    ],
                    [
                        "student K",
                        0.9074985290204847
                    ],
                    [
                        "inductive hypothesis",
                        1.6170551411810916
                    ],
                    [
                        "base case",
                        1.9317635430306395
                    ],
                    [
                        "nice variable",
                        4.622346205808279
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "student",
                        0.3302593442697559
                    ],
                    [
                        "match",
                        0.48841560630676806
                    ],
                    [
                        "algorithm",
                        0.5216187151422766
                    ],
                    [
                        "case",
                        0.5416479695952645
                    ],
                    [
                        "class",
                        0.8699508584084107
                    ],
                    [
                        "thing",
                        0.8699508584084107
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-1260": {
            "id": "ZA-tUyM_y7s-1260",
            "heat": 0.199,
            "start": 1260.0,
            "text": " My base case is-- the easiest thing I can do-- sure-- 2? That's an easy thing I could do. I could check those possibilities, but there's an even easier base case. Yeah? There's an even easier base case than 1. STUDENT: 0-- JASON KU: 0, right? After interviewing 0 students, I haven't done any work, right? Certainly, the first 0 can't have a match. This inductive hypothesis this is true just because this initial predicate is false. So I can say, base case 0-- check. Definitely, this predicate holds for that. OK. Now we got to go for the meat of this thing. Assume the inductive hypothesis true for K equals, say, some K prime. And we're considering K prime plus 1. Then we have two cases. One of the nice things about abduction is that it isolates our problem to not consider everything all at once, but break it down into a smaller interface so I can do less work at each step.",
            "metrics": {
                "relativeDCReadability": 1.1247943328891308,
                "lexicalDiversity": 0.5657142857142857,
                "posComposition": {
                    "PRP$": 0.011,
                    "NN": 0.137,
                    "VBZ": 0.051,
                    ":": 0.029,
                    "DT": 0.12,
                    "JJS": 0.006,
                    "PRP": 0.063,
                    "MD": 0.034,
                    "VB": 0.069,
                    "CD": 0.051,
                    "WDT": 0.006,
                    "JJ": 0.063,
                    "NNS": 0.029,
                    "CC": 0.023,
                    "EX": 0.011,
                    "RB": 0.074,
                    "JJR": 0.023,
                    "NNP": 0.051,
                    "IN": 0.086,
                    "VBG": 0.011,
                    "VBP": 0.023,
                    "VBN": 0.006,
                    "VBD": 0.006,
                    "TO": 0.011,
                    "RP": 0.006
                },
                "syllableRate": 1.992,
                "topicScores": [
                    [
                        "case",
                        0.3372229370727247
                    ],
                    [
                        "K",
                        0.3423969220015176
                    ],
                    [
                        "easy",
                        0.35711813141912097
                    ],
                    [
                        "base",
                        0.3638930628993276
                    ],
                    [
                        "thing",
                        0.3857804423107197
                    ],
                    [
                        "student",
                        0.4643681318436165
                    ],
                    [
                        "right",
                        0.5272475437935548
                    ],
                    [
                        "check",
                        0.5589042439026544
                    ],
                    [
                        "predicate",
                        0.5722289351666138
                    ],
                    [
                        "prime",
                        0.5724639009665501
                    ],
                    [
                        "inductive",
                        0.5746446625602221
                    ],
                    [
                        "work",
                        0.5751189613814167
                    ],
                    [
                        "hypothesis",
                        0.578946688707423
                    ],
                    [
                        "true",
                        0.5845527463446695
                    ],
                    [
                        "jason",
                        0.6061907677576389
                    ],
                    [
                        "jason KU",
                        0.6356600078978972
                    ],
                    [
                        "sure--",
                        0.8702824136110641
                    ],
                    [
                        "possibility",
                        0.9018873635712772
                    ],
                    [
                        "match",
                        0.9046855929532397
                    ],
                    [
                        "false",
                        0.9070993364444482
                    ],
                    [
                        "step",
                        0.9179921248238593
                    ],
                    [
                        "initial",
                        0.9322907351474925
                    ],
                    [
                        "meat",
                        0.937305745356879
                    ],
                    [
                        "nice",
                        0.9404237767579003
                    ],
                    [
                        "abduction",
                        0.9404237767579003
                    ],
                    [
                        "problem",
                        0.9404237767579003
                    ],
                    [
                        "small",
                        0.9404237767579003
                    ],
                    [
                        "interface",
                        0.9404237767579003
                    ],
                    [
                        "base case",
                        1.2039920511505353
                    ],
                    [
                        "easy base",
                        1.4765325453647824
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "case",
                        0.3372229370727247
                    ],
                    [
                        "thing",
                        0.3857804423107197
                    ],
                    [
                        "student",
                        0.4643681318436165
                    ],
                    [
                        "right",
                        0.5272475437935548
                    ],
                    [
                        "check",
                        0.5589042439026544
                    ],
                    [
                        "match",
                        0.9046855929532397
                    ],
                    [
                        "problem",
                        0.9404237767579003
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-1350": {
            "id": "ZA-tUyM_y7s-1350",
            "heat": 0.1,
            "start": 1350.0,
            "text": " So there are two cases. Either the first K already had a match-- in which case, by our inductive hypothesis, we've already returned a correct answer. The other case is the-- it doesn't have a match, and we interview the K plus 1th student-- the K prime plus 1th student. If there is a match in the first K prime plus 1 students, then it will include K plus-- the student K prime plus 1, because otherwise, there would have been a match in the things before it. So there are two cases. If K contains match, K prime. If first K contains match-- already returned by induction. Else, if K prime plus 1 student's contains match, the algorithm checks all of the possibilities--",
            "metrics": {
                "relativeDCReadability": 1.181274485084734,
                "lexicalDiversity": 0.5939849624060151,
                "posComposition": {
                    "RB": 0.06,
                    "EX": 0.03,
                    "VBP": 0.03,
                    "CD": 0.053,
                    "NNS": 0.045,
                    "CC": 0.06,
                    "DT": 0.12,
                    "JJ": 0.075,
                    "NNP": 0.075,
                    "VBD": 0.008,
                    "NN": 0.113,
                    ":": 0.045,
                    "IN": 0.105,
                    "WDT": 0.008,
                    "PRP$": 0.008,
                    "PRP": 0.038,
                    "VBN": 0.023,
                    "VBZ": 0.045,
                    "VB": 0.038,
                    "MD": 0.015,
                    "POS": 0.008
                },
                "syllableRate": 1.475,
                "topicScores": [
                    [
                        "K",
                        0.18149842017258896
                    ],
                    [
                        "prime",
                        0.3243972346571975
                    ],
                    [
                        "match",
                        0.33704835957121304
                    ],
                    [
                        "case",
                        0.3707442803029144
                    ],
                    [
                        "student",
                        0.3872267651400254
                    ],
                    [
                        "K prime",
                        0.4301763822620914
                    ],
                    [
                        "contain",
                        0.5641360305211907
                    ],
                    [
                        "1th",
                        0.5678328827207481
                    ],
                    [
                        "answer",
                        0.8411079164794959
                    ],
                    [
                        "inductive",
                        0.8757403599611144
                    ],
                    [
                        "hypothesis",
                        0.8757403599611144
                    ],
                    [
                        "correct",
                        0.8757403599611144
                    ],
                    [
                        "induction",
                        0.8980724686384615
                    ],
                    [
                        "possibilities--",
                        0.901657953314318
                    ],
                    [
                        "plus--",
                        0.9165744607053212
                    ],
                    [
                        "thing",
                        0.9165744607053212
                    ],
                    [
                        "algorithm",
                        0.9242808763962997
                    ],
                    [
                        "student K",
                        1.296401713945425
                    ],
                    [
                        "K plus--",
                        1.355712776659896
                    ],
                    [
                        "correct answer",
                        2.7963940644458876
                    ],
                    [
                        "inductive hypothesis",
                        3.290394089421449
                    ],
                    [
                        "contain match",
                        3.525321655124364
                    ],
                    [
                        "1th student",
                        4.240977066136294
                    ],
                    [
                        "student K prime",
                        4.65094073840312
                    ]
                ],
                "topTopicSimilarity": 0.2916666666666667,
                "sharedTopicScores": [
                    [
                        "match",
                        0.33704835957121304
                    ],
                    [
                        "case",
                        0.3707442803029144
                    ],
                    [
                        "student",
                        0.3872267651400254
                    ],
                    [
                        "K prime",
                        0.4301763822620914
                    ],
                    [
                        "correct",
                        0.8757403599611144
                    ],
                    [
                        "thing",
                        0.9165744607053212
                    ],
                    [
                        "algorithm",
                        0.9242808763962997
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-1440": {
            "id": "ZA-tUyM_y7s-1440",
            "heat": 0.1,
            "start": 1440.0,
            "text": " K prime checks against all students, essentially by brute force. It's a case analysis. I check all of the possibilities. Check if birthday is in record-- I haven't told you how to do that yet, but if I'm able to do that, I'm going to check if it's in the record. If it's in the record, then there will be a match, and I can return it. Otherwise, I have-- re-establish the inductive hypothesis for the K prime plus 1 students. Does that makes sense, guys? Yeah. OK, so that's how we prove correctness. This is a little bit more formal than we would ask you to do in this class all the time, but it's definitely sufficient for the levels of arguments that we will ask you to do. The bar that we're usually trying to set is, if you communicated to someone else taking this class what your algorithm was, they would be able to code it up and tell a stupid computer how to do that thing. Any questions on induction? You're going to be using it throughout this class, and so if you are unfamiliar with this line of argument,",
            "metrics": {
                "relativeDCReadability": 0.9159196510997238,
                "lexicalDiversity": 0.4320388349514563,
                "posComposition": {
                    "NNP": 0.029,
                    "JJ": 0.058,
                    "NNS": 0.039,
                    "IN": 0.126,
                    "DT": 0.107,
                    "RB": 0.044,
                    "NN": 0.117,
                    "PRP": 0.117,
                    "VBZ": 0.049,
                    "VBP": 0.044,
                    ":": 0.01,
                    "VBN": 0.005,
                    "WRB": 0.015,
                    "TO": 0.049,
                    "VB": 0.073,
                    "CC": 0.029,
                    "VBG": 0.024,
                    "EX": 0.005,
                    "MD": 0.024,
                    "CD": 0.005,
                    "RBR": 0.005,
                    "PDT": 0.005,
                    "VBD": 0.01,
                    "WP": 0.005,
                    "PRP$": 0.005,
                    "RP": 0.005
                },
                "syllableRate": 2.317,
                "topicScores": [
                    [
                        "K",
                        0.3330627358950016
                    ],
                    [
                        "check",
                        0.34058986737529173
                    ],
                    [
                        "class",
                        0.4270903521622062
                    ],
                    [
                        "K prime",
                        0.47367536937631954
                    ],
                    [
                        "record",
                        0.4950963599405026
                    ],
                    [
                        "student",
                        0.5100485004273608
                    ],
                    [
                        "able",
                        0.5342097028159654
                    ],
                    [
                        "argument",
                        0.5403700565160182
                    ],
                    [
                        "force",
                        0.7187446685799286
                    ],
                    [
                        "brute",
                        0.755629124068624
                    ],
                    [
                        "analysis",
                        0.7936454236859204
                    ],
                    [
                        "case",
                        0.8231244779068847
                    ],
                    [
                        "possibility",
                        0.8237626805804813
                    ],
                    [
                        "guy",
                        0.8524500976828951
                    ],
                    [
                        "correctness",
                        0.873200193430769
                    ],
                    [
                        "match",
                        0.8739019034507234
                    ],
                    [
                        "birthday",
                        0.8745146594337943
                    ],
                    [
                        "thing",
                        0.8789365874816268
                    ],
                    [
                        "induction",
                        0.8812094244674984
                    ],
                    [
                        "sense",
                        0.8856598497295791
                    ],
                    [
                        "inductive",
                        0.889645532775003
                    ],
                    [
                        "hypothesis",
                        0.889645532775003
                    ],
                    [
                        "time",
                        0.895527623344883
                    ],
                    [
                        "bar",
                        0.8978002739562259
                    ],
                    [
                        "algorithm",
                        0.8978002739562259
                    ],
                    [
                        "question",
                        0.8997593547435776
                    ],
                    [
                        "little",
                        0.9035575977030248
                    ],
                    [
                        "bit",
                        0.9035575977030248
                    ],
                    [
                        "formal",
                        0.9035575977030248
                    ],
                    [
                        "sufficient",
                        0.9035575977030248
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "check",
                        0.34058986737529173
                    ],
                    [
                        "class",
                        0.4270903521622062
                    ],
                    [
                        "K prime",
                        0.47367536937631954
                    ],
                    [
                        "student",
                        0.5100485004273608
                    ],
                    [
                        "case",
                        0.8231244779068847
                    ],
                    [
                        "match",
                        0.8739019034507234
                    ],
                    [
                        "birthday",
                        0.8745146594337943
                    ],
                    [
                        "thing",
                        0.8789365874816268
                    ],
                    [
                        "time",
                        0.895527623344883
                    ],
                    [
                        "algorithm",
                        0.8978002739562259
                    ],
                    [
                        "bit",
                        0.9035575977030248
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-1530": {
            "id": "ZA-tUyM_y7s-1530",
            "heat": 0.1,
            "start": 1530.0,
            "text": " then you should go review some of that. That would be good. OK, so that's correctness, being able to communicate that the problem-- the algorithm we stated was correct. Now we want to argue that it's efficient. What does efficiency mean? Efficiency just means not only how fast does this algorithm run, but how fast does it compare to other possible ways of approaching this problem? So how could we measure how fast an algorithm runs? This is kind of a silly question. Yeah? STUDENT: [INAUDIBLE] JASON KU: Yeah. Well, just record the time it takes for a computer to do this thing. Now, there's a problem with just coding up an algorithm, telling a computer what to do, and timing how long it takes. Why? Yeah? STUDENT: [INAUDIBLE] JASON KU: It would depend on the size of your data set. OK, we expect that, but there's a bigger problem there. Yeah? STUDENT: [INAUDIBLE] JASON KU: It depends on the strength of your computer. So I would expect that, if I had a watch calculator and I programmed it to do something,",
            "metrics": {
                "relativeDCReadability": 1.0995971183405318,
                "lexicalDiversity": 0.47593582887700536,
                "posComposition": {
                    "RB": 0.059,
                    "PRP": 0.08,
                    "MD": 0.027,
                    "VB": 0.08,
                    "DT": 0.112,
                    "IN": 0.086,
                    "WDT": 0.005,
                    "JJ": 0.053,
                    "NNP": 0.107,
                    "VBZ": 0.07,
                    "VBG": 0.021,
                    "TO": 0.032,
                    "NN": 0.112,
                    ":": 0.005,
                    "VBD": 0.027,
                    "VBP": 0.011,
                    "WP": 0.011,
                    "WRB": 0.032,
                    "CC": 0.021,
                    "NNS": 0.011,
                    "EX": 0.016,
                    "RP": 0.005,
                    "PRP$": 0.011,
                    "JJR": 0.005
                },
                "syllableRate": 2.25,
                "topicScores": [
                    [
                        "STUDENT",
                        0.2340193351826286
                    ],
                    [
                        "JASON KU",
                        0.2515410796342684
                    ],
                    [
                        "algorithm",
                        0.39260688422663753
                    ],
                    [
                        "fast",
                        0.4546632847124564
                    ],
                    [
                        "computer",
                        0.4598853889784385
                    ],
                    [
                        "problem",
                        0.4602913635029738
                    ],
                    [
                        "run",
                        0.5623619172840645
                    ],
                    [
                        "time",
                        0.5892676223881785
                    ],
                    [
                        "good",
                        0.8524138483869886
                    ],
                    [
                        "correct",
                        0.8753015672540758
                    ],
                    [
                        "efficient",
                        0.8878111493863691
                    ],
                    [
                        "correctness",
                        0.9016534674745456
                    ],
                    [
                        "able",
                        0.9016534674745456
                    ],
                    [
                        "question",
                        0.9091209719799518
                    ],
                    [
                        "thing",
                        0.9190621143635537
                    ],
                    [
                        "silly",
                        0.9289064681391762
                    ],
                    [
                        "possible",
                        0.9310244111144507
                    ],
                    [
                        "way",
                        0.9310244111144507
                    ],
                    [
                        "data",
                        0.9409332672651356
                    ],
                    [
                        "long",
                        0.9445443621616919
                    ],
                    [
                        "size",
                        0.9473226213096247
                    ],
                    [
                        "big",
                        0.9478677118052873
                    ],
                    [
                        "strength",
                        0.9492626832090341
                    ],
                    [
                        "watch",
                        0.9496631744796504
                    ],
                    [
                        "calculator",
                        0.9496631744796504
                    ],
                    [
                        "algorithm run",
                        4.334302142427601
                    ],
                    [
                        "silly question",
                        5.4303864544709555
                    ],
                    [
                        "possible way",
                        6.507871294929625
                    ],
                    [
                        "big problem",
                        6.848717106394578
                    ],
                    [
                        "watch calculator",
                        9.18954021911498
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "JASON KU",
                        0.2515410796342684
                    ],
                    [
                        "algorithm",
                        0.39260688422663753
                    ],
                    [
                        "computer",
                        0.4598853889784385
                    ],
                    [
                        "problem",
                        0.4602913635029738
                    ],
                    [
                        "time",
                        0.5892676223881785
                    ],
                    [
                        "correct",
                        0.8753015672540758
                    ],
                    [
                        "thing",
                        0.9190621143635537
                    ],
                    [
                        "size",
                        0.9473226213096247
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-1620": {
            "id": "ZA-tUyM_y7s-1620",
            "heat": 0.1,
            "start": 1620.0,
            "text": " that might take a lot longer to solve a problem than if I asked IBM's research computer to solve the same problem using the same algorithm, even with the same code, because its underlying operations are much faster. How it runs is much faster. So I don't want to count how long it would take on a real machine. I want to abstract the time it takes the machine to do stuff out of the picture. What I want to say is, let's assume that each kind of fundamental operation that the computer can do takes some fixed amount of time. How many of those kinds of fixed operations does the algorithm need to perform to be able to solve this problem? So here we don't measure time. Instead, count fundamental operations. OK? We'll get to what some of those fundamental operations are in a second, but the idea is we want a measure of how well an algorithm performs, not necessarily an implementation of that algorithm-- kind of an abstract notion of how well this algorithm does. And so what we're going to use to measure time or efficiency",
            "metrics": {
                "relativeDCReadability": 1.0098991197841987,
                "lexicalDiversity": 0.4873096446700508,
                "posComposition": {
                    "WDT": 0.005,
                    "MD": 0.02,
                    "VB": 0.096,
                    "DT": 0.127,
                    "NN": 0.147,
                    "JJR": 0.005,
                    "TO": 0.061,
                    "IN": 0.102,
                    "PRP": 0.061,
                    "VBD": 0.005,
                    "NNP": 0.01,
                    "POS": 0.005,
                    "JJ": 0.086,
                    "VBG": 0.01,
                    "RB": 0.061,
                    "PRP$": 0.005,
                    "NNS": 0.03,
                    "VBP": 0.046,
                    "RBR": 0.01,
                    "WRB": 0.02,
                    "VBZ": 0.046,
                    "WP": 0.015,
                    "VBN": 0.005,
                    "CC": 0.015,
                    ":": 0.005
                },
                "syllableRate": 2.392,
                "topicScores": [
                    [
                        "operation",
                        0.3354504741092487
                    ],
                    [
                        "time",
                        0.38014231149633265
                    ],
                    [
                        "algorithm",
                        0.38125335863466403
                    ],
                    [
                        "fundamental",
                        0.4284908588913538
                    ],
                    [
                        "problem",
                        0.43164842237533174
                    ],
                    [
                        "kind",
                        0.4380894270964154
                    ],
                    [
                        "measure",
                        0.44878694138067593
                    ],
                    [
                        "IBM",
                        0.5463250525355998
                    ],
                    [
                        "machine",
                        0.547223390493115
                    ],
                    [
                        "computer",
                        0.556155511208912
                    ],
                    [
                        "abstract",
                        0.5702764946394395
                    ],
                    [
                        "code",
                        0.8448970003143492
                    ],
                    [
                        "lot",
                        0.8592944388255418
                    ],
                    [
                        "research",
                        0.8592944388255418
                    ],
                    [
                        "picture",
                        0.8633085301952151
                    ],
                    [
                        "real",
                        0.8818472615752772
                    ],
                    [
                        "efficiency",
                        0.8910674661195874
                    ],
                    [
                        "stuff",
                        0.9009378556568126
                    ],
                    [
                        "able",
                        0.9104332237732959
                    ],
                    [
                        "second",
                        0.9113703369582963
                    ],
                    [
                        "idea",
                        0.9201803200123411
                    ],
                    [
                        "implementation",
                        0.9201803200123411
                    ],
                    [
                        "notion",
                        0.9201803200123411
                    ],
                    [
                        "fundamental operation",
                        1.4463727382091207
                    ],
                    [
                        "research computer",
                        3.122958150089544
                    ],
                    [
                        "real machine",
                        3.2526284068011138
                    ],
                    [
                        "algorithm-- kind",
                        4.1610915623305385
                    ],
                    [
                        "abstract notion",
                        4.942494325731331
                    ]
                ],
                "topTopicSimilarity": 0.21428571428571427,
                "sharedTopicScores": [
                    [
                        "operation",
                        0.3354504741092487
                    ],
                    [
                        "time",
                        0.38014231149633265
                    ],
                    [
                        "algorithm",
                        0.38125335863466403
                    ],
                    [
                        "problem",
                        0.43164842237533174
                    ],
                    [
                        "kind",
                        0.4380894270964154
                    ],
                    [
                        "computer",
                        0.556155511208912
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-1710": {
            "id": "ZA-tUyM_y7s-1710",
            "heat": 0.187,
            "start": 1710.0,
            "text": " is something called asymptotic analysis. Anyone here understand what asymptotic analysis is? Probably, since it's in both of your prerequisites, I think-- but we will go through a formal definition of asymptotic notation in recitation tomorrow, and you'll get a lot of practice in comparing functions using an asymptotic analysis. But just to give you an idea, the idea here is we don't measure time. We instead measure ops. And like your colleague over here was saying before, we expect performance-- I'm going to use performance, instead of time here-- we expect that to depend on size of our input. If we're trying to run an algorithm to find a birthday in this section, we expect the algorithm to run in a shorter amount of time than if I were to run the algorithm on all of you. So we expect it to perform differently, depending on the size of the input, and how differently is how we measure performance",
            "metrics": {
                "relativeDCReadability": 0.9544624544619118,
                "lexicalDiversity": 0.47619047619047616,
                "posComposition": {
                    "VBZ": 0.03,
                    "NN": 0.185,
                    "VBN": 0.006,
                    "JJ": 0.03,
                    "NNP": 0.006,
                    "RB": 0.065,
                    "VBP": 0.065,
                    "WP": 0.006,
                    "IN": 0.143,
                    "PRP": 0.101,
                    "DT": 0.095,
                    "PRP$": 0.018,
                    "NNS": 0.018,
                    ":": 0.018,
                    "CC": 0.03,
                    "MD": 0.012,
                    "VB": 0.065,
                    "VBG": 0.036,
                    "TO": 0.048,
                    "VBD": 0.012,
                    "WRB": 0.012
                },
                "syllableRate": 2.2,
                "topicScores": [
                    [
                        "asymptotic",
                        0.3727469495600063
                    ],
                    [
                        "analysis",
                        0.389577067421895
                    ],
                    [
                        "time",
                        0.44677015734272235
                    ],
                    [
                        "algorithm",
                        0.4556218506257796
                    ],
                    [
                        "input",
                        0.548378454132594
                    ],
                    [
                        "size",
                        0.5600831671478779
                    ],
                    [
                        "performance",
                        0.560083167147878
                    ],
                    [
                        "idea",
                        0.5646187288717376
                    ],
                    [
                        "op",
                        0.8627757392003592
                    ],
                    [
                        "prerequisite",
                        0.8747474362153657
                    ],
                    [
                        "recitation",
                        0.8747474362153657
                    ],
                    [
                        "tomorrow",
                        0.8747474362153657
                    ],
                    [
                        "formal",
                        0.8891007802757264
                    ],
                    [
                        "definition",
                        0.8891007802757264
                    ],
                    [
                        "notation",
                        0.8891007802757264
                    ],
                    [
                        "lot",
                        0.8891007802757264
                    ],
                    [
                        "practice",
                        0.8891007802757264
                    ],
                    [
                        "function",
                        0.8891007802757264
                    ],
                    [
                        "section",
                        0.9053458090265187
                    ],
                    [
                        "colleague",
                        0.9127065794320037
                    ],
                    [
                        "here--",
                        0.9127065794320037
                    ],
                    [
                        "birthday",
                        0.9165273264717447
                    ],
                    [
                        "short",
                        0.9165273264717447
                    ],
                    [
                        "asymptotic analysis",
                        1.0353972167173235
                    ],
                    [
                        "recitation tomorrow",
                        3.2586368474992224
                    ],
                    [
                        "asymptotic notation",
                        3.3385692730122805
                    ],
                    [
                        "formal definition",
                        3.7732741893038093
                    ],
                    [
                        "time here--",
                        4.421233185099142
                    ]
                ],
                "topTopicSimilarity": 0.17857142857142858,
                "sharedTopicScores": [
                    [
                        "time",
                        0.44677015734272235
                    ],
                    [
                        "algorithm",
                        0.4556218506257796
                    ],
                    [
                        "input",
                        0.548378454132594
                    ],
                    [
                        "size",
                        0.5600831671478779
                    ],
                    [
                        "birthday",
                        0.9165273264717447
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-1800": {
            "id": "ZA-tUyM_y7s-1800",
            "heat": 0.259,
            "start": 1800.0,
            "text": " relative to that input. Usually we use n as a variable for what the size of our input is, but that's not always the case. So for example, if we have an array that I give you-- an n-by-n array, that-- we're going to say n, but what's the size of our input? How much information do I need to convey to you to give you that information? It's n squared. So that's the size of our input in that context. Or if I give you a graph, it's usually the number of vertices plus the number of edges. That's how big-- how much space I would need to convey to you that graph, that information. We compare how fast an algorithm is with respect to the size of the input. We'll use the asymptotic notation. We have big O notation, which corresponds to upper bounds. We will have omega, which corresponds to lower bounds. And we have theta, which corresponds to both. This thing is tight. It is bounded from above and below by a function of this form.",
            "metrics": {
                "relativeDCReadability": 1.0449588486132682,
                "lexicalDiversity": 0.43455497382198954,
                "posComposition": {
                    "NN": 0.157,
                    "TO": 0.058,
                    "DT": 0.115,
                    "RB": 0.026,
                    "PRP": 0.105,
                    "VBP": 0.058,
                    "JJ": 0.047,
                    "IN": 0.115,
                    "WP": 0.01,
                    "PRP$": 0.016,
                    "VBZ": 0.068,
                    "CC": 0.031,
                    "NNP": 0.021,
                    ":": 0.016,
                    "WDT": 0.031,
                    "VBG": 0.005,
                    "VB": 0.047,
                    "NNS": 0.026,
                    "VBD": 0.005,
                    "WRB": 0.016,
                    "MD": 0.016,
                    "VBN": 0.01
                },
                "syllableRate": 2.167,
                "topicScores": [
                    [
                        "input",
                        0.32013614416549774
                    ],
                    [
                        "size",
                        0.349119648728049
                    ],
                    [
                        "information",
                        0.43527692032865534
                    ],
                    [
                        "bound",
                        0.44699800842203813
                    ],
                    [
                        "array",
                        0.5600883935766517
                    ],
                    [
                        "graph",
                        0.5605747393390583
                    ],
                    [
                        "notation",
                        0.5680645944055266
                    ],
                    [
                        "number",
                        0.5687337446054355
                    ],
                    [
                        "relative",
                        0.8335534875144918
                    ],
                    [
                        "case",
                        0.8588818625028246
                    ],
                    [
                        "context",
                        0.8928814663144236
                    ],
                    [
                        "variable",
                        0.8956439645946218
                    ],
                    [
                        "edge",
                        0.8966285355901203
                    ],
                    [
                        "example",
                        0.8967390200800526
                    ],
                    [
                        "that--",
                        0.8967390200800526
                    ],
                    [
                        "tight",
                        0.9104916960802591
                    ],
                    [
                        "asymptotic",
                        0.9228665319092858
                    ],
                    [
                        "upper",
                        0.9243855825951891
                    ],
                    [
                        "vertex",
                        0.9244226831855012
                    ],
                    [
                        "omega",
                        0.9257111625568019
                    ],
                    [
                        "low",
                        0.9257111625568019
                    ],
                    [
                        "space",
                        0.9267115173094799
                    ],
                    [
                        "theta",
                        0.9268810120214063
                    ],
                    [
                        "thing",
                        0.927923380213802
                    ],
                    [
                        "fast",
                        0.9286114906175448
                    ],
                    [
                        "algorithm",
                        0.9286114906175448
                    ],
                    [
                        "respect",
                        0.9286114906175448
                    ],
                    [
                        "big",
                        0.9316054823585905
                    ],
                    [
                        "function",
                        0.9356822779192714
                    ],
                    [
                        "big o",
                        1.7757126885928876
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "input",
                        0.32013614416549774
                    ],
                    [
                        "size",
                        0.349119648728049
                    ],
                    [
                        "case",
                        0.8588818625028246
                    ],
                    [
                        "thing",
                        0.927923380213802
                    ],
                    [
                        "algorithm",
                        0.9286114906175448
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-1890": {
            "id": "ZA-tUyM_y7s-1890",
            "heat": 0.1,
            "start": 1890.0,
            "text": " We have a couple of common functions that relate an algorithm's input size to its performance, some things that we saw all the time. Can anyone give me some of those? STUDENT: [INAUDIBLE] JASON KU: Say again. STUDENT: [INAUDIBLE] JASON KU: Sorry. Sorry. I'm not asking this question well, but has anyone heard of a linear algorithm-- a linear time algorithm? That's basically saying that the running time of my algorithm-- performance of my algorithm is linear with respect to the size of my input. Right? Yeah? STUDENT: [INAUDIBLE] JASON KU: Say again. STUDENT: Like putting something in a list-- JASON KU: Like putting something in a list-- OK. There's a lot behind that question that we'll go into later this week. But that's an example of, if I do it in a silly way, I stick something in the middle of a list and I have to move everything. That's an operation that could take linear time. So linear time is a type of function. We've got a number of these. I'm going to start with this one. Does anyone know this one is? Constant time-- basically, no matter how I change the input,",
            "metrics": {
                "relativeDCReadability": 1.1005773941564359,
                "lexicalDiversity": 0.5550239234449761,
                "posComposition": {
                    "PRP": 0.057,
                    "VBP": 0.043,
                    "DT": 0.144,
                    "NN": 0.206,
                    "IN": 0.12,
                    "JJ": 0.043,
                    "NNS": 0.01,
                    "WDT": 0.014,
                    "POS": 0.005,
                    "TO": 0.019,
                    "PRP$": 0.019,
                    "VBD": 0.01,
                    "PDT": 0.005,
                    "NNP": 0.105,
                    "VB": 0.029,
                    "RB": 0.033,
                    "VBG": 0.024,
                    "CC": 0.019,
                    "VBZ": 0.048,
                    ":": 0.024,
                    "EX": 0.005,
                    "MD": 0.01,
                    "CD": 0.005,
                    "WRB": 0.005
                },
                "syllableRate": 2.542,
                "topicScores": [
                    [
                        "student",
                        0.21081354437862565
                    ],
                    [
                        "JASON KU",
                        0.21239511917109433
                    ],
                    [
                        "time",
                        0.34832390530370766
                    ],
                    [
                        "linear",
                        0.35538882552613765
                    ],
                    [
                        "algorithm",
                        0.452994638747428
                    ],
                    [
                        "input",
                        0.4535338328791199
                    ],
                    [
                        "function",
                        0.5680930625311343
                    ],
                    [
                        "performance",
                        0.569655917199295
                    ],
                    [
                        "size",
                        0.5740265275471688
                    ],
                    [
                        "list--",
                        0.5750158849250181
                    ],
                    [
                        "question",
                        0.581917060075587
                    ],
                    [
                        "ok",
                        0.6734713430939334
                    ],
                    [
                        "jason",
                        0.7032145249848261
                    ],
                    [
                        "thing",
                        0.8186492056087252
                    ],
                    [
                        "couple",
                        0.8341537893672035
                    ],
                    [
                        "common",
                        0.8341537893672035
                    ],
                    [
                        "week",
                        0.918044252922105
                    ],
                    [
                        "Constant",
                        0.9229917996835064
                    ],
                    [
                        "respect",
                        0.9330794097492885
                    ],
                    [
                        "example",
                        0.9348382892449173
                    ],
                    [
                        "silly",
                        0.9348382892449173
                    ],
                    [
                        "way",
                        0.9348382892449173
                    ],
                    [
                        "lot",
                        0.9404625709926664
                    ],
                    [
                        "middle",
                        0.9411237006676414
                    ],
                    [
                        "operation",
                        0.9417289902075262
                    ],
                    [
                        "type",
                        0.9422859341481111
                    ],
                    [
                        "number",
                        0.9428006954389789
                    ],
                    [
                        "list-- ok",
                        1.5892473416311097
                    ],
                    [
                        "list-- jason",
                        1.7846983703165136
                    ],
                    [
                        "list-- jason KU",
                        2.2449568392113637
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "student",
                        0.21081354437862565
                    ],
                    [
                        "JASON KU",
                        0.21239511917109433
                    ],
                    [
                        "time",
                        0.34832390530370766
                    ],
                    [
                        "linear",
                        0.35538882552613765
                    ],
                    [
                        "algorithm",
                        0.452994638747428
                    ],
                    [
                        "input",
                        0.4535338328791199
                    ],
                    [
                        "size",
                        0.5740265275471688
                    ],
                    [
                        "ok",
                        0.6734713430939334
                    ],
                    [
                        "thing",
                        0.8186492056087252
                    ],
                    [
                        "operation",
                        0.9417289902075262
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-1980": {
            "id": "ZA-tUyM_y7s-1980",
            "heat": 0.201,
            "start": 1980.0,
            "text": " the amount of time this running time-- the performance of my algorithm takes, it doesn't really depend on that. The next one up is something like this. This is logarithmic time. We have data n, which is linear, and log n. Sometimes we call this log linear, but we usually just say n log n. We have a quadratic running time. In general, if I have a constant power up here, it's n to the c for some constant. This is what we call polynomial time, as long as c is some constant. And this right here is what we mean by efficient, in this class, usually. In other classes, when you have big data sets, maybe this is efficient. But in this class, generally what we mean is polynomial. And as you get down this thing, things are more and more efficient. There's one class I'm going to talk to you about over here, which is something like-- let's do this-- 2 to the theta of n, exponential time. This is some constant to a function of n that's, let's say, super linear, that's going to be pretty bad.",
            "metrics": {
                "relativeDCReadability": 0.921956336924832,
                "lexicalDiversity": 0.47761194029850745,
                "posComposition": {
                    "DT": 0.114,
                    "NN": 0.149,
                    "IN": 0.104,
                    "JJ": 0.119,
                    ":": 0.015,
                    "PRP$": 0.005,
                    "VBZ": 0.08,
                    "PRP": 0.07,
                    "RB": 0.07,
                    "VB": 0.03,
                    "CD": 0.015,
                    "VBP": 0.055,
                    "NNS": 0.035,
                    "WDT": 0.02,
                    "CC": 0.03,
                    "TO": 0.03,
                    "WP": 0.015,
                    "WRB": 0.005,
                    "RP": 0.005,
                    "JJR": 0.005,
                    "RBR": 0.005,
                    "EX": 0.005,
                    "VBG": 0.01,
                    "POS": 0.01
                },
                "syllableRate": 2.258,
                "topicScores": [
                    [
                        "time",
                        0.33161556546242305
                    ],
                    [
                        "n",
                        0.34480610984093607
                    ],
                    [
                        "constant",
                        0.37176585245389465
                    ],
                    [
                        "class",
                        0.37355711410482006
                    ],
                    [
                        "log",
                        0.4243587570603215
                    ],
                    [
                        "linear",
                        0.436207692240816
                    ],
                    [
                        "efficient",
                        0.43725912935171973
                    ],
                    [
                        "datum",
                        0.5504973978839882
                    ],
                    [
                        "polynomial",
                        0.5588751460015969
                    ],
                    [
                        "thing",
                        0.5748095088230188
                    ],
                    [
                        "algorithm",
                        0.8045471330901389
                    ],
                    [
                        "running",
                        0.8175863360173671
                    ],
                    [
                        "performance",
                        0.8175863360173671
                    ],
                    [
                        "logarithmic",
                        0.8827535589445238
                    ],
                    [
                        "general",
                        0.904161916780599
                    ],
                    [
                        "bad",
                        0.9117314416963389
                    ],
                    [
                        "quadratic",
                        0.9144669019295286
                    ],
                    [
                        "exponential",
                        0.9176521455168889
                    ],
                    [
                        "power",
                        0.918217505187124
                    ],
                    [
                        "super",
                        0.9189377898302229
                    ],
                    [
                        "set",
                        0.9194269994140386
                    ],
                    [
                        "big",
                        0.9255118073648454
                    ],
                    [
                        "like--",
                        0.9298826901168785
                    ],
                    [
                        "theta",
                        0.9298826901168785
                    ],
                    [
                        "function",
                        0.9309917462033652
                    ],
                    [
                        "log linear",
                        2.8525879109427383
                    ],
                    [
                        "logarithmic time",
                        3.1102962475342264
                    ],
                    [
                        "polynomial time",
                        3.1548372240502656
                    ],
                    [
                        "datum n",
                        3.4981126029390204
                    ],
                    [
                        "exponential time",
                        3.6865645324106384
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "time",
                        0.33161556546242305
                    ],
                    [
                        "constant",
                        0.37176585245389465
                    ],
                    [
                        "class",
                        0.37355711410482006
                    ],
                    [
                        "linear",
                        0.436207692240816
                    ],
                    [
                        "thing",
                        0.5748095088230188
                    ],
                    [
                        "algorithm",
                        0.8045471330901389
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-2070": {
            "id": "ZA-tUyM_y7s-2070",
            "heat": 0.271,
            "start": 2070.0,
            "text": " Why is it pretty bad? If I were to plot some of these things as a function of n-- let's say I plot values of up to 1,000 on my n scale here. What does constant look like? Maybe this is 1,000 up here. What does a constant look like? Looks like a line-- it looks like a line over here somewhere. It could be as high as I want, but eventually, anything that's an increasing function will get bigger than this. And on this scale, if I use log base 2 or some reasonable small constant, what does log look like? Well, let's do an easier one. What does linear look like? Yeah, this-- that's what I saw what a lot of you doing. That's linear. That's the kind of base that we're comparing everything against. What does log look like? Like this-- OK, but at this scale, really, it's much closer to constant than linear. And actually, as n gets much, much larger this almost looks like a straight line. It almost looks like a constant. So log is almost just as good as constant.",
            "metrics": {
                "relativeDCReadability": 0.9049950752392706,
                "lexicalDiversity": 0.5276381909547738,
                "posComposition": {
                    "WRB": 0.005,
                    "VBZ": 0.085,
                    "PRP": 0.06,
                    "RB": 0.08,
                    "JJ": 0.101,
                    "IN": 0.151,
                    "VBD": 0.01,
                    "TO": 0.015,
                    "VB": 0.05,
                    "DT": 0.116,
                    "NNS": 0.01,
                    "NN": 0.101,
                    ":": 0.02,
                    "POS": 0.01,
                    "VBP": 0.025,
                    "CD": 0.02,
                    "PRP$": 0.005,
                    "WP": 0.035,
                    "NNP": 0.025,
                    "MD": 0.01,
                    "CC": 0.025,
                    "WDT": 0.005,
                    "VBG": 0.015,
                    "JJR": 0.02
                },
                "syllableRate": 2.05,
                "topicScores": [
                    [
                        "look",
                        0.2508975744579791
                    ],
                    [
                        "constant",
                        0.32786092965137376
                    ],
                    [
                        "log",
                        0.39722562146886475
                    ],
                    [
                        "scale",
                        0.45691769615828376
                    ],
                    [
                        "linear",
                        0.462166811501163
                    ],
                    [
                        "function",
                        0.5805559343131489
                    ],
                    [
                        "this--",
                        0.5827828427746711
                    ],
                    [
                        "base",
                        0.5914992135765149
                    ],
                    [
                        "bad",
                        0.8067378386099858
                    ],
                    [
                        "thing",
                        0.9004640939975526
                    ],
                    [
                        "n--",
                        0.9004640939975526
                    ],
                    [
                        "value",
                        0.9004640939975526
                    ],
                    [
                        "small",
                        0.9332278848438711
                    ],
                    [
                        "line--",
                        0.9348048429263912
                    ],
                    [
                        "easy",
                        0.9352687289773363
                    ],
                    [
                        "high",
                        0.9377243658699028
                    ],
                    [
                        "big",
                        0.9377243658699028
                    ],
                    [
                        "reasonable",
                        0.9400081988859394
                    ],
                    [
                        "large",
                        0.9432561933326061
                    ],
                    [
                        "straight",
                        0.9432561933326061
                    ],
                    [
                        "lot",
                        0.9446819609727583
                    ],
                    [
                        "kind",
                        0.9467684595039073
                    ],
                    [
                        "close",
                        0.9483885807808566
                    ],
                    [
                        "good",
                        0.9502575023394316
                    ],
                    [
                        "constant look",
                        3.2943949006455475
                    ],
                    [
                        "n scale",
                        5.648388984418395
                    ],
                    [
                        "small constant",
                        6.0903616846272435
                    ],
                    [
                        "log base",
                        6.390300434945802
                    ],
                    [
                        "straight line",
                        6.415153755117535
                    ],
                    [
                        "reasonable small",
                        7.146099524827417
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "look",
                        0.2508975744579791
                    ],
                    [
                        "constant",
                        0.32786092965137376
                    ],
                    [
                        "linear",
                        0.462166811501163
                    ],
                    [
                        "thing",
                        0.9004640939975526
                    ],
                    [
                        "kind",
                        0.9467684595039073
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-2160": {
            "id": "ZA-tUyM_y7s-2160",
            "heat": 0.126,
            "start": 2160.0,
            "text": " What does exponential look like? It's the exact inverse of this thing. It's almost an exact straight line going up. So this is crap. This is really good. Almost anything in this region over here is better right. At least I'm gaining something. I'm able to not go up too high relative to my input size. So quadratic-- I don't know-- is something like this, and n log n is something like this. n log n, after a long time, really starts just looking linear with a constant multiplied in front of it. OK, so these things good, that thing bad-- OK? That's what that's trying to convey. All right, so how do we measure these things if I don't know what my fundamental operations are that my computer can use? So we need to define some kind of model of computation for what our computer is allowed to do in constant time, in a fixed amount of time. In general, what we use in this class is a machine called a word RAM, which we use for its theoretical brevity.",
            "metrics": {
                "relativeDCReadability": 0.8587288015141151,
                "lexicalDiversity": 0.5104166666666666,
                "posComposition": {
                    "WP": 0.026,
                    "VBZ": 0.068,
                    "JJ": 0.104,
                    "NN": 0.167,
                    "IN": 0.141,
                    "PRP": 0.057,
                    "DT": 0.104,
                    "RB": 0.062,
                    "VBG": 0.021,
                    "RP": 0.01,
                    "NNP": 0.021,
                    "JJS": 0.005,
                    "VBP": 0.047,
                    "TO": 0.026,
                    "VB": 0.042,
                    "PRP$": 0.026,
                    ":": 0.016,
                    "CC": 0.005,
                    "VBN": 0.016,
                    "NNS": 0.016,
                    "VBD": 0.005,
                    "WRB": 0.005,
                    "MD": 0.005,
                    "WDT": 0.005
                },
                "syllableRate": 2.15,
                "topicScores": [
                    [
                        "n",
                        0.36473590557416213
                    ],
                    [
                        "thing",
                        0.3768579315082501
                    ],
                    [
                        "time",
                        0.44563038193669946
                    ],
                    [
                        "exact",
                        0.5357164827132886
                    ],
                    [
                        "log",
                        0.5378655275767328
                    ],
                    [
                        "right",
                        0.5483380518240838
                    ],
                    [
                        "good",
                        0.5502824264324826
                    ],
                    [
                        "constant",
                        0.5682512163974537
                    ],
                    [
                        "computer",
                        0.5743371983408174
                    ],
                    [
                        "RAM",
                        0.6906224025997244
                    ],
                    [
                        "exponential",
                        0.7983289527794457
                    ],
                    [
                        "crap",
                        0.8550235811751765
                    ],
                    [
                        "inverse",
                        0.8562738433931523
                    ],
                    [
                        "straight",
                        0.8786481723010652
                    ],
                    [
                        "line",
                        0.8786481723010652
                    ],
                    [
                        "size",
                        0.8817316354359886
                    ],
                    [
                        "well",
                        0.8949803790291977
                    ],
                    [
                        "brevity",
                        0.8986541168430497
                    ],
                    [
                        "input",
                        0.903032501789748
                    ],
                    [
                        "region",
                        0.9042392582859786
                    ],
                    [
                        "long",
                        0.9082892264091149
                    ],
                    [
                        "general",
                        0.9086013552301455
                    ],
                    [
                        "able",
                        0.9116515574392737
                    ],
                    [
                        "high",
                        0.9116515574392737
                    ],
                    [
                        "relative",
                        0.9116515574392737
                    ],
                    [
                        "linear",
                        0.9164842456262636
                    ],
                    [
                        "word",
                        0.9171933733987323
                    ],
                    [
                        "theoretical",
                        0.9171933733987323
                    ],
                    [
                        "fundamental",
                        0.9225727620316378
                    ],
                    [
                        "operation",
                        0.9225727620316378
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "thing",
                        0.3768579315082501
                    ],
                    [
                        "time",
                        0.44563038193669946
                    ],
                    [
                        "right",
                        0.5483380518240838
                    ],
                    [
                        "constant",
                        0.5682512163974537
                    ],
                    [
                        "computer",
                        0.5743371983408174
                    ],
                    [
                        "size",
                        0.8817316354359886
                    ],
                    [
                        "input",
                        0.903032501789748
                    ],
                    [
                        "linear",
                        0.9164842456262636
                    ],
                    [
                        "operation",
                        0.9225727620316378
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-2250": {
            "id": "ZA-tUyM_y7s-2250",
            "heat": 0.1,
            "start": 2250.0,
            "text": " Word RAM is kind of a loaded term. What do these things mean? Does someone know what RAM means? STUDENT: [INAUDIBLE] JASON KU: Random access memory-- it means that I can randomly access different places in memory in constant time. That's the assumption of random access memory. Basically, what our model of a computer is you have memory, which is essentially just a string of bits. It's just a bunch of 1's and 0's. And we have a computer, like a CPU, which is really small. It can basically hold a small amount of information, but it can change that information. It can operate on that information, and it also has instructions to randomly access different places in memory, bring it into the CPU, act on it, and read it back. Does that makes sense? But in general, we don't have an address for every bit in memory, every 0 and 1 in memory. Does anyone know how modern computers are addressed? Yeah? STUDENT: [INAUDIBLE] JASON KU: OK, so we're going to get there. Actually, what a modern computer is addressed in",
            "metrics": {
                "relativeDCReadability": 1.147271216160855,
                "lexicalDiversity": 0.5343915343915344,
                "posComposition": {
                    "NNP": 0.101,
                    "VBZ": 0.063,
                    "NN": 0.175,
                    "IN": 0.111,
                    "DT": 0.085,
                    "JJ": 0.058,
                    "WP": 0.021,
                    "VBP": 0.032,
                    "NNS": 0.032,
                    "VB": 0.053,
                    ":": 0.005,
                    "PRP": 0.074,
                    "MD": 0.021,
                    "WDT": 0.016,
                    "PRP$": 0.005,
                    "RB": 0.048,
                    "CD": 0.021,
                    "POS": 0.011,
                    "CC": 0.037,
                    "TO": 0.011,
                    "WRB": 0.005,
                    "VBG": 0.005,
                    "EX": 0.005,
                    "VBN": 0.005
                },
                "syllableRate": 2.417,
                "topicScores": [
                    [
                        "Word RAM",
                        0.20588821778505034
                    ],
                    [
                        "memory",
                        0.3161653296200359
                    ],
                    [
                        "JASON KU",
                        0.3653826300826975
                    ],
                    [
                        "computer",
                        0.37554067363869703
                    ],
                    [
                        "access",
                        0.37685963016919577
                    ],
                    [
                        "address",
                        0.44641594020383485
                    ],
                    [
                        "information",
                        0.4470797637342999
                    ],
                    [
                        "random",
                        0.46149617700705403
                    ],
                    [
                        "student",
                        0.5130283967900501
                    ],
                    [
                        "different",
                        0.5427483925922767
                    ],
                    [
                        "place",
                        0.5427483925922767
                    ],
                    [
                        "small",
                        0.5706226200146982
                    ],
                    [
                        "bit",
                        0.5713615904904936
                    ],
                    [
                        "modern",
                        0.5725899225271536
                    ],
                    [
                        "ram",
                        0.5802961200618404
                    ],
                    [
                        "cpu",
                        0.6707310743158131
                    ],
                    [
                        "term",
                        0.7700529937553833
                    ],
                    [
                        "loaded",
                        0.809100578291061
                    ],
                    [
                        "thing",
                        0.8644759213854274
                    ],
                    [
                        "time",
                        0.882430960096655
                    ],
                    [
                        "constant",
                        0.904755794565025
                    ],
                    [
                        "sense",
                        0.9067261286289974
                    ],
                    [
                        "assumption",
                        0.9184648422826394
                    ],
                    [
                        "model",
                        0.9220550794281618
                    ],
                    [
                        "string",
                        0.9220550794281618
                    ],
                    [
                        "bunch",
                        0.9248675105117966
                    ],
                    [
                        "general",
                        0.9261490120947499
                    ],
                    [
                        "instruction",
                        0.9306337898110693
                    ],
                    [
                        "random access",
                        1.1219076924468818
                    ],
                    [
                        "loaded term",
                        1.6528740037590928
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "memory",
                        0.3161653296200359
                    ],
                    [
                        "JASON KU",
                        0.3653826300826975
                    ],
                    [
                        "computer",
                        0.37554067363869703
                    ],
                    [
                        "address",
                        0.44641594020383485
                    ],
                    [
                        "student",
                        0.5130283967900501
                    ],
                    [
                        "bit",
                        0.5713615904904936
                    ],
                    [
                        "thing",
                        0.8644759213854274
                    ],
                    [
                        "time",
                        0.882430960096655
                    ],
                    [
                        "constant",
                        0.904755794565025
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-2340": {
            "id": "ZA-tUyM_y7s-2340",
            "heat": 0.1,
            "start": 2340.0,
            "text": " is bytes, collections of 8 bits. So there's an address I have for every 8 bits in memory-- consecutive 8 bits in memory. And so if I want to pull something in into the CPU, I give it an address. It'll take some chunk, and bring it into the CPU, operate on it, and spit it back. How big is that chunk? This goes to the answer that you were asking, which-- or saying, which is it's some sequence of some fixed number of bits, which we call a word. A word is how big of a chunk that the CPU can take in from memory at a time and operate on. In your computers, how big is that word size? 64 bits-- that's how much I can operate on at a time. When I was growing up, when I was your age, my word size was 32 bits. And that actually was a problem for my computer, because in order for me to be able to read to address in memory, I need to be able to store that address in my CPU, in a word. But if I have 32 bits, how many different addresses can I address? I have a limitation on the memory addresses I can address, right? So how many different memory addresses",
            "metrics": {
                "relativeDCReadability": 0.9746159208319828,
                "lexicalDiversity": 0.4311111111111111,
                "posComposition": {
                    "VBZ": 0.044,
                    "JJ": 0.058,
                    "NNS": 0.049,
                    "IN": 0.142,
                    "CD": 0.027,
                    "RB": 0.018,
                    "EX": 0.004,
                    "DT": 0.102,
                    "NN": 0.138,
                    "PRP": 0.089,
                    "VBP": 0.031,
                    ":": 0.013,
                    "CC": 0.031,
                    "TO": 0.031,
                    "VB": 0.062,
                    "NNP": 0.027,
                    "MD": 0.022,
                    "RP": 0.009,
                    "VBD": 0.022,
                    "VBG": 0.013,
                    "WDT": 0.013,
                    "WRB": 0.031,
                    "PRP$": 0.022
                },
                "syllableRate": 2.5,
                "topicScores": [
                    [
                        "address",
                        0.2673156785784309
                    ],
                    [
                        "CPU",
                        0.2885087807151484
                    ],
                    [
                        "bit",
                        0.3057962002166342
                    ],
                    [
                        "word",
                        0.326615006130601
                    ],
                    [
                        "memory",
                        0.33786338721417003
                    ],
                    [
                        "big",
                        0.4231179518235193
                    ],
                    [
                        "chunk",
                        0.4423260234079777
                    ],
                    [
                        "time",
                        0.5523544685922929
                    ],
                    [
                        "different",
                        0.5623286536619517
                    ],
                    [
                        "size",
                        0.5623914435877279
                    ],
                    [
                        "able",
                        0.5681613891740221
                    ],
                    [
                        "computer",
                        0.5700230666016798
                    ],
                    [
                        "byte",
                        0.8558501117051249
                    ],
                    [
                        "collection",
                        0.8674757530864007
                    ],
                    [
                        "consecutive",
                        0.8972349181700829
                    ],
                    [
                        "right",
                        0.9058229851084288
                    ],
                    [
                        "which--",
                        0.9159319821253524
                    ],
                    [
                        "answer",
                        0.9228244219184747
                    ],
                    [
                        "sequence",
                        0.9228244219184747
                    ],
                    [
                        "number",
                        0.9228244219184747
                    ],
                    [
                        "bits--",
                        0.9234131308049522
                    ],
                    [
                        "age",
                        0.9251298864862897
                    ],
                    [
                        "problem",
                        0.9326893895452115
                    ],
                    [
                        "order",
                        0.9326893895452115
                    ],
                    [
                        "limitation",
                        0.9349300670410922
                    ],
                    [
                        "word size",
                        1.9190235622372516
                    ],
                    [
                        "memory address",
                        2.180079109197784
                    ],
                    [
                        "different memory",
                        3.5126995080650056
                    ],
                    [
                        "different address",
                        3.795029157304031
                    ],
                    [
                        "memory-- consecutive",
                        4.129007315040861
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "address",
                        0.2673156785784309
                    ],
                    [
                        "CPU",
                        0.2885087807151484
                    ],
                    [
                        "bit",
                        0.3057962002166342
                    ],
                    [
                        "memory",
                        0.33786338721417003
                    ],
                    [
                        "time",
                        0.5523544685922929
                    ],
                    [
                        "size",
                        0.5623914435877279
                    ],
                    [
                        "computer",
                        0.5700230666016798
                    ],
                    [
                        "right",
                        0.9058229851084288
                    ],
                    [
                        "problem",
                        0.9326893895452115
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-2430": {
            "id": "ZA-tUyM_y7s-2430",
            "heat": 0.1,
            "start": 2430.0,
            "text": " can I address with 32 bits? 2 to the 32, right? That makes sense. Well, if you do that calculation out, how big of a hard disk can I have to access? It's about 4 gigabytes. So in my day, all the hard drives were limited to being partitioned-- even if you had a bigger than 4 gigabyte hard drive, I had to partition it into these 4 gigabyte chunks, which the computer could then read onto. That was very limiting, actually. That's a restriction. With 64 bits, what's my limitation on memory that I can address-- byte addressable? Turns out to be something like 20 exabytes-- to put this in context, all data that Google stores on their servers, on all drives throughout the world-- it's about 10. So we're not going to run out of this limitation very soon. So what do we got we've got a CPU. It can address memory. What are the operations I can do in this CPU? Generally, I have binary operations. I can compare to words in memory, and I can either do integer arithmetic, logical operations,",
            "metrics": {
                "relativeDCReadability": 1.114574329552784,
                "lexicalDiversity": 0.4717948717948718,
                "posComposition": {
                    "MD": 0.041,
                    "PRP": 0.087,
                    "VB": 0.056,
                    "IN": 0.118,
                    "CD": 0.046,
                    "NNS": 0.072,
                    "TO": 0.041,
                    "DT": 0.092,
                    "NN": 0.097,
                    "WDT": 0.015,
                    "VBZ": 0.031,
                    "RB": 0.062,
                    "VBP": 0.036,
                    "WRB": 0.005,
                    "JJ": 0.046,
                    "PRP$": 0.015,
                    "PDT": 0.005,
                    "VBD": 0.031,
                    "VBN": 0.01,
                    "VBG": 0.015,
                    ":": 0.021,
                    "JJR": 0.01,
                    "WP": 0.015,
                    "RP": 0.005,
                    "NNP": 0.021,
                    "CC": 0.005
                },
                "syllableRate": 2.358,
                "topicScores": [
                    [
                        "cpu",
                        0.39521757781901634
                    ],
                    [
                        "gigabyte",
                        0.4320899295451886
                    ],
                    [
                        "hard",
                        0.44447127128130476
                    ],
                    [
                        "operation",
                        0.44497306000177067
                    ],
                    [
                        "drive",
                        0.4487464020331379
                    ],
                    [
                        "memory",
                        0.45003605310003936
                    ],
                    [
                        "bit",
                        0.5397234185970149
                    ],
                    [
                        "big",
                        0.5608349655743764
                    ],
                    [
                        "limitation",
                        0.5751294754892322
                    ],
                    [
                        "Google",
                        0.6883231639111357
                    ],
                    [
                        "right",
                        0.8340491396405318
                    ],
                    [
                        "sense",
                        0.8648014009137758
                    ],
                    [
                        "restriction",
                        0.8931524456153572
                    ],
                    [
                        "addressable",
                        0.8958246230829732
                    ],
                    [
                        "calculation",
                        0.896742024435155
                    ],
                    [
                        "disk",
                        0.9058619276421406
                    ],
                    [
                        "day",
                        0.906597879052092
                    ],
                    [
                        "chunk",
                        0.906597879052092
                    ],
                    [
                        "partitioned--",
                        0.9149298771791886
                    ],
                    [
                        "computer",
                        0.9149298771791886
                    ],
                    [
                        "logical",
                        0.9161206610582324
                    ],
                    [
                        "context",
                        0.9167241791768441
                    ],
                    [
                        "datum",
                        0.9167241791768441
                    ],
                    [
                        "server",
                        0.9167241791768441
                    ],
                    [
                        "binary",
                        0.923155044517444
                    ],
                    [
                        "integer",
                        0.9240648944151996
                    ],
                    [
                        "arithmetic",
                        0.9240648944151996
                    ],
                    [
                        "exabytes--",
                        0.9242283519539514
                    ],
                    [
                        "store",
                        0.9242283519539514
                    ],
                    [
                        "world--",
                        0.9242283519539514
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "operation",
                        0.44497306000177067
                    ],
                    [
                        "memory",
                        0.45003605310003936
                    ],
                    [
                        "bit",
                        0.5397234185970149
                    ],
                    [
                        "right",
                        0.8340491396405318
                    ],
                    [
                        "computer",
                        0.9149298771791886
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-2520": {
            "id": "ZA-tUyM_y7s-2520",
            "heat": 0.1,
            "start": 2520.0,
            "text": " bitwise operations-- but we're not going to use those so much in this class. And I can write and write from an address in memory, a word in constant time. Those are the operations that I have available to me on most CPUs. Some CPUs give you a little bit more power, but this is generally what we analyze algorithms with respect to. OK? But you'll notice that my CPU is only built to operate on a constant amount of information at once-- generally, two words in memory. An operation produces a third one, and I spit it out. It takes a constant amount of time to operate on a constant amount of memory. If I want to operate on a linear amount of memory-- n things-- how long is that going to take? If I just want to read everything in that thing, it's going to take me linear time, because I have to read every part of that thing. OK, so in general, what we're going to do for the first half of this class mostly-- first eight lectures, anyway-- is talk about data structures. And it's going to be concerned about not operating",
            "metrics": {
                "relativeDCReadability": 0.9705401043383938,
                "lexicalDiversity": 0.4830917874396135,
                "posComposition": {
                    "NN": 0.13,
                    "NNS": 0.024,
                    ":": 0.029,
                    "CC": 0.034,
                    "PRP": 0.082,
                    "VBP": 0.048,
                    "RB": 0.053,
                    "VBG": 0.029,
                    "TO": 0.058,
                    "VB": 0.068,
                    "DT": 0.097,
                    "JJ": 0.082,
                    "IN": 0.14,
                    "MD": 0.01,
                    "JJS": 0.005,
                    "NNP": 0.019,
                    "RBR": 0.005,
                    "VBZ": 0.043,
                    "WP": 0.01,
                    "PRP$": 0.005,
                    "VBN": 0.01,
                    "CD": 0.014,
                    "WRB": 0.005
                },
                "syllableRate": 2.467,
                "topicScores": [
                    [
                        "constant",
                        0.3586727709979672
                    ],
                    [
                        "memory",
                        0.4257932394864834
                    ],
                    [
                        "time",
                        0.4446458471911471
                    ],
                    [
                        "word",
                        0.5413977010727342
                    ],
                    [
                        "cpu",
                        0.542152093852279
                    ],
                    [
                        "class",
                        0.5496089134183483
                    ],
                    [
                        "thing",
                        0.5589608984550786
                    ],
                    [
                        "operation",
                        0.5616058247440635
                    ],
                    [
                        "linear",
                        0.5710403473319954
                    ],
                    [
                        "bitwise",
                        0.7156377502096415
                    ],
                    [
                        "address",
                        0.8838455674509196
                    ],
                    [
                        "power",
                        0.8926673907166537
                    ],
                    [
                        "respect",
                        0.8926673907166537
                    ],
                    [
                        "structure",
                        0.8934618848281961
                    ],
                    [
                        "available",
                        0.8956002582742139
                    ],
                    [
                        "once--",
                        0.9028700389318511
                    ],
                    [
                        "little",
                        0.9031388997067105
                    ],
                    [
                        "algorithm",
                        0.9031388997067105
                    ],
                    [
                        "information",
                        0.9124437952928961
                    ],
                    [
                        "general",
                        0.9150508776681846
                    ],
                    [
                        "lecture",
                        0.9150508776681846
                    ],
                    [
                        "anyway--",
                        0.9150508776681846
                    ],
                    [
                        "data",
                        0.9150508776681846
                    ],
                    [
                        "half",
                        0.9235257061764238
                    ],
                    [
                        "mostly--",
                        0.9235257061764238
                    ],
                    [
                        "talk",
                        0.9235257061764238
                    ],
                    [
                        "bitwise operations--",
                        1.0497574081904035
                    ],
                    [
                        "constant time",
                        2.8552453441114753
                    ],
                    [
                        "class mostly--",
                        4.114881062677832
                    ],
                    [
                        "linear time",
                        4.1249970470743555
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "constant",
                        0.3586727709979672
                    ],
                    [
                        "memory",
                        0.4257932394864834
                    ],
                    [
                        "time",
                        0.4446458471911471
                    ],
                    [
                        "class",
                        0.5496089134183483
                    ],
                    [
                        "thing",
                        0.5589608984550786
                    ],
                    [
                        "operation",
                        0.5616058247440635
                    ],
                    [
                        "linear",
                        0.5710403473319954
                    ],
                    [
                        "address",
                        0.8838455674509196
                    ],
                    [
                        "algorithm",
                        0.9031388997067105
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-2610": {
            "id": "ZA-tUyM_y7s-2610",
            "heat": 0.254,
            "start": 2610.0,
            "text": " on constant amount of data at a time, like our CPU is doing, but instead, what it's going to do is operate on-- store a large amount of data and support different operations on that data. So if I had a record that I want to maintain to store those birthdays that we had before, I might use something like a static array, which you guys maybe are not familiar with, if you have been working in Python is your only programming language. Python has a lot of really interesting data structures, like a list, and a set, and a dictionary, and all these kinds of things that are actually not in this model. There's actually a lot of code between you and the computer, and it's not always clear how much time that interface is taking. And so what we're going to do starting on Thursday is talk about ways of storing a non-constant amount of information to make operations on that information faster. So just before you go, I just want to give you a quick overview of the class. To solve an algorithms class-- an algorithm problem in this class, we essentially have two different strategies. We can either reduced to using the solution to a problem we know how to solve, or we can design our own algorithm, which is going to be recursive in nature.",
            "metrics": {
                "relativeDCReadability": 1.0479120924098269,
                "lexicalDiversity": 0.4491525423728814,
                "posComposition": {
                    "IN": 0.131,
                    "JJ": 0.068,
                    "NN": 0.14,
                    "NNS": 0.051,
                    "DT": 0.097,
                    "PRP$": 0.013,
                    "NNP": 0.017,
                    "VBZ": 0.042,
                    "VBG": 0.038,
                    "CC": 0.038,
                    "RB": 0.068,
                    "WP": 0.008,
                    "PRP": 0.072,
                    "TO": 0.047,
                    "VB": 0.055,
                    ":": 0.008,
                    "VBD": 0.008,
                    "VBP": 0.042,
                    "MD": 0.013,
                    "WDT": 0.013,
                    "VBN": 0.004,
                    "PDT": 0.004,
                    "EX": 0.004,
                    "WRB": 0.008,
                    "RBR": 0.004,
                    "CD": 0.004
                },
                "syllableRate": 2.883,
                "topicScores": [
                    [
                        "datum",
                        0.3227890117638344
                    ],
                    [
                        "Python",
                        0.39397670133860174
                    ],
                    [
                        "store",
                        0.4029639572448563
                    ],
                    [
                        "CPU",
                        0.4187320731636894
                    ],
                    [
                        "constant",
                        0.48089151674093056
                    ],
                    [
                        "operation",
                        0.499878262678686
                    ],
                    [
                        "lot",
                        0.5066054595218996
                    ],
                    [
                        "time",
                        0.507623958843629
                    ],
                    [
                        "different",
                        0.5265895754033836
                    ],
                    [
                        "class",
                        0.5275769682755157
                    ],
                    [
                        "algorithm",
                        0.5440259465247368
                    ],
                    [
                        "information",
                        0.5465608050134552
                    ],
                    [
                        "problem",
                        0.5495289106375464
                    ],
                    [
                        "Thursday",
                        0.617526787894416
                    ],
                    [
                        "on--",
                        0.7615236275379053
                    ],
                    [
                        "large",
                        0.7615236275379053
                    ],
                    [
                        "language",
                        0.7792923338228208
                    ],
                    [
                        "model",
                        0.811005561590961
                    ],
                    [
                        "static",
                        0.8134019004961107
                    ],
                    [
                        "array",
                        0.8134019004961107
                    ],
                    [
                        "familiar",
                        0.8134019004961107
                    ],
                    [
                        "programming",
                        0.8134019004961107
                    ],
                    [
                        "record",
                        0.8277620174835515
                    ],
                    [
                        "birthday",
                        0.8277620174835515
                    ],
                    [
                        "guy",
                        0.8277620174835515
                    ],
                    [
                        "structure",
                        0.841212617784302
                    ],
                    [
                        "list",
                        0.841212617784302
                    ],
                    [
                        "set",
                        0.841212617784302
                    ],
                    [
                        "dictionary",
                        0.841212617784302
                    ],
                    [
                        "interesting",
                        0.8538171322518038
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "CPU",
                        0.4187320731636894
                    ],
                    [
                        "constant",
                        0.48089151674093056
                    ],
                    [
                        "operation",
                        0.499878262678686
                    ],
                    [
                        "time",
                        0.507623958843629
                    ],
                    [
                        "class",
                        0.5275769682755157
                    ],
                    [
                        "algorithm",
                        0.5440259465247368
                    ],
                    [
                        "problem",
                        0.5495289106375464
                    ],
                    [
                        "birthday",
                        0.8277620174835515
                    ]
                ]
            }
        },
        "ZA-tUyM_y7s-2700": {
            "id": "ZA-tUyM_y7s-2700",
            "heat": 0.239,
            "start": 2700.0,
            "text": " We're going to either put stuff in the data structure and solve a sorting problem, or search in a graph. And then, to design a recursive algorithm, we have various design paradigms. This is all in your notes, but this is essentially the structure of the class. We're going to spend quiz 1, the first eight lectures on data structures and sorting. Second quiz will be on shortest paths, algorithms, and graphs, and then the last one will be on dynamic programming. OK, that's the end of the first lecture. Thanks for coming.",
            "metrics": {
                "relativeDCReadability": 1.0831585713503056,
                "lexicalDiversity": 0.5208333333333334,
                "posComposition": {
                    "PRP": 0.031,
                    "VBP": 0.031,
                    "VBG": 0.052,
                    "TO": 0.031,
                    "DT": 0.146,
                    "VBN": 0.01,
                    "NN": 0.167,
                    "IN": 0.094,
                    "CC": 0.073,
                    "VB": 0.052,
                    "RB": 0.042,
                    "JJ": 0.073,
                    "VBZ": 0.031,
                    "PRP$": 0.01,
                    "NNS": 0.073,
                    "CD": 0.031,
                    "NNP": 0.021,
                    "MD": 0.021,
                    "WDT": 0.01
                },
                "syllableRate": 1.117,
                "topicScores": [
                    [
                        "structure",
                        0.431261743654508
                    ],
                    [
                        "graph",
                        0.5254385260128994
                    ],
                    [
                        "algorithm",
                        0.5403500520364694
                    ],
                    [
                        "design",
                        0.5423714722317219
                    ],
                    [
                        "lecture",
                        0.5464416734082334
                    ],
                    [
                        "quiz",
                        0.5552529644313806
                    ],
                    [
                        "problem",
                        0.7869491615209601
                    ],
                    [
                        "paradigm",
                        0.8033127271706235
                    ],
                    [
                        "stuff",
                        0.8091688456547284
                    ],
                    [
                        "data",
                        0.8091688456547284
                    ],
                    [
                        "class",
                        0.832317154857279
                    ],
                    [
                        "recursive",
                        0.8475393096308436
                    ],
                    [
                        "second",
                        0.8588020724217797
                    ],
                    [
                        "programming",
                        0.8588020724217797
                    ],
                    [
                        "note",
                        0.8710686338127902
                    ],
                    [
                        "thank",
                        0.8717613840569792
                    ],
                    [
                        "short",
                        0.8922254393311604
                    ],
                    [
                        "path",
                        0.8922254393311604
                    ],
                    [
                        "dynamic",
                        0.8922254393311604
                    ],
                    [
                        "datum",
                        0.8973694073404691
                    ],
                    [
                        "end",
                        0.9100280049284853
                    ],
                    [
                        "design paradigm",
                        2.2316286329021566
                    ],
                    [
                        "data structure",
                        2.310459542918972
                    ],
                    [
                        "recursive algorithm",
                        2.6477973451808414
                    ],
                    [
                        "second quiz",
                        3.0948895143217268
                    ],
                    [
                        "dynamic programming",
                        3.2779843901894425
                    ],
                    [
                        "short path",
                        3.90355286672604
                    ]
                ],
                "topTopicSimilarity": 0.1111111111111111,
                "sharedTopicScores": [
                    [
                        "algorithm",
                        0.5403500520364694
                    ],
                    [
                        "problem",
                        0.7869491615209601
                    ],
                    [
                        "class",
                        0.832317154857279
                    ]
                ]
            }
        }
    }
}