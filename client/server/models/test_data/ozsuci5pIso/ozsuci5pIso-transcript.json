[{"text": "The following\ncontent is provided", "start": 0.08, "duration": 1.69}, {"text": "under a Creative\nCommons license.", "start": 1.77, "duration": 2.23}, {"text": "Your support will help MIT\nOpenCourseWare continue", "start": 4.0, "duration": 2.86}, {"text": "to offer high quality\neducational resources for free.", "start": 6.86, "duration": 3.86}, {"text": "To make a donation or\nview additional materials", "start": 10.72, "duration": 2.6}, {"text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare", "start": 13.32, "duration": 3.887}, {"text": "at ocw.mit.edu.", "start": 17.207, "duration": 0.625}, {"text": "PROFESSOR: Good\nmorning, everyone.", "start": 21.404, "duration": 1.416}, {"text": "So lecture three of four in the\nshortest path module and today", "start": 25.41, "duration": 6.74}, {"text": "we'll finally\nconfront our nemesis,", "start": 32.15, "duration": 5.24}, {"text": "which are negative cycles\nand negative edges.", "start": 37.39, "duration": 2.83}, {"text": "And we will describe\nan algorithm", "start": 40.22, "duration": 4.02}, {"text": "that is due to two\ndifferent people.", "start": 44.24, "duration": 2.23}, {"text": "They didn't collaborate\nto produce this algorithm.", "start": 46.47, "duration": 2.89}, {"text": "Bellman and Ford.", "start": 49.36, "duration": 3.21}, {"text": "This computes shortest paths\nin a graph with negative edges.", "start": 52.57, "duration": 6.15}, {"text": "And not only that,\neven in the graph", "start": 58.72, "duration": 2.34}, {"text": "has negative cycles\nin it, the algorithm", "start": 61.06, "duration": 2.83}, {"text": "will be correct in\nthe sense that it", "start": 63.89, "duration": 2.91}, {"text": "will report the existence\nof a negative cycle", "start": 66.8, "duration": 3.03}, {"text": "and, essentially, abort the\ncomputation of shortest paths", "start": 69.83, "duration": 3.66}, {"text": "that are undefined.", "start": 73.49, "duration": 1.8}, {"text": "And for the few\nvertices that do not", "start": 75.29, "duration": 3.44}, {"text": "have negative cycles in\nbetween them and the source,", "start": 78.73, "duration": 4.29}, {"text": "the algorithm will report\ncorrect shortest paths.", "start": 83.02, "duration": 2.96}, {"text": "So it is a polynomial\ntime algorithm.", "start": 85.98, "duration": 3.28}, {"text": "It's fairly easy to describe.", "start": 89.26, "duration": 1.64}, {"text": "And what we'll do is describe\nit, analyze its complexity", "start": 90.9, "duration": 4.18}, {"text": "and, for once, we'll do a\nformal proof of its correctness", "start": 95.08, "duration": 5.72}, {"text": "to show that it reports the\nexistence of negative cycles", "start": 100.8, "duration": 3.14}, {"text": "if they do exist.", "start": 103.94, "duration": 1.2}, {"text": "And if they don't\nexist, it correctly", "start": 105.14, "duration": 2.01}, {"text": "computes shortest path weights.", "start": 107.15, "duration": 2.12}, {"text": "So recall that when we\nlook at the general case", "start": 112.72, "duration": 6.81}, {"text": "of the shortest path problem.", "start": 119.53, "duration": 2.77}, {"text": "We're going to have, let's say,\na vertex u that, in this case,", "start": 122.3, "duration": 4.85}, {"text": "happens to be our source.", "start": 127.15, "duration": 2.34}, {"text": "And let's say for\nargument's sake", "start": 129.49, "duration": 2.15}, {"text": "that we have a negative\nweight cycle like so.", "start": 131.64, "duration": 5.672}, {"text": "So let me to draw this in bold.", "start": 137.312, "duration": 1.698}, {"text": "And this happens to be\na negative rate cycle.", "start": 141.81, "duration": 2.75}, {"text": "Let's assume that all of these\nedges have positive weights.", "start": 144.56, "duration": 6.37}, {"text": "Then, if you have\nan algorithm that", "start": 150.93, "duration": 6.71}, {"text": "needs to work on this type\nof graph, what you want", "start": 157.64, "duration": 3.96}, {"text": "to be able to do is to detect\nthat this negative cycle", "start": 161.6, "duration": 3.99}, {"text": "exists.", "start": 165.59, "duration": 1.18}, {"text": "And you're going\nto, essentially,", "start": 166.77, "duration": 2.42}, {"text": "say if this vertex\nis v1, for example,", "start": 169.19, "duration": 3.98}, {"text": "you want to be able to say delta\nu v1 is undefined and similarly", "start": 173.17, "duration": 6.55}, {"text": "for v2, v3, et cetera.", "start": 179.72, "duration": 3.597}, {"text": "For all of these things,\nthe shortest path lengths", "start": 183.317, "duration": 2.083}, {"text": "are undefined because\nyou can essentially", "start": 185.4, "duration": 3.61}, {"text": "run through this negative\ncycle any number of times", "start": 189.01, "duration": 2.32}, {"text": "and get whatever shortest\npath weight you want.", "start": 191.33, "duration": 4.85}, {"text": "For this node, let's call\nthat v0, we have delta u v0", "start": 196.18, "duration": 6.22}, {"text": "equals 2.", "start": 202.4, "duration": 2.84}, {"text": "And there's a simple\npath of length 1", "start": 205.24, "duration": 3.83}, {"text": "in this case that\ngets you from u to v0.", "start": 209.07, "duration": 3.32}, {"text": "You don't encounter a cycle\nor negative cycle in between.", "start": 212.39, "duration": 4.4}, {"text": "So that's cool.", "start": 216.79, "duration": 1.69}, {"text": "All right?", "start": 218.48, "duration": 1.37}, {"text": "And of course, if you have\na vertex over here, z,", "start": 219.85, "duration": 4.29}, {"text": "that can't be reached\nfrom u then we're", "start": 224.14, "duration": 3.22}, {"text": "going to have delta\nuz being infinity.", "start": 227.36, "duration": 4.27}, {"text": "And you can assume at the\nbeginning of these algorithms", "start": 231.63, "duration": 3.51}, {"text": "that the source-- in this\ncase, I call the source u--", "start": 235.14, "duration": 3.7}, {"text": "but the shortest\npath to u would be 0.", "start": 238.84, "duration": 5.01}, {"text": "And all of the other\nones are infinity.", "start": 243.85, "duration": 2.29}, {"text": "And some of them\nmay stay infinity.", "start": 246.14, "duration": 2.11}, {"text": "Some of them may obtain\nfinite shortest path weights.", "start": 248.25, "duration": 4.84}, {"text": "And some of them\nwill be undefined", "start": 253.09, "duration": 1.72}, {"text": "if you have a graph with\nnegative cycles in it.", "start": 254.81, "duration": 3.01}, {"text": "So that's sort of the\nspecification, if you will,", "start": 257.82, "duration": 3.019}, {"text": "of the requirements on the\nBellman-Ford algorithm.", "start": 260.839, "duration": 2.691}, {"text": "We want it to be able to do all\nof the things I just described.", "start": 263.53, "duration": 3.74}, {"text": "OK?", "start": 267.27, "duration": 2.03}, {"text": "So let's take a second look\nat our generic shortest path", "start": 269.3, "duration": 11.24}, {"text": "algorithm that I put up,\nI think, about a week ago.", "start": 280.54, "duration": 6.97}, {"text": "And this is a good\nreview of our notation.", "start": 287.51, "duration": 4.89}, {"text": "But there are a\ncouple more things", "start": 292.4, "duration": 1.44}, {"text": "I want to say about\nthis algorithm", "start": 293.84, "duration": 2.26}, {"text": "that I didn't get to last time.", "start": 296.1, "duration": 2.39}, {"text": "So you're given a graph and\nyou set all of the vertices", "start": 298.49, "duration": 4.42}, {"text": "in the graph to have\ninfinite shortest path", "start": 302.91, "duration": 3.85}, {"text": "weights, initially.", "start": 306.76, "duration": 3.26}, {"text": "Set the predecessors to be null.", "start": 310.02, "duration": 3.2}, {"text": "And then we'll set\nd of s to be 0.", "start": 313.22, "duration": 5.49}, {"text": "That's your source.", "start": 318.71, "duration": 2.14}, {"text": "And the main loop would\nbe something like repeat,", "start": 320.85, "duration": 10.07}, {"text": "select, and edge.", "start": 330.92, "duration": 2.99}, {"text": "And we have a particular\nway of selecting this edge.", "start": 333.91, "duration": 3.89}, {"text": "And we have positive\nedge weights", "start": 337.8, "duration": 2.01}, {"text": "that corresponds to\nthe minimum priority.", "start": 339.81, "duration": 3.05}, {"text": "And we talked about\nDijkstra but we have, maybe,", "start": 342.86, "duration": 2.312}, {"text": "different ways of doing that.", "start": 345.172, "duration": 1.208}, {"text": "We have to select\nan edge somehow.", "start": 346.38, "duration": 2.15}, {"text": "And then, we relaxed that edge.", "start": 348.53, "duration": 3.515}, {"text": "u, v, w.", "start": 355.37, "duration": 2.71}, {"text": "And you know about\nthe relaxation step.", "start": 358.08, "duration": 1.96}, {"text": "I won't bother writing\nit out right now.", "start": 360.04, "duration": 2.96}, {"text": "But it's basically\nsomething where", "start": 363.0, "duration": 2.92}, {"text": "you look at the value\nof d v. And if d v", "start": 365.92, "duration": 3.42}, {"text": "is greater than d u plus the\nweight, you relax the edge.", "start": 369.34, "duration": 4.94}, {"text": "And you keep doing this.", "start": 374.28, "duration": 3.07}, {"text": "The other thing that\nyou do in the relaxation", "start": 377.35, "duration": 2.9}, {"text": "is to set the predecessor\npointers to be correct.", "start": 380.25, "duration": 3.01}, {"text": "And that's part of\nthe relax routine.", "start": 383.26, "duration": 2.37}, {"text": "And you keep doing this until\nyou can't relax anymore.", "start": 385.63, "duration": 8.275}, {"text": "All right?", "start": 396.791, "duration": 0.499}, {"text": "So that's our generic\nshortest path algorithm.", "start": 397.29, "duration": 3.54}, {"text": "There are two problems\nwith this algorithm.", "start": 400.83, "duration": 4.22}, {"text": "The first, which we talked\nabout and both of these", "start": 405.05, "duration": 3.65}, {"text": "have to do with the\ncomplexity but the first one", "start": 408.7, "duration": 4.18}, {"text": "is that the complexity\ncould be exponential time,", "start": 412.88, "duration": 7.24}, {"text": "even for positive edge weights.", "start": 420.12, "duration": 1.72}, {"text": "And the particular\nexample we talked about", "start": 428.09, "duration": 2.36}, {"text": "was something where you had an\nexponential number of paths.", "start": 430.45, "duration": 6.45}, {"text": "And if you had a graph\nthat looks like this,", "start": 436.9, "duration": 4.47}, {"text": "then it's possible that a\npathological selection of edges", "start": 441.37, "duration": 4.58}, {"text": "is going to make you relax edges\nan exponential number of times.", "start": 445.95, "duration": 5.68}, {"text": "And in particular, if you\nhave n nodes in this graph,", "start": 451.63, "duration": 3.754}, {"text": "it's plausible that\nyou'd end up getting", "start": 455.384, "duration": 1.666}, {"text": "the complexity of order\n2 raised to n over 2.", "start": 457.05, "duration": 4.34}, {"text": "OK?", "start": 461.39, "duration": 0.97}, {"text": "So that's one problem.", "start": 462.36, "duration": 2.449}, {"text": "The second problem,\nwhich is actually", "start": 464.809, "duration": 1.541}, {"text": "a more obvious problem, is that\nthis algorithm might not even", "start": 466.35, "duration": 6.39}, {"text": "terminate if this--\nactually will not", "start": 472.74, "duration": 12.06}, {"text": "terminate the way it's written\nif there's a negative weight", "start": 484.8, "duration": 10.15}, {"text": "cycle reachable from the source.", "start": 494.95, "duration": 3.385}, {"text": "All right, so\nthere's two problems.", "start": 509.18, "duration": 2.2}, {"text": "We fixed the first one.", "start": 511.38, "duration": 2.34}, {"text": "In the case of positive\nedges are non-negative edges.", "start": 513.72, "duration": 4.829}, {"text": "We have a neat algorithm that\nis an efficient algorithm called", "start": 518.549, "duration": 3.051}, {"text": "Dijkstra that we talked\nabout last time that fixed", "start": 521.6, "duration": 2.39}, {"text": "the first part.", "start": 523.99, "duration": 1.21}, {"text": "But we don't know\nyet how we're going", "start": 525.2, "duration": 2.26}, {"text": "to handle negative cycles\nin the general case.", "start": 527.46, "duration": 3.911}, {"text": "We know how to\nhandle negative edges", "start": 531.371, "duration": 1.499}, {"text": "in the case of a DAG-- a\ndirected acyclic graph--", "start": 532.87, "duration": 2.78}, {"text": "but not in the general case.", "start": 535.65, "duration": 2.11}, {"text": "OK?", "start": 537.76, "duration": 0.5}, {"text": "So there's this great little\nskit from Saturday Night Live", "start": 541.93, "duration": 5.22}, {"text": "from the 1980s-- so way before\nyour time-- called The Five", "start": 547.15, "duration": 4.53}, {"text": "Minute University.", "start": 551.68, "duration": 1.45}, {"text": "Anybody seen this?", "start": 553.13, "duration": 1.97}, {"text": "All right.", "start": 555.1, "duration": 0.5}, {"text": "Look it up on YouTube.", "start": 555.6, "duration": 0.85}, {"text": "Don't look it up during\nlecture but afterwards.", "start": 556.45, "duration": 1.958}, {"text": "So the character\nhere is a person", "start": 560.92, "duration": 3.02}, {"text": "by the name of-- I\nforget his real name", "start": 563.94, "duration": 2.68}, {"text": "but his fake name is\nFather Guido Sarducci.", "start": 566.62, "duration": 3.58}, {"text": "All right?", "start": 570.2, "duration": 1.27}, {"text": "So what's this Five\nMinute University about?", "start": 571.47, "duration": 2.52}, {"text": "Five Minute University,\nhe's selling this notion", "start": 573.99, "duration": 3.95}, {"text": "and he says, look, five\nyears after you graduate", "start": 577.94, "duration": 4.1}, {"text": "you, essentially, are\ngoing to remember nothing.", "start": 582.04, "duration": 2.3}, {"text": "OK?", "start": 584.34, "duration": 0.57}, {"text": "I mean, you're not going\nto remember anything", "start": 584.91, "duration": 1.89}, {"text": "about all the courses\nyou took, et cetera.", "start": 586.8, "duration": 2.78}, {"text": "So why waste your time on a\ncollege education or waste", "start": 589.58, "duration": 4.01}, {"text": "money-- $100,000-- on\na college education?", "start": 593.59, "duration": 2.22}, {"text": "You know, for $20 I'll teach\nyou in five minutes what you're", "start": 595.81, "duration": 5.04}, {"text": "going to remember five\nyears after you graduate.", "start": 600.85, "duration": 3.47}, {"text": "All right?", "start": 604.32, "duration": 1.31}, {"text": "So let's take it to an extreme.", "start": 605.63, "duration": 2.33}, {"text": "Here's a 30 second\nversion up 6006.", "start": 607.96, "duration": 3.59}, {"text": "And this is what I want you to\nremember five years or 10 years", "start": 611.55, "duration": 4.15}, {"text": "or whatever after you graduate.", "start": 615.7, "duration": 1.48}, {"text": "All right?", "start": 617.18, "duration": 0.9}, {"text": "And maybe the 10 second version\nas polynomial time is great.", "start": 618.08, "duration": 5.14}, {"text": "OK?", "start": 623.22, "duration": 0.5}, {"text": "Exponential time is bad.", "start": 623.72, "duration": 2.08}, {"text": "And infinite time\ngets you fired.", "start": 625.8, "duration": 2.4}, {"text": "OK?", "start": 628.2, "duration": 1.52}, {"text": "So that's all you\nneed to remember.", "start": 629.72, "duration": 3.547}, {"text": "No, that's all you need\nto remember for the final.", "start": 633.267, "duration": 2.083}, {"text": "This happens, you know, five\nyears after you graduate.", "start": 635.35, "duration": 3.002}, {"text": "So you need to remember\na lot more if you", "start": 638.352, "duration": 1.708}, {"text": "want to take your quiz next\nweek and the final exam.", "start": 640.06, "duration": 2.79}, {"text": "But I think that\nsummarized over here.", "start": 642.85, "duration": 1.6}, {"text": "You have a generic\nshortest path algorithm.", "start": 644.45, "duration": 3.03}, {"text": "And you realize that\nif you do this wrong", "start": 647.48, "duration": 3.05}, {"text": "you could very easily\nget into a situation", "start": 650.53, "duration": 3.92}, {"text": "where a polynomial\ntime algorithm, and we", "start": 654.45, "duration": 1.77}, {"text": "know one for Dijkstra,\nturns into exponential time", "start": 656.22, "duration": 3.63}, {"text": "in the worst case, you\nknow, for a graph like that", "start": 659.85, "duration": 3.16}, {"text": "because you're\nselecting edges wrongly.", "start": 663.01, "duration": 2.88}, {"text": "And in particular, that's\nproblem number one.", "start": 665.89, "duration": 4.01}, {"text": "And problem number\ntwo is if you have", "start": 669.9, "duration": 3.28}, {"text": "a graph that isn't\nwhat you expect.", "start": 673.18, "duration": 3.07}, {"text": "In this case, let's say\nyou expected that a graph", "start": 676.25, "duration": 3.6}, {"text": "with no negative cycles or maybe\nnot even negative edges in it.", "start": 679.85, "duration": 3.45}, {"text": "You could easily\nget into a situation", "start": 683.3, "duration": 1.89}, {"text": "where your termination\ncondition is such", "start": 685.19, "duration": 1.73}, {"text": "that your algorithm\nnever completes.", "start": 686.92, "duration": 2.6}, {"text": "So we need to fix\nproblem number two today", "start": 689.52, "duration": 3.39}, {"text": "using this algorithm\ncalled Bellman-Ford.", "start": 692.91, "duration": 3.92}, {"text": "And as it turns\nout, this algorithm", "start": 696.83, "duration": 3.93}, {"text": "is incredibly straightforward.", "start": 700.76, "duration": 2.54}, {"text": "I mean, its complexity\nwe'll have to look at.", "start": 703.3, "duration": 2.34}, {"text": "But from a description\nstandpoint,", "start": 705.64, "duration": 2.21}, {"text": "it's four lines of code.", "start": 707.85, "duration": 2.59}, {"text": "And let me put that up.", "start": 710.44, "duration": 4.23}, {"text": "So Bellman-Ford takes a graph,\nweights, and a source s.", "start": 714.67, "duration": 9.6}, {"text": "And you can assume an adjacency\nlist specification of the graph", "start": 724.27, "duration": 8.72}, {"text": "or the representation\nof the graph.", "start": 732.99, "duration": 1.85}, {"text": "And we do some initialization.", "start": 734.84, "duration": 2.21}, {"text": "It's exactly the same\nas in the generic case", "start": 737.05, "duration": 3.28}, {"text": "except the d values will still\nbe looking at the d values", "start": 740.33, "duration": 3.42}, {"text": "and talking about the\nrelaxation operation.", "start": 743.75, "duration": 2.75}, {"text": "So we do an initialization.", "start": 746.5, "duration": 2.21}, {"text": "And then, this algorithm\nhas multiple passes", "start": 748.71, "duration": 4.5}, {"text": "because for I equals\n1 to v minus 1.", "start": 753.21, "duration": 4.91}, {"text": "So it does v minus 1 passes\nroughly order v passes", "start": 758.12, "duration": 4.53}, {"text": "where v is the\nnumber of vertices.", "start": 762.65, "duration": 2.39}, {"text": "And in each of these passes for\neach edge u v belonging to e", "start": 765.04, "duration": 8.37}, {"text": "relaxes every edge.", "start": 773.41, "duration": 1.29}, {"text": "And just so everyone remembers,\nrelax u, v, w is if d of v", "start": 782.85, "duration": 11.21}, {"text": "is greater than d of u plus w\nu v then we'll set d v to be--", "start": 794.06, "duration": 15.39}, {"text": "and we also set pi v to be u.", "start": 809.45, "duration": 2.75}, {"text": "OK.", "start": 815.11, "duration": 0.5}, {"text": "That's relax\noperation over here.", "start": 821.08, "duration": 4.65}, {"text": "So that's the algorithm.", "start": 825.73, "duration": 2.73}, {"text": "And if you know\nmagically that they're", "start": 828.46, "duration": 9.0}, {"text": "no negative cycles in the graph.", "start": 837.46, "duration": 4.38}, {"text": "So if they're no negative\ncycles in the graph,", "start": 841.84, "duration": 2.97}, {"text": "then after these-- we'll\nhave to prove this.", "start": 844.81, "duration": 2.55}, {"text": "But after these v\nminus 1 passes you're", "start": 847.36, "duration": 2.95}, {"text": "going to get the correct\nshortest pathways.", "start": 850.31, "duration": 2.421}, {"text": "OK?", "start": 852.731, "duration": 0.499}, {"text": "You want to do a\nlittle bit more, right?", "start": 855.76, "duration": 1.7}, {"text": "I motivated what we\nwant Bellman-Ford to do", "start": 857.46, "duration": 4.49}, {"text": "earlier in the lecture.", "start": 861.95, "duration": 1.75}, {"text": "So you can also do a check.", "start": 863.7, "duration": 2.31}, {"text": "So you may not know if they're\nnegative weight cycles or not.", "start": 866.01, "duration": 4.74}, {"text": "But at this point,\nyou can say I'm", "start": 870.75, "duration": 1.77}, {"text": "going to do one more pass\nso the v path-- the v", "start": 872.52, "duration": 4.67}, {"text": "is the number of\nvertices-- over the graph.", "start": 877.19, "duration": 4.25}, {"text": "So for each edge in the graph,\nif you do one more relaxation", "start": 881.44, "duration": 7.5}, {"text": "and you see that d v is\ngreater than d u plus w u v. So", "start": 888.94, "duration": 6.86}, {"text": "you're not doing a relaxation.", "start": 895.8, "duration": 1.25}, {"text": "You're doing a check to see\nif you can relax the edge.", "start": 897.05, "duration": 5.13}, {"text": "Then report minus v\nnegative cycle exists.", "start": 902.18, "duration": 9.68}, {"text": "So this is the check.", "start": 911.86, "duration": 4.07}, {"text": "And the first part\nis the computation.", "start": 915.93, "duration": 1.92}, {"text": "So that's kind of neat.", "start": 922.31, "duration": 0.98}, {"text": "I mean, it fit's on a board.", "start": 923.29, "duration": 3.43}, {"text": "We talk about the correctness.", "start": 926.72, "duration": 2.42}, {"text": "The functionality,\nI hope everyone got.", "start": 929.14, "duration": 1.945}, {"text": "Do people understand\nwhat's happening here", "start": 931.085, "duration": 2.766}, {"text": "with respect to functionality?", "start": 933.851, "duration": 1.249}, {"text": "Any questions?", "start": 935.1, "duration": 0.583}, {"text": "Not about correctness\nbut functionality?", "start": 937.489, "duration": 1.666}, {"text": "Yeah?", "start": 939.155, "duration": 0.5}, {"text": "AUDIENCE: Where\ndoes the [INAUDIBLE]", "start": 939.655, "duration": 1.559}, {"text": "get used in the formula?", "start": 941.214, "duration": 1.353}, {"text": "PROFESSOR: Oh, it doesn't.", "start": 942.567, "duration": 1.418}, {"text": "It's just a counter\nthat makes sure", "start": 946.78, "duration": 1.6}, {"text": "that you do v minus 1 passes.", "start": 948.38, "duration": 1.955}, {"text": "So what's that complexity\nof this algorithm", "start": 954.76, "duration": 2.93}, {"text": "using the best data structure\nthat we can think of?", "start": 957.69, "duration": 5.8}, {"text": "Anyone?", "start": 963.49, "duration": 0.5}, {"text": "Yeah, go ahead.", "start": 967.958, "duration": 0.992}, {"text": "AUDIENCE: [INAUDIBLE] v plus e\nif you're using a [INAUDIBLE]", "start": 968.95, "duration": 3.968}, {"text": "to access [INAUDIBLE]?", "start": 972.918, "duration": 1.469}, {"text": "PROFESSOR: v plus e?", "start": 974.387, "duration": 0.833}, {"text": "AUDIENCE: Or v e plus e.", "start": 975.22, "duration": 3.192}, {"text": "PROFESSOR: So that would be?", "start": 978.412, "duration": 2.22}, {"text": "AUDIENCE: That's\nusing a dictionary?", "start": 980.632, "duration": 1.663}, {"text": "PROFESSOR: Yeah, I know.\nv e plus e would be?", "start": 982.295, "duration": 1.875}, {"text": "That's correct but.", "start": 984.17, "duration": 1.034}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 985.204, "duration": 0.916}, {"text": "PROFESSOR: Right.", "start": 986.12, "duration": 0.708}, {"text": "But I mean when do v e plus\ne you can ignore the e.", "start": 986.828, "duration": 4.972}, {"text": "So say you have just v times e.", "start": 991.8, "duration": 4.95}, {"text": "All right.", "start": 996.75, "duration": 0.5}, {"text": "Good.", "start": 997.25, "duration": 0.33}, {"text": "Here you go.", "start": 997.58, "duration": 0.499}, {"text": "So this part here is v times e.", "start": 1001.19, "duration": 3.64}, {"text": "And it doesn't really matter.", "start": 1004.83, "duration": 1.66}, {"text": "I mean, you can use an array\nstructure adjacency list.", "start": 1006.49, "duration": 3.5}, {"text": "It's not like Dijkstra where\nwe have this neat requirement", "start": 1009.99, "duration": 4.152}, {"text": "for a priority queue and\nthere's different ways", "start": 1014.142, "duration": 1.958}, {"text": "of implementing\nthe priority queue.", "start": 1016.1, "duration": 2.74}, {"text": "This part would be order of v e.", "start": 1018.84, "duration": 3.44}, {"text": "And that gives you the\noverall complexity.", "start": 1022.28, "duration": 2.78}, {"text": "This part here is only one\npass through the edges.", "start": 1025.06, "duration": 2.58}, {"text": "So that's order\ne, like you said.", "start": 1027.64, "duration": 2.75}, {"text": "So the complexities order v e.", "start": 1030.39, "duration": 2.939}, {"text": "And this could be large, as\nI said before in, I think,", "start": 1033.329, "duration": 4.191}, {"text": "the first lecture.", "start": 1037.52, "duration": 1.41}, {"text": "e is order of v square\nin a simple graph.", "start": 1038.93, "duration": 7.78}, {"text": "So you might end up with\na v cubed complexity", "start": 1046.71, "duration": 2.53}, {"text": "if you run Bellman-Ford.", "start": 1049.24, "duration": 1.45}, {"text": "So there's no question\nthat Bellman-Ford", "start": 1050.69, "duration": 2.72}, {"text": "is, from a practical\nstandpoint, substantially slower", "start": 1053.41, "duration": 3.76}, {"text": "than Dijkstra.", "start": 1057.17, "duration": 1.71}, {"text": "You can get Dijkstra down\nto linear complexity.", "start": 1058.88, "duration": 7.58}, {"text": "But this would potentially,\nat least in terms of vertices,", "start": 1066.46, "duration": 2.59}, {"text": "be cubic complexity.", "start": 1069.05, "duration": 3.27}, {"text": "So when you have a chance,\nyou want to use Dijkstra.", "start": 1072.32, "duration": 2.659}, {"text": "And you're forced\nto use Bellman-Ford", "start": 1074.979, "duration": 1.541}, {"text": "because you could potentially\nhave negative weight", "start": 1076.52, "duration": 2.32}, {"text": "cycles while you're\nstuck with that.", "start": 1078.84, "duration": 2.26}, {"text": "All right?", "start": 1081.1, "duration": 2.0}, {"text": "OK, so why does this work?", "start": 1083.1, "duration": 1.67}, {"text": "This looks a bit like magic.", "start": 1084.77, "duration": 2.06}, {"text": "It turns out we can actually do\na fairly straightforward proof", "start": 1086.83, "duration": 5.43}, {"text": "of correctness of Bellman-Ford.", "start": 1092.26, "duration": 2.22}, {"text": "And we're going\nto do two things.", "start": 1094.48, "duration": 1.505}, {"text": "We're going to not only\nshow that if negative weight", "start": 1095.985, "duration": 3.865}, {"text": "cycles don't exist that\nthis will correctly", "start": 1099.85, "duration": 5.69}, {"text": "compute shorter stats.", "start": 1105.54, "duration": 2.18}, {"text": "But we also have to show that\nit will detect negative weight", "start": 1107.72, "duration": 3.76}, {"text": "cycles if they in fact exist.", "start": 1111.48, "duration": 2.42}, {"text": "So there's two parts to this.", "start": 1113.9, "duration": 1.77}, {"text": "And let's start.", "start": 1115.67, "duration": 0.975}, {"text": "So what we have here\nfor this algorithm", "start": 1119.48, "duration": 4.36}, {"text": "is that it can guarantee\nin a graph g equals", "start": 1123.84, "duration": 11.6}, {"text": "v E. If it contains no\nnegative weight cycles then", "start": 1135.44, "duration": 17.71}, {"text": "after Bellman-Ford\nfinishes execution,", "start": 1153.15, "duration": 8.7}, {"text": "d v equals delta s v for all\nv belonging to v. All right?", "start": 1161.85, "duration": 11.45}, {"text": "And then there's that.", "start": 1173.3, "duration": 2.16}, {"text": "That's the theorem\nyou want to prove.", "start": 1175.46, "duration": 1.83}, {"text": "And the second piece\nof it is corollary", "start": 1177.29, "duration": 6.94}, {"text": "that we want to prove.", "start": 1184.23, "duration": 1.98}, {"text": "And that has to\ndo with the check.", "start": 1186.21, "duration": 2.05}, {"text": "And this says if\na value of d of v", "start": 1188.26, "duration": 7.2}, {"text": "fails to converge\nafter v minus 1", "start": 1195.46, "duration": 10.07}, {"text": "passes there exists a negative\nweight cycle reachable from s.", "start": 1205.53, "duration": 11.886}, {"text": "So those are the two things\nthat we need to show.", "start": 1224.12, "duration": 5.28}, {"text": "I'll probably take a few\nminutes to do each of these.", "start": 1229.4, "duration": 2.27}, {"text": "That theorem is a\nlittle more involved.", "start": 1231.67, "duration": 2.7}, {"text": "So one of the first\nthings that we", "start": 1237.104, "duration": 1.416}, {"text": "have to do in order\nto prove this theorem", "start": 1238.52, "duration": 3.42}, {"text": "is to think about exactly what\nthe shortest path corresponds", "start": 1241.94, "duration": 8.94}, {"text": "to in a generic sense.", "start": 1250.88, "duration": 2.43}, {"text": "So when we have source\nvertex s and you have", "start": 1253.31, "duration": 5.59}, {"text": "a particular vertex\nv then there's", "start": 1258.9, "duration": 3.91}, {"text": "the picture that we need\nto keep in mind as we try", "start": 1262.81, "duration": 4.95}, {"text": "and prove this theorem.", "start": 1267.76, "duration": 2.02}, {"text": "So you have v0, v1, v2, et\ncetera all the way to vk.", "start": 1269.78, "duration": 8.45}, {"text": "This is my vertex v. This is s.", "start": 1278.23, "duration": 3.23}, {"text": "So s equals v0.", "start": 1281.46, "duration": 3.4}, {"text": "V equals vk.", "start": 1284.86, "duration": 1.29}, {"text": "All right?", "start": 1286.15, "duration": 0.72}, {"text": "So I'm going to have a path p.", "start": 1286.87, "duration": 3.1}, {"text": "That is v0, v1,\nall the way to vk.", "start": 1289.97, "duration": 5.5}, {"text": "OK?", "start": 1295.47, "duration": 0.5}, {"text": "How big is k in the worst case?", "start": 1300.81, "duration": 5.39}, {"text": "How big is k?", "start": 1306.2, "duration": 0.92}, {"text": "Anybody?", "start": 1310.94, "duration": 1.01}, {"text": "How big is k?", "start": 1311.95, "duration": 0.545}, {"text": "It's up on the black board.", "start": 1315.15, "duration": 1.385}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 1316.535, "duration": 1.655}, {"text": "PROFESSOR: v minus 1, right?", "start": 1318.19, "duration": 1.311}, {"text": "Why?", "start": 1319.501, "duration": 0.499}, {"text": "What would happen if k\nis larger than v minus 1?", "start": 1323.37, "duration": 5.15}, {"text": "I'd have a cycle.", "start": 1328.52, "duration": 1.03}, {"text": "I'd be visiting a\nvertex more than once.", "start": 1329.55, "duration": 2.23}, {"text": "And it wouldn't\nbe a simple path.", "start": 1331.78, "duration": 2.09}, {"text": "Right?", "start": 1333.87, "duration": 0.5}, {"text": "So k is less than or equal to v\nminus 1 else I'd have a cycle.", "start": 1337.3, "duration": 7.51}, {"text": "OK?", "start": 1344.81, "duration": 1.78}, {"text": "I wouldn't have a simple path.", "start": 1346.59, "duration": 2.04}, {"text": "And we're looking for the\nshortest, simple paths", "start": 1348.63, "duration": 2.89}, {"text": "because if you ever\nget to the point", "start": 1351.52, "duration": 1.63}, {"text": "where-- why are we looking\nfor shortest, simple paths?", "start": 1353.15, "duration": 2.32}, {"text": "Well, in this\ncase, we're looking", "start": 1355.47, "duration": 3.976}, {"text": "for shortest, simple paths.", "start": 1359.446, "duration": 1.124}, {"text": "And if there's a\nnegative cycle, we're", "start": 1360.57, "duration": 3.13}, {"text": "in trouble because the\nshortest path is not", "start": 1363.7, "duration": 3.2}, {"text": "necessarily the simple\npath because you", "start": 1366.9, "duration": 2.79}, {"text": "could go around the\ncycle a bunch of times.", "start": 1369.69, "duration": 3.04}, {"text": "I'll get back to that.", "start": 1372.73, "duration": 1.35}, {"text": "But in the case where we're\ntrying to prove the theorem,", "start": 1374.08, "duration": 4.6}, {"text": "we know that no\nnegative cycles exist.", "start": 1378.68, "duration": 2.129}, {"text": "We can assume that\nno negative cycles", "start": 1380.809, "duration": 1.541}, {"text": "exist for the case\nof the theorem.", "start": 1382.35, "duration": 1.71}, {"text": "And we want to show that\nBellman-Ford correctly", "start": 1384.06, "duration": 3.88}, {"text": "computes each of the\nshortest path weights.", "start": 1387.94, "duration": 3.29}, {"text": "And in that case, there's\nno negative weight cycles.", "start": 1391.23, "duration": 2.74}, {"text": "We're guaranteed that k is less\nthan or equal to v minus 1.", "start": 1393.97, "duration": 2.985}, {"text": "All right?", "start": 1396.955, "duration": 1.925}, {"text": "Everybody buy that?", "start": 1398.88, "duration": 2.31}, {"text": "Good.", "start": 1401.19, "duration": 0.69}, {"text": "All right.", "start": 1401.88, "duration": 0.5}, {"text": "So that's the picture I\nwant you keep in mind.", "start": 1402.38, "duration": 2.12}, {"text": "Let's dive in and\nprove this theorem.", "start": 1404.5, "duration": 5.975}, {"text": "And we prove it using induction.", "start": 1410.475, "duration": 2.655}, {"text": "So let v be any vertex.", "start": 1431.56, "duration": 3.27}, {"text": "And let's say that\nwe're looking at a path.", "start": 1434.83, "duration": 2.95}, {"text": "v0, v1, v2, to vk.", "start": 1437.78, "duration": 4.0}, {"text": "And like I said, from\nv0 equals s to vk", "start": 1441.78, "duration": 4.79}, {"text": "equals v. And in\nparticular, I'm not", "start": 1446.57, "duration": 7.7}, {"text": "going to say that this\npath p is a shortest", "start": 1454.27, "duration": 8.56}, {"text": "path with the minimum\nnumber of edges.", "start": 1462.83, "duration": 6.005}, {"text": "So there may be\nmany shortest paths.", "start": 1473.55, "duration": 2.22}, {"text": "And I'm going to\npick the one that", "start": 1475.77, "duration": 1.46}, {"text": "has the minimum number of edges.", "start": 1477.23, "duration": 1.81}, {"text": "If there's a unique shortest\npath, then that's a given.", "start": 1479.04, "duration": 2.98}, {"text": "But it may be that I have\na path with four edges that", "start": 1482.02, "duration": 4.56}, {"text": "has the same weight as\nanother path with three edges.", "start": 1486.58, "duration": 2.3}, {"text": "I'm going to pick the\none that has three edges.", "start": 1488.88, "duration": 2.51}, {"text": "OK?", "start": 1491.39, "duration": 0.5}, {"text": "So it may not be\nunique with respect", "start": 1491.89, "duration": 2.516}, {"text": "that they're not necessarily\nunique shortest paths.", "start": 1494.406, "duration": 2.124}, {"text": "But I can certainly pick one.", "start": 1496.53, "duration": 3.37}, {"text": "And no negative weight cycles\nimplies that p is simple.", "start": 1499.9, "duration": 7.47}, {"text": "And that implies that k is less\nthan or equal to v minus 1,", "start": 1510.39, "duration": 6.27}, {"text": "which is what I just argued.", "start": 1516.66, "duration": 2.81}, {"text": "Now keep in mind that picture\nover there to the right.", "start": 1519.47, "duration": 5.09}, {"text": "And basically, the argument\nis going to go as follows.", "start": 1524.56, "duration": 6.29}, {"text": "Remember that I'm\ngoing to be relaxing", "start": 1530.85, "duration": 2.4}, {"text": "every edge in each\npass of the algorithm.", "start": 1533.25, "duration": 5.06}, {"text": "OK?", "start": 1538.31, "duration": 0.81}, {"text": "There's no choices here.", "start": 1539.12, "duration": 3.33}, {"text": "I'm going be relaxing every edge\nin each pass of the algorithm.", "start": 1542.45, "duration": 3.04}, {"text": "And essentially, the\nproof goes as follows.", "start": 1545.49, "duration": 3.19}, {"text": "I'm going to be moving\ncloser and closer to vk", "start": 1548.68, "duration": 5.25}, {"text": "and constructing this\nshortest path at every pass.", "start": 1553.93, "duration": 6.24}, {"text": "So at some point\nin the first pass,", "start": 1560.17, "duration": 3.97}, {"text": "I'm going to relax\nthis edge v0, v1.", "start": 1564.14, "duration": 3.48}, {"text": "OK?", "start": 1567.62, "duration": 0.98}, {"text": "And at that point, thanks to the\noptimal substructure property,", "start": 1568.6, "duration": 6.04}, {"text": "given that this is\nthe shortest path,", "start": 1574.64, "duration": 2.16}, {"text": "this has to be a\nshortest path, as well.", "start": 1576.8, "duration": 2.58}, {"text": "Any subset of the shortest\npath has to be a shortest path.", "start": 1579.38, "duration": 3.5}, {"text": "I'm going to relax\nthis edge and I'm", "start": 1582.88, "duration": 2.27}, {"text": "going to get the value\nof delta from s to v1.", "start": 1585.15, "duration": 5.95}, {"text": "And it's going to be\nthis relaxation that's", "start": 1591.1, "duration": 2.33}, {"text": "going to get me that value.", "start": 1593.43, "duration": 1.431}, {"text": "And after the first pass, I'm\ngoing to be able to get to v1.", "start": 1594.861, "duration": 2.499}, {"text": "After the second\npass, I can get to v2.", "start": 1597.36, "duration": 2.06}, {"text": "And after k passes, I'm going\nto be able to get to vk.", "start": 1599.42, "duration": 2.8}, {"text": "So I'm just growing this\nfrontier one node every pass.", "start": 1602.22, "duration": 4.88}, {"text": "And that's your induction.", "start": 1607.1, "duration": 2.28}, {"text": "And you can write that out.", "start": 1609.38, "duration": 2.2}, {"text": "And I'll write it out here.", "start": 1611.58, "duration": 2.08}, {"text": "But that's basically it.", "start": 1613.66, "duration": 1.98}, {"text": "So after one pass through all\nof the edges e, we have d of v1", "start": 1615.64, "duration": 15.0}, {"text": "to be delta s v1.", "start": 1630.64, "duration": 1.92}, {"text": "And the reason for this\nis because we'll relax.", "start": 1635.89, "duration": 3.49}, {"text": "We're guaranteed to\nrelax all the edges.", "start": 1645.31, "duration": 1.99}, {"text": "And we'll relax the edge\nv0, v1 during this pass.", "start": 1647.3, "duration": 6.52}, {"text": "And we can't find a\nshorter path than this path", "start": 1656.54, "duration": 2.94}, {"text": "because, otherwise we'd violate\nthe optimum substructure", "start": 1659.48, "duration": 2.47}, {"text": "property.", "start": 1661.95, "duration": 2.05}, {"text": "And that means that\nit's a contradiction", "start": 1664.0, "duration": 3.27}, {"text": "that we selected a shortest\npath in the first place.", "start": 1667.27, "duration": 3.1}, {"text": "So can argue that we have delta\ns v1 after the first pass.", "start": 1670.37, "duration": 6.7}, {"text": "And this goes on.", "start": 1677.07, "duration": 1.176}, {"text": "I'm going to write\nout this proof", "start": 1678.246, "duration": 1.374}, {"text": "because I think it's\nimportant for you guys", "start": 1679.62, "duration": 1.97}, {"text": "to see the full proof.", "start": 1681.59, "duration": 4.75}, {"text": "But you can probably guess\nthe rest at this point.", "start": 1686.34, "duration": 2.26}, {"text": "After one pass,\nthat's what you get.", "start": 1696.78, "duration": 1.54}, {"text": "After two passes\nthrough e we have", "start": 1698.32, "duration": 7.62}, {"text": "d v2 equals delta s v2\nbecause in the second pass", "start": 1705.94, "duration": 7.77}, {"text": "we're going to\nrelax edge v1, v2.", "start": 1713.71, "duration": 4.79}, {"text": "So it' a different edge\nthat needs to be relaxed.", "start": 1726.949, "duration": 2.041}, {"text": "But that's cool because\nI'm relaxing all the edges.", "start": 1728.99, "duration": 2.41}, {"text": "And I'm going to be able\nto grow my frontier.", "start": 1731.4, "duration": 2.34}, {"text": "I'm going to be able to\ncompute delta s v2 and the end", "start": 1733.74, "duration": 3.28}, {"text": "of my second pass and\nso on and so forth.", "start": 1737.02, "duration": 3.8}, {"text": "So after k passes, we have\nd vk equals delta s vk.", "start": 1740.82, "duration": 12.63}, {"text": "And if I run through v\nminus 1 passes, which", "start": 1756.1, "duration": 10.22}, {"text": "is what I do in the algorithm,\nall reachable vertices", "start": 1766.32, "duration": 10.75}, {"text": "have delta values.", "start": 1777.07, "duration": 1.5}, {"text": "All right?", "start": 1781.41, "duration": 0.5}, {"text": "That's basically it.", "start": 1781.91, "duration": 2.322}, {"text": "Any questions?", "start": 1784.232, "duration": 0.583}, {"text": "It's actually a simpler proof\nthan the Dijkstra proof,", "start": 1791.22, "duration": 4.49}, {"text": "which I just sketched last time.", "start": 1795.71, "duration": 1.745}, {"text": "I'll just give\nyou some intuition", "start": 1797.455, "duration": 1.375}, {"text": "of the Dijkstra proof.", "start": 1798.83, "duration": 1.02}, {"text": "It's probably a little too\npainful to do in a lecture.", "start": 1799.85, "duration": 4.74}, {"text": "But this one is, as you can\nsee, nice and clean and fits", "start": 1804.59, "duration": 5.07}, {"text": "on two boards, which is kind\nof an important criterion here.", "start": 1809.66, "duration": 4.96}, {"text": "So good.", "start": 1814.62, "duration": 1.75}, {"text": "All right, so that takes\ncare of the theorem.", "start": 1816.37, "duration": 3.57}, {"text": "Hopefully you're all on\nboard with the theorem.", "start": 1819.94, "duration": 2.0}, {"text": "And one thing that we haven't\ndone is talk about the check.", "start": 1821.94, "duration": 4.29}, {"text": "So the argument with\nrespect to the corollary", "start": 1826.23, "duration": 4.95}, {"text": "bootstraps this particular\nargument for the theorem.", "start": 1831.18, "duration": 5.31}, {"text": "But this requires the\ninsight that if after v", "start": 1836.49, "duration": 7.62}, {"text": "minus 1 passes, if you can find\nan edge that can be relaxed,", "start": 1844.11, "duration": 5.68}, {"text": "well what does that mean?", "start": 1849.79, "duration": 1.19}, {"text": "So at this point, let's say that\nI've done my v minus 1 passes", "start": 1863.494, "duration": 7.786}, {"text": "and we find an edge\nthat can be relaxed.", "start": 1871.28, "duration": 8.445}, {"text": "Well, this means that the\ncurrent shortest path from s", "start": 1883.31, "duration": 15.9}, {"text": "to some vertex that is\nobviously reachable v", "start": 1899.21, "duration": 7.99}, {"text": "is not simple once I've\nrelaxed this edge because I", "start": 1907.2, "duration": 9.17}, {"text": "have a repeated vertex.", "start": 1916.37, "duration": 4.916}, {"text": "So that means it's not simple\nto have a repeated vertex that's", "start": 1928.0, "duration": 3.16}, {"text": "the same as I found a cycle.", "start": 1931.16, "duration": 1.98}, {"text": "And it's a negative\nweight cycle because I", "start": 1937.04, "duration": 2.9}, {"text": "was able to relax the edge\nand reduce the weight after I", "start": 1939.94, "duration": 4.86}, {"text": "added a vertex\nthat cost a cycle.", "start": 1944.8, "duration": 3.321}, {"text": "All right?", "start": 1948.121, "duration": 0.499}, {"text": "So this cycle has to\nbe negative weight.", "start": 1948.62, "duration": 3.617}, {"text": "Found a cycle that\nis negative weight.", "start": 1952.237, "duration": 1.583}, {"text": "All right.", "start": 1959.93, "duration": 0.864}, {"text": "That's pretty much it.", "start": 1960.794, "duration": 0.916}, {"text": "So it's, I guess,\na painful algorithm", "start": 1966.2, "duration": 3.72}, {"text": "from a standpoint of it's\nnot particularly smart.", "start": 1969.92, "duration": 2.86}, {"text": "It's just relaxing\nall of the edges", "start": 1972.78, "duration": 1.56}, {"text": "a certain fixed number of times.", "start": 1974.34, "duration": 2.22}, {"text": "And it just works out because\nyou will find these cycles.", "start": 1976.56, "duration": 6.38}, {"text": "And if you keep going, it's\nlike this termination condition.", "start": 1982.94, "duration": 3.362}, {"text": "What is neat is that I don't\nhave the generic shortest path", "start": 1986.302, "duration": 2.458}, {"text": "algorithm up there anymore.", "start": 1988.76, "duration": 1.69}, {"text": "But in effect,\nwhat you're saying", "start": 1990.45, "duration": 1.7}, {"text": "is after a certain\nnumber of passes,", "start": 1992.15, "duration": 2.61}, {"text": "if you haven't\nfinished, you can quit", "start": 1994.76, "duration": 1.99}, {"text": "because you have found\na negative cycle.", "start": 1996.75, "duration": 2.85}, {"text": "So it's very similar to\nthe generic shortest path", "start": 1999.6, "duration": 3.11}, {"text": "algorithm.", "start": 2002.71, "duration": 1.28}, {"text": "You're not really\nselecting the edges.", "start": 2003.99, "duration": 1.61}, {"text": "You're selecting all\nof them, in this case.", "start": 2005.6, "duration": 2.48}, {"text": "And you're running through\na bunch of different passes.", "start": 2008.08, "duration": 3.23}, {"text": "All right?", "start": 2011.31, "duration": 2.95}, {"text": "So that's it with\nrespect to Bellman-Ford.", "start": 2014.26, "duration": 2.51}, {"text": "I want to do a couple\nof special cases", "start": 2016.77, "duration": 2.03}, {"text": "and revisit the\ndirected acyclic graph.", "start": 2018.8, "duration": 2.94}, {"text": "But stop me here if you have any\nquestions about Bellman-Ford.", "start": 2021.74, "duration": 3.6}, {"text": "You first and then back there.", "start": 2028.27, "duration": 1.719}, {"text": "Yeah?", "start": 2029.989, "duration": 0.5}, {"text": "AUDIENCE: Maybe\nI'm just confused", "start": 2030.489, "duration": 1.643}, {"text": "about the definition of a cycle.", "start": 2032.132, "duration": 2.617}, {"text": "But if you had, like, a tree,\nwhich had a negative weight", "start": 2034.749, "duration": 2.374}, {"text": "edge, wouldn't it produce\nthe same situation", "start": 2037.123, "duration": 1.833}, {"text": "where you relaxed that edge.", "start": 2038.956, "duration": 2.404}, {"text": "PROFESSOR: But you would have\nrelaxed that edge previously.", "start": 2041.36, "duration": 2.48}, {"text": "AUDIENCE: But it wouldn't\nbe a cycle, right?", "start": 2043.84, "duration": 0.97}, {"text": "PROFESSOR: Yeah, it\nwouldn't be a cycle.", "start": 2044.81, "duration": 1.94}, {"text": "So let's look at that.", "start": 2046.75, "duration": 0.916}, {"text": "That's a fine question.", "start": 2047.666, "duration": 1.128}, {"text": "AUDIENCE: Doesn't\nthat make assumptions", "start": 2048.794, "duration": 1.624}, {"text": "about this structure?", "start": 2050.418, "duration": 2.111}, {"text": "PROFESSOR: Well if you\nhad a tree-- I mean,", "start": 2052.529, "duration": 2.71}, {"text": "a tree is a really simple case.", "start": 2055.239, "duration": 1.67}, {"text": "But if you had\nsomething like this", "start": 2056.909, "duration": 3.431}, {"text": "and if you did have\na minus 1 edge here,", "start": 2060.34, "duration": 5.27}, {"text": "right-- we'll do a more\ncomplicated example.", "start": 2065.61, "duration": 2.16}, {"text": "But let's say you had\nsomething like this.", "start": 2067.77, "duration": 1.75}, {"text": "2 3 minus 1.", "start": 2069.52, "duration": 1.659}, {"text": "And what will happen is if this\nhappens to be your s vertex", "start": 2071.179, "duration": 3.891}, {"text": "and in the first step\nyou relax all the edges.", "start": 2075.07, "duration": 3.879}, {"text": "And this one would get two.", "start": 2078.949, "duration": 2.581}, {"text": "And then, depending on the\norder in which you relaxed,", "start": 2081.53, "duration": 3.85}, {"text": "it's quite possible that if\nyou relax this edge first--", "start": 2085.38, "duration": 4.819}, {"text": "let's say in the first pass\nthe ordering of the relaxation", "start": 2090.199, "duration": 5.871}, {"text": "is 1, 2, and 3.", "start": 2096.07, "duration": 3.5}, {"text": "So the edges are ordered\nin a certain way each time,", "start": 2099.57, "duration": 3.364}, {"text": "and you're going to be\nrelaxing the edges in exactly", "start": 2102.934, "duration": 2.166}, {"text": "the same order each time.", "start": 2105.1, "duration": 1.89}, {"text": "All right?", "start": 2106.99, "duration": 0.95}, {"text": "It doesn't matter.", "start": 2107.94, "duration": 0.889}, {"text": "The beauty of Bellman-Ford\nis that-- let's say", "start": 2108.829, "duration": 1.916}, {"text": "you relax this edge.", "start": 2110.745, "duration": 1.205}, {"text": "Initially, this is at infinity.", "start": 2111.95, "duration": 2.06}, {"text": "So this is at 0.", "start": 2114.01, "duration": 1.11}, {"text": "This is at infinity.", "start": 2115.12, "duration": 0.91}, {"text": "This is at infinity.", "start": 2116.03, "duration": 0.9}, {"text": "This is at infinity.", "start": 2116.93, "duration": 1.87}, {"text": "If you relax this\nedge, nothing happens.", "start": 2118.8, "duration": 2.62}, {"text": "All right?", "start": 2121.42, "duration": 1.5}, {"text": "Then you relax, let's say, this\nedge because that's number two.", "start": 2122.92, "duration": 2.91}, {"text": "This gets set to two.", "start": 2125.83, "duration": 1.99}, {"text": "You relax this edge\nbecause that's 3.", "start": 2127.82, "duration": 2.37}, {"text": "And this is infinity\nso nothing happens.", "start": 2130.19, "duration": 1.72}, {"text": "Of course, this is already at\ntwo so nothing would happen.", "start": 2131.91, "duration": 2.57}, {"text": "So the end of the first pass,\nwhat you have is this is 0.", "start": 2134.48, "duration": 3.94}, {"text": "That's 2.", "start": 2138.42, "duration": 0.91}, {"text": "This is still infinity.", "start": 2139.33, "duration": 1.73}, {"text": "That's still infinity.", "start": 2141.06, "duration": 1.71}, {"text": "OK?", "start": 2142.77, "duration": 0.5}, {"text": "That's going to stay infinity\nbecause you can't reach it", "start": 2143.27, "duration": 2.333}, {"text": "from s.", "start": 2145.603, "duration": 0.577}, {"text": "So we can, sort of, ignore that.", "start": 2146.18, "duration": 1.62}, {"text": "And then, of the second\npass, what you have is", "start": 2147.8, "duration": 3.42}, {"text": "you start with this edge again\nbecause that's the ordering.", "start": 2151.22, "duration": 4.2}, {"text": "And this 2 minus 1\nwould give this a 1.", "start": 2155.42, "duration": 5.82}, {"text": "And then you relax this edge\nor try to relax this edge.", "start": 2161.24, "duration": 3.48}, {"text": "Nothing happens.", "start": 2164.72, "duration": 1.342}, {"text": "Try to relax this edge.", "start": 2166.062, "duration": 0.958}, {"text": "Nothing happens.", "start": 2167.02, "duration": 1.44}, {"text": "And at this point,\nyou have one more pass", "start": 2168.46, "duration": 1.86}, {"text": "to go because you\ngot 4 vertices.", "start": 2170.32, "duration": 1.79}, {"text": "And in that past,\nnothing changes again.", "start": 2172.11, "duration": 3.419}, {"text": "So that's what you end up with.", "start": 2175.529, "duration": 1.291}, {"text": "You end up with 2 for\nthis and 1 for that.", "start": 2176.82, "duration": 4.18}, {"text": "OK?", "start": 2181.0, "duration": 1.26}, {"text": "That makes sense?", "start": 2182.26, "duration": 2.94}, {"text": "So the important\nthing to understand", "start": 2185.2, "duration": 2.13}, {"text": "is that you are\nactually relaxing", "start": 2187.33, "duration": 1.65}, {"text": "all of the edges in every pass.", "start": 2188.98, "duration": 2.892}, {"text": "And there's a slightly\nmore complicated example", "start": 2191.872, "duration": 1.958}, {"text": "than this that is in the notes.", "start": 2193.83, "duration": 2.08}, {"text": "And you can take a\nlook at that offline.", "start": 2195.91, "duration": 2.3}, {"text": "There's another\nquestion in the back.", "start": 2198.21, "duration": 1.91}, {"text": "Did you have a question?", "start": 2200.12, "duration": 1.93}, {"text": "Someone raised their hand.", "start": 2202.05, "duration": 1.28}, {"text": "Yeah?", "start": 2203.33, "duration": 0.19}, {"text": "AUDIENCE: Yes,\nI'm just curious--", "start": 2203.52, "duration": 1.479}, {"text": "is there a unknown\nbetter algorithm that", "start": 2204.999, "duration": 2.629}, {"text": "can do the same thing?", "start": 2207.628, "duration": 1.722}, {"text": "PROFESSOR: No, there's\nno known better algorithm", "start": 2209.35, "duration": 2.0}, {"text": "for solving the\ngeneral case like this.", "start": 2211.35, "duration": 2.32}, {"text": "There are a couple of\nalgorithms that assume weights", "start": 2213.67, "duration": 5.49}, {"text": "within a certain range.", "start": 2219.16, "duration": 1.24}, {"text": "And then there complexities\ninclude both v and e, as well", "start": 2220.4, "duration": 3.73}, {"text": "as w where w is the dynamic\nrange of the weights.", "start": 2224.13, "duration": 4.12}, {"text": "And depending on\nwhat w is, you could", "start": 2228.25, "duration": 3.875}, {"text": "argue that they have\nbetter complexity.", "start": 2232.125, "duration": 1.625}, {"text": "But they're kind of\nincomparable in the sense", "start": 2233.75, "duration": 2.05}, {"text": "that they have this\nextra parameter, which", "start": 2235.8, "duration": 1.87}, {"text": "is the dynamic range of the w.", "start": 2237.67, "duration": 1.249}, {"text": "OK?", "start": 2238.919, "duration": 1.731}, {"text": "Now there's lots\nof special cases,", "start": 2240.65, "duration": 1.78}, {"text": "like I said, and well take a\nlook at the DAG special case", "start": 2242.43, "duration": 2.72}, {"text": "in a second where you\ncould imagine doing better", "start": 2245.15, "duration": 3.34}, {"text": "but not for the case where you\nhave an arbitrary graph that", "start": 2248.49, "duration": 3.55}, {"text": "could have negative cycles in it\nbecause it's got negative rate", "start": 2252.04, "duration": 2.78}, {"text": "edges.", "start": 2254.82, "duration": 2.13}, {"text": "Yeah?", "start": 2256.95, "duration": 0.797}, {"text": "AUDIENCE: In the\ncorollary, does that assume", "start": 2257.747, "duration": 1.833}, {"text": "you have a connected\ngraph because, you know,", "start": 2259.58, "duration": 2.461}, {"text": "you could have a\nnegative weight edge", "start": 2262.041, "duration": 2.406}, {"text": "in a separate part\nof the graph, which", "start": 2264.447, "duration": 2.711}, {"text": "isn't reachable from this.", "start": 2267.158, "duration": 1.488}, {"text": "PROFESSOR: Yeah.", "start": 2271.622, "duration": 0.918}, {"text": "So you're going to start when\nyou have an undefined weight.", "start": 2272.54, "duration": 10.88}, {"text": "Remember your\ninitialization condition.", "start": 2283.42, "duration": 2.76}, {"text": "What is affected by s?", "start": 2286.18, "duration": 2.11}, {"text": "Initialize is affected by s.", "start": 2288.29, "duration": 2.47}, {"text": "The rest of it\nisn't affected by s", "start": 2290.76, "duration": 1.69}, {"text": "because you're just\nrelaxing the edges.", "start": 2292.45, "duration": 2.36}, {"text": "Initialize is affected\nby s because d of s", "start": 2294.81, "duration": 2.5}, {"text": "starts out being 0, like I put\nover here, and the rest of them", "start": 2297.31, "duration": 3.43}, {"text": "are infinity.", "start": 2300.74, "duration": 2.17}, {"text": "So there is an effect of the\nchoice of the starting vertex.", "start": 2302.91, "duration": 3.59}, {"text": "And the rest of it\nfollows that you", "start": 2306.5, "duration": 3.74}, {"text": "will get an undefined\nvalue, or you", "start": 2310.24, "duration": 3.58}, {"text": "will find that\nnegative cycle exists", "start": 2313.82, "duration": 3.4}, {"text": "based on whether you can\nreach it from s or not.", "start": 2317.22, "duration": 2.28}, {"text": "So if you happen to\nhave s over here,", "start": 2319.5, "duration": 3.3}, {"text": "and it's just the\none node, and then", "start": 2322.8, "duration": 2.29}, {"text": "it has no edges going\nout of it, this algorithm", "start": 2325.09, "duration": 4.78}, {"text": "would just be trivial.", "start": 2329.87, "duration": 1.79}, {"text": "But it wouldn't detect\nany negative cycles", "start": 2331.66, "duration": 2.41}, {"text": "that aren't reachable from s.", "start": 2334.07, "duration": 1.89}, {"text": "That make sense?", "start": 2335.96, "duration": 0.765}, {"text": "AUDIENCE: Yeah.", "start": 2336.725, "duration": 1.875}, {"text": "PROFESSOR: So there is this--\nit's kind of hidden over there.", "start": 2338.6, "duration": 2.81}, {"text": "So I'm glad you\nasked that question.", "start": 2341.41, "duration": 1.51}, {"text": "But initialize is\nsetting things up.", "start": 2342.92, "duration": 2.49}, {"text": "And that is something\nthat affects", "start": 2345.41, "duration": 2.65}, {"text": "the rest of the algorithm\nbecause d of s is 0", "start": 2348.06, "duration": 2.13}, {"text": "and the rest of them\nare set to infinity.", "start": 2350.19, "duration": 2.22}, {"text": "All right?", "start": 2352.41, "duration": 2.13}, {"text": "So if there are no\nother questions,", "start": 2354.54, "duration": 4.79}, {"text": "I'll move on to\nthe case of the DAG", "start": 2359.33, "duration": 2.54}, {"text": "and talk a little bit about\nshortest paths versus longest", "start": 2361.87, "duration": 2.88}, {"text": "paths.", "start": 2364.75, "duration": 1.06}, {"text": "And this is somewhat of\na preview of a lecture", "start": 2365.81, "duration": 2.9}, {"text": "that Eric is going to give a\nmonth from now on complexity", "start": 2368.71, "duration": 5.3}, {"text": "and the difference between\npolynomial time and exponential", "start": 2374.01, "duration": 2.8}, {"text": "time, though I'm not going\nto go into much depth here.", "start": 2376.81, "duration": 3.1}, {"text": "But there's some\ninteresting relationships", "start": 2379.91, "duration": 2.72}, {"text": "between the shortest path\nproblem and the longest path", "start": 2382.63, "duration": 4.32}, {"text": "problem that I'd like to get to.", "start": 2386.95, "duration": 2.45}, {"text": "But any other questions on this?", "start": 2389.4, "duration": 4.74}, {"text": "OK, so let me ask a question.", "start": 2394.14, "duration": 1.61}, {"text": "Suppose I wanted to find\nlongest paths in a graph", "start": 2398.94, "duration": 5.33}, {"text": "and let's say that this graph\nhad all positive edge weights.", "start": 2404.27, "duration": 5.69}, {"text": "OK.", "start": 2409.96, "duration": 2.28}, {"text": "What if I negated all\nof the edge weights", "start": 2412.24, "duration": 5.08}, {"text": "and ran a Bellman-Ford?", "start": 2417.32, "duration": 2.52}, {"text": "Would I find the longest\npath in the graph?", "start": 2423.11, "duration": 3.82}, {"text": "Do people understand\nthe question?", "start": 2429.174, "duration": 1.416}, {"text": "I don't need this.", "start": 2435.23, "duration": 0.75}, {"text": "So maybe we can talk about what\na longest path means first.", "start": 2445.5, "duration": 3.31}, {"text": "So if this was s and this v1,\nv2, v3, fairly straightforward,", "start": 2457.15, "duration": 6.03}, {"text": "you know how to compute\nshortest paths now.", "start": 2463.18, "duration": 2.52}, {"text": "These are all positive.", "start": 2465.7, "duration": 1.2}, {"text": "Even easier.", "start": 2466.9, "duration": 1.55}, {"text": "The longest path\nto v3 is of length.", "start": 2468.45, "duration": 4.67}, {"text": "Six because I go here, go\nthere, and go there, right?", "start": 2473.12, "duration": 3.06}, {"text": "So that's my longest path.", "start": 2476.18, "duration": 1.87}, {"text": "OK?", "start": 2478.05, "duration": 2.39}, {"text": "And the shortest path\nto v3 is of length 4.", "start": 2480.44, "duration": 3.49}, {"text": "So shortest path, longest\npaths, have these nice duality.", "start": 2483.93, "duration": 5.15}, {"text": "What if I said,\nwell, you know, I", "start": 2489.08, "duration": 3.456}, {"text": "can solve the longest\npath problem, as well,", "start": 2492.536, "duration": 2.094}, {"text": "given all of what I've\nlearned about shortest paths", "start": 2494.63, "duration": 2.81}, {"text": "simply by negating each of these\nedges and running Bellman-Ford.", "start": 2497.44, "duration": 12.31}, {"text": "What would happen?", "start": 2509.75, "duration": 2.52}, {"text": "Yeah?", "start": 2512.27, "duration": 0.5}, {"text": "AUDIENCE: [INAUDIBLE] shortest\npath branch [INAUDIBLE]", "start": 2512.77, "duration": 6.474}, {"text": "values, and if you\nswitched to absolute value,", "start": 2519.244, "duration": 3.486}, {"text": "it will give you\nthe longest path.", "start": 2522.73, "duration": 2.49}, {"text": "PROFESSOR: So you\nthink it works?", "start": 2525.22, "duration": 1.472}, {"text": "AUDIENCE: Yeah.", "start": 2526.692, "duration": 0.625}, {"text": "It will also check the cycles.", "start": 2527.317, "duration": 2.118}, {"text": "So the negative cycles will be\nthe longest path cycles that", "start": 2529.435, "duration": 3.325}, {"text": "[INAUDIBLE].", "start": 2532.76, "duration": 0.95}, {"text": "PROFESSOR: But I think\nthat's the key question.", "start": 2533.71, "duration": 3.13}, {"text": "What will Bellman-Ford do\nwhen it is run on this?", "start": 2536.84, "duration": 2.71}, {"text": "What would it return?", "start": 2539.55, "duration": 2.942}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 2542.492, "duration": 1.953}, {"text": "PROFESSOR: No, what will\nBellman-Ford return?", "start": 2544.445, "duration": 1.875}, {"text": "I'm asking.", "start": 2546.32, "duration": 2.07}, {"text": "Someone else?", "start": 2548.39, "duration": 2.61}, {"text": "What will Bellman-Ford\nreturn if I ran this?", "start": 2551.0, "duration": 2.83}, {"text": "Undefined.", "start": 2553.83, "duration": 1.01}, {"text": "Right?", "start": 2554.84, "duration": 1.07}, {"text": "Undefined because you got this\nnegative weight cycle here.", "start": 2555.91, "duration": 3.664}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 2559.574, "duration": 0.916}, {"text": "PROFESSOR: Sorry?", "start": 2560.49, "duration": 1.05}, {"text": "Oh!", "start": 2561.54, "duration": 1.88}, {"text": "Let's put another one in there.", "start": 2563.42, "duration": 2.5}, {"text": "Oops, sorry.", "start": 2565.92, "duration": 1.19}, {"text": "Now I see.", "start": 2567.11, "duration": 0.5}, {"text": "You're right.", "start": 2567.61, "duration": 0.541}, {"text": "You're right.", "start": 2568.151, "duration": 0.919}, {"text": "I'm wrong.", "start": 2569.07, "duration": 0.791}, {"text": "And why did you say undefined?", "start": 2569.861, "duration": 1.249}, {"text": "AUDIENCE: I was wrong.", "start": 2571.11, "duration": 1.485}, {"text": "PROFESSOR: OK, good.", "start": 2572.595, "duration": 1.485}, {"text": "I got company.", "start": 2574.08, "duration": 1.48}, {"text": "Thank you.", "start": 2575.56, "duration": 0.5}, {"text": "Thank you.", "start": 2576.06, "duration": 1.96}, {"text": "Good.", "start": 2578.02, "duration": 0.5}, {"text": "Let's take it all over again.", "start": 2578.52, "duration": 2.5}, {"text": "All over again.", "start": 2581.02, "duration": 0.891}, {"text": "All right.", "start": 2581.911, "duration": 0.499}, {"text": "All right, start over.", "start": 2590.57, "duration": 1.93}, {"text": "s v1 v2 v3.", "start": 2592.5, "duration": 3.49}, {"text": "Yeah, that is a cycle.", "start": 2598.95, "duration": 1.68}, {"text": "All right, good.", "start": 2600.63, "duration": 2.831}, {"text": "Cycle.", "start": 2603.461, "duration": 0.499}, {"text": "So when you actually\nnegate each of these edges,", "start": 2607.64, "duration": 5.94}, {"text": "you end up with a\nnegative weight cycle.", "start": 2613.58, "duration": 3.69}, {"text": "So it's plausible that you\ncould have a graph like this one", "start": 2617.27, "duration": 2.98}, {"text": "where this strategy won't\nwork because what would happen", "start": 2620.25, "duration": 4.55}, {"text": "is Bellman-Ford would come back\nwith, essentially, an abort", "start": 2624.8, "duration": 5.71}, {"text": "that says I can't compute\nshortest paths because they're", "start": 2630.51, "duration": 2.65}, {"text": "undefined.", "start": 2633.16, "duration": 1.34}, {"text": "All right?", "start": 2634.5, "duration": 0.69}, {"text": "Now it turns out it's actually\nmore subtle than that.", "start": 2635.19, "duration": 4.87}, {"text": "What we're trying to do in\nBellman-Ford is, in the case", "start": 2640.06, "duration": 4.28}, {"text": "where negative weight\ncycles don't exist,", "start": 2644.34, "duration": 7.43}, {"text": "we report on the\nshortest simple path.", "start": 2651.77, "duration": 3.58}, {"text": "That's the whole\nnotion of the proof.", "start": 2658.87, "duration": 1.99}, {"text": "We say that the path has\na certain length, which", "start": 2660.86, "duration": 2.6}, {"text": "is, at most, v minus 1\nand so on and so forth.", "start": 2663.46, "duration": 3.83}, {"text": "We get the shortest simple path.", "start": 2667.29, "duration": 1.51}, {"text": "But if you actually have a\nproblem where you say-- let", "start": 2674.62, "duration": 13.69}, {"text": "me start over again.", "start": 2688.31, "duration": 1.0}, {"text": "Let's say I want to find\nthe shortest simple path", "start": 2689.31, "duration": 2.78}, {"text": "for a different\ngraph and it happens", "start": 2692.09, "duration": 4.29}, {"text": "to have a negative\nweight cycle in it.", "start": 2696.38, "duration": 4.9}, {"text": "So I have something like this.", "start": 2701.28, "duration": 1.35}, {"text": "2 3 minus 6, 3 over here,\n3 over here, and so on.", "start": 2702.63, "duration": 7.61}, {"text": "Maybe 2 here.", "start": 2710.24, "duration": 1.51}, {"text": "And I want to find the\nshortest simple path that", "start": 2711.75, "duration": 7.68}, {"text": "reaches v from s.", "start": 2719.43, "duration": 3.82}, {"text": "OK?", "start": 2723.25, "duration": 0.86}, {"text": "What is the shortest simple\npath that reaches v from s?", "start": 2724.11, "duration": 3.56}, {"text": "It's this path that\ngoes horizontally,", "start": 2727.67, "duration": 2.22}, {"text": "which has a weight\n3 plus 2, 5, 5", "start": 2729.89, "duration": 2.93}, {"text": "plus 3, 8, 8 plus 3,\n11, 11 plus 2, 13.", "start": 2732.82, "duration": 5.65}, {"text": "All right?", "start": 2738.47, "duration": 0.77}, {"text": "So the shortest\nsimple path is 13.", "start": 2739.24, "duration": 9.34}, {"text": "Will Bellman-Ford give you any\ninformation about this path?", "start": 2748.58, "duration": 3.515}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 2754.594, "duration": 0.916}, {"text": "PROFESSOR: No because\nin [INAUDIBLE].", "start": 2755.51, "duration": 2.4}, {"text": "After it does its v minus 1\npasses, v is reachable from s.", "start": 2757.91, "duration": 8.29}, {"text": "But you potentially go through\na negative weight cycle", "start": 2766.2, "duration": 5.28}, {"text": "before you reach v. OK?", "start": 2771.48, "duration": 3.22}, {"text": "So it turns out that if you have\na graph with negative weight", "start": 2774.7, "duration": 3.85}, {"text": "cycles, finding the\nshortest simple path", "start": 2778.55, "duration": 3.92}, {"text": "is an NP-hard problem.", "start": 2782.47, "duration": 2.05}, {"text": "It's a really hard problem.", "start": 2784.52, "duration": 1.72}, {"text": "That's what NP means.", "start": 2786.24, "duration": 1.44}, {"text": "No, it means something\nelse that Eric", "start": 2787.68, "duration": 2.74}, {"text": "will explain to you\nin a month or so.", "start": 2790.42, "duration": 3.13}, {"text": "But it means that we don't\nknow any algorithm that", "start": 2793.55, "duration": 3.05}, {"text": "is better than exponential\ntime to solve this problem.", "start": 2796.6, "duration": 3.9}, {"text": "OK?", "start": 2800.5, "duration": 1.64}, {"text": "So amazingly, all you've done is\ntaken the shortest path problem", "start": 2802.14, "duration": 6.48}, {"text": "and changed it ever so slightly.", "start": 2808.62, "duration": 2.55}, {"text": "You said I want to look for\nthe shortest simple path", "start": 2811.17, "duration": 2.44}, {"text": "in the general case where\nI could, potentially,", "start": 2813.61, "duration": 3.36}, {"text": "have negative weight\ncycles in my graph.", "start": 2816.97, "duration": 3.8}, {"text": "And when you do that,\nall bets are off.", "start": 2820.77, "duration": 2.6}, {"text": "You're not in the polynomial\ntime complexity domain anymore.", "start": 2823.37, "duration": 3.1}, {"text": "At least, not that we know of.", "start": 2826.47, "duration": 2.16}, {"text": "And the best that you can do is\nan exponential time algorithm", "start": 2828.63, "duration": 4.415}, {"text": "to find shorter simple paths.", "start": 2833.045, "duration": 2.385}, {"text": "And this problem,\nas it turns out,", "start": 2835.43, "duration": 1.94}, {"text": "is equivalent to the longest\npath problem in the sense", "start": 2837.37, "duration": 7.48}, {"text": "that they're both NP-hard.", "start": 2844.85, "duration": 1.85}, {"text": "If you can solve one, you\ncould solve the other.", "start": 2846.7, "duration": 3.14}, {"text": "So to summarize, what\nhappens here simply", "start": 2849.84, "duration": 3.21}, {"text": "is that in the case\nof Bellman-Ford", "start": 2853.05, "duration": 3.09}, {"text": "running on the original\nshortest path problem,", "start": 2856.14, "duration": 5.77}, {"text": "you're allowed to abort when\nyou detect the fact that there's", "start": 2861.91, "duration": 4.74}, {"text": "a negative cycle.", "start": 2866.65, "duration": 1.99}, {"text": "So given that you're allowed\nto abort when there's", "start": 2868.64, "duration": 2.24}, {"text": "a negative cycle, you have\na polynomial time solution", "start": 2870.88, "duration": 4.21}, {"text": "using Bellman-Ford\nthat is not necessarily", "start": 2875.09, "duration": 3.67}, {"text": "going to give you shortest\npath weights but will", "start": 2878.76, "duration": 4.22}, {"text": "in the case of no\nnegative cycles.", "start": 2882.98, "duration": 3.14}, {"text": "All right?", "start": 2886.12, "duration": 1.49}, {"text": "But if you ask for more-- a\nlittle bit more-- you said,", "start": 2887.61, "duration": 4.16}, {"text": "you know, it'd be great\nif you could somehow", "start": 2891.77, "duration": 2.27}, {"text": "process these negative\ncycles and tell me", "start": 2894.04, "duration": 4.04}, {"text": "that if I had a simple path and\nI don't go through cycles what", "start": 2898.08, "duration": 5.06}, {"text": "would the shortest\nweight be, it becomes", "start": 2903.14, "duration": 1.89}, {"text": "a much more difficult problem.", "start": 2905.03, "duration": 2.63}, {"text": "It goes from order\nof ve complexity", "start": 2907.66, "duration": 1.79}, {"text": "to exponential time complexity\nto the best of our knowledge.", "start": 2909.45, "duration": 4.81}, {"text": "So that's what I'd\nlike to leave you with.", "start": 2914.26, "duration": 2.51}, {"text": "That there's much more to\nalgorithms than just the ones", "start": 2916.77, "duration": 4.39}, {"text": "that we're looking at.", "start": 2921.16, "duration": 1.07}, {"text": "And we get a little\nbit of a preview", "start": 2922.23, "duration": 1.5}, {"text": "of this-- so the difference\nbetween polynomial time", "start": 2923.73, "duration": 2.39}, {"text": "an exponential time--\nlater on in the term.", "start": 2926.12, "duration": 3.39}]