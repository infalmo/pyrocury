{
    "metadata": {
        "id": "Pfo7r6bjSqI",
        "avgHeat": 0.44,
        "runtime": 2650.27,
        "dale-challReadabilityScore": 7.184136629968426,
        "lexicalDiversity": 0.47772892372395337,
        "posComposition": {
            "NNP": 0.024,
            "NN": 0.122,
            "VBZ": 0.043,
            "VBN": 0.012,
            "IN": 0.111,
            "DT": 0.107,
            "JJ": 0.062,
            "NNS": 0.028,
            "VBP": 0.051,
            "PRP$": 0.006,
            "MD": 0.023,
            "VB": 0.055,
            "TO": 0.031,
            "CC": 0.036,
            "PRP": 0.102,
            "VBG": 0.025,
            "RB": 0.07,
            "CD": 0.024,
            "VBD": 0.016,
            "WDT": 0.005,
            ":": 0.005,
            "EX": 0.002,
            "JJS": 0.002,
            "WRB": 0.011,
            "NNPS": 0.0,
            "RBR": 0.002,
            "RP": 0.002,
            "WP": 0.011,
            "POS": 0.005,
            "JJR": 0.006,
            "PDT": 0.001,
            "WP$": 0.001
        },
        "syllableRate": 2.656,
        "topicScores": [
            [
                "number",
                0.12219490740624006
            ],
            [
                "guess",
                0.13798923718094347
            ],
            [
                "Python",
                0.13906472449065152
            ],
            [
                "look",
                0.14427907565090578
            ],
            [
                "answer",
                0.15850858275739318
            ],
            [
                "square",
                0.16737170992968212
            ],
            [
                "root",
                0.1765744466431773
            ],
            [
                "good",
                0.20060418723767603
            ],
            [
                "zero",
                0.20488622060847034
            ],
            [
                "right",
                0.20544903334653258
            ],
            [
                "way",
                0.20733230891320012
            ],
            [
                "print",
                0.20834304029920675
            ],
            [
                "time",
                0.20841888620042154
            ],
            [
                "L.",
                0.20990250495182575
            ],
            [
                "float",
                0.21216843044850348
            ],
            [
                "example",
                0.21264889979622514
            ],
            [
                "thing",
                0.21452928952390682
            ],
            [
                "equal",
                0.2273893313929897
            ],
            [
                "epsilon",
                0.22824498412974398
            ],
            [
                "MIT",
                0.22901797563684895
            ],
            [
                "problem",
                0.22927211617057636
            ],
            [
                "kind",
                0.2348884986920518
            ],
            [
                "computer",
                0.24554269070253346
            ],
            [
                "bit",
                0.24567267474282922
            ],
            [
                "lecture",
                0.24665569109575733
            ],
            [
                "small",
                0.24748527203241444
            ],
            [
                "function",
                0.24824497104264362
            ],
            [
                "fact",
                0.25674093439797635
            ],
            [
                "program",
                0.2581345569086104
            ],
            [
                "integer",
                0.2695120792191596
            ]
        ],
        "topicsList": [
            "number",
            "guess",
            "Python",
            "look",
            "answer",
            "square",
            "root",
            "good",
            "zero",
            "right",
            "way",
            "print",
            "time",
            "L.",
            "float",
            "example",
            "thing",
            "equal",
            "epsilon",
            "MIT",
            "problem",
            "kind",
            "computer",
            "bit",
            "lecture",
            "small",
            "function",
            "fact",
            "program",
            "integer"
        ]
    },
    "chunks": {
        "Pfo7r6bjSqI-0": {
            "id": "Pfo7r6bjSqI-0",
            "heat": 0.1,
            "start": 0.0,
            "text": " ANNOUNCER: Open content is provided under a creative commons license. Your support will help MIT OpenCourseWare continue to offer high-quality educational resources for free. To make a donation, or view additional materials from hundreds of MIT courses, visit MIT OpenCourseWare at ocw.mit.edu . PROFESSOR JOHN GUTTAG: Good morning. We should start with the confession, for those of you looking at this on OpenCourseWare, that I'm currently lecturing to an empty auditorium. The fifth lecture for 600 this term, we ran into some technical difficulties, which left us with a recording we weren't very satisfied with. So, I'm-- this is a redo, and if you will hear no questions from the audience and that's because there is no audience. Nevertheless I will do my best to pretend. I've been told this is a little bit like giving a speech before the US Congress when C-SPAN is the only thing watching. OK. Computers are supposed to be good for crunching numbers. And we've looked a little bit at numbers this term, but I now want to get into looking at them in more depth than we've been doing. Python has two different kinds of numbers.",
            "metrics": {
                "relativeDCReadability": 1.1661248152009074,
                "lexicalDiversity": 0.5,
                "posComposition": {
                    "NNP": 0.09,
                    "NN": 0.095,
                    "VBZ": 0.035,
                    "VBN": 0.025,
                    "IN": 0.135,
                    "DT": 0.115,
                    "JJ": 0.075,
                    "NNS": 0.055,
                    "VBP": 0.05,
                    "PRP$": 0.01,
                    "MD": 0.02,
                    "VB": 0.045,
                    "TO": 0.03,
                    "CC": 0.025,
                    "PRP": 0.07,
                    "VBG": 0.035,
                    "RB": 0.025,
                    "CD": 0.01,
                    "VBD": 0.02,
                    "WDT": 0.005,
                    ":": 0.005,
                    "EX": 0.005,
                    "JJS": 0.005,
                    "WRB": 0.005,
                    "NNPS": 0.005,
                    "RBR": 0.005
                },
                "syllableRate": 2.633,
                "topicScores": [
                    [
                        "MIT",
                        0.2897328394943011
                    ],
                    [
                        "ANNOUNCER",
                        0.32308564310358034
                    ],
                    [
                        "good",
                        0.3968545091483679
                    ],
                    [
                        "number",
                        0.4390925517308484
                    ],
                    [
                        "OpenCourseWare",
                        0.532497548917265
                    ],
                    [
                        "PROFESSOR JOHN",
                        0.5355955053616835
                    ],
                    [
                        "term",
                        0.5459467019852272
                    ],
                    [
                        "bit",
                        0.5517710385671069
                    ],
                    [
                        "little",
                        0.551771038567107
                    ],
                    [
                        "audience",
                        0.5576151529297462
                    ],
                    [
                        "lecture",
                        0.5581550587520959
                    ],
                    [
                        "JOHN GUTTAG",
                        0.5864538722236565
                    ],
                    [
                        "MIT OpenCourseWare",
                        0.603917359982199
                    ],
                    [
                        "PROFESSOR JOHN GUTTAG",
                        0.6089765564029153
                    ],
                    [
                        "SPAN",
                        0.6652758007347335
                    ],
                    [
                        "Congress",
                        0.6797549073765712
                    ],
                    [
                        "open",
                        0.7943680733120051
                    ],
                    [
                        "license",
                        0.7943680733120051
                    ],
                    [
                        "free",
                        0.8244031957826491
                    ],
                    [
                        "content",
                        0.8301971559290151
                    ],
                    [
                        "common",
                        0.8301971559290151
                    ],
                    [
                        "morning",
                        0.8348818359401065
                    ],
                    [
                        "creative",
                        0.8449014967968536
                    ],
                    [
                        "support",
                        0.8559480041760065
                    ],
                    [
                        "high",
                        0.8559480041760065
                    ],
                    [
                        "quality",
                        0.8559480041760065
                    ],
                    [
                        "educational",
                        0.8559480041760065
                    ],
                    [
                        "auditorium",
                        0.8596058158805386
                    ],
                    [
                        "resource",
                        0.8687748849956721
                    ],
                    [
                        "donation",
                        0.8701110008192336
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "MIT",
                        0.2897328394943011
                    ],
                    [
                        "good",
                        0.3968545091483679
                    ],
                    [
                        "number",
                        0.4390925517308484
                    ],
                    [
                        "bit",
                        0.5517710385671069
                    ],
                    [
                        "lecture",
                        0.5581550587520959
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-90": {
            "id": "Pfo7r6bjSqI-90",
            "heat": 0.472,
            "start": 90.0,
            "text": " So far, the only kind we've really paid any attention to is type int. And those were intended to mirror the integers, as we all learned about starting in elementary school. And they're good for things that you can count. Any place you'd use whole numbers. Interestingly, Python, unlike some languages, has what are called arbitrary precision integers. By that, we mean, you can make numbers as big as you want them to. Let's look at an example. We'll just take a for a variable name, and we'll set a to be two raised to the one-thousandth power. That, by the way, is a really big number. And now what happens if we try and display it? We get a lot of digits. You can see why I'm doing this on the screen instead of writing it on the blackboard. I'm not going to ask you whether you believe this is the right answer, trust me, trust Python. I would like you to notice, at the very end of this is the letter L. What does that mean? It means long.",
            "metrics": {
                "relativeDCReadability": 0.8426325284324888,
                "lexicalDiversity": 0.455026455026455,
                "posComposition": {
                    "RB": 0.048,
                    "DT": 0.127,
                    "JJ": 0.063,
                    "NN": 0.101,
                    "PRP": 0.127,
                    "VBP": 0.058,
                    "VBN": 0.021,
                    "TO": 0.037,
                    "VBZ": 0.042,
                    "CC": 0.026,
                    "VBD": 0.011,
                    "VB": 0.074,
                    "NNS": 0.037,
                    "IN": 0.111,
                    "RP": 0.005,
                    "VBG": 0.021,
                    "MD": 0.037,
                    "NNP": 0.021,
                    "WP": 0.016,
                    "POS": 0.005,
                    "CD": 0.005,
                    "WRB": 0.005
                },
                "syllableRate": 2.067,
                "topicScores": [
                    [
                        "Python",
                        0.3901202629534577
                    ],
                    [
                        "number",
                        0.43651341613543154
                    ],
                    [
                        "integer",
                        0.5340353061020662
                    ],
                    [
                        "trust",
                        0.5636728805195089
                    ],
                    [
                        "big",
                        0.5651119269175162
                    ],
                    [
                        "L.",
                        0.658938778162594
                    ],
                    [
                        "type",
                        0.7906376030188886
                    ],
                    [
                        "kind",
                        0.8079752951130618
                    ],
                    [
                        "attention",
                        0.8079752951130618
                    ],
                    [
                        "school",
                        0.8178732540308459
                    ],
                    [
                        "elementary",
                        0.8503782233807884
                    ],
                    [
                        "power",
                        0.8723853795565987
                    ],
                    [
                        "example",
                        0.8819990693212925
                    ],
                    [
                        "good",
                        0.885006071038022
                    ],
                    [
                        "thing",
                        0.885006071038022
                    ],
                    [
                        "place",
                        0.8861985711924328
                    ],
                    [
                        "language",
                        0.8943360064278405
                    ],
                    [
                        "precision",
                        0.8943360064278405
                    ],
                    [
                        "digit",
                        0.8944818790242506
                    ],
                    [
                        "blackboard",
                        0.8964972372282605
                    ],
                    [
                        "thousandth",
                        0.8977565887066867
                    ],
                    [
                        "arbitrary",
                        0.904127551940181
                    ],
                    [
                        "variable",
                        0.9077828808230937
                    ],
                    [
                        "way",
                        0.9105268713514154
                    ],
                    [
                        "right",
                        0.9178571699890228
                    ],
                    [
                        "answer",
                        0.9178571699890228
                    ],
                    [
                        "letter",
                        0.9191398954394088
                    ],
                    [
                        "lot",
                        0.9228035183455567
                    ],
                    [
                        "screen",
                        0.9243237082459385
                    ],
                    [
                        "end",
                        0.9268210179981302
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "Python",
                        0.3901202629534577
                    ],
                    [
                        "number",
                        0.43651341613543154
                    ],
                    [
                        "integer",
                        0.5340353061020662
                    ],
                    [
                        "L.",
                        0.658938778162594
                    ],
                    [
                        "kind",
                        0.8079752951130618
                    ],
                    [
                        "example",
                        0.8819990693212925
                    ],
                    [
                        "good",
                        0.885006071038022
                    ],
                    [
                        "thing",
                        0.885006071038022
                    ],
                    [
                        "way",
                        0.9105268713514154
                    ],
                    [
                        "right",
                        0.9178571699890228
                    ],
                    [
                        "answer",
                        0.9178571699890228
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-180": {
            "id": "Pfo7r6bjSqI-180",
            "heat": 0.337,
            "start": 180.0,
            "text": " That's telling us that it's representing these-- this particular integer in what it calls it's internal long format. You needn't worry about that. The only thing to say about it is, when you're dealing with long integers, it's a lot less efficient than when you're dealing with smaller numbers. And that's all it's kind of warning you, by printing this L. About two billion is the magic number. When you get over two billion, it's now going to deal with long integers, so if, for example, you're trying to deal with the US budget deficit, you will need integers of type L. OK. Let's look at another interesting example. Suppose I said, b equal to two raised to the nine hundred ninety-ninth power. I can display b, and it's a different number, considerably smaller, but again, ending in an L. And now, what you think I'll get if we try a divided by b? And remember, we're now doing integer division. Well, let's see. We get 2L.",
            "metrics": {
                "relativeDCReadability": 1.06698628282198,
                "lexicalDiversity": 0.5489130434782609,
                "posComposition": {
                    "DT": 0.087,
                    "VBZ": 0.06,
                    "VBG": 0.054,
                    "PRP": 0.125,
                    "IN": 0.109,
                    ":": 0.005,
                    "JJ": 0.065,
                    "NN": 0.12,
                    "WP": 0.011,
                    "VBP": 0.049,
                    "RB": 0.038,
                    "VB": 0.038,
                    "TO": 0.027,
                    "WRB": 0.016,
                    "NNS": 0.022,
                    "RBR": 0.005,
                    "JJR": 0.011,
                    "CC": 0.027,
                    "NNP": 0.043,
                    "CD": 0.038,
                    "MD": 0.016,
                    "POS": 0.011,
                    "VBD": 0.011,
                    "VBN": 0.011
                },
                "syllableRate": 2.175,
                "topicScores": [
                    [
                        "L.",
                        0.307515165740545
                    ],
                    [
                        "integer",
                        0.3354889902658608
                    ],
                    [
                        "long",
                        0.3963652070434155
                    ],
                    [
                        "number",
                        0.42312629831819965
                    ],
                    [
                        "example",
                        0.538181706818225
                    ],
                    [
                        "small",
                        0.544456552583941
                    ],
                    [
                        "L. OK",
                        0.5816647947305853
                    ],
                    [
                        "format",
                        0.8172528028250179
                    ],
                    [
                        "these--",
                        0.8570561649572485
                    ],
                    [
                        "particular",
                        0.8570561649572485
                    ],
                    [
                        "internal",
                        0.8570561649572485
                    ],
                    [
                        "power",
                        0.8742421447691753
                    ],
                    [
                        "magic",
                        0.8905389823907763
                    ],
                    [
                        "thing",
                        0.8914817914474787
                    ],
                    [
                        "lot",
                        0.8914817914474787
                    ],
                    [
                        "efficient",
                        0.8914817914474787
                    ],
                    [
                        "division",
                        0.894088614202884
                    ],
                    [
                        "ninth",
                        0.8956426228773857
                    ],
                    [
                        "budget",
                        0.8964671205494172
                    ],
                    [
                        "deficit",
                        0.8964671205494172
                    ],
                    [
                        "interesting",
                        0.9009214937084374
                    ],
                    [
                        "equal",
                        0.904417425242955
                    ],
                    [
                        "type",
                        0.9047895275715396
                    ],
                    [
                        "different",
                        0.9072513259306894
                    ],
                    [
                        "type L.",
                        1.2546541854405182
                    ],
                    [
                        "long integer",
                        1.3878955165841649
                    ],
                    [
                        "type L. OK",
                        1.6617217950393868
                    ],
                    [
                        "long format",
                        1.8397889296883114
                    ],
                    [
                        "internal long",
                        2.1192925577103963
                    ],
                    [
                        "small number",
                        2.7073827995559543
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "L.",
                        0.307515165740545
                    ],
                    [
                        "integer",
                        0.3354889902658608
                    ],
                    [
                        "number",
                        0.42312629831819965
                    ],
                    [
                        "example",
                        0.538181706818225
                    ],
                    [
                        "small",
                        0.544456552583941
                    ],
                    [
                        "thing",
                        0.8914817914474787
                    ],
                    [
                        "equal",
                        0.904417425242955
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-270": {
            "id": "Pfo7r6bjSqI-270",
            "heat": 0.309,
            "start": 270.0,
            "text": " Well, you'd expect it to be two, because if you think about the meaning of exponentiation, indeed, the difference between raising something to the nine hundred ninety-ninth power and to the one-thousandth power should be, in this case, two, since that's what we're raising to a power. Why does it say 2L, right? Two is considerably less than two billion, and that's because once you get L, you stay L. Not particularly important, but kind of worth knowing. Well, why am I bothering you with this whole issue of how numbers are represented in the computer? In an ideal world, you would ignore this completely, and just say, numbers do what numbers are supposed to do. But as we're about to see, sometimes in Python, and in fact in every programming language, things behave contrary to what your intuition suggests. And I want to spend a little time helping you understand why this happens. So let's look at a different kind of number. And now we're going to look at what Python, and almost every other programming language, calls type float. Which is short for floating point.",
            "metrics": {
                "relativeDCReadability": 0.9390285374067225,
                "lexicalDiversity": 0.5051546391752577,
                "posComposition": {
                    "RB": 0.062,
                    "PRP": 0.072,
                    "MD": 0.015,
                    "VB": 0.052,
                    "TO": 0.046,
                    "CD": 0.036,
                    "IN": 0.113,
                    "VBP": 0.067,
                    "DT": 0.088,
                    "NN": 0.134,
                    "VBG": 0.036,
                    "VBD": 0.005,
                    "JJ": 0.062,
                    "CC": 0.046,
                    "VBZ": 0.041,
                    "WP": 0.021,
                    "WRB": 0.021,
                    "JJR": 0.005,
                    "NNP": 0.036,
                    "NNS": 0.021,
                    "VBN": 0.01,
                    "PRP$": 0.005,
                    "POS": 0.005
                },
                "syllableRate": 2.342,
                "topicScores": [
                    [
                        "number",
                        0.35550167574421476
                    ],
                    [
                        "Python",
                        0.3706773293031619
                    ],
                    [
                        "power",
                        0.39097278877130176
                    ],
                    [
                        "programming",
                        0.5202110490592778
                    ],
                    [
                        "kind",
                        0.5319397882184688
                    ],
                    [
                        "language",
                        0.5328749724744221
                    ],
                    [
                        "float",
                        0.5402308655738917
                    ],
                    [
                        "2L",
                        0.5459578933936922
                    ],
                    [
                        "L.",
                        0.5869882362234132
                    ],
                    [
                        "right",
                        0.8170655057546778
                    ],
                    [
                        "exponentiation",
                        0.8259580683472298
                    ],
                    [
                        "difference",
                        0.8259580683472298
                    ],
                    [
                        "ninth",
                        0.8259580683472298
                    ],
                    [
                        "thousandth",
                        0.8259580683472298
                    ],
                    [
                        "case",
                        0.8259580683472298
                    ],
                    [
                        "meaning",
                        0.836947509206562
                    ],
                    [
                        "computer",
                        0.8567716594475202
                    ],
                    [
                        "important",
                        0.8667083703178645
                    ],
                    [
                        "worth",
                        0.8667083703178645
                    ],
                    [
                        "ideal",
                        0.8826542130391248
                    ],
                    [
                        "world",
                        0.8826542130391248
                    ],
                    [
                        "point",
                        0.8834837292704649
                    ],
                    [
                        "issue",
                        0.8843143440261874
                    ],
                    [
                        "thing",
                        0.8876283762958431
                    ],
                    [
                        "intuition",
                        0.8876283762958431
                    ],
                    [
                        "type",
                        0.8895775196335697
                    ],
                    [
                        "fact",
                        0.8952178008078666
                    ],
                    [
                        "contrary",
                        0.8952178008078666
                    ],
                    [
                        "little",
                        0.8988923982118331
                    ],
                    [
                        "time",
                        0.8988923982118331
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "number",
                        0.35550167574421476
                    ],
                    [
                        "Python",
                        0.3706773293031619
                    ],
                    [
                        "kind",
                        0.5319397882184688
                    ],
                    [
                        "float",
                        0.5402308655738917
                    ],
                    [
                        "L.",
                        0.5869882362234132
                    ],
                    [
                        "right",
                        0.8170655057546778
                    ],
                    [
                        "computer",
                        0.8567716594475202
                    ],
                    [
                        "thing",
                        0.8876283762958431
                    ],
                    [
                        "fact",
                        0.8952178008078666
                    ],
                    [
                        "time",
                        0.8988923982118331
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-360": {
            "id": "Pfo7r6bjSqI-360",
            "heat": 0.531,
            "start": 360.0,
            "text": " And that's the way that programming languages typically represent what we think of as real numbers. So, let's look at an example. I'm going to set the variable x to be 0.1, 1/10, and now we're going to display x. Huh? Take a look at this. Why isn't it .1? Why is it 0.1, a whole bunch of zeros, and then this mysterious one appearing at the end? Is it because Python just wants to be obnoxious and is making life hard? No, it has to do with the way the numbers are represented inside the computer. Python, like almost every modern programming language, represents numbers using the i triple e floating point standard, and it's i triple e 754. Never again will you have to remember that it's 754. I promise not to ask you that question on a quiz. But that's what they do. This is a variant of scientific notation.",
            "metrics": {
                "relativeDCReadability": 1.1635383623495337,
                "lexicalDiversity": 0.4906832298136646,
                "posComposition": {
                    "CC": 0.037,
                    "DT": 0.112,
                    "VBZ": 0.075,
                    "NN": 0.13,
                    "IN": 0.087,
                    "VBG": 0.037,
                    "NNS": 0.025,
                    "RB": 0.05,
                    "VBP": 0.05,
                    "WP": 0.012,
                    "PRP": 0.081,
                    "JJ": 0.087,
                    "NNP": 0.043,
                    "POS": 0.006,
                    "TO": 0.043,
                    "VB": 0.056,
                    "CD": 0.037,
                    "WRB": 0.012,
                    "VBN": 0.006,
                    "MD": 0.006,
                    "WDT": 0.006
                },
                "syllableRate": 1.867,
                "topicScores": [
                    [
                        "number",
                        0.43300163147602166
                    ],
                    [
                        "Python",
                        0.4636471777373215
                    ],
                    [
                        "language",
                        0.5295664776896374
                    ],
                    [
                        "look",
                        0.538105111099951
                    ],
                    [
                        "programming",
                        0.5403695231851682
                    ],
                    [
                        "way",
                        0.5457941637330126
                    ],
                    [
                        "triple",
                        0.5636133179847255
                    ],
                    [
                        "Huh",
                        0.7973152574411342
                    ],
                    [
                        "example",
                        0.8255877444926636
                    ],
                    [
                        "real",
                        0.8295038323912428
                    ],
                    [
                        "x.",
                        0.8421853677729104
                    ],
                    [
                        "end",
                        0.8709014193760034
                    ],
                    [
                        "hard",
                        0.8745912368123572
                    ],
                    [
                        "computer",
                        0.8776640340406235
                    ],
                    [
                        "variable",
                        0.8807568459412395
                    ],
                    [
                        "quiz",
                        0.8844921627871691
                    ],
                    [
                        "notation",
                        0.8877830308168807
                    ],
                    [
                        "zero",
                        0.893918197990765
                    ],
                    [
                        "life",
                        0.8970279456631792
                    ],
                    [
                        "point",
                        0.9018075958063925
                    ],
                    [
                        "standard",
                        0.9018075958063925
                    ],
                    [
                        "bunch",
                        0.9032606004280569
                    ],
                    [
                        "mysterious",
                        0.9032606004280569
                    ],
                    [
                        "obnoxious",
                        0.9061252394590495
                    ],
                    [
                        "scientific",
                        0.9081075899963644
                    ],
                    [
                        "modern",
                        0.9105247406088112
                    ],
                    [
                        "question",
                        0.9137820056119145
                    ],
                    [
                        "variant",
                        0.916317344383963
                    ],
                    [
                        "programming language",
                        1.6133197913991897
                    ],
                    [
                        "x. Huh",
                        2.044021821566846
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "number",
                        0.43300163147602166
                    ],
                    [
                        "Python",
                        0.4636471777373215
                    ],
                    [
                        "look",
                        0.538105111099951
                    ],
                    [
                        "way",
                        0.5457941637330126
                    ],
                    [
                        "example",
                        0.8255877444926636
                    ],
                    [
                        "computer",
                        0.8776640340406235
                    ],
                    [
                        "zero",
                        0.893918197990765
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-450": {
            "id": "Pfo7r6bjSqI-450",
            "heat": 0.586,
            "start": 450.0,
            "text": " Something you probably learned about in high school, as a way to represent very large numbers. Typically, the way we do that, is we represent the numbers in the form of a mantissa and an exponent. So we represent a floating point number as a pair, of a mantissa and an exponent. And because computers work in the binary system, it's unlike what you probably learned in high school, where we raise ten to some power. Here we'll always be raising two to some power. Maybe a little later in the term, if we talk about computer architecture, we'll get around to explaining why computers working binary, but for now, just assume that they do and in fact they always have. All right. Purists manage to refer to the mantissa as a significant, but",
            "metrics": {
                "relativeDCReadability": 1.0154817589437466,
                "lexicalDiversity": 0.46715328467153283,
                "posComposition": {
                    "VBG": 0.029,
                    "PRP": 0.088,
                    "RB": 0.073,
                    "VBD": 0.015,
                    "IN": 0.146,
                    "JJ": 0.058,
                    "NN": 0.153,
                    "DT": 0.139,
                    "TO": 0.044,
                    "VB": 0.044,
                    "NNS": 0.036,
                    "VBP": 0.058,
                    "VBZ": 0.015,
                    "CC": 0.044,
                    "WP": 0.007,
                    "WRB": 0.015,
                    "VBN": 0.007,
                    "MD": 0.015,
                    "CD": 0.007,
                    "RBR": 0.007
                },
                "syllableRate": 1.683,
                "topicScores": [
                    [
                        "number",
                        0.4182526102363427
                    ],
                    [
                        "mantissa",
                        0.4199514103575639
                    ],
                    [
                        "exponent",
                        0.44009486245038437
                    ],
                    [
                        "computer",
                        0.4464447989286853
                    ],
                    [
                        "power",
                        0.47149378093408323
                    ],
                    [
                        "high",
                        0.49387144368458163
                    ],
                    [
                        "school",
                        0.49981971948794557
                    ],
                    [
                        "way",
                        0.5130169217561056
                    ],
                    [
                        "binary",
                        0.5512055605612401
                    ],
                    [
                        "large",
                        0.781728895136052
                    ],
                    [
                        "form",
                        0.8588555539473137
                    ],
                    [
                        "pair",
                        0.8675626276725991
                    ],
                    [
                        "purist",
                        0.8772663145384823
                    ],
                    [
                        "system",
                        0.8807427932628189
                    ],
                    [
                        "point",
                        0.8808838881099881
                    ],
                    [
                        "term",
                        0.8952126707258888
                    ],
                    [
                        "architecture",
                        0.8952126707258888
                    ],
                    [
                        "significant",
                        0.9032489084662532
                    ],
                    [
                        "little",
                        0.9060539094404384
                    ],
                    [
                        "fact",
                        0.9060539094404384
                    ],
                    [
                        "high school",
                        1.0298709314866756
                    ],
                    [
                        "large number",
                        1.889507836289618
                    ],
                    [
                        "point number",
                        2.8003157679721693
                    ],
                    [
                        "binary system",
                        3.337496441959359
                    ],
                    [
                        "computer architecture",
                        3.983208619137418
                    ]
                ],
                "topTopicSimilarity": 0.16,
                "sharedTopicScores": [
                    [
                        "number",
                        0.4182526102363427
                    ],
                    [
                        "computer",
                        0.4464447989286853
                    ],
                    [
                        "way",
                        0.5130169217561056
                    ],
                    [
                        "fact",
                        0.9060539094404384
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-540": {
            "id": "Pfo7r6bjSqI-540",
            "heat": 0.452,
            "start": 540.0,
            "text": " I won't do that, because I'm an old guy and it was a mantissa when I first learned about it and I just can't break myself of the habit. All right. So how does this work? Well, when we recognize so-- when we represent something, the mantissa is between one and two. Whoops. Strictly less than two, greater than or equal to one. The exponent, is in the range, -1022 to +1023. So this lets us represent numbers up to about 10 to the 308th, plus or minus 10 to the 308th, plus or minus. So, quite a large range of numbers. Where did these magic things come from? You know, what-- kind of a strange numbers to see here. Well, it has to do with the fact that computers typically",
            "metrics": {
                "relativeDCReadability": 1.0261405385991622,
                "lexicalDiversity": 0.45588235294117646,
                "posComposition": {
                    "PRP": 0.081,
                    "MD": 0.015,
                    "RB": 0.103,
                    "VB": 0.044,
                    "IN": 0.103,
                    "VBP": 0.037,
                    "DT": 0.103,
                    "JJ": 0.044,
                    "NN": 0.103,
                    "CC": 0.074,
                    "VBD": 0.022,
                    "WRB": 0.037,
                    "NNP": 0.029,
                    "VBZ": 0.037,
                    ":": 0.015,
                    "CD": 0.044,
                    "JJR": 0.015,
                    "TO": 0.051,
                    "NNS": 0.037,
                    "WP": 0.007
                },
                "syllableRate": 1.367,
                "topicScores": [
                    [
                        "number",
                        0.4503842484383713
                    ],
                    [
                        "308th",
                        0.5392661092219415
                    ],
                    [
                        "mantissa",
                        0.5455348390065702
                    ],
                    [
                        "minus",
                        0.5562263322432992
                    ],
                    [
                        "range",
                        0.5730468289836654
                    ],
                    [
                        "habit",
                        0.7546624423246705
                    ],
                    [
                        "whoop",
                        0.809745253131171
                    ],
                    [
                        "old",
                        0.819349651837271
                    ],
                    [
                        "guy",
                        0.819349651837271
                    ],
                    [
                        "work",
                        0.8490850886161538
                    ],
                    [
                        "exponent",
                        0.8984311153992641
                    ],
                    [
                        "fact",
                        0.8992868312328286
                    ],
                    [
                        "so--",
                        0.9034064415727426
                    ],
                    [
                        "great",
                        0.9055144764186728
                    ],
                    [
                        "-1022",
                        0.9096188423844866
                    ],
                    [
                        "computer",
                        0.9126500838706498
                    ],
                    [
                        "equal",
                        0.9153906299740352
                    ],
                    [
                        "what--",
                        0.9194467222459717
                    ],
                    [
                        "kind",
                        0.9194467222459717
                    ],
                    [
                        "large",
                        0.9243700142190368
                    ],
                    [
                        "magic",
                        0.926325864131605
                    ],
                    [
                        "thing",
                        0.926325864131605
                    ],
                    [
                        "strange",
                        0.9279824206804688
                    ],
                    [
                        "old guy",
                        2.042601150076817
                    ],
                    [
                        "strange number",
                        5.093746075219144
                    ],
                    [
                        "large range",
                        5.233101108664976
                    ],
                    [
                        "what-- kind",
                        5.467563795263523
                    ],
                    [
                        "magic thing",
                        6.046203690358897
                    ]
                ],
                "topTopicSimilarity": 0.21428571428571427,
                "sharedTopicScores": [
                    [
                        "number",
                        0.4503842484383713
                    ],
                    [
                        "fact",
                        0.8992868312328286
                    ],
                    [
                        "computer",
                        0.9126500838706498
                    ],
                    [
                        "equal",
                        0.9153906299740352
                    ],
                    [
                        "kind",
                        0.9194467222459717
                    ],
                    [
                        "thing",
                        0.926325864131605
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-630": {
            "id": "Pfo7r6bjSqI-630",
            "heat": 0.541,
            "start": 630.0,
            "text": " have words in them, and the words today in a modern computer are 64 bits. For many years they were 32 bits, before that they were 16 bits, before that they were 8 bits, they've continually grown, but we've been at 64 for a while and I think we'll be stuck at 64 for a while. So as we do this, what we do is, we get one bit for the sign-- is it a positive or negative number?-- 11 for the exponent, and that leaves 52 for the mantissa. And that basically tells us how we're storing numbers. Hi, are you here for the 600 lecture? There is none today, because we have a quiz this evening. It's now the time that the lecture would normally have started, and a couple of students who forgot that we have a quiz this evening, instead of a lecture, just strolled in, and now strolled out. OK. You may never need to know these constants again, but",
            "metrics": {
                "relativeDCReadability": 1.0846229744871665,
                "lexicalDiversity": 0.4186046511627907,
                "posComposition": {
                    "VB": 0.029,
                    "NNS": 0.058,
                    "IN": 0.128,
                    "PRP": 0.11,
                    "CC": 0.052,
                    "DT": 0.122,
                    "NN": 0.105,
                    "JJ": 0.023,
                    "VBP": 0.064,
                    "CD": 0.058,
                    "VBD": 0.023,
                    "RB": 0.064,
                    "VBN": 0.035,
                    "MD": 0.017,
                    "WP": 0.012,
                    "VBZ": 0.035,
                    ":": 0.012,
                    "WRB": 0.006,
                    "VBG": 0.017,
                    "NNP": 0.012,
                    "EX": 0.006,
                    "RP": 0.006,
                    "TO": 0.006
                },
                "syllableRate": 1.775,
                "topicScores": [
                    [
                        "bit",
                        0.31014908199432
                    ],
                    [
                        "lecture",
                        0.435114877700049
                    ],
                    [
                        "word",
                        0.5153021771629495
                    ],
                    [
                        "quiz",
                        0.525937737898678
                    ],
                    [
                        "evening",
                        0.525937737898678
                    ],
                    [
                        "today",
                        0.5466808835072223
                    ],
                    [
                        "modern",
                        0.8504127895534324
                    ],
                    [
                        "computer",
                        0.8504127895534324
                    ],
                    [
                        "mantissa",
                        0.8614979680962084
                    ],
                    [
                        "number",
                        0.868767124150584
                    ],
                    [
                        "year",
                        0.8735648041301749
                    ],
                    [
                        "exponent",
                        0.8847813303855055
                    ],
                    [
                        "sign--",
                        0.8943616788536687
                    ],
                    [
                        "positive",
                        0.8943616788536687
                    ],
                    [
                        "negative",
                        0.8943616788536687
                    ],
                    [
                        "constant",
                        0.9068376176245885
                    ],
                    [
                        "time",
                        0.9105490034528317
                    ],
                    [
                        "couple",
                        0.9105490034528317
                    ],
                    [
                        "student",
                        0.9105490034528317
                    ],
                    [
                        "word today",
                        2.420849975677341
                    ],
                    [
                        "modern computer",
                        2.6127417263730743
                    ]
                ],
                "topTopicSimilarity": 0.23809523809523808,
                "sharedTopicScores": [
                    [
                        "bit",
                        0.31014908199432
                    ],
                    [
                        "lecture",
                        0.435114877700049
                    ],
                    [
                        "computer",
                        0.8504127895534324
                    ],
                    [
                        "number",
                        0.868767124150584
                    ],
                    [
                        "time",
                        0.9105490034528317
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-720": {
            "id": "Pfo7r6bjSqI-720",
            "heat": 0.315,
            "start": 720.0,
            "text": " it's worth knowing that they exist, and that basically, this gives us about the equivalent of seventeen decimal digits of precision. So we can represent numbers up to seventeen decimal digits long. This is an important concept to understand, that unlike the long ints where they can grow arbitrarily big, when we're dealing with floating points, if we need something more than seventeen decimal digits, in Python at least, we won't be able to get it. And that's true in many languages. Now the good news is, this is an enormous number, and it's highly unlikely that ever in your life, you will need more precision than that. All right. Now, let's go back to the 0.1 mystery that we started at, and ask ourselves, why we have a problem representing that number in the computer, hence, we get something funny out from we try and print it back. Well, let's look at an easier problem first. Let's look at representing the fraction 1/8. That has a nice representation. That's equal in decimal to 0.125, and we can represent it",
            "metrics": {
                "relativeDCReadability": 1.046529949061838,
                "lexicalDiversity": 0.5132275132275133,
                "posComposition": {
                    "PRP": 0.101,
                    "VBZ": 0.048,
                    "JJ": 0.095,
                    "VBG": 0.026,
                    "IN": 0.127,
                    "VBP": 0.037,
                    "CC": 0.032,
                    "DT": 0.106,
                    "RB": 0.069,
                    "NN": 0.111,
                    "NNS": 0.037,
                    "MD": 0.026,
                    "VB": 0.058,
                    "TO": 0.026,
                    "WRB": 0.016,
                    "JJR": 0.016,
                    "NNP": 0.016,
                    "JJS": 0.005,
                    "PRP$": 0.005,
                    "POS": 0.016,
                    "CD": 0.016,
                    "VBD": 0.005,
                    "WDT": 0.005
                },
                "syllableRate": 2.275,
                "topicScores": [
                    [
                        "decimal",
                        0.34878353136199125
                    ],
                    [
                        "digit",
                        0.36012828521950413
                    ],
                    [
                        "number",
                        0.4221042225109642
                    ],
                    [
                        "long",
                        0.5122538185653545
                    ],
                    [
                        "precision",
                        0.5201168135232038
                    ],
                    [
                        "problem",
                        0.5526393483232048
                    ],
                    [
                        "Python",
                        0.55670884201121
                    ],
                    [
                        "decimal digit",
                        0.6999039662269014
                    ],
                    [
                        "worth",
                        0.7883259460518087
                    ],
                    [
                        "equivalent",
                        0.7883259460518087
                    ],
                    [
                        "language",
                        0.8530910293558702
                    ],
                    [
                        "big",
                        0.8617341138812632
                    ],
                    [
                        "point",
                        0.8617341138812632
                    ],
                    [
                        "important",
                        0.8719902436882007
                    ],
                    [
                        "concept",
                        0.8719902436882007
                    ],
                    [
                        "able",
                        0.8719902436882007
                    ],
                    [
                        "news",
                        0.8842190583969378
                    ],
                    [
                        "enormous",
                        0.8842190583969378
                    ],
                    [
                        "life",
                        0.8842190583969378
                    ],
                    [
                        "true",
                        0.8847882891808191
                    ],
                    [
                        "representation",
                        0.8864485342151861
                    ],
                    [
                        "good",
                        0.8930143932345947
                    ],
                    [
                        "unlikely",
                        0.8930143932345947
                    ],
                    [
                        "computer",
                        0.8951304309051088
                    ],
                    [
                        "fraction",
                        0.9017899058598634
                    ],
                    [
                        "mystery",
                        0.9031876339472157
                    ],
                    [
                        "funny",
                        0.9031876339472157
                    ],
                    [
                        "nice",
                        0.9042692201967233
                    ],
                    [
                        "easy",
                        0.9066118944279462
                    ],
                    [
                        "equal",
                        0.9136484441792403
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "number",
                        0.4221042225109642
                    ],
                    [
                        "problem",
                        0.5526393483232048
                    ],
                    [
                        "Python",
                        0.55670884201121
                    ],
                    [
                        "good",
                        0.8930143932345947
                    ],
                    [
                        "computer",
                        0.8951304309051088
                    ],
                    [
                        "equal",
                        0.9136484441792403
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-810": {
            "id": "Pfo7r6bjSqI-810",
            "heat": 0.14,
            "start": 810.0,
            "text": " conveniently in both base 10 and base 2. So if you want to represent it in base 10, what is it? What is that equal to? Well, we'll take a mantissa, 1.25, and now we need to multiply it by something that we can represent nicely, and in fact that will be times 10 to the -1. So the exponent would simply be -1, and we have a nice representation. Suppose we want to represent it in base 2? What would it be? 1.0 times-- anybody?-- Well, 2 to the -3. So, in binary notation, that would be written as 0.001. So you see, 1/8 is kind of a nice number. We can represent it nicely in either base 10 or base 2.",
            "metrics": {
                "relativeDCReadability": 1.1188267533546283,
                "lexicalDiversity": 0.48412698412698413,
                "posComposition": {
                    "RB": 0.063,
                    "IN": 0.095,
                    "DT": 0.063,
                    "JJ": 0.048,
                    "CD": 0.095,
                    "CC": 0.048,
                    "VB": 0.103,
                    "PRP": 0.111,
                    "VBP": 0.04,
                    "TO": 0.048,
                    "NN": 0.087,
                    "WP": 0.024,
                    "VBZ": 0.024,
                    "NNP": 0.048,
                    "MD": 0.056,
                    "WDT": 0.016,
                    "NNS": 0.008,
                    ":": 0.016,
                    "VBN": 0.008
                },
                "syllableRate": 1.342,
                "topicScores": [
                    [
                        "base",
                        0.3089463737519546
                    ],
                    [
                        "-1",
                        0.560006815393877
                    ],
                    [
                        "nice",
                        0.5681301424890622
                    ],
                    [
                        "representation",
                        0.884817541201982
                    ],
                    [
                        "equal",
                        0.8930068117376722
                    ],
                    [
                        "anybody?--",
                        0.899339403219842
                    ],
                    [
                        "-3",
                        0.9023075980556579
                    ],
                    [
                        "mantissa",
                        0.903935162416122
                    ],
                    [
                        "number",
                        0.9068676262582454
                    ],
                    [
                        "times--",
                        0.9119854594250196
                    ],
                    [
                        "fact",
                        0.9145742690056654
                    ],
                    [
                        "binary",
                        0.9168015499112093
                    ],
                    [
                        "exponent",
                        0.9208638722857634
                    ],
                    [
                        "notation",
                        0.9267393052047764
                    ],
                    [
                        "nice representation",
                        3.919981468387065
                    ],
                    [
                        "nice number",
                        4.452637956794902
                    ],
                    [
                        "times-- anybody?--",
                        4.561254569335782
                    ],
                    [
                        "binary notation",
                        5.650529439645553
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "equal",
                        0.8930068117376722
                    ],
                    [
                        "number",
                        0.9068676262582454
                    ],
                    [
                        "fact",
                        0.9145742690056654
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-900": {
            "id": "Pfo7r6bjSqI-900",
            "heat": 0.269,
            "start": 900.0,
            "text": " But how about that pesky fraction 1/10? Well, in base 10, we know how to represent, it's 1 times 10 to the-- 10 to the what?-- 10 to the 1? No. But in base 2, it's a problem. There is no finite binary number that exactly represents this decimal fraction. In fact, if we try and find the binary number, what we find is, we get an infinitely repeating series. Zero zero zero one one zero zero one one zero zero, and et cetera. Stop at any finite number of bits, and you get only an approximation to the decimal fraction 1/10. So on most computers, if you were to print the decimal value of the binary approximation-- and that's",
            "metrics": {
                "relativeDCReadability": 1.3510425098614105,
                "lexicalDiversity": 0.5396825396825397,
                "posComposition": {
                    "CC": 0.048,
                    "WRB": 0.016,
                    "IN": 0.079,
                    "DT": 0.127,
                    "JJ": 0.079,
                    "NN": 0.143,
                    "CD": 0.127,
                    "NNP": 0.024,
                    "PRP": 0.063,
                    "VBP": 0.048,
                    "TO": 0.048,
                    "VB": 0.024,
                    "VBZ": 0.048,
                    "NNS": 0.024,
                    ":": 0.024,
                    "WP": 0.016,
                    "EX": 0.008,
                    "WDT": 0.008,
                    "RB": 0.032,
                    "JJS": 0.008,
                    "VBD": 0.008
                },
                "syllableRate": 1.508,
                "topicScores": [
                    [
                        "fraction",
                        0.4268598369365283
                    ],
                    [
                        "number",
                        0.45060694277818636
                    ],
                    [
                        "binary",
                        0.45082389786052635
                    ],
                    [
                        "decimal",
                        0.45188397251400225
                    ],
                    [
                        "base",
                        0.5380541761156251
                    ],
                    [
                        "finite",
                        0.5738394622099068
                    ],
                    [
                        "problem",
                        0.8762960698985324
                    ],
                    [
                        "pesky",
                        0.8781305548196587
                    ],
                    [
                        "series",
                        0.8878594203541343
                    ],
                    [
                        "cetera",
                        0.8917608677377759
                    ],
                    [
                        "time",
                        0.897509634531484
                    ],
                    [
                        "the--",
                        0.897509634531484
                    ],
                    [
                        "what?--",
                        0.897509634531484
                    ],
                    [
                        "fact",
                        0.9017902188347244
                    ],
                    [
                        "bit",
                        0.9189587057366629
                    ],
                    [
                        "computer",
                        0.9210425428804621
                    ],
                    [
                        "approximation",
                        0.9280663725326083
                    ],
                    [
                        "value",
                        0.9299338774185824
                    ],
                    [
                        "decimal fraction",
                        2.1310301226869077
                    ],
                    [
                        "binary number",
                        2.7354205972691417
                    ],
                    [
                        "pesky fraction",
                        2.9948439488516607
                    ],
                    [
                        "et cetera",
                        4.1887216635488915
                    ],
                    [
                        "finite number",
                        4.545286672813552
                    ],
                    [
                        "finite binary",
                        4.557448776380899
                    ],
                    [
                        "binary approximation--",
                        5.19090896340351
                    ],
                    [
                        "decimal value",
                        5.267408880055991
                    ],
                    [
                        "finite binary number",
                        28.650047593782137
                    ]
                ],
                "topTopicSimilarity": 0.2222222222222222,
                "sharedTopicScores": [
                    [
                        "number",
                        0.45060694277818636
                    ],
                    [
                        "problem",
                        0.8762960698985324
                    ],
                    [
                        "time",
                        0.897509634531484
                    ],
                    [
                        "fact",
                        0.9017902188347244
                    ],
                    [
                        "bit",
                        0.9189587057366629
                    ],
                    [
                        "computer",
                        0.9210425428804621
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-990": {
            "id": "Pfo7r6bjSqI-990",
            "heat": 0.283,
            "start": 990.0,
            "text": " what we're printing here, on this screen, right? We think in decimal, so Python quite nicely for us is printing things in decimal-- it would have to display-- well I'm not going to write it, it's a very long number, lots of digits-- however, in Python, whenever we display something, it uses the built-in function repr, short for representation, that it converts the internal representation in this case of a number, to a string, and then displays that string in this case on the screen. For floats, it rounds it to seventeen digits. There's that magic number seventeen again. Hence, when it rounds it to seventeen digits, we get exactly what you see in the bottom of the screen up there. Answer to the mystery, why does it display this? Now why should we care? Well, it's not so much that we care about what gets displayed, but we have to think about the implications, at least sometimes we have to think about the implications,",
            "metrics": {
                "relativeDCReadability": 1.0174871446868337,
                "lexicalDiversity": 0.4682080924855491,
                "posComposition": {
                    "WP": 0.017,
                    "PRP": 0.127,
                    "VBP": 0.052,
                    "VBG": 0.023,
                    "RB": 0.104,
                    "IN": 0.127,
                    "DT": 0.087,
                    "NN": 0.104,
                    "NNS": 0.058,
                    "NNP": 0.029,
                    "VBZ": 0.058,
                    ":": 0.017,
                    "MD": 0.012,
                    "VB": 0.052,
                    "TO": 0.046,
                    "JJ": 0.035,
                    "WRB": 0.023,
                    "CC": 0.012,
                    "EX": 0.006,
                    "VBN": 0.006,
                    "JJS": 0.006
                },
                "syllableRate": 1.992,
                "topicScores": [
                    [
                        "Python",
                        0.3085677013878273
                    ],
                    [
                        "screen",
                        0.38820353715158257
                    ],
                    [
                        "number",
                        0.4191802267327206
                    ],
                    [
                        "digit",
                        0.5053848471146547
                    ],
                    [
                        "case",
                        0.5252528640642703
                    ],
                    [
                        "representation",
                        0.5364731747497207
                    ],
                    [
                        "string",
                        0.5364731747497207
                    ],
                    [
                        "implication",
                        0.5393065289125687
                    ],
                    [
                        "right",
                        0.7200382503699748
                    ],
                    [
                        "decimal",
                        0.8332885750289426
                    ],
                    [
                        "thing",
                        0.8439026263277111
                    ],
                    [
                        "function",
                        0.8484482351595822
                    ],
                    [
                        "long",
                        0.8586504261770823
                    ],
                    [
                        "lot",
                        0.8586504261770823
                    ],
                    [
                        "short",
                        0.8586504261770823
                    ],
                    [
                        "float",
                        0.8632307773533526
                    ],
                    [
                        "internal",
                        0.8679057269698465
                    ],
                    [
                        "magic",
                        0.8895157147668452
                    ],
                    [
                        "mystery",
                        0.8926988237981514
                    ],
                    [
                        "long number",
                        2.56962540904058
                    ],
                    [
                        "function repr",
                        2.683518550142273
                    ],
                    [
                        "internal representation",
                        2.816377923800243
                    ],
                    [
                        "magic number",
                        2.9329015221929726
                    ]
                ],
                "topTopicSimilarity": 0.2608695652173913,
                "sharedTopicScores": [
                    [
                        "Python",
                        0.3085677013878273
                    ],
                    [
                        "number",
                        0.4191802267327206
                    ],
                    [
                        "right",
                        0.7200382503699748
                    ],
                    [
                        "thing",
                        0.8439026263277111
                    ],
                    [
                        "function",
                        0.8484482351595822
                    ],
                    [
                        "float",
                        0.8632307773533526
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-1080": {
            "id": "Pfo7r6bjSqI-1080",
            "heat": 0.264,
            "start": 1080.0,
            "text": " of what this inexact representation of numbers means when we start doing more-or-less complex computations on those numbers. So let's look at a little example here. I'll start by starting the variable s to 0.0 . Notice I'm being careful to make it a float. And then for i in range, let's see, let's take 10, we'll increase s by 0.1 . All right, we've done that, and now, what happens when I print s? Well, again you don't get what your intuition says you should get. Notice the last two digits, which are eight and nine. Well, what's happening here? What's happened, is the error has accumulated. I had a small error when I started, but every time I added it, the error got bigger and it accumulates. Sometimes you can get in trouble in a computation because of that.",
            "metrics": {
                "relativeDCReadability": 1.0549457587527,
                "lexicalDiversity": 0.4899328859060403,
                "posComposition": {
                    "IN": 0.081,
                    "WP": 0.034,
                    "DT": 0.087,
                    "JJ": 0.054,
                    "NN": 0.114,
                    "NNS": 0.034,
                    "WRB": 0.02,
                    "PRP": 0.101,
                    "VBP": 0.047,
                    "VBG": 0.027,
                    "VB": 0.067,
                    "POS": 0.02,
                    "RB": 0.067,
                    "MD": 0.027,
                    "TO": 0.013,
                    "CD": 0.04,
                    "NNP": 0.02,
                    "CC": 0.034,
                    "VBN": 0.02,
                    "VBZ": 0.047,
                    "PRP$": 0.007,
                    "WDT": 0.007,
                    "VBD": 0.027,
                    "JJR": 0.007
                },
                "syllableRate": 1.725,
                "topicScores": [
                    [
                        "s",
                        0.4459215471092343
                    ],
                    [
                        "error",
                        0.45884962053210626
                    ],
                    [
                        "number",
                        0.5051532247930967
                    ],
                    [
                        "notice",
                        0.5350063103662257
                    ],
                    [
                        "computation",
                        0.5744696958835761
                    ],
                    [
                        "complex",
                        0.806620722808945
                    ],
                    [
                        "inexact",
                        0.8238303213347872
                    ],
                    [
                        "representation",
                        0.8238303213347872
                    ],
                    [
                        "example",
                        0.8625932483514039
                    ],
                    [
                        "float",
                        0.8700710174871996
                    ],
                    [
                        "little",
                        0.8755899112897724
                    ],
                    [
                        "careful",
                        0.8901434479173236
                    ],
                    [
                        "variable",
                        0.8953248338406871
                    ],
                    [
                        "range",
                        0.9033701345786113
                    ],
                    [
                        "digit",
                        0.9157755918650354
                    ],
                    [
                        "intuition",
                        0.9213482733967296
                    ],
                    [
                        "small",
                        0.9299988698367228
                    ],
                    [
                        "time",
                        0.9299988698367228
                    ],
                    [
                        "big",
                        0.9299988698367228
                    ],
                    [
                        "trouble",
                        0.9313879006720114
                    ],
                    [
                        "inexact representation",
                        2.1123211656093215
                    ],
                    [
                        "complex computation",
                        2.7656074211010315
                    ],
                    [
                        "little example",
                        3.0862684128814495
                    ],
                    [
                        "small error",
                        5.82404073979043
                    ]
                ],
                "topTopicSimilarity": 0.20833333333333334,
                "sharedTopicScores": [
                    [
                        "number",
                        0.5051532247930967
                    ],
                    [
                        "example",
                        0.8625932483514039
                    ],
                    [
                        "float",
                        0.8700710174871996
                    ],
                    [
                        "small",
                        0.9299988698367228
                    ],
                    [
                        "time",
                        0.9299988698367228
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-1170": {
            "id": "Pfo7r6bjSqI-1170",
            "heat": 0.243,
            "start": 1170.0,
            "text": " Now what happens, by the way, if I print s? That's kind of an interesting question. Notice that it prints one. And why is that? It's because the print command has done a rounding here. It automatically rounds. And that's kind of good, but it's also kind of bad, because that means when you're debugging your program, you can get very confused. You say, it says it's one, why am I getting a different answer when I do the computation? And that's because it's not really one inside. So you have to be careful. Now mostly, these round-off errors balance each other out. Some floats are slightly higher than they're supposed to be, some are slightly lower, and in most computations it all comes out in the wash and you get the right answer. Truth be told, most of the time, you can avoid worrying about these things. But, as we say in Latin, caveat computor. Sometimes you have to worry a little bit. Now there is one thing about floating points about which you should always worry. And that's really the point I want to drive home, and that's about the meaning of double equal.",
            "metrics": {
                "relativeDCReadability": 0.8741658411513769,
                "lexicalDiversity": 0.4396135265700483,
                "posComposition": {
                    "RB": 0.068,
                    "WP": 0.005,
                    "VBZ": 0.087,
                    "IN": 0.111,
                    "DT": 0.116,
                    "NN": 0.111,
                    "PRP": 0.106,
                    "VBP": 0.068,
                    "JJ": 0.053,
                    "NNP": 0.019,
                    "CD": 0.019,
                    "CC": 0.043,
                    "WRB": 0.019,
                    "VBN": 0.014,
                    "VBG": 0.019,
                    "PRP$": 0.005,
                    "MD": 0.014,
                    "VB": 0.039,
                    "TO": 0.019,
                    "NNS": 0.024,
                    "RP": 0.01,
                    "JJR": 0.01,
                    "JJS": 0.01,
                    "EX": 0.005,
                    "WDT": 0.005
                },
                "syllableRate": 2.283,
                "topicScores": [
                    [
                        "print",
                        0.4124990011653621
                    ],
                    [
                        "round",
                        0.5420916613531449
                    ],
                    [
                        "answer",
                        0.555439972378168
                    ],
                    [
                        "computation",
                        0.555439972378168
                    ],
                    [
                        "thing",
                        0.5612348060785723
                    ],
                    [
                        "float",
                        0.5648610363066832
                    ],
                    [
                        "Latin",
                        0.6723991434831859
                    ],
                    [
                        "way",
                        0.7842825126035551
                    ],
                    [
                        "question",
                        0.8213578906800058
                    ],
                    [
                        "interesting",
                        0.8454821292359688
                    ],
                    [
                        "confused",
                        0.8844301552656204
                    ],
                    [
                        "rounding",
                        0.8906934540804352
                    ],
                    [
                        "computor",
                        0.8933743569573569
                    ],
                    [
                        "careful",
                        0.8943913992195909
                    ],
                    [
                        "command",
                        0.8983923469636854
                    ],
                    [
                        "truth",
                        0.9003918572727014
                    ],
                    [
                        "good",
                        0.9010629413576902
                    ],
                    [
                        "bad",
                        0.9010629413576902
                    ],
                    [
                        "program",
                        0.9010629413576902
                    ],
                    [
                        "bit",
                        0.9032792712953165
                    ],
                    [
                        "equal",
                        0.9056111215867201
                    ],
                    [
                        "caveat",
                        0.909506591003327
                    ],
                    [
                        "different",
                        0.9113741636321284
                    ],
                    [
                        "error",
                        0.9117308929392207
                    ],
                    [
                        "low",
                        0.9134486792149863
                    ],
                    [
                        "right",
                        0.9134486792149863
                    ],
                    [
                        "time",
                        0.9149483505749235
                    ],
                    [
                        "little",
                        0.9174524899603194
                    ],
                    [
                        "home",
                        0.9194730993316733
                    ],
                    [
                        "double",
                        0.9194730993316733
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "print",
                        0.4124990011653621
                    ],
                    [
                        "answer",
                        0.555439972378168
                    ],
                    [
                        "thing",
                        0.5612348060785723
                    ],
                    [
                        "float",
                        0.5648610363066832
                    ],
                    [
                        "way",
                        0.7842825126035551
                    ],
                    [
                        "good",
                        0.9010629413576902
                    ],
                    [
                        "program",
                        0.9010629413576902
                    ],
                    [
                        "bit",
                        0.9032792712953165
                    ],
                    [
                        "equal",
                        0.9056111215867201
                    ],
                    [
                        "right",
                        0.9134486792149863
                    ],
                    [
                        "time",
                        0.9149483505749235
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-1260": {
            "id": "Pfo7r6bjSqI-1260",
            "heat": 0.378,
            "start": 1260.0,
            "text": " Let's look at an example of this. So we've before seen the use of import, so I'm going to import math, it gives me some useful mathematical functions, then I'm going to set the variable a to the square root of two. Whoops. Why didn't this work? Because what I should have said is math dot square root of two. Explaining to the interpreter that I want to get the function sqrt from the module math. So now I've got a here, and I can look at what a is, yeah, some approximation to the square root about of two. Now here's the interesting question. Suppose I ask about the Boolean a times a equals equals two. Now in my heart, I think, if I've taken the square root of number and then I've multiplied it by itself, I could get the original number back. After all, that's the meaning of square root. But by now, you won't be surprised if the answer of this is false, because we know what we've stored is only an",
            "metrics": {
                "relativeDCReadability": 0.8936227469316288,
                "lexicalDiversity": 0.44680851063829785,
                "posComposition": {
                    "VB": 0.048,
                    "POS": 0.005,
                    "IN": 0.122,
                    "DT": 0.138,
                    "NN": 0.122,
                    "NNP": 0.021,
                    "PRP": 0.101,
                    "VBP": 0.059,
                    "VBN": 0.027,
                    "VBG": 0.016,
                    "TO": 0.032,
                    "VBZ": 0.037,
                    "JJ": 0.069,
                    "NNS": 0.021,
                    "RB": 0.069,
                    "CD": 0.021,
                    "WRB": 0.005,
                    "VBD": 0.016,
                    "WP": 0.016,
                    "MD": 0.021,
                    "WDT": 0.011,
                    "CC": 0.016,
                    "PRP$": 0.005
                },
                "syllableRate": 2.008,
                "topicScores": [
                    [
                        "root",
                        0.30619558313465167
                    ],
                    [
                        "square",
                        0.3181615460348921
                    ],
                    [
                        "math",
                        0.4326221276926163
                    ],
                    [
                        "import",
                        0.5289215793930406
                    ],
                    [
                        "function",
                        0.5506714643439452
                    ],
                    [
                        "equal",
                        0.5577131022417607
                    ],
                    [
                        "number",
                        0.5596349405744957
                    ],
                    [
                        "Boolean",
                        0.6797630489643037
                    ],
                    [
                        "square root",
                        0.7214847443835632
                    ],
                    [
                        "whoop",
                        0.7812424197408695
                    ],
                    [
                        "example",
                        0.8066039846004506
                    ],
                    [
                        "mathematical",
                        0.8492532290081956
                    ],
                    [
                        "work",
                        0.8591327258323996
                    ],
                    [
                        "use",
                        0.8625805295437002
                    ],
                    [
                        "useful",
                        0.8625805295437002
                    ],
                    [
                        "variable",
                        0.8625805295437002
                    ],
                    [
                        "question",
                        0.8851854311726051
                    ],
                    [
                        "module",
                        0.8992860401593188
                    ],
                    [
                        "dot",
                        0.9033607673465902
                    ],
                    [
                        "approximation",
                        0.9036321701453683
                    ],
                    [
                        "interesting",
                        0.9070423256158683
                    ],
                    [
                        "interpreter",
                        0.9086657270599213
                    ],
                    [
                        "sqrt",
                        0.9086657270599213
                    ],
                    [
                        "heart",
                        0.912102831412937
                    ],
                    [
                        "false",
                        0.9171901369079023
                    ],
                    [
                        "time",
                        0.9182951063143447
                    ],
                    [
                        "original",
                        0.922173245841259
                    ],
                    [
                        "meaning",
                        0.9237048212046457
                    ],
                    [
                        "surprised",
                        0.9250413676931887
                    ],
                    [
                        "answer",
                        0.9250413676931887
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "root",
                        0.30619558313465167
                    ],
                    [
                        "square",
                        0.3181615460348921
                    ],
                    [
                        "function",
                        0.5506714643439452
                    ],
                    [
                        "equal",
                        0.5577131022417607
                    ],
                    [
                        "number",
                        0.5596349405744957
                    ],
                    [
                        "example",
                        0.8066039846004506
                    ],
                    [
                        "time",
                        0.9182951063143447
                    ],
                    [
                        "answer",
                        0.9250413676931887
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-1350": {
            "id": "Pfo7r6bjSqI-1350",
            "heat": 0.631,
            "start": 1350.0,
            "text": " approximation to the square root. And that's kind of interesting. So we can see that, by, if I look at a times a, I'll get two point a whole bunch of zeros and then a four at the end. So this means, if I've got a test in my program, in some sense it will give me the unexpected answer false. What this tells us, is that it's very risky to ever use the built-in double--equals to compare floating points, and in fact, you should never be testing for equality, you should always be testing for close enough. So typically, what you want to do in your program, is ask the following question: is the absolute value of a times a minus 2.0 less than epsilon? If we could easily type Greek, we'd have written it that way, but we can't. So that's some small value chosen to be appropriate for the application. Saying, if these two things are within epsilon of each other, then I'm going to treat them as equal.",
            "metrics": {
                "relativeDCReadability": 0.9183983324192341,
                "lexicalDiversity": 0.4725274725274725,
                "posComposition": {
                    "NN": 0.132,
                    "TO": 0.033,
                    "DT": 0.121,
                    "JJ": 0.06,
                    "CC": 0.022,
                    "VBZ": 0.044,
                    "IN": 0.143,
                    "VBG": 0.033,
                    "PRP": 0.093,
                    "MD": 0.044,
                    "VB": 0.071,
                    "VBP": 0.027,
                    "NNS": 0.027,
                    "CD": 0.022,
                    "RB": 0.055,
                    "VBD": 0.011,
                    "PRP$": 0.011,
                    "WP": 0.011,
                    ":": 0.005,
                    "NNP": 0.011,
                    "PDT": 0.005,
                    "JJR": 0.005,
                    "VBN": 0.011
                },
                "syllableRate": 2.008,
                "topicScores": [
                    [
                        "test",
                        0.4220975890060853
                    ],
                    [
                        "time",
                        0.5098110025707551
                    ],
                    [
                        "program",
                        0.5189203458936247
                    ],
                    [
                        "point",
                        0.5294541679561737
                    ],
                    [
                        "equal",
                        0.5323571763003846
                    ],
                    [
                        "epsilon",
                        0.5405848575771172
                    ],
                    [
                        "value",
                        0.5504048511817261
                    ],
                    [
                        "Greek",
                        0.6313463584495589
                    ],
                    [
                        "approximation",
                        0.7080667164455351
                    ],
                    [
                        "root",
                        0.7080667164455351
                    ],
                    [
                        "square",
                        0.7496476663472151
                    ],
                    [
                        "interesting",
                        0.7849603234325415
                    ],
                    [
                        "end",
                        0.8160513663504569
                    ],
                    [
                        "false",
                        0.8333733403551994
                    ],
                    [
                        "bunch",
                        0.8579201867532547
                    ],
                    [
                        "zero",
                        0.8579201867532547
                    ],
                    [
                        "double",
                        0.8582939534916434
                    ],
                    [
                        "answer",
                        0.8606197574838307
                    ],
                    [
                        "application",
                        0.86343282298427
                    ],
                    [
                        "fact",
                        0.8703185703630157
                    ],
                    [
                        "equality",
                        0.8703185703630157
                    ],
                    [
                        "close",
                        0.8703185703630157
                    ],
                    [
                        "sense",
                        0.8719182960917805
                    ],
                    [
                        "unexpected",
                        0.8719182960917805
                    ],
                    [
                        "question",
                        0.87719077869652
                    ],
                    [
                        "risky",
                        0.8809396635941985
                    ],
                    [
                        "way",
                        0.8823656664527629
                    ],
                    [
                        "absolute",
                        0.8873218983487905
                    ],
                    [
                        "small",
                        0.895892911892691
                    ],
                    [
                        "appropriate",
                        0.895892911892691
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "time",
                        0.5098110025707551
                    ],
                    [
                        "program",
                        0.5189203458936247
                    ],
                    [
                        "equal",
                        0.5323571763003846
                    ],
                    [
                        "epsilon",
                        0.5405848575771172
                    ],
                    [
                        "root",
                        0.7080667164455351
                    ],
                    [
                        "square",
                        0.7496476663472151
                    ],
                    [
                        "zero",
                        0.8579201867532547
                    ],
                    [
                        "answer",
                        0.8606197574838307
                    ],
                    [
                        "fact",
                        0.8703185703630157
                    ],
                    [
                        "way",
                        0.8823656664527629
                    ],
                    [
                        "small",
                        0.895892911892691
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-1440": {
            "id": "Pfo7r6bjSqI-1440",
            "heat": 0.52,
            "start": 1440.0,
            "text": " And so what I typically do when I'm writing a Python code that's going to deal with floating point numbers, and I do this from time to time, is I introduce a function called almost equal, or near, or pick your favorite word, that does this for me. And wherever I would normally written double x equals y, instead I write, near x,y, and it computes it for me. Not a big deal, but keep this in mind, or as soon as you start dealing with numbers, you will get very frustrated in trying to understand what your program does. OK. Enough of numbers for a while, I'm sure some of you will find this a relief. I now want to get away from details of floating point, and talk about general methods again, returning to the real theme of the course of solving problems using computers. Last week, we looked at the rather silly problem of finding the square root of a perfect square. Well, that's not usually what you need. Let's think about the more useful problem of finding the square root of a real number. Well, you've just seen how you do that. You import math and you call sqrt.",
            "metrics": {
                "relativeDCReadability": 1.000540716630664,
                "lexicalDiversity": 0.49047619047619045,
                "posComposition": {
                    "CC": 0.048,
                    "RB": 0.076,
                    "WP": 0.014,
                    "PRP": 0.1,
                    "VBP": 0.067,
                    "WRB": 0.014,
                    "VBG": 0.052,
                    "DT": 0.086,
                    "NNP": 0.029,
                    "NN": 0.105,
                    "WDT": 0.014,
                    "VBZ": 0.029,
                    "TO": 0.024,
                    "VB": 0.052,
                    "IN": 0.114,
                    "NNS": 0.043,
                    "VBN": 0.019,
                    "JJ": 0.076,
                    "PRP$": 0.01,
                    "MD": 0.014,
                    "VBD": 0.005,
                    "POS": 0.005,
                    "RBR": 0.005
                },
                "syllableRate": 2.283,
                "topicScores": [
                    [
                        "number",
                        0.3626462084008074
                    ],
                    [
                        "square",
                        0.41211315615044947
                    ],
                    [
                        "deal",
                        0.416187988324285
                    ],
                    [
                        "problem",
                        0.42959351539461316
                    ],
                    [
                        "near",
                        0.4944663996280297
                    ],
                    [
                        "equal",
                        0.5096514410831087
                    ],
                    [
                        "y",
                        0.5118205681713809
                    ],
                    [
                        "Python",
                        0.5178665193338798
                    ],
                    [
                        "time",
                        0.5189300565653477
                    ],
                    [
                        "x",
                        0.5191224163531493
                    ],
                    [
                        "point",
                        0.5226506683887385
                    ],
                    [
                        "root",
                        0.5248241321046782
                    ],
                    [
                        "real",
                        0.5531126974557888
                    ],
                    [
                        "Python code",
                        0.7809391467509985
                    ],
                    [
                        "favorite",
                        0.8353655254768781
                    ],
                    [
                        "word",
                        0.8353655254768781
                    ],
                    [
                        "function",
                        0.8467403953064309
                    ],
                    [
                        "relief",
                        0.8702034562158835
                    ],
                    [
                        "double",
                        0.8703741588070927
                    ],
                    [
                        "big",
                        0.8742485133620517
                    ],
                    [
                        "mind",
                        0.8742485133620517
                    ],
                    [
                        "program",
                        0.8742485133620517
                    ],
                    [
                        "computer",
                        0.8756310286321063
                    ],
                    [
                        "frustrated",
                        0.8833121546481306
                    ],
                    [
                        "week",
                        0.8893901633542284
                    ],
                    [
                        "sqrt",
                        0.8908147483365257
                    ],
                    [
                        "method",
                        0.894129657648422
                    ],
                    [
                        "sure",
                        0.8975065616194227
                    ],
                    [
                        "perfect",
                        0.8978380602407909
                    ],
                    [
                        "detail",
                        0.9019211068301028
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "number",
                        0.3626462084008074
                    ],
                    [
                        "square",
                        0.41211315615044947
                    ],
                    [
                        "problem",
                        0.42959351539461316
                    ],
                    [
                        "equal",
                        0.5096514410831087
                    ],
                    [
                        "Python",
                        0.5178665193338798
                    ],
                    [
                        "time",
                        0.5189300565653477
                    ],
                    [
                        "root",
                        0.5248241321046782
                    ],
                    [
                        "function",
                        0.8467403953064309
                    ],
                    [
                        "program",
                        0.8742485133620517
                    ],
                    [
                        "computer",
                        0.8756310286321063
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-1530": {
            "id": "Pfo7r6bjSqI-1530",
            "heat": 0.486,
            "start": 1530.0,
            "text": " Let's pretend that we didn't know that trick, or let's pretend it's your job to introduce-- implement, rather-- math. And so, you need to figure out how to implement square root. Why might this be a challenge? What are some of the issues? And there are several. One is, what we've just seen might not be an exact answer. For example, the square root of two. So we need to worry about that, and clearly the way we're going to solve that, as we'll see, is using a concept similar to epsilon. In fact, we'll even call it epsilon. Another problem with the method we looked at last time is, there we were doing exhaustive enumeration. We were enumerating all the possible answers, checking each one, and if it was good, stopping. Well, the problem with reals, as opposed to integers, is we can't enumerate all guesses.",
            "metrics": {
                "relativeDCReadability": 0.9754364429620103,
                "lexicalDiversity": 0.4936708860759494,
                "posComposition": {
                    "VB": 0.101,
                    "POS": 0.006,
                    "IN": 0.089,
                    "PRP": 0.095,
                    "VBD": 0.032,
                    "RB": 0.057,
                    "DT": 0.101,
                    "NN": 0.114,
                    "CC": 0.032,
                    "VBZ": 0.038,
                    "PRP$": 0.006,
                    "TO": 0.044,
                    ":": 0.013,
                    "VBP": 0.038,
                    "RP": 0.006,
                    "WRB": 0.013,
                    "JJ": 0.057,
                    "MD": 0.032,
                    "WP": 0.013,
                    "NNS": 0.032,
                    "EX": 0.006,
                    "CD": 0.019,
                    "VBN": 0.013,
                    "VBG": 0.032,
                    "PDT": 0.006,
                    "NNP": 0.006
                },
                "syllableRate": 1.808,
                "topicScores": [
                    [
                        "implement",
                        0.4886232485925755
                    ],
                    [
                        "square",
                        0.5299460854743318
                    ],
                    [
                        "epsilon",
                        0.5303769288128033
                    ],
                    [
                        "root",
                        0.5310986846642994
                    ],
                    [
                        "answer",
                        0.550157527019345
                    ],
                    [
                        "problem",
                        0.5521331999220698
                    ],
                    [
                        "math",
                        0.7269711870226636
                    ],
                    [
                        "rather--",
                        0.7667465269005526
                    ],
                    [
                        "trick",
                        0.7837425299671142
                    ],
                    [
                        "introduce--",
                        0.7837425299671142
                    ],
                    [
                        "job",
                        0.7990955178287071
                    ],
                    [
                        "challenge",
                        0.8443886966437246
                    ],
                    [
                        "issue",
                        0.8595016402949651
                    ],
                    [
                        "enumeration",
                        0.8915885163027064
                    ],
                    [
                        "example",
                        0.8917094153265777
                    ],
                    [
                        "guess",
                        0.8959612675482973
                    ],
                    [
                        "exact",
                        0.8963182300576379
                    ],
                    [
                        "fact",
                        0.8985615146417418
                    ],
                    [
                        "time",
                        0.9094746840825738
                    ],
                    [
                        "exhaustive",
                        0.9094746840825738
                    ],
                    [
                        "possible",
                        0.9114739279173751
                    ],
                    [
                        "good",
                        0.9114739279173751
                    ],
                    [
                        "way",
                        0.9120348382636982
                    ],
                    [
                        "concept",
                        0.9120348382636982
                    ],
                    [
                        "similar",
                        0.9120348382636982
                    ],
                    [
                        "real",
                        0.913196238825775
                    ],
                    [
                        "integer",
                        0.913196238825775
                    ],
                    [
                        "method",
                        0.9168484731325439
                    ],
                    [
                        "rather-- math",
                        1.2593898520923215
                    ],
                    [
                        "square root",
                        1.5227190563847215
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "square",
                        0.5299460854743318
                    ],
                    [
                        "epsilon",
                        0.5303769288128033
                    ],
                    [
                        "root",
                        0.5310986846642994
                    ],
                    [
                        "answer",
                        0.550157527019345
                    ],
                    [
                        "problem",
                        0.5521331999220698
                    ],
                    [
                        "example",
                        0.8917094153265777
                    ],
                    [
                        "guess",
                        0.8959612675482973
                    ],
                    [
                        "fact",
                        0.8985615146417418
                    ],
                    [
                        "time",
                        0.9094746840825738
                    ],
                    [
                        "good",
                        0.9114739279173751
                    ],
                    [
                        "way",
                        0.9120348382636982
                    ],
                    [
                        "integer",
                        0.913196238825775
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-1620": {
            "id": "Pfo7r6bjSqI-1620",
            "heat": 0.549,
            "start": 1620.0,
            "text": " And that's because the reals are uncountable. If I ask you to enumerate the positive integers, you'll say one, two, three, four, five. If I ask you to enumerate the reals, the positive reals, where do you start? One over a billion, plus who knows? Now as we've just seen in fact, since there's a limit to the precision floating point, technically you can enumerate all the floating point numbers. And I say technically, because if you tried to do that, your computation would not terminate any time soon. So even though in some, in principle you could enumerate them, in fact you really can't. And so we think of the floating points, like the reals, as being innumerable. Or not innumerable, as to say as being uncountable. So we can't do that. So we have to find something clever, because we're now searching a very large space of possible answers. What would, technically you might call a large state space. So we're going to take our previous method of guess and",
            "metrics": {
                "relativeDCReadability": 0.9649097653330759,
                "lexicalDiversity": 0.4888888888888889,
                "posComposition": {
                    "CC": 0.033,
                    "DT": 0.094,
                    "VBZ": 0.017,
                    "IN": 0.128,
                    "NNS": 0.044,
                    "VBP": 0.056,
                    "JJ": 0.056,
                    "PRP": 0.106,
                    "TO": 0.039,
                    "VB": 0.072,
                    "MD": 0.044,
                    "CD": 0.039,
                    "WRB": 0.006,
                    "WP": 0.011,
                    "RB": 0.094,
                    "VBN": 0.006,
                    "NN": 0.083,
                    "EX": 0.006,
                    "VBG": 0.039,
                    "PDT": 0.006,
                    "VBD": 0.006,
                    "PRP$": 0.011,
                    "NNP": 0.006
                },
                "syllableRate": 2.142,
                "topicScores": [
                    [
                        "real",
                        0.36062049652960365
                    ],
                    [
                        "point",
                        0.4234134385281515
                    ],
                    [
                        "uncountable",
                        0.517498368688214
                    ],
                    [
                        "positive",
                        0.5200969753896915
                    ],
                    [
                        "fact",
                        0.5465979560830174
                    ],
                    [
                        "innumerable",
                        0.5560425313611402
                    ],
                    [
                        "space",
                        0.5582241961098057
                    ],
                    [
                        "large",
                        0.5605104118438607
                    ],
                    [
                        "integer",
                        0.8794796318704189
                    ],
                    [
                        "number",
                        0.8888491750749857
                    ],
                    [
                        "answer",
                        0.9068166424049346
                    ],
                    [
                        "computation",
                        0.9090421681565299
                    ],
                    [
                        "time",
                        0.9090421681565299
                    ],
                    [
                        "limit",
                        0.9117108966330632
                    ],
                    [
                        "precision",
                        0.9117108966330632
                    ],
                    [
                        "principle",
                        0.9122794651636047
                    ],
                    [
                        "clever",
                        0.9205171155836683
                    ],
                    [
                        "possible",
                        0.9205171155836683
                    ],
                    [
                        "state",
                        0.9219047833710126
                    ],
                    [
                        "guess",
                        0.9231295956790662
                    ],
                    [
                        "previous",
                        0.9287266968596599
                    ],
                    [
                        "method",
                        0.9287266968596599
                    ],
                    [
                        "positive real",
                        2.2283450376663403
                    ],
                    [
                        "positive integer",
                        2.6361671664000443
                    ],
                    [
                        "point number",
                        3.0436940732727544
                    ],
                    [
                        "large space",
                        3.6732046123786164
                    ],
                    [
                        "state space",
                        4.4250101885566435
                    ],
                    [
                        "possible answer",
                        5.051079828390584
                    ],
                    [
                        "previous method",
                        6.274487828921385
                    ],
                    [
                        "large state space",
                        25.36463937315107
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "fact",
                        0.5465979560830174
                    ],
                    [
                        "integer",
                        0.8794796318704189
                    ],
                    [
                        "number",
                        0.8888491750749857
                    ],
                    [
                        "answer",
                        0.9068166424049346
                    ],
                    [
                        "time",
                        0.9090421681565299
                    ],
                    [
                        "guess",
                        0.9231295956790662
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-1710": {
            "id": "Pfo7r6bjSqI-1710",
            "heat": 0.535,
            "start": 1710.0,
            "text": " check, and replace it by something called guess, check, and improve. Previously, we just generated guesses in some systematic way, but without knowing that we were getting closer to the answer. Think of the original barnyard problem with the chickens and the heads and the legs, we just enumerated possibilities, but we didn't know that one guess was better than the previous guess. Now, we're going to find a way to do the enumeration where we have good reason to believe, at least with high probability, that each guess is better than the previous guess. This is what's called successive approximation. And that's a very important concept. Many problems are solved computationally using successive approximation. Every successive approximation method has",
            "metrics": {
                "relativeDCReadability": 1.0310099944047444,
                "lexicalDiversity": 0.532258064516129,
                "posComposition": {
                    "NN": 0.169,
                    "CC": 0.056,
                    "VB": 0.048,
                    "PRP": 0.056,
                    "IN": 0.097,
                    "VBN": 0.024,
                    "NNP": 0.024,
                    "RB": 0.048,
                    "VBD": 0.048,
                    "NNS": 0.04,
                    "DT": 0.113,
                    "JJ": 0.089,
                    "VBG": 0.032,
                    "JJR": 0.016,
                    "TO": 0.032,
                    "CD": 0.008,
                    "VBP": 0.024,
                    "WRB": 0.008,
                    "JJS": 0.008,
                    "VBZ": 0.04,
                    "RBR": 0.008,
                    "WP": 0.008
                },
                "syllableRate": 1.717,
                "topicScores": [
                    [
                        "guess",
                        0.31041927535633906
                    ],
                    [
                        "approximation",
                        0.43240986767477924
                    ],
                    [
                        "successive",
                        0.4351138147018637
                    ],
                    [
                        "check",
                        0.48532905183136654
                    ],
                    [
                        "previous",
                        0.5072672023551956
                    ],
                    [
                        "well",
                        0.5195996061208823
                    ],
                    [
                        "way",
                        0.5582944530916439
                    ],
                    [
                        "problem",
                        0.5671438558285614
                    ],
                    [
                        "answer",
                        0.8393677391251466
                    ],
                    [
                        "systematic",
                        0.874322801836397
                    ],
                    [
                        "concept",
                        0.8773977546576857
                    ],
                    [
                        "leg",
                        0.886917887243185
                    ],
                    [
                        "possibility",
                        0.886917887243185
                    ],
                    [
                        "close",
                        0.8878345094972712
                    ],
                    [
                        "high",
                        0.8950099810160085
                    ],
                    [
                        "probability",
                        0.8950099810160085
                    ],
                    [
                        "original",
                        0.89923154779692
                    ],
                    [
                        "barnyard",
                        0.89923154779692
                    ],
                    [
                        "chicken",
                        0.89923154779692
                    ],
                    [
                        "head",
                        0.89923154779692
                    ],
                    [
                        "important",
                        0.9050136456865289
                    ],
                    [
                        "enumeration",
                        0.9065353405513147
                    ],
                    [
                        "good",
                        0.9065353405513147
                    ],
                    [
                        "reason",
                        0.9065353405513147
                    ],
                    [
                        "method",
                        0.9111078377691557
                    ],
                    [
                        "previous guess",
                        1.4767434373353723
                    ],
                    [
                        "successive approximation",
                        1.5209371363287314
                    ],
                    [
                        "systematic way",
                        3.4182699202371265
                    ],
                    [
                        "approximation method",
                        3.7157363363812035
                    ],
                    [
                        "important concept",
                        3.8557111038576104
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "guess",
                        0.31041927535633906
                    ],
                    [
                        "way",
                        0.5582944530916439
                    ],
                    [
                        "problem",
                        0.5671438558285614
                    ],
                    [
                        "answer",
                        0.8393677391251466
                    ],
                    [
                        "good",
                        0.9065353405513147
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-1800": {
            "id": "Pfo7r6bjSqI-1800",
            "heat": 0.552,
            "start": 1800.0,
            "text": " the same rough structure. You start with some guess, which would be the initial guess, you then iterate-- and in a minute I'll tell you why I'm doing it this particular way, over some range. I've chosen one hundred, but doesn't have to be one hundred, just some number there-- if f of x, that is to say some some function of my-- Whoops, I shouldn't have said x. My notes say x, but it's the wrong thing-- if f of x, f of the guess, is close enough, so for example, if when I square guess, I get close enough to the number who's root I'm-- square root I'm looking for, then I'll return the guess. If it's not close enough, I'll get a better guess.",
            "metrics": {
                "relativeDCReadability": 0.9757556695124968,
                "lexicalDiversity": 0.5,
                "posComposition": {
                    "DT": 0.097,
                    "JJ": 0.069,
                    "NN": 0.146,
                    "PRP": 0.111,
                    "VBP": 0.056,
                    "IN": 0.097,
                    "WDT": 0.014,
                    "MD": 0.035,
                    "VB": 0.062,
                    "RB": 0.083,
                    ":": 0.035,
                    "CC": 0.021,
                    "WRB": 0.014,
                    "VBG": 0.014,
                    "VBN": 0.021,
                    "CD": 0.014,
                    "VBZ": 0.042,
                    "TO": 0.021,
                    "PRP$": 0.007,
                    "VBD": 0.007,
                    "NNP": 0.014,
                    "NNS": 0.007,
                    "WP": 0.007,
                    "JJR": 0.007
                },
                "syllableRate": 1.408,
                "topicScores": [
                    [
                        "guess",
                        0.2943309666954891
                    ],
                    [
                        "close",
                        0.39218216439023396
                    ],
                    [
                        "f",
                        0.393293711072995
                    ],
                    [
                        "x",
                        0.40010955701748185
                    ],
                    [
                        "number",
                        0.5251858891557083
                    ],
                    [
                        "square",
                        0.5452372613552035
                    ],
                    [
                        "root",
                        0.5506748373381832
                    ],
                    [
                        "Whoops",
                        0.5515334693467993
                    ],
                    [
                        "structure",
                        0.6931903087921787
                    ],
                    [
                        "rough",
                        0.7361004304897124
                    ],
                    [
                        "range",
                        0.7727446730563521
                    ],
                    [
                        "initial",
                        0.807616345205549
                    ],
                    [
                        "particular",
                        0.807616345205549
                    ],
                    [
                        "way",
                        0.807616345205549
                    ],
                    [
                        "minute",
                        0.8223244474451853
                    ],
                    [
                        "function",
                        0.8290586035559641
                    ],
                    [
                        "my--",
                        0.8361156128468687
                    ],
                    [
                        "note",
                        0.8518911035579791
                    ],
                    [
                        "example",
                        0.8518911035579791
                    ],
                    [
                        "my-- Whoops",
                        0.8557893720187412
                    ],
                    [
                        "well",
                        0.8620999787574724
                    ],
                    [
                        "wrong",
                        0.8637852198911338
                    ],
                    [
                        "thing--",
                        0.8637852198911338
                    ],
                    [
                        "I'm--",
                        0.8637852198911338
                    ],
                    [
                        "rough structure",
                        1.0418901303523784
                    ],
                    [
                        "particular way",
                        1.8755807609146558
                    ],
                    [
                        "initial guess",
                        2.0059503839942665
                    ],
                    [
                        "well guess",
                        2.4763972100177325
                    ],
                    [
                        "wrong thing--",
                        2.938944875007103
                    ],
                    [
                        "I'm-- square",
                        2.944251025735427
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "guess",
                        0.2943309666954891
                    ],
                    [
                        "number",
                        0.5251858891557083
                    ],
                    [
                        "square",
                        0.5452372613552035
                    ],
                    [
                        "root",
                        0.5506748373381832
                    ],
                    [
                        "way",
                        0.807616345205549
                    ],
                    [
                        "function",
                        0.8290586035559641
                    ],
                    [
                        "example",
                        0.8518911035579791
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-1890": {
            "id": "Pfo7r6bjSqI-1890",
            "heat": 0.545,
            "start": 1890.0,
            "text": " If I do my, in this case, one hundred iterations, and I've not get-- gotten a guess that's good enough, I'm going to quit with some error. Saying, wow. I thought my method was good enough that a hundred guesses should've gotten me there. If it didn't, I may be wrong. I always like to have some limit, so that my program can't spin off into the ether, guessing forever. OK. Let's look at an example of that. So here's a successive approximation to the square root. I've called it square root bi. The bi is not a reference to the sexual preferences of the function, but a reference to the fact that this is an example of what's called a bi-section method.",
            "metrics": {
                "relativeDCReadability": 1.1187443403560762,
                "lexicalDiversity": 0.4925373134328358,
                "posComposition": {
                    "IN": 0.097,
                    "PRP": 0.075,
                    "VBP": 0.045,
                    "PRP$": 0.022,
                    "DT": 0.142,
                    "NN": 0.157,
                    "CD": 0.007,
                    "VBN": 0.022,
                    "NNS": 0.022,
                    "CC": 0.015,
                    "RB": 0.075,
                    "VB": 0.052,
                    ":": 0.007,
                    "WDT": 0.007,
                    "VBZ": 0.037,
                    "JJ": 0.06,
                    "VBG": 0.022,
                    "TO": 0.037,
                    "VBD": 0.03,
                    "MD": 0.022,
                    "RP": 0.007,
                    "NNP": 0.022,
                    "POS": 0.007,
                    "WP": 0.007
                },
                "syllableRate": 1.492,
                "topicScores": [
                    [
                        "guess",
                        0.4325207894381477
                    ],
                    [
                        "bi",
                        0.45543722935903425
                    ],
                    [
                        "good",
                        0.510199031582657
                    ],
                    [
                        "root",
                        0.5537180602025985
                    ],
                    [
                        "method",
                        0.5592481961277846
                    ],
                    [
                        "example",
                        0.5641894407817258
                    ],
                    [
                        "reference",
                        0.5655102134427253
                    ],
                    [
                        "square",
                        0.5662370513680146
                    ],
                    [
                        "error",
                        0.7490116195145844
                    ],
                    [
                        "case",
                        0.7989186444751136
                    ],
                    [
                        "iteration",
                        0.7989186444751136
                    ],
                    [
                        "wrong",
                        0.8602130743606017
                    ],
                    [
                        "limit",
                        0.8990391620711242
                    ],
                    [
                        "ether",
                        0.8990391620711242
                    ],
                    [
                        "section",
                        0.9056114468774046
                    ],
                    [
                        "program",
                        0.9101666100863004
                    ],
                    [
                        "function",
                        0.9167644694684832
                    ],
                    [
                        "successive",
                        0.9217750829786876
                    ],
                    [
                        "approximation",
                        0.9217750829786876
                    ],
                    [
                        "sexual",
                        0.9260989004545127
                    ],
                    [
                        "fact",
                        0.9260989004545127
                    ],
                    [
                        "square root",
                        2.3400375853477646
                    ],
                    [
                        "root bi",
                        3.9851391355499697
                    ],
                    [
                        "section method",
                        4.069004187480572
                    ],
                    [
                        "successive approximation",
                        5.652001380620478
                    ],
                    [
                        "sexual preference",
                        6.025391267202234
                    ],
                    [
                        "square root bi",
                        23.63342711130364
                    ]
                ],
                "topTopicSimilarity": 0.2962962962962963,
                "sharedTopicScores": [
                    [
                        "guess",
                        0.4325207894381477
                    ],
                    [
                        "good",
                        0.510199031582657
                    ],
                    [
                        "root",
                        0.5537180602025985
                    ],
                    [
                        "example",
                        0.5641894407817258
                    ],
                    [
                        "square",
                        0.5662370513680146
                    ],
                    [
                        "program",
                        0.9101666100863004
                    ],
                    [
                        "function",
                        0.9167644694684832
                    ],
                    [
                        "fact",
                        0.9260989004545127
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-1980": {
            "id": "Pfo7r6bjSqI-1980",
            "heat": 0.787,
            "start": 1980.0,
            "text": " The basic idea behind any bi-section method is the same, and we'll see lots of examples of this semester, is that you have some linearly-arranged space of possible answers. And it has the property that if I take a guess somewhere, let's say there, I guess that's the answer to the question, if it turns out that's not the answer, I can easily determine whether the answer lies to the left or the right of the guess. So if I guess that 89.12 is the square root of a number, and it turns out not to be the square root of the number, I have a way of saying, is 89.12 too big or too small. If it was too big, then I know I'd better guess some number over here. It was too small, then I'd better guess some number over here. Why do I call it bi-section? Because I'm dividing it in half, and in general as we'll see, when I know what my space of answers is, I always, as my",
            "metrics": {
                "relativeDCReadability": 0.9676538046141941,
                "lexicalDiversity": 0.4010989010989011,
                "posComposition": {
                    "DT": 0.126,
                    "JJ": 0.066,
                    "NN": 0.126,
                    "IN": 0.137,
                    "VBZ": 0.06,
                    "CC": 0.033,
                    "PRP": 0.121,
                    "MD": 0.027,
                    "VB": 0.06,
                    "NNS": 0.022,
                    "VBP": 0.049,
                    "RB": 0.071,
                    "POS": 0.005,
                    "EX": 0.005,
                    "TO": 0.016,
                    "RP": 0.011,
                    "CD": 0.011,
                    "VBG": 0.011,
                    "VBD": 0.011,
                    "WRB": 0.011,
                    "WP": 0.005,
                    "PRP$": 0.011
                },
                "syllableRate": 1.917,
                "topicScores": [
                    [
                        "guess",
                        0.2844415502904634
                    ],
                    [
                        "answer",
                        0.3108858800865234
                    ],
                    [
                        "number",
                        0.34163605488967114
                    ],
                    [
                        "section",
                        0.4903706015987471
                    ],
                    [
                        "square",
                        0.5062657962832683
                    ],
                    [
                        "bi",
                        0.5092431395279627
                    ],
                    [
                        "small",
                        0.5102108373120797
                    ],
                    [
                        "root",
                        0.5194957204366097
                    ],
                    [
                        "big",
                        0.5211747162178614
                    ],
                    [
                        "space",
                        0.5259706673371484
                    ],
                    [
                        "basic",
                        0.7640885845666456
                    ],
                    [
                        "method",
                        0.7640885845666456
                    ],
                    [
                        "semester",
                        0.7640885845666456
                    ],
                    [
                        "possible",
                        0.7640885845666456
                    ],
                    [
                        "idea",
                        0.7812229980653999
                    ],
                    [
                        "lot",
                        0.7812229980653999
                    ],
                    [
                        "example",
                        0.7812229980653999
                    ],
                    [
                        "question",
                        0.8297737937012829
                    ],
                    [
                        "property",
                        0.8431169791845884
                    ],
                    [
                        "left",
                        0.8431169791845884
                    ],
                    [
                        "right",
                        0.8431169791845884
                    ],
                    [
                        "way",
                        0.8672218809553658
                    ],
                    [
                        "half",
                        0.8902716534360823
                    ],
                    [
                        "general",
                        0.8994473671988578
                    ],
                    [
                        "square root",
                        1.2285263406354225
                    ],
                    [
                        "section method",
                        1.4622304744410672
                    ],
                    [
                        "basic idea",
                        1.4809190950826256
                    ],
                    [
                        "possible answer",
                        1.5909638327349385
                    ]
                ],
                "topTopicSimilarity": 0.32142857142857145,
                "sharedTopicScores": [
                    [
                        "guess",
                        0.2844415502904634
                    ],
                    [
                        "answer",
                        0.3108858800865234
                    ],
                    [
                        "number",
                        0.34163605488967114
                    ],
                    [
                        "square",
                        0.5062657962832683
                    ],
                    [
                        "small",
                        0.5102108373120797
                    ],
                    [
                        "root",
                        0.5194957204366097
                    ],
                    [
                        "example",
                        0.7812229980653999
                    ],
                    [
                        "right",
                        0.8431169791845884
                    ],
                    [
                        "way",
                        0.8672218809553658
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-2070": {
            "id": "Pfo7r6bjSqI-2070",
            "heat": 0.813,
            "start": 2070.0,
            "text": " next guess, choose something half-way along that line. So I made a guess, and let's say was too small, and I know the answer is between here and here, this was too small, I now know that the answer is between here and here, so my next guess will be in the middle. The beauty of always guessing in the middle is, at each guess, if it's wrong, I get to throw out half of the state space. So I know how long it's going to take me to search the possibilities in some sense, because I'm getting logarithmically progressed. This is exactly what we saw when we looked at recursion in some sense, where we solved the problem by, at each step, solving a smaller problem. The same problem, but on a smaller solution space. Now as it happens, I'm not using recursion in this implementation we have up on the screen, I'm doing it iteratively but the idea is the same. So we'll take a quick look at it now, then we'll quit and we'll come back to in the next lecture a little more thoroughly. I'm going to warn you right now, that there's a bug in this code, and in the next lecture, we'll see if we can discover what that is.",
            "metrics": {
                "relativeDCReadability": 0.9364449055832774,
                "lexicalDiversity": 0.41228070175438597,
                "posComposition": {
                    "JJ": 0.057,
                    "NN": 0.145,
                    "RB": 0.092,
                    "IN": 0.118,
                    "DT": 0.132,
                    "PRP": 0.11,
                    "VBD": 0.026,
                    "CC": 0.035,
                    "POS": 0.004,
                    "VB": 0.048,
                    "VBP": 0.039,
                    "VBZ": 0.044,
                    "PRP$": 0.004,
                    "MD": 0.026,
                    "VBG": 0.031,
                    "TO": 0.022,
                    "RP": 0.009,
                    "NNP": 0.009,
                    "WRB": 0.013,
                    "NNS": 0.004,
                    "VBN": 0.004,
                    "WP": 0.009,
                    "JJR": 0.009,
                    "RBR": 0.004,
                    "EX": 0.004
                },
                "syllableRate": 2.408,
                "topicScores": [
                    [
                        "guess",
                        0.3067025697046985
                    ],
                    [
                        "small",
                        0.3421647534783239
                    ],
                    [
                        "problem",
                        0.414035138816166
                    ],
                    [
                        "middle",
                        0.47296312639551225
                    ],
                    [
                        "answer",
                        0.4948836544366455
                    ],
                    [
                        "half",
                        0.4997137947021517
                    ],
                    [
                        "space",
                        0.5005561361304335
                    ],
                    [
                        "sense",
                        0.5081906915968426
                    ],
                    [
                        "lecture",
                        0.533491894330906
                    ],
                    [
                        "recursion",
                        0.5387279266126057
                    ],
                    [
                        "look",
                        0.540742287832739
                    ],
                    [
                        "line",
                        0.7358588356102843
                    ],
                    [
                        "way",
                        0.7669766768892524
                    ],
                    [
                        "beauty",
                        0.8575545370608241
                    ],
                    [
                        "wrong",
                        0.8575545370608241
                    ],
                    [
                        "state",
                        0.8575545370608241
                    ],
                    [
                        "possibility",
                        0.880109999115314
                    ],
                    [
                        "step",
                        0.8806250125279133
                    ],
                    [
                        "solution",
                        0.8870219510364298
                    ],
                    [
                        "screen",
                        0.8918336592734128
                    ],
                    [
                        "code",
                        0.8986787903134686
                    ],
                    [
                        "implementation",
                        0.8991713274404999
                    ],
                    [
                        "idea",
                        0.8991713274404999
                    ],
                    [
                        "quick",
                        0.9027223447480535
                    ],
                    [
                        "little",
                        0.9027223447480535
                    ],
                    [
                        "bug",
                        0.9056012568172448
                    ],
                    [
                        "small problem",
                        1.9230098984988695
                    ],
                    [
                        "state space",
                        2.1284392050733025
                    ],
                    [
                        "solution space",
                        2.3753010925450933
                    ],
                    [
                        "small solution",
                        2.386649733308682
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "guess",
                        0.3067025697046985
                    ],
                    [
                        "small",
                        0.3421647534783239
                    ],
                    [
                        "problem",
                        0.414035138816166
                    ],
                    [
                        "answer",
                        0.4948836544366455
                    ],
                    [
                        "lecture",
                        0.533491894330906
                    ],
                    [
                        "look",
                        0.540742287832739
                    ],
                    [
                        "way",
                        0.7669766768892524
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-2160": {
            "id": "Pfo7r6bjSqI-2160",
            "heat": 0.541,
            "start": 2160.0,
            "text": " So, it takes two arguments; x, the number whose square root we're looking for, and epsilon, how close we need to get. It assumes that x is non-negative, and that epsilon is greater than zero. Why do we need to assume that's epsilon is greater than zero? Well, if you made epsilon zero, and then say, we're looking for the square root of two, we know we'll never get an answer. So, we want it to be positive, and then it returns y such that y times y is within epsilon of x. It's near, to use the terminology we used before. The next thing we see in the program, is two assert statements. This is because I never trust the people who call my functions to do the right thing. Even though I said I'm going to assume certain things about x and epsilon, I'm actually going to test it. And so, I'm going to assert that x is greater than or equal to zero, and that epsilon is greater than zero. What assert does, is it tests the predicate, say x greater than or equal to zero, if it's true, it does nothing, just goes on to the next statement. But if it's false, it prints a message, the string, which is my second argument here, and then the program just stops.",
            "metrics": {
                "relativeDCReadability": 1.1142899311961294,
                "lexicalDiversity": 0.48717948717948717,
                "posComposition": {
                    "IN": 0.103,
                    "PRP": 0.115,
                    "VBZ": 0.094,
                    "CD": 0.034,
                    "NNS": 0.034,
                    "VBP": 0.064,
                    "DT": 0.077,
                    "NN": 0.115,
                    "WP$": 0.004,
                    "JJ": 0.068,
                    "VBG": 0.021,
                    "CC": 0.047,
                    "VB": 0.047,
                    "WRB": 0.009,
                    "TO": 0.047,
                    "JJR": 0.021,
                    "POS": 0.004,
                    "NNP": 0.009,
                    "VBD": 0.013,
                    "RB": 0.047,
                    "MD": 0.004,
                    "WP": 0.009,
                    "PRP$": 0.009,
                    "WDT": 0.004
                },
                "syllableRate": 2.583,
                "topicScores": [
                    [
                        "epsilon",
                        0.24714462898041953
                    ],
                    [
                        "great",
                        0.2841924946791397
                    ],
                    [
                        "x",
                        0.3154938674012297
                    ],
                    [
                        "thing",
                        0.4219333018251087
                    ],
                    [
                        "assert",
                        0.42685154571215667
                    ],
                    [
                        "y",
                        0.44121664202723127
                    ],
                    [
                        "square",
                        0.5140279011931184
                    ],
                    [
                        "root",
                        0.5140279011931185
                    ],
                    [
                        "statement",
                        0.5291035546042395
                    ],
                    [
                        "equal",
                        0.5331292129507156
                    ],
                    [
                        "argument",
                        0.5415783162469162
                    ],
                    [
                        "program",
                        0.5473419081814067
                    ],
                    [
                        "number",
                        0.7887484483969389
                    ],
                    [
                        "negative",
                        0.8400220738527829
                    ],
                    [
                        "non",
                        0.848925126733355
                    ],
                    [
                        "answer",
                        0.8702448117308275
                    ],
                    [
                        "positive",
                        0.8932562311480006
                    ],
                    [
                        "near",
                        0.8932562311480006
                    ],
                    [
                        "time",
                        0.8993498833435747
                    ],
                    [
                        "terminology",
                        0.8993498833435747
                    ],
                    [
                        "right",
                        0.9034089628890719
                    ],
                    [
                        "string",
                        0.9083580707454584
                    ],
                    [
                        "people",
                        0.9089820855360942
                    ],
                    [
                        "function",
                        0.9089820855360942
                    ],
                    [
                        "predicate",
                        0.9118973310159779
                    ],
                    [
                        "true",
                        0.9118973310159779
                    ],
                    [
                        "certain",
                        0.9122213144660882
                    ],
                    [
                        "false",
                        0.913848139172846
                    ],
                    [
                        "message",
                        0.913848139172846
                    ],
                    [
                        "second",
                        0.9188730298120905
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "epsilon",
                        0.24714462898041953
                    ],
                    [
                        "thing",
                        0.4219333018251087
                    ],
                    [
                        "square",
                        0.5140279011931184
                    ],
                    [
                        "root",
                        0.5140279011931185
                    ],
                    [
                        "equal",
                        0.5331292129507156
                    ],
                    [
                        "program",
                        0.5473419081814067
                    ],
                    [
                        "number",
                        0.7887484483969389
                    ],
                    [
                        "answer",
                        0.8702448117308275
                    ],
                    [
                        "time",
                        0.8993498833435747
                    ],
                    [
                        "right",
                        0.9034089628890719
                    ],
                    [
                        "function",
                        0.9089820855360942
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-2250": {
            "id": "Pfo7r6bjSqI-2250",
            "heat": 0.601,
            "start": 2250.0,
            "text": " So rather than my function going off and doing something bizarre, for example running forever, it just stops with a message saying, you called me with arguments you shouldn't have called me with. All right, so that's the specification and then my check of the assumptions. The next thing it does, is it looks for a range such that I believe I am assured that my answer lies between the ran-- these values, and I'm going to say, well, my answer will be no smaller than zero, and no bigger than x. Now, is this the tightest possible range? Maybe not, but I'm not too fussy about that. I'm just trying to make sure that I cover the space. Then I'll start with a guess, and again I'm not going to worry too much about the guess, I'm going to take low plus high and divide by two, that is to say, choose something in the middle of this space, and then essentially do what we've got here. So it's a little bit more involved here, I'm going to set my counter to one, just to keep checking, then say, while the absolute value of the guess squared minus x is greater than epsilon, that is to say, why my guess is not yet good enough, and the counter is not greater than a",
            "metrics": {
                "relativeDCReadability": 0.9543418472335421,
                "lexicalDiversity": 0.4364406779661017,
                "posComposition": {
                    "RB": 0.127,
                    "IN": 0.106,
                    "PRP$": 0.025,
                    "NN": 0.11,
                    "VBG": 0.042,
                    "CC": 0.047,
                    "PRP": 0.081,
                    "VBZ": 0.055,
                    "DT": 0.093,
                    "VBD": 0.008,
                    "NNS": 0.013,
                    "MD": 0.013,
                    "VB": 0.051,
                    "VBN": 0.017,
                    "NNP": 0.008,
                    "JJ": 0.055,
                    "VBP": 0.047,
                    ":": 0.004,
                    "TO": 0.038,
                    "JJR": 0.021,
                    "CD": 0.013,
                    "JJS": 0.004,
                    "WDT": 0.008,
                    "WP": 0.004,
                    "RBR": 0.004,
                    "WRB": 0.004
                },
                "syllableRate": 2.508,
                "topicScores": [
                    [
                        "guess",
                        0.3587425627637608
                    ],
                    [
                        "space",
                        0.5073129868372028
                    ],
                    [
                        "answer",
                        0.5076470707631545
                    ],
                    [
                        "range",
                        0.5116456530216619
                    ],
                    [
                        "check",
                        0.5121796720701406
                    ],
                    [
                        "value",
                        0.5158316262789722
                    ],
                    [
                        "great",
                        0.5342176492602708
                    ],
                    [
                        "counter",
                        0.5480005551793107
                    ],
                    [
                        "bizarre",
                        0.7306230876629537
                    ],
                    [
                        "example",
                        0.7306230876629537
                    ],
                    [
                        "message",
                        0.7306230876629537
                    ],
                    [
                        "function",
                        0.7442104448211334
                    ],
                    [
                        "argument",
                        0.7442104448211334
                    ],
                    [
                        "assumption",
                        0.7787450063720325
                    ],
                    [
                        "specification",
                        0.8140836658109376
                    ],
                    [
                        "x.",
                        0.8322410335199267
                    ],
                    [
                        "possible",
                        0.8322410335199267
                    ],
                    [
                        "thing",
                        0.8418125331997784
                    ],
                    [
                        "ran--",
                        0.8418125331997784
                    ],
                    [
                        "small",
                        0.8418125331997784
                    ],
                    [
                        "big",
                        0.8418125331997784
                    ],
                    [
                        "tight",
                        0.8418125331997784
                    ],
                    [
                        "fussy",
                        0.8571333413121555
                    ],
                    [
                        "sure",
                        0.8670372760823336
                    ],
                    [
                        "involved",
                        0.8717004086479441
                    ],
                    [
                        "epsilon",
                        0.8717004086479441
                    ],
                    [
                        "good",
                        0.8717004086479441
                    ],
                    [
                        "low",
                        0.8740582074627989
                    ],
                    [
                        "high",
                        0.8740582074627989
                    ],
                    [
                        "middle",
                        0.8740582074627989
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "guess",
                        0.3587425627637608
                    ],
                    [
                        "answer",
                        0.5076470707631545
                    ],
                    [
                        "example",
                        0.7306230876629537
                    ],
                    [
                        "function",
                        0.7442104448211334
                    ],
                    [
                        "thing",
                        0.8418125331997784
                    ],
                    [
                        "small",
                        0.8418125331997784
                    ],
                    [
                        "epsilon",
                        0.8717004086479441
                    ],
                    [
                        "good",
                        0.8717004086479441
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-2340": {
            "id": "Pfo7r6bjSqI-2340",
            "heat": 0.672,
            "start": 2340.0,
            "text": " hundred, I'll get the next guess. Notice by the way, I have a print statement here which I've commented out, but I sort of figured that my program would not work correctly the first time, and so, I, when I first typed and put in a print statement, it would let me see what was happening each iteration through this loop, so that if it didn't work, I could get a sense of why not. In the next lecture, when we look for the bug in this program, you will see me uncomment out that print statement, but for now, we go to the next thing. And we're here, we know the guess wasn't good enough, so I now say, if the guess squared was less than x, then I will change the low bound to be the guess. Otherwise, I'll change the high bound to be the guess. So I move either the low bound or I move the high bound, either way I'm cutting the search space in half each step. I'll get my new guess. I'll increment my counter, and off I go. In the happy event that eventually I get a good enough guess, you'll see a-- I'll exit the loop. When I exit the loop, I checked, did I exit it because",
            "metrics": {
                "relativeDCReadability": 0.9902462336191122,
                "lexicalDiversity": 0.47161572052401746,
                "posComposition": {
                    "VBN": 0.009,
                    "PRP": 0.14,
                    "MD": 0.048,
                    "VB": 0.07,
                    "DT": 0.127,
                    "JJ": 0.066,
                    "NN": 0.157,
                    "NNP": 0.009,
                    "IN": 0.092,
                    "VBP": 0.061,
                    "RB": 0.079,
                    "WDT": 0.004,
                    "RP": 0.004,
                    "CC": 0.031,
                    "PRP$": 0.013,
                    "WRB": 0.017,
                    "VBD": 0.039,
                    "WP": 0.004,
                    "VBG": 0.009,
                    "TO": 0.013,
                    "JJR": 0.004,
                    ":": 0.004
                },
                "syllableRate": 2.242,
                "topicScores": [
                    [
                        "guess",
                        0.2585347391313532
                    ],
                    [
                        "print",
                        0.38305452858065614
                    ],
                    [
                        "statement",
                        0.38565007746760954
                    ],
                    [
                        "loop",
                        0.4107640003113227
                    ],
                    [
                        "program",
                        0.5164486845086297
                    ],
                    [
                        "way",
                        0.5201800082778172
                    ],
                    [
                        "high",
                        0.5276728820422453
                    ],
                    [
                        "low",
                        0.5311719094118947
                    ],
                    [
                        "good",
                        0.5399781550690524
                    ],
                    [
                        "print statement",
                        0.7221951653590116
                    ],
                    [
                        "notice",
                        0.8251968832696288
                    ],
                    [
                        "time",
                        0.8455579362862162
                    ],
                    [
                        "thing",
                        0.8515704552099673
                    ],
                    [
                        "iteration",
                        0.8545024715223339
                    ],
                    [
                        "sense",
                        0.8545024715223339
                    ],
                    [
                        "lecture",
                        0.8693459075972266
                    ],
                    [
                        "bug",
                        0.8771129811138508
                    ],
                    [
                        "step",
                        0.8821055990563221
                    ],
                    [
                        "new",
                        0.9011146694625258
                    ],
                    [
                        "search",
                        0.9029920699343206
                    ],
                    [
                        "space",
                        0.9029920699343206
                    ],
                    [
                        "counter",
                        0.9046045066287046
                    ],
                    [
                        "happy",
                        0.9131624581844463
                    ],
                    [
                        "event",
                        0.9131624581844463
                    ],
                    [
                        "new guess",
                        2.321247733420821
                    ],
                    [
                        "search space",
                        4.416961933379315
                    ],
                    [
                        "happy event",
                        5.019225709229465
                    ],
                    [
                        "good enough guess",
                        7.214231337663124
                    ]
                ],
                "topTopicSimilarity": 0.2857142857142857,
                "sharedTopicScores": [
                    [
                        "guess",
                        0.2585347391313532
                    ],
                    [
                        "print",
                        0.38305452858065614
                    ],
                    [
                        "program",
                        0.5164486845086297
                    ],
                    [
                        "way",
                        0.5201800082778172
                    ],
                    [
                        "good",
                        0.5399781550690524
                    ],
                    [
                        "time",
                        0.8455579362862162
                    ],
                    [
                        "thing",
                        0.8515704552099673
                    ],
                    [
                        "lecture",
                        0.8693459075972266
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-2430": {
            "id": "Pfo7r6bjSqI-2430",
            "heat": 0.664,
            "start": 2430.0,
            "text": " I exceeded the counter, I didn't have a good-enough guess. If so, I'll print the message iteration count exceeded. Otherwise, I'll print the result and return it. Now again, if I were writing a square root function to be used in another program, I probably wouldn't bother printing the result and the number of iterations and all of that, but again, I'm doing that here for, because we want to see what it's doing. All right. We'll run it a couple times and then I'll let you out for the day. Let's go do this. All right. We're here. Well, notice when I run it, nothing happens. Why did nothing happen? Well, nothing happens, it was just a function. Functions don't do anything until I call them. So let's call it. Let's call square root bi with 40.001 Took only one at-- iteration, that was pretty fast, estimated two as an answer, we're pretty happy with that answer. Let's try another example. Let's look at nine.",
            "metrics": {
                "relativeDCReadability": 0.9030339827963241,
                "lexicalDiversity": 0.5191256830601093,
                "posComposition": {
                    "PRP": 0.12,
                    "VBD": 0.038,
                    "DT": 0.093,
                    "NN": 0.142,
                    "RB": 0.104,
                    "VB": 0.087,
                    "JJ": 0.027,
                    "IN": 0.082,
                    "MD": 0.027,
                    "CC": 0.027,
                    "VBG": 0.022,
                    "TO": 0.011,
                    "VBN": 0.011,
                    "NNS": 0.011,
                    "VBP": 0.044,
                    "WP": 0.005,
                    "VBZ": 0.016,
                    "RP": 0.005,
                    "NNP": 0.055,
                    "POS": 0.027,
                    "WRB": 0.011,
                    "CD": 0.022,
                    ":": 0.005,
                    "WDT": 0.005
                },
                "syllableRate": 2.042,
                "topicScores": [
                    [
                        "function",
                        0.4477197694713811
                    ],
                    [
                        "iteration",
                        0.4521440190999665
                    ],
                    [
                        "result",
                        0.5354210808097691
                    ],
                    [
                        "square",
                        0.5734509397723344
                    ],
                    [
                        "root",
                        0.5734509397723344
                    ],
                    [
                        "answer",
                        0.5794272875663153
                    ],
                    [
                        "guess",
                        0.7709801203842105
                    ],
                    [
                        "counter",
                        0.8208556164668074
                    ],
                    [
                        "good",
                        0.8208556164668074
                    ],
                    [
                        "message",
                        0.8832932386016529
                    ],
                    [
                        "day",
                        0.8994697334645673
                    ],
                    [
                        "program",
                        0.904293529734578
                    ],
                    [
                        "number",
                        0.9120485394372052
                    ],
                    [
                        "example",
                        0.9208171832496979
                    ],
                    [
                        "couple",
                        0.9230518444091337
                    ],
                    [
                        "time",
                        0.9230518444091337
                    ],
                    [
                        "notice",
                        0.9270194705468591
                    ],
                    [
                        "at--",
                        0.9333659874781176
                    ],
                    [
                        "bi",
                        0.9389243859689139
                    ],
                    [
                        "happy",
                        0.9389243859689139
                    ],
                    [
                        "square root",
                        2.9971050409327074
                    ],
                    [
                        "iteration count",
                        3.756566778277499
                    ],
                    [
                        "message iteration",
                        3.96898137946362
                    ],
                    [
                        "root function",
                        4.372399040400871
                    ],
                    [
                        "at-- iteration",
                        5.411559179040225
                    ],
                    [
                        "couple time",
                        5.757884933916856
                    ],
                    [
                        "root bi",
                        5.820664433769595
                    ],
                    [
                        "message iteration count",
                        19.7939713431015
                    ],
                    [
                        "square root function",
                        28.87811579868126
                    ],
                    [
                        "square root bi",
                        42.12255902829904
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "function",
                        0.4477197694713811
                    ],
                    [
                        "square",
                        0.5734509397723344
                    ],
                    [
                        "root",
                        0.5734509397723344
                    ],
                    [
                        "answer",
                        0.5794272875663153
                    ],
                    [
                        "guess",
                        0.7709801203842105
                    ],
                    [
                        "good",
                        0.8208556164668074
                    ],
                    [
                        "program",
                        0.904293529734578
                    ],
                    [
                        "number",
                        0.9120485394372052
                    ],
                    [
                        "example",
                        0.9208171832496979
                    ],
                    [
                        "time",
                        0.9230518444091337
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-2520": {
            "id": "Pfo7r6bjSqI-2520",
            "heat": 0.463,
            "start": 2520.0,
            "text": " I always like to, by the way, start with questions whose answer I know. We'll try and get a little bit more precise. Well, all right. Here it took eighteen iterations. Didn't actually give me the answer three, which we know happens to be the answer, but it gave me something that was within epsilon of three, so it meets the specification, so I should be perfectly happy. Let's look at another example. Try a bigger number here. All right? So I've looked for the square root of a thousand, here it took twenty-nine iterations, we're kind of creeping up there, gave me an estimate. Ah, let's look at our infamous example of two, see what it does here. Worked around. Now, we can see it's actually working, and I'm getting answers that we believe are good-enough answers, but we also see that the speed of what we talk about as convergence-- how many iterations it takes, the",
            "metrics": {
                "relativeDCReadability": 0.8879524467147061,
                "lexicalDiversity": 0.5209580838323353,
                "posComposition": {
                    "PRP": 0.132,
                    "RB": 0.096,
                    "IN": 0.102,
                    "TO": 0.012,
                    "DT": 0.072,
                    "NN": 0.126,
                    "NNS": 0.036,
                    "WP$": 0.006,
                    "VBP": 0.066,
                    "MD": 0.018,
                    "VB": 0.036,
                    "CC": 0.024,
                    "JJ": 0.06,
                    "RBR": 0.006,
                    "NNP": 0.036,
                    "VBD": 0.036,
                    "CD": 0.018,
                    "WDT": 0.012,
                    "VBZ": 0.03,
                    "POS": 0.012,
                    "JJR": 0.006,
                    "VBN": 0.012,
                    "VBG": 0.012,
                    "RP": 0.006,
                    "PRP$": 0.006,
                    "WP": 0.012,
                    ":": 0.006,
                    "WRB": 0.006
                },
                "syllableRate": 1.933,
                "topicScores": [
                    [
                        "answer",
                        0.3364090342614636
                    ],
                    [
                        "iteration",
                        0.4357513123175645
                    ],
                    [
                        "example",
                        0.557157460234914
                    ],
                    [
                        "way",
                        0.790803779019918
                    ],
                    [
                        "question",
                        0.8057796898474372
                    ],
                    [
                        "precise",
                        0.8232331584039669
                    ],
                    [
                        "little",
                        0.8619539863015607
                    ],
                    [
                        "bit",
                        0.8619539863015607
                    ],
                    [
                        "happy",
                        0.8739841604986611
                    ],
                    [
                        "estimate",
                        0.892920150801446
                    ],
                    [
                        "specification",
                        0.8944308645851196
                    ],
                    [
                        "epsilon",
                        0.902899225110225
                    ],
                    [
                        "number",
                        0.9044838198687692
                    ],
                    [
                        "big",
                        0.9122249071783404
                    ],
                    [
                        "good",
                        0.9164809991351405
                    ],
                    [
                        "square",
                        0.917898407061682
                    ],
                    [
                        "root",
                        0.917898407061682
                    ],
                    [
                        "infamous",
                        0.9200071347219013
                    ],
                    [
                        "speed",
                        0.9233321946758938
                    ],
                    [
                        "convergence--",
                        0.9233321946758938
                    ],
                    [
                        "little bit",
                        2.8905158194081704
                    ],
                    [
                        "infamous example",
                        4.331459145935803
                    ],
                    [
                        "big number",
                        4.717313231718428
                    ],
                    [
                        "square root",
                        5.350717847730064
                    ]
                ],
                "topTopicSimilarity": 0.375,
                "sharedTopicScores": [
                    [
                        "answer",
                        0.3364090342614636
                    ],
                    [
                        "example",
                        0.557157460234914
                    ],
                    [
                        "way",
                        0.790803779019918
                    ],
                    [
                        "bit",
                        0.8619539863015607
                    ],
                    [
                        "epsilon",
                        0.902899225110225
                    ],
                    [
                        "number",
                        0.9044838198687692
                    ],
                    [
                        "good",
                        0.9164809991351405
                    ],
                    [
                        "square",
                        0.917898407061682
                    ],
                    [
                        "root",
                        0.917898407061682
                    ]
                ]
            }
        },
        "Pfo7r6bjSqI-2610": {
            "id": "Pfo7r6bjSqI-2610",
            "heat": 0.232,
            "start": 2610.0,
            "text": " number of iterations-- is variable, and it seems to be related to at least two things, and we'll see more about this in the next lecture. The size of the number whose square root we're looking for, and the precision to which I want the answer. Next lecture, we'll look at a, what's wrong with this one, and I would ask you to between now and the next lecture, think about it, see if you can find the bug yourself, we'll look first for the bug, and then after that, we'll look at a better method of finding the answer. Thank you.",
            "metrics": {
                "relativeDCReadability": 0.8977194543855186,
                "lexicalDiversity": 0.44954128440366975,
                "posComposition": {
                    "NN": 0.119,
                    "IN": 0.147,
                    "NNS": 0.018,
                    ":": 0.009,
                    "VBZ": 0.028,
                    "JJ": 0.055,
                    "CC": 0.055,
                    "PRP": 0.119,
                    "TO": 0.037,
                    "VB": 0.064,
                    "VBN": 0.009,
                    "JJS": 0.009,
                    "CD": 0.018,
                    "MD": 0.055,
                    "JJR": 0.018,
                    "DT": 0.119,
                    "WP$": 0.009,
                    "VBP": 0.037,
                    "VBG": 0.018,
                    "WDT": 0.009,
                    "WP": 0.009,
                    "RB": 0.028,
                    "NNP": 0.009
                },
                "syllableRate": 1.125,
                "topicScores": [
                    [
                        "lecture",
                        0.3633479734575068
                    ],
                    [
                        "answer",
                        0.435965353653251
                    ],
                    [
                        "number",
                        0.4783808421536205
                    ],
                    [
                        "bug",
                        0.5282470204944172
                    ],
                    [
                        "variable",
                        0.7391140360688243
                    ],
                    [
                        "thing",
                        0.7391140360688243
                    ],
                    [
                        "iterations--",
                        0.7618081066348826
                    ],
                    [
                        "size",
                        0.8100240451430504
                    ],
                    [
                        "square",
                        0.8279853289304079
                    ],
                    [
                        "root",
                        0.8279853289304079
                    ],
                    [
                        "precision",
                        0.8279853289304079
                    ],
                    [
                        "wrong",
                        0.8540126202862668
                    ],
                    [
                        "well",
                        0.8540126202862668
                    ],
                    [
                        "method",
                        0.8540126202862668
                    ],
                    [
                        "square root",
                        2.180253980356706
                    ],
                    [
                        "well method",
                        2.694638915447378
                    ]
                ],
                "topTopicSimilarity": 0.375,
                "sharedTopicScores": [
                    [
                        "lecture",
                        0.3633479734575068
                    ],
                    [
                        "answer",
                        0.435965353653251
                    ],
                    [
                        "number",
                        0.4783808421536205
                    ],
                    [
                        "thing",
                        0.7391140360688243
                    ],
                    [
                        "square",
                        0.8279853289304079
                    ],
                    [
                        "root",
                        0.8279853289304079
                    ]
                ]
            }
        }
    }
}