{
    "metadata": {
        "id": "9Jry5-82I68",
        "avgHeat": 0.4,
        "runtime": 3159.95,
        "dale-challReadabilityScore": 7.730952311219397,
        "lexicalDiversity": 0.47661918839021766,
        "posComposition": {
            "DT": 0.101,
            "JJ": 0.051,
            "NN": 0.134,
            "VBZ": 0.045,
            "VBN": 0.014,
            "IN": 0.101,
            "NNP": 0.035,
            "PRP$": 0.002,
            "MD": 0.021,
            "VB": 0.062,
            "VBP": 0.054,
            "TO": 0.037,
            "NNS": 0.026,
            "CC": 0.046,
            "POS": 0.006,
            "PRP": 0.095,
            "RB": 0.058,
            "RBR": 0.001,
            "CD": 0.03,
            "VBD": 0.013,
            "EX": 0.005,
            "WP": 0.011,
            "VBG": 0.019,
            "WRB": 0.006,
            ":": 0.008,
            "WDT": 0.008,
            "RP": 0.003,
            "JJS": 0.001,
            "JJR": 0.007,
            "UH": 0.0,
            "PDT": 0.0,
            "FW": 0.0,
            "$": 0.0
        },
        "syllableRate": 3.092,
        "topicScores": [
            [
                "PROFESSOR",
                0.06425350972348694
            ],
            [
                "audience",
                0.0697744085623439
            ],
            [
                "BST",
                0.0992696362582631
            ],
            [
                "right",
                0.1239675776441197
            ],
            [
                "time",
                0.1259521979143883
            ],
            [
                "insert",
                0.13441477798500745
            ],
            [
                "ok",
                0.13999255218020834
            ],
            [
                "tree",
                0.14006570927782594
            ],
            [
                "search",
                0.14372856854757007
            ],
            [
                "heap",
                0.14508095791070225
            ],
            [
                "binary",
                0.147688230080376
            ],
            [
                "check",
                0.14893985554860625
            ],
            [
                "add",
                0.15143058348863703
            ],
            [
                "INAUDIBLE",
                0.15516828443381447
            ],
            [
                "order",
                0.16151345007434664
            ],
            [
                "structure",
                0.16585781400999974
            ],
            [
                "thing",
                0.16854498252644912
            ],
            [
                "node",
                0.17266613527312888
            ],
            [
                "subtree",
                0.17570308490986924
            ],
            [
                "array",
                0.17576941399888027
            ],
            [
                "problem",
                0.176187075372556
            ],
            [
                "find",
                0.17820836522563135
            ],
            [
                "left",
                0.17973852067497406
            ],
            [
                "Creative Commons",
                0.1843506622869571
            ],
            [
                "size",
                0.18704197985986099
            ],
            [
                "min",
                0.19422383743541247
            ],
            [
                "insertion",
                0.19484083981051226
            ],
            [
                "minute",
                0.19713271099329752
            ],
            [
                "question",
                0.19933775597753994
            ],
            [
                "BST structure",
                0.20213544337910994
            ]
        ],
        "topicsList": [
            "PROFESSOR",
            "audience",
            "BST",
            "right",
            "time",
            "insert",
            "ok",
            "tree",
            "search",
            "heap",
            "binary",
            "check",
            "add",
            "INAUDIBLE",
            "order",
            "structure",
            "thing",
            "node",
            "subtree",
            "array",
            "problem",
            "find",
            "left",
            "Creative Commons",
            "size",
            "min",
            "insertion",
            "minute",
            "question",
            "BST structure"
        ]
    },
    "chunks": {
        "9Jry5-82I68-0": {
            "id": "9Jry5-82I68-0",
            "heat": 0.1,
            "start": 0.0,
            "text": " The following content is provided under a Creative Commons license. Your support will help MIT OpenCourseWare continue to offer high quality educational resources for free. To make a donation or view additional materials from hundreds of MIT courses, visit MIT OpenCourseWare at ocw.mit.edu. PROFESSOR: Today's lecture is about a brand new data structure that you've probably seen before, and we've mentioned earlier in double 06, called a binary search tree. We've talked about binary search. It's a fundamental divide and conquer paradigm. There's a data structure associated with it, called the BST, a binary search tree. And what I want to do is motivate this data structure using a problem. It's a bit of a toy problem, but certainly a problem that you could imagine exists in all sorts of scheduling problems. It's a part of a runway reservation system that you can imagine building. And what I'll do is define this problem and talk about how we could possibly solve it with the data structures you've already seen-- so lists and arrays, heaps as well as, which we saw last time-- and hopefully motivate you into the reason behind the existence",
            "metrics": {
                "relativeDCReadability": 1.2525415776388495,
                "lexicalDiversity": 0.5784313725490197,
                "posComposition": {
                    "DT": 0.103,
                    "JJ": 0.064,
                    "NN": 0.172,
                    "VBZ": 0.039,
                    "VBN": 0.029,
                    "IN": 0.103,
                    "NNP": 0.044,
                    "PRP$": 0.005,
                    "MD": 0.025,
                    "VB": 0.059,
                    "VBP": 0.039,
                    "TO": 0.015,
                    "NNS": 0.064,
                    "CC": 0.044,
                    "POS": 0.005,
                    "PRP": 0.078,
                    "RB": 0.044,
                    "RBR": 0.005,
                    "CD": 0.005,
                    "VBD": 0.015,
                    "EX": 0.005,
                    "WP": 0.01,
                    "VBG": 0.01,
                    "WRB": 0.005,
                    ":": 0.01,
                    "WDT": 0.005
                },
                "syllableRate": 2.758,
                "topicScores": [
                    [
                        "Creative Commons",
                        0.21532584480151082
                    ],
                    [
                        "Creative Commons license",
                        0.2590135305232158
                    ],
                    [
                        "MIT",
                        0.2700411985795514
                    ],
                    [
                        "problem",
                        0.3374012027306077
                    ],
                    [
                        "structure",
                        0.37288712328908113
                    ],
                    [
                        "search",
                        0.3744387724736021
                    ],
                    [
                        "binary",
                        0.39600385009096983
                    ],
                    [
                        "data",
                        0.4297473828834192
                    ],
                    [
                        "tree",
                        0.46859679824068623
                    ],
                    [
                        "PROFESSOR",
                        0.48988211276681964
                    ],
                    [
                        "MIT OpenCourseWare",
                        0.4912775780284135
                    ],
                    [
                        "BST",
                        0.6470410539269389
                    ],
                    [
                        "binary search",
                        0.7288538283052997
                    ],
                    [
                        "following",
                        0.7490639952316113
                    ],
                    [
                        "content",
                        0.7688378928448132
                    ],
                    [
                        "free",
                        0.7802044144627436
                    ],
                    [
                        "search tree",
                        0.7907159273311071
                    ],
                    [
                        "ocw.mit.edu",
                        0.8118182334872587
                    ],
                    [
                        "support",
                        0.8179357391570371
                    ],
                    [
                        "high",
                        0.8334889139279472
                    ],
                    [
                        "quality",
                        0.8334889139279472
                    ],
                    [
                        "educational",
                        0.8334889139279472
                    ],
                    [
                        "resource",
                        0.8334889139279472
                    ],
                    [
                        "MIT course",
                        0.8398494906639692
                    ],
                    [
                        "today",
                        0.8409220670236999
                    ],
                    [
                        "paradigm",
                        0.8552458220301586
                    ],
                    [
                        "donation",
                        0.8588254509411118
                    ],
                    [
                        "additional",
                        0.8588254509411118
                    ],
                    [
                        "material",
                        0.8588254509411118
                    ],
                    [
                        "hundred",
                        0.8588254509411118
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "Creative Commons",
                        0.21532584480151082
                    ],
                    [
                        "problem",
                        0.3374012027306077
                    ],
                    [
                        "structure",
                        0.37288712328908113
                    ],
                    [
                        "search",
                        0.3744387724736021
                    ],
                    [
                        "binary",
                        0.39600385009096983
                    ],
                    [
                        "tree",
                        0.46859679824068623
                    ],
                    [
                        "PROFESSOR",
                        0.48988211276681964
                    ],
                    [
                        "BST",
                        0.6470410539269389
                    ]
                ]
            }
        },
        "9Jry5-82I68-90": {
            "id": "9Jry5-82I68-90",
            "heat": 0.347,
            "start": 90.0,
            "text": " of binary search trees, because they are kind of the perfect data structure for this particular problem. So let's dive into what the runway reservation system looks like. And it's your basic scheduling problem. We'll assume an airport with a single runway. Now Logan has six runways. But the moment there's any sort of weather you're down to one. And of course, there's lots of airports with a single runway. And we can imagine that this runway is pretty busy. There's obviously safety issues associated with landing planes, and planes taking off. And so there are constraints associated with the system, that have to be obeyed. And you have to build these constraints in-- and the checks for these constraints-- into your data structure. That's sort of the summary of the context. So reservations for future landings is really what this system is built for. There's a notion of time. We'll assume that time is continuous. So it could be represented by a real variable, or a real quantity.",
            "metrics": {
                "relativeDCReadability": 1.0699077661048362,
                "lexicalDiversity": 0.49171270718232046,
                "posComposition": {
                    "IN": 0.144,
                    "JJ": 0.066,
                    "NN": 0.177,
                    "NNS": 0.077,
                    "PRP": 0.044,
                    "VBP": 0.028,
                    "DT": 0.105,
                    "NNP": 0.017,
                    "POS": 0.006,
                    "WP": 0.011,
                    "VBZ": 0.066,
                    "CC": 0.05,
                    "PRP$": 0.011,
                    "MD": 0.022,
                    "VB": 0.033,
                    "RB": 0.028,
                    "CD": 0.011,
                    "EX": 0.028,
                    "TO": 0.017,
                    "VBN": 0.028,
                    "VBG": 0.006,
                    "RP": 0.006,
                    "WDT": 0.011,
                    ":": 0.011
                },
                "syllableRate": 2.2,
                "topicScores": [
                    [
                        "runway",
                        0.32233599341696484
                    ],
                    [
                        "system",
                        0.44244609138124424
                    ],
                    [
                        "problem",
                        0.4701640308733961
                    ],
                    [
                        "single",
                        0.5072726351774927
                    ],
                    [
                        "structure",
                        0.5374392245348165
                    ],
                    [
                        "airport",
                        0.5383345460567113
                    ],
                    [
                        "data",
                        0.5426422291818196
                    ],
                    [
                        "sort",
                        0.5496450378090474
                    ],
                    [
                        "reservation",
                        0.5565824439533863
                    ],
                    [
                        "plane",
                        0.5615702082358933
                    ],
                    [
                        "time",
                        0.5626058181603537
                    ],
                    [
                        "real",
                        0.5628776170126792
                    ],
                    [
                        "landing",
                        0.5631982152579806
                    ],
                    [
                        "constraint",
                        0.5667925334652648
                    ],
                    [
                        "Logan",
                        0.6106443365068036
                    ],
                    [
                        "binary",
                        0.7797900014774135
                    ],
                    [
                        "search",
                        0.7797900014774135
                    ],
                    [
                        "tree",
                        0.7797900014774135
                    ],
                    [
                        "particular",
                        0.7797900014774135
                    ],
                    [
                        "perfect",
                        0.7953503238461771
                    ],
                    [
                        "scheduling",
                        0.8662557445057916
                    ],
                    [
                        "basic",
                        0.8766725763331807
                    ],
                    [
                        "busy",
                        0.8831250806069648
                    ],
                    [
                        "context",
                        0.8937817880795155
                    ],
                    [
                        "continuous",
                        0.8985943789321361
                    ],
                    [
                        "course",
                        0.8986883207174062
                    ],
                    [
                        "quantity",
                        0.8998708220215083
                    ],
                    [
                        "moment",
                        0.902634115640594
                    ],
                    [
                        "weather",
                        0.902634115640594
                    ],
                    [
                        "lot",
                        0.9068507308980988
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "problem",
                        0.4701640308733961
                    ],
                    [
                        "structure",
                        0.5374392245348165
                    ],
                    [
                        "time",
                        0.5626058181603537
                    ],
                    [
                        "binary",
                        0.7797900014774135
                    ],
                    [
                        "search",
                        0.7797900014774135
                    ],
                    [
                        "tree",
                        0.7797900014774135
                    ]
                ]
            }
        },
        "9Jry5-82I68-180": {
            "id": "9Jry5-82I68-180",
            "heat": 0.236,
            "start": 180.0,
            "text": " And what we'd like to do is reserve requests for landings. And these are going to specify landing time. Each of them is going to specify a landing time. We call it t. And in particular, we're going to add t to the set R of landing times if no other landings are scheduled within k minutes. And k is a parameter that could vary. I mean, it could be statically set to 3 minutes, or maybe 4. You can imagine it varying it dynamically depending on weather conditions, things like that. For the most of the examples we'll talk about today, we'll assume k is 3 minutes, or something like that. So this is about adding to the data structure. And so an insert operation, if you will,",
            "metrics": {
                "relativeDCReadability": 1.0439640291556787,
                "lexicalDiversity": 0.48120300751879697,
                "posComposition": {
                    "CC": 0.053,
                    "WP": 0.008,
                    "PRP": 0.098,
                    "MD": 0.053,
                    "VB": 0.083,
                    "TO": 0.053,
                    "VBZ": 0.038,
                    "NNS": 0.075,
                    "IN": 0.098,
                    "DT": 0.098,
                    "VBP": 0.038,
                    "VBG": 0.053,
                    "JJ": 0.03,
                    "NN": 0.12,
                    "NNP": 0.015,
                    "VBN": 0.015,
                    "WDT": 0.008,
                    "RB": 0.038,
                    "CD": 0.023,
                    "JJS": 0.008
                },
                "syllableRate": 1.583,
                "topicScores": [
                    [
                        "landing",
                        0.3879829847433109
                    ],
                    [
                        "time",
                        0.4331602288807229
                    ],
                    [
                        "minute",
                        0.43440336795614104
                    ],
                    [
                        "k",
                        0.4541024895623994
                    ],
                    [
                        "set",
                        0.5806778629283255
                    ],
                    [
                        "r",
                        0.6697206077860813
                    ],
                    [
                        "reserve",
                        0.8317376005806414
                    ],
                    [
                        "request",
                        0.8317376005806414
                    ],
                    [
                        "t.",
                        0.8670839652502605
                    ],
                    [
                        "structure",
                        0.8976454118976165
                    ],
                    [
                        "particular",
                        0.9061112023415429
                    ],
                    [
                        "weather",
                        0.9181966240173114
                    ],
                    [
                        "condition",
                        0.9181966240173114
                    ],
                    [
                        "thing",
                        0.9181966240173114
                    ],
                    [
                        "today",
                        0.9206578288976397
                    ],
                    [
                        "parameter",
                        0.9218210500425226
                    ],
                    [
                        "data",
                        0.9227016510118867
                    ],
                    [
                        "insert",
                        0.9244330499530814
                    ],
                    [
                        "operation",
                        0.9244330499530814
                    ],
                    [
                        "example",
                        0.930170049454642
                    ],
                    [
                        "set r",
                        1.606740333472716
                    ],
                    [
                        "landing time",
                        2.242691650639415
                    ],
                    [
                        "reserve request",
                        2.2445140708560913
                    ],
                    [
                        "k minute",
                        3.7405632754624527
                    ],
                    [
                        "data structure",
                        4.822718154548781
                    ],
                    [
                        "weather condition",
                        5.372878674370918
                    ],
                    [
                        "insert operation",
                        5.876465986482227
                    ]
                ],
                "topTopicSimilarity": 0.18518518518518517,
                "sharedTopicScores": [
                    [
                        "time",
                        0.4331602288807229
                    ],
                    [
                        "minute",
                        0.43440336795614104
                    ],
                    [
                        "structure",
                        0.8976454118976165
                    ],
                    [
                        "thing",
                        0.9181966240173114
                    ],
                    [
                        "insert",
                        0.9244330499530814
                    ]
                ]
            }
        },
        "9Jry5-82I68-270": {
            "id": "9Jry5-82I68-270",
            "heat": 0.303,
            "start": 270.0,
            "text": " that has a constraint associated with it that you need to check. And so you wouldn't insert if the constraint was violated. You would if the constraint was satisfied. And time, as I said, is something that is part of the system. It needs to be modeled. You have the current notion of time. And every time you have a plane that's already landed, which means that you can essentially take this particular landing time away from the set R. So this removal, or delete-- we remove from set R, which is the set of landing times after the plane lands. So every once in awhile, as time increments, you're going to be checking the data structure. And you can do this, maybe, every minute, every 30 seconds. That isn't really important. But you have to be able to remove from this data structure. So fairly straightforward data structure. It's a set, R. We don't quite know how to implement it yet. But we'd like to do all of these operations in order log n time, where n is the size of the set.",
            "metrics": {
                "relativeDCReadability": 0.9099102397254228,
                "lexicalDiversity": 0.4791666666666667,
                "posComposition": {
                    "DT": 0.13,
                    "VBZ": 0.057,
                    "NN": 0.182,
                    "VBN": 0.026,
                    "IN": 0.094,
                    "PRP": 0.089,
                    "VBP": 0.036,
                    "TO": 0.036,
                    "VB": 0.062,
                    "CC": 0.036,
                    "RB": 0.078,
                    "MD": 0.026,
                    "VBD": 0.016,
                    "JJ": 0.026,
                    "WDT": 0.021,
                    "NNP": 0.026,
                    ":": 0.005,
                    "VBG": 0.016,
                    "NNS": 0.021,
                    "CD": 0.005,
                    "WRB": 0.01
                },
                "syllableRate": 2.192,
                "topicScores": [
                    [
                        "time",
                        0.3015589239095532
                    ],
                    [
                        "set",
                        0.3414111900653672
                    ],
                    [
                        "R.",
                        0.40440207736213685
                    ],
                    [
                        "structure",
                        0.41358873700868864
                    ],
                    [
                        "constraint",
                        0.4237900313320679
                    ],
                    [
                        "data",
                        0.4410277689070473
                    ],
                    [
                        "landing",
                        0.5722610862335418
                    ],
                    [
                        "plane",
                        0.5743761174145569
                    ],
                    [
                        "satisfied",
                        0.8778598774362443
                    ],
                    [
                        "system",
                        0.8865172207879118
                    ],
                    [
                        "second",
                        0.9100540504210175
                    ],
                    [
                        "important",
                        0.9116068485879385
                    ],
                    [
                        "minute",
                        0.9189832439966217
                    ],
                    [
                        "removal",
                        0.923486084687373
                    ],
                    [
                        "current",
                        0.9235744611257302
                    ],
                    [
                        "notion",
                        0.9235744611257302
                    ],
                    [
                        "particular",
                        0.9263364492660181
                    ],
                    [
                        "able",
                        0.9355706702611613
                    ],
                    [
                        "straightforward",
                        0.9364976477026669
                    ],
                    [
                        "operation",
                        0.9380835290131003
                    ],
                    [
                        "order",
                        0.9380835290131003
                    ],
                    [
                        "log",
                        0.9380835290131003
                    ],
                    [
                        "size",
                        0.9380835290131003
                    ],
                    [
                        "set R.",
                        1.3024052276511504
                    ],
                    [
                        "data structure",
                        1.349225073605859
                    ],
                    [
                        "landing time",
                        2.885037686862781
                    ],
                    [
                        "straightforward data",
                        4.748544949914275
                    ],
                    [
                        "particular landing",
                        5.257767889907732
                    ],
                    [
                        "current notion",
                        5.802248412857507
                    ],
                    [
                        "order log",
                        7.33338245901683
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "time",
                        0.3015589239095532
                    ],
                    [
                        "structure",
                        0.41358873700868864
                    ],
                    [
                        "minute",
                        0.9189832439966217
                    ],
                    [
                        "order",
                        0.9380835290131003
                    ],
                    [
                        "size",
                        0.9380835290131003
                    ]
                ]
            }
        },
        "9Jry5-82I68-360": {
            "id": "9Jry5-82I68-360",
            "heat": 0.359,
            "start": 360.0,
            "text": " All right? So any questions about that? Any questions about the definition of the problem before we move on? Are we good on? OK. So let's look at a real straightforward example, and put this up here so you get a better sense of this. Let's say that, right now, we are at time 37. And the set R has 41.2, 49, and 53 in it. And that's time. Now you may get a request for landing time 53. And-- I'm sorry. I want to call this 56.3-- 41.2, 49, and 56.3. You may get a request for landing time 53. And right now the time is 37. It's in the future, and you say OK because you've done the check. And let's assume that k equals 3. And 53 is four ahead of 49, and 3.3 before 56.3, so you're OK. 44 is not allowed.",
            "metrics": {
                "relativeDCReadability": 1.0035607619642817,
                "lexicalDiversity": 0.5064102564102564,
                "posComposition": {
                    "DT": 0.109,
                    "RB": 0.077,
                    "NNP": 0.045,
                    "NNS": 0.019,
                    "IN": 0.115,
                    "NN": 0.103,
                    "PRP": 0.09,
                    "VBP": 0.058,
                    "JJ": 0.032,
                    "VB": 0.051,
                    "POS": 0.013,
                    "CC": 0.071,
                    "JJR": 0.006,
                    "CD": 0.115,
                    "VBZ": 0.038,
                    "MD": 0.013,
                    "VBG": 0.013,
                    ":": 0.013,
                    "TO": 0.006,
                    "VBN": 0.013
                },
                "syllableRate": 1.508,
                "topicScores": [
                    [
                        "ok",
                        0.3155694949135765
                    ],
                    [
                        "time",
                        0.33597771392213327
                    ],
                    [
                        "question",
                        0.5267548888160836
                    ],
                    [
                        "request",
                        0.554418920131883
                    ],
                    [
                        "definition",
                        0.9022242620555818
                    ],
                    [
                        "problem",
                        0.9022242620555818
                    ],
                    [
                        "good",
                        0.9037414317226176
                    ],
                    [
                        "And--",
                        0.9119352039975817
                    ],
                    [
                        "sorry",
                        0.9119352039975817
                    ],
                    [
                        "straightforward",
                        0.9156879373155004
                    ],
                    [
                        "example",
                        0.9156879373155004
                    ],
                    [
                        "check",
                        0.9176447538493345
                    ],
                    [
                        "real",
                        0.9232776732087308
                    ],
                    [
                        "well",
                        0.9232776732087308
                    ],
                    [
                        "sense",
                        0.9232776732087308
                    ],
                    [
                        "set",
                        0.9293314858510148
                    ],
                    [
                        "future",
                        0.9329691671164754
                    ],
                    [
                        "set r",
                        1.6870464656626663
                    ],
                    [
                        "straightforward example",
                        5.1913523584861085
                    ],
                    [
                        "real straightforward",
                        5.469737691797537
                    ],
                    [
                        "well sense",
                        5.7769806336155725
                    ]
                ],
                "topTopicSimilarity": 0.23809523809523808,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.3155694949135765
                    ],
                    [
                        "time",
                        0.33597771392213327
                    ],
                    [
                        "question",
                        0.5267548888160836
                    ],
                    [
                        "problem",
                        0.9022242620555818
                    ],
                    [
                        "check",
                        0.9176447538493345
                    ]
                ]
            }
        },
        "9Jry5-82I68-450": {
            "id": "9Jry5-82I68-450",
            "heat": 0.327,
            "start": 450.0,
            "text": " It's too close to 41.2. And 20, just for completeness, is not allowed because it's passed. Can't schedule in the past. I mean, it could be the next day. But then you wouldn't call it 20. Let's assume that time is a monotonically increasing function. You have a 64-bit number. It can go to the end of the world, or 2012, or wherever you want. So you can keep the number a bit smaller, and do a little constant factor optimization, I guess. So that's sort of the set up. And hopefully you get a sense of what the requirements. And you guys know about a bunch of data structures already. And what I want to do is list each one of them, and essentially shoot them down with respect to not being able to make this efficiency requirement. And I'd like you guys to help me shoot them down. So let's talk about an easy one first. Let's say you have an unsorted list or an array corresponding to R. That's all you have. What's wrong with this data structure from an efficiency standpoint? Yeah. AUDIENCE: Pretty much everything you want to do to it is linear. PROFESSOR: That's exactly right. Pretty much everything you want to do to it is linear.",
            "metrics": {
                "relativeDCReadability": 0.9255555479879388,
                "lexicalDiversity": 0.48444444444444446,
                "posComposition": {
                    "PRP": 0.116,
                    "VBZ": 0.04,
                    "RB": 0.071,
                    "JJ": 0.062,
                    "TO": 0.049,
                    "CD": 0.027,
                    "CC": 0.049,
                    "IN": 0.071,
                    "NN": 0.116,
                    "VBN": 0.013,
                    "NNP": 0.053,
                    "VBD": 0.004,
                    "DT": 0.093,
                    "VBP": 0.058,
                    "MD": 0.022,
                    "VB": 0.076,
                    "POS": 0.022,
                    "VBG": 0.013,
                    "JJR": 0.004,
                    "RP": 0.013,
                    "WP": 0.013,
                    "NNS": 0.013
                },
                "syllableRate": 2.492,
                "topicScores": [
                    [
                        "linear",
                        0.5258635533424567
                    ],
                    [
                        "requirement",
                        0.53590913683401
                    ],
                    [
                        "bit",
                        0.5445096839333068
                    ],
                    [
                        "number",
                        0.5445096839333068
                    ],
                    [
                        "efficiency",
                        0.5600983265347973
                    ],
                    [
                        "guy",
                        0.56012603395143
                    ],
                    [
                        "structure",
                        0.563665806334367
                    ],
                    [
                        "list",
                        0.5673873367470367
                    ],
                    [
                        "audience",
                        0.6235413764834206
                    ],
                    [
                        "PROFESSOR",
                        0.628154409629398
                    ],
                    [
                        "R.",
                        0.6866174127585069
                    ],
                    [
                        "close",
                        0.7953250761001079
                    ],
                    [
                        "completeness",
                        0.8439193556962646
                    ],
                    [
                        "past",
                        0.8476039840745471
                    ],
                    [
                        "day",
                        0.8624555256529767
                    ],
                    [
                        "function",
                        0.8788390178181682
                    ],
                    [
                        "time",
                        0.9026204830348934
                    ],
                    [
                        "world",
                        0.9035209107895492
                    ],
                    [
                        "standpoint",
                        0.9052125801954445
                    ],
                    [
                        "small",
                        0.9063786404822863
                    ],
                    [
                        "factor",
                        0.9063786404822863
                    ],
                    [
                        "optimization",
                        0.9063786404822863
                    ],
                    [
                        "set",
                        0.908753833540571
                    ],
                    [
                        "right",
                        0.9095351852243772
                    ],
                    [
                        "end",
                        0.9101456313511515
                    ],
                    [
                        "little",
                        0.9128260678360958
                    ],
                    [
                        "constant",
                        0.9128260678360958
                    ],
                    [
                        "sense",
                        0.9169403165982601
                    ],
                    [
                        "bunch",
                        0.9185657784302779
                    ],
                    [
                        "datum",
                        0.9185657784302779
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "structure",
                        0.563665806334367
                    ],
                    [
                        "audience",
                        0.6235413764834206
                    ],
                    [
                        "PROFESSOR",
                        0.628154409629398
                    ],
                    [
                        "time",
                        0.9026204830348934
                    ],
                    [
                        "right",
                        0.9095351852243772
                    ]
                ]
            }
        },
        "9Jry5-82I68-540": {
            "id": "9Jry5-82I68-540",
            "heat": 0.462,
            "start": 540.0,
            "text": " And so you want to check the k minute check. You can certainly insert into it, and just add to it. So that part is not linear, that's constant time. But certainly, anything where you want to go check against other elements of the array, it's unsorted. You have no idea of where to find these elements. You have to scan through the entire array to check to see whether there's a landing time that's within k of the current time t that you're asking for. And that's going to take order n time. So you can insert in order 1 without a check. But sadly, the check takes order n time. All right? Let's do something that is a little more plausible. Let's talk about a sorted array. So this is a little more subtle question. Let's talk about a sorted array. What happens with a sorted array? Someone?",
            "metrics": {
                "relativeDCReadability": 0.9322109542589863,
                "lexicalDiversity": 0.5094339622641509,
                "posComposition": {
                    "CC": 0.031,
                    "RB": 0.05,
                    "PRP": 0.063,
                    "VBP": 0.031,
                    "TO": 0.05,
                    "VB": 0.069,
                    "DT": 0.107,
                    "NN": 0.182,
                    "MD": 0.013,
                    "IN": 0.119,
                    "NNP": 0.025,
                    "VBZ": 0.063,
                    "JJ": 0.094,
                    "WRB": 0.013,
                    "NNS": 0.013,
                    "EX": 0.006,
                    "WDT": 0.013,
                    "VBG": 0.013,
                    "CD": 0.006,
                    "POS": 0.019,
                    "RBR": 0.013,
                    "WP": 0.006
                },
                "syllableRate": 1.783,
                "topicScores": [
                    [
                        "check",
                        0.3221016088934477
                    ],
                    [
                        "array",
                        0.33466839140274357
                    ],
                    [
                        "time",
                        0.340527552109113
                    ],
                    [
                        "sorted",
                        0.4210512117564015
                    ],
                    [
                        "order",
                        0.44859083920302206
                    ],
                    [
                        "n",
                        0.541294437044425
                    ],
                    [
                        "element",
                        0.5643567250080479
                    ],
                    [
                        "little",
                        0.5652111534655605
                    ],
                    [
                        "minute",
                        0.8708895235882987
                    ],
                    [
                        "unsorted",
                        0.8881048342111096
                    ],
                    [
                        "linear",
                        0.9023631496625081
                    ],
                    [
                        "constant",
                        0.9023631496625081
                    ],
                    [
                        "plausible",
                        0.9113453147123867
                    ],
                    [
                        "question",
                        0.9142311690899111
                    ],
                    [
                        "idea",
                        0.92255234848412
                    ],
                    [
                        "entire",
                        0.9259771062411344
                    ],
                    [
                        "landing",
                        0.9259771062411344
                    ],
                    [
                        "current",
                        0.9259771062411344
                    ],
                    [
                        "subtle",
                        0.9309897913351548
                    ],
                    [
                        "sorted array",
                        1.3416696073861716
                    ],
                    [
                        "n time",
                        1.9463441735903861
                    ],
                    [
                        "order n",
                        2.108911435923978
                    ],
                    [
                        "k minute",
                        3.6846164304292937
                    ],
                    [
                        "minute check",
                        3.7059915796460423
                    ],
                    [
                        "constant time",
                        3.861591041226986
                    ],
                    [
                        "entire array",
                        4.026834462308576
                    ],
                    [
                        "landing time",
                        4.408101560772836
                    ],
                    [
                        "current time",
                        4.408101560772836
                    ],
                    [
                        "subtle question",
                        5.717716174711557
                    ],
                    [
                        "order n time",
                        10.572450211700158
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "check",
                        0.3221016088934477
                    ],
                    [
                        "array",
                        0.33466839140274357
                    ],
                    [
                        "time",
                        0.340527552109113
                    ],
                    [
                        "order",
                        0.44859083920302206
                    ],
                    [
                        "minute",
                        0.8708895235882987
                    ],
                    [
                        "question",
                        0.9142311690899111
                    ]
                ]
            }
        },
        "9Jry5-82I68-630": {
            "id": "9Jry5-82I68-630",
            "heat": 0.518,
            "start": 630.0,
            "text": " What can you do with a sorted array? Yeah. AUDIENCE: Do a binary search to find the [INAUDIBLE]. PROFESSOR: Binary search would find a bad insert. OK, good. So that's good. So if you have a sorted array, and just for argument's sake, it looks like 4, 20, 32, 37, 45. And it's increasing order. And if you get a particular time t, you can use binary search. And let's say, in particular, the time is, for example, 34. Then what you do is you go to the midpoint of the array, and maybe you just look at that. And you say oh, 34 is greater than 32. So I'm going to go check and figure out if I need to move to the left or the right. And since it's greater I'm going to move to the right. And within logarithmic time, you'll find what we call the insertion point of the sorted array, where this 34 is supposed to sit. And you don't necessarily get to insert there. You need to look, once you've found the insertion point, to your left and to your right. And do the k minute check. So finish up the answer to the question, tell me how long it's going to take me to find the insertion",
            "metrics": {
                "relativeDCReadability": 0.9577918603838216,
                "lexicalDiversity": 0.49333333333333335,
                "posComposition": {
                    "WP": 0.013,
                    "MD": 0.018,
                    "PRP": 0.098,
                    "VB": 0.08,
                    "IN": 0.084,
                    "DT": 0.093,
                    "JJ": 0.058,
                    "NN": 0.147,
                    "NNP": 0.031,
                    "VBP": 0.058,
                    "TO": 0.067,
                    "VBD": 0.004,
                    "POS": 0.013,
                    "RB": 0.04,
                    "CC": 0.058,
                    "VBZ": 0.036,
                    "CD": 0.04,
                    "VBG": 0.018,
                    "JJR": 0.009,
                    "WRB": 0.009,
                    "VBN": 0.009,
                    "EX": 0.004,
                    "PRP$": 0.009,
                    "NNS": 0.004
                },
                "syllableRate": 2.4,
                "topicScores": [
                    [
                        "array",
                        0.3551379360019554
                    ],
                    [
                        "right",
                        0.4169728663643683
                    ],
                    [
                        "search",
                        0.42225649175080976
                    ],
                    [
                        "sorted",
                        0.42451347561567265
                    ],
                    [
                        "binary",
                        0.429631992550186
                    ],
                    [
                        "insertion",
                        0.43097000200024416
                    ],
                    [
                        "time",
                        0.4463972022769235
                    ],
                    [
                        "audience",
                        0.49521824934770026
                    ],
                    [
                        "good",
                        0.5364497948348109
                    ],
                    [
                        "PROFESSOR",
                        0.5458976895666077
                    ],
                    [
                        "INAUDIBLE",
                        0.5546285808415241
                    ],
                    [
                        "point",
                        0.5673846369070699
                    ],
                    [
                        "particular",
                        0.5697390187155134
                    ],
                    [
                        "check",
                        0.5748017271272191
                    ],
                    [
                        "great",
                        0.5748606172155006
                    ],
                    [
                        "left",
                        0.5762238607714163
                    ],
                    [
                        "order",
                        0.9118305222249223
                    ],
                    [
                        "bad",
                        0.9137216783277088
                    ],
                    [
                        "example",
                        0.9220951385055945
                    ],
                    [
                        "sake",
                        0.9228632588803354
                    ],
                    [
                        "argument",
                        0.9284782501353442
                    ],
                    [
                        "logarithmic",
                        0.9330803776407334
                    ],
                    [
                        "midpoint",
                        0.9344437278048972
                    ],
                    [
                        "minute",
                        0.9351142258399985
                    ],
                    [
                        "question",
                        0.9356885870996972
                    ],
                    [
                        "answer",
                        0.9404302503132326
                    ],
                    [
                        "sorted array",
                        1.1672872190263466
                    ],
                    [
                        "binary search",
                        1.3225532397812416
                    ],
                    [
                        "insertion point",
                        2.174802551341159
                    ],
                    [
                        "particular time",
                        4.160137680957785
                    ]
                ],
                "topTopicSimilarity": 0.4666666666666667,
                "sharedTopicScores": [
                    [
                        "array",
                        0.3551379360019554
                    ],
                    [
                        "right",
                        0.4169728663643683
                    ],
                    [
                        "search",
                        0.42225649175080976
                    ],
                    [
                        "binary",
                        0.429631992550186
                    ],
                    [
                        "insertion",
                        0.43097000200024416
                    ],
                    [
                        "time",
                        0.4463972022769235
                    ],
                    [
                        "audience",
                        0.49521824934770026
                    ],
                    [
                        "PROFESSOR",
                        0.5458976895666077
                    ],
                    [
                        "INAUDIBLE",
                        0.5546285808415241
                    ],
                    [
                        "check",
                        0.5748017271272191
                    ],
                    [
                        "left",
                        0.5762238607714163
                    ],
                    [
                        "order",
                        0.9118305222249223
                    ],
                    [
                        "minute",
                        0.9351142258399985
                    ],
                    [
                        "question",
                        0.9356885870996972
                    ]
                ]
            }
        },
        "9Jry5-82I68-720": {
            "id": "9Jry5-82I68-720",
            "heat": 0.458,
            "start": 720.0,
            "text": " point, how long it's going to take me to do the check, and how long it's going to take me to actually do the insertion. AUDIENCE: Log n in the search-- PROFESSOR: Log n for the search, to find the point. AUDIENCE: Constant for the comparison? PROFESSOR: Constant to the comparison. And then the last step? AUDIENCE: Do the research [INAUDIBLE]. PROFESSOR: Sorry, little louder. Sorry. AUDIENCE: The insertion is constant. PROFESSOR: Insertion is constant? Is that right? Do you people agree with him, that insertion is constant? AUDIENCE: You've got a maximum size up there, right? There must be a maximum. [INAUDIBLE] PROFESSOR: No, the indices-- so right now the array has indices i. And if you start with 1, it's 1, 2, 3, 4, 5, et cetera. So what do you mean by insertion? Someone explain to me what-- yeah, go ahead. AUDIENCE: When you put something in you have to shift every element over. PROFESSOR: That's exactly right. That's exactly right. Ok, good, that's great. I guess I should give you half a cushion. But I'll do the full one, right? And you get one, too. So the point here is this is pretty close. It's almost what we want. It's almost what we want. There's a little bit of a glitch here. We know about binary search. The binary search is going to allow us, if there's n elements here, to find the place-- it's going to be able to find-- and I'm going to precise here-- the smallest i such that R of i",
            "metrics": {
                "relativeDCReadability": 1.1067921803317948,
                "lexicalDiversity": 0.5304659498207885,
                "posComposition": {
                    "VB": 0.057,
                    "WRB": 0.011,
                    "JJ": 0.075,
                    "PRP": 0.093,
                    "VBZ": 0.068,
                    "VBG": 0.018,
                    "TO": 0.047,
                    "DT": 0.097,
                    "NN": 0.122,
                    "CC": 0.022,
                    "RB": 0.068,
                    "NNP": 0.1,
                    "IN": 0.057,
                    ":": 0.022,
                    "NNS": 0.014,
                    "VBP": 0.047,
                    "VBN": 0.004,
                    "EX": 0.011,
                    "MD": 0.011,
                    "CD": 0.025,
                    "WP": 0.014,
                    "UH": 0.004,
                    "POS": 0.004,
                    "VBD": 0.004,
                    "PDT": 0.004,
                    "JJS": 0.004
                },
                "syllableRate": 3.217,
                "topicScores": [
                    [
                        "PROFESSOR",
                        0.17652193672919034
                    ],
                    [
                        "audience",
                        0.19051033844109677
                    ],
                    [
                        "constant",
                        0.2913594256857368
                    ],
                    [
                        "right",
                        0.3128787732328785
                    ],
                    [
                        "insertion",
                        0.32752444632410055
                    ],
                    [
                        "INAUDIBLE",
                        0.39788552981784303
                    ],
                    [
                        "point",
                        0.44542029064013783
                    ],
                    [
                        "search",
                        0.4539747475653303
                    ],
                    [
                        "comparison",
                        0.5416277944500006
                    ],
                    [
                        "maximum",
                        0.5792228465731264
                    ],
                    [
                        "binary",
                        0.5837662993302589
                    ],
                    [
                        "little",
                        0.5852462123092828
                    ],
                    [
                        "element",
                        0.5874069958298458
                    ],
                    [
                        "search-- PROFESSOR",
                        0.8152570597970034
                    ],
                    [
                        "check",
                        0.8409322149458908
                    ],
                    [
                        "step",
                        0.9215200710308932
                    ],
                    [
                        "loud",
                        0.9231308206560165
                    ],
                    [
                        "cetera",
                        0.9333572687282176
                    ],
                    [
                        "research",
                        0.9361241869471666
                    ],
                    [
                        "i.",
                        0.9380309158797759
                    ],
                    [
                        "what--",
                        0.9392448725373969
                    ],
                    [
                        "great",
                        0.9411454007473417
                    ],
                    [
                        "cushion",
                        0.9414115732516822
                    ],
                    [
                        "close",
                        0.9421439500451859
                    ],
                    [
                        "small",
                        0.9431854679249067
                    ],
                    [
                        "good",
                        0.9455081650723448
                    ],
                    [
                        "indices--",
                        0.9467094241553515
                    ],
                    [
                        "index",
                        0.9467094241553516
                    ],
                    [
                        "people",
                        0.9482364294179314
                    ],
                    [
                        "size",
                        0.9491949082765225
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "PROFESSOR",
                        0.17652193672919034
                    ],
                    [
                        "audience",
                        0.19051033844109677
                    ],
                    [
                        "right",
                        0.3128787732328785
                    ],
                    [
                        "insertion",
                        0.32752444632410055
                    ],
                    [
                        "INAUDIBLE",
                        0.39788552981784303
                    ],
                    [
                        "search",
                        0.4539747475653303
                    ],
                    [
                        "binary",
                        0.5837662993302589
                    ],
                    [
                        "check",
                        0.8409322149458908
                    ],
                    [
                        "size",
                        0.9491949082765225
                    ]
                ]
            }
        },
        "9Jry5-82I68-810": {
            "id": "9Jry5-82I68-810",
            "heat": 0.448,
            "start": 810.0,
            "text": " is greater than or equal to t in order log n time. It's going to be able to do that. You're going to be able to compare R of i and R of i minus 1-- so the left and the right-- against t in order 1 time. But sadly, the actual insertion is going to require shifting. And that could take order n time, because it's an array. So that's the problem. Now you could imagine that you had a sorted list. And you could say, hey if I have a sorted list, then the list looks like this, and it's got a bunch of pointers in it. And if I've found the insertion point,",
            "metrics": {
                "relativeDCReadability": 0.9580404137546183,
                "lexicalDiversity": 0.47580645161290325,
                "posComposition": {
                    "VBZ": 0.056,
                    "JJR": 0.008,
                    "IN": 0.121,
                    "CC": 0.065,
                    "JJ": 0.073,
                    "TO": 0.048,
                    "VB": 0.073,
                    "NN": 0.169,
                    "PRP": 0.081,
                    "VBG": 0.024,
                    "VBP": 0.032,
                    "NNP": 0.024,
                    "CD": 0.016,
                    ":": 0.016,
                    "DT": 0.097,
                    "RB": 0.024,
                    "MD": 0.024,
                    "WDT": 0.008,
                    "VBD": 0.016,
                    "VBN": 0.016,
                    "NNS": 0.008
                },
                "syllableRate": 1.292,
                "topicScores": [
                    [
                        "time",
                        0.40427729177924765
                    ],
                    [
                        "order",
                        0.4188227231908461
                    ],
                    [
                        "list",
                        0.4441395403315762
                    ],
                    [
                        "n",
                        0.5099718209354022
                    ],
                    [
                        "able",
                        0.5139540096594273
                    ],
                    [
                        "sorted",
                        0.5223346953306759
                    ],
                    [
                        "insertion",
                        0.5611190847523403
                    ],
                    [
                        "R",
                        0.6171595627416322
                    ],
                    [
                        "great",
                        0.7899603978280831
                    ],
                    [
                        "equal",
                        0.8119410807893493
                    ],
                    [
                        "log",
                        0.8119410807893493
                    ],
                    [
                        "shifting",
                        0.8506995541185087
                    ],
                    [
                        "array",
                        0.8609771573663529
                    ],
                    [
                        "problem",
                        0.8682694680586153
                    ],
                    [
                        "point",
                        0.8816028923035615
                    ],
                    [
                        "actual",
                        0.8857858158406862
                    ],
                    [
                        "left",
                        0.8876022877648514
                    ],
                    [
                        "right--",
                        0.8876022877648514
                    ],
                    [
                        "bunch",
                        0.9183966379661458
                    ],
                    [
                        "pointer",
                        0.9183966379661458
                    ],
                    [
                        "sorted list",
                        1.753439917200439
                    ],
                    [
                        "n time",
                        1.886365427083558
                    ],
                    [
                        "order n",
                        2.0965242216252276
                    ],
                    [
                        "order log",
                        2.1261600892233137
                    ],
                    [
                        "insertion point",
                        3.6308284878650534
                    ],
                    [
                        "actual insertion",
                        3.712002719466732
                    ],
                    [
                        "order n time",
                        6.292919054368691
                    ]
                ],
                "topTopicSimilarity": 0.2222222222222222,
                "sharedTopicScores": [
                    [
                        "time",
                        0.40427729177924765
                    ],
                    [
                        "order",
                        0.4188227231908461
                    ],
                    [
                        "insertion",
                        0.5611190847523403
                    ],
                    [
                        "array",
                        0.8609771573663529
                    ],
                    [
                        "problem",
                        0.8682694680586153
                    ],
                    [
                        "left",
                        0.8876022877648514
                    ]
                ]
            }
        },
        "9Jry5-82I68-900": {
            "id": "9Jry5-82I68-900",
            "heat": 0.491,
            "start": 900.0,
            "text": " then-- the list is nice, because you can insert something by moving pointers in constant time once you've found the insertion point. But what's the problem with the list? Yeah. AUDIENCE: You can't do binary search [INAUDIBLE]. PROFESSOR: Well you can't do binary search on a list. There's no notion of going to the n by 2 index and doing random access on a conventional list, right? So the list does one thing right, but doesn't do the other thing right. The array does a couple things right, but doesn't do the shifting right. And so you see why we've constructed this toy problem. It's to motivate the binary search tree data structure, obviously. But you're close, but not quite there. What about heaps? We talked about heaps last time. What's the basic problem with the heap for this problem? The heaps are data arrays, but you can visualize them as trees. And obviously if we're talking about min heaps and max heaps. So in particular, what goes wrong with a min heap or a max heap for this problem? What takes a long time? Yeah.",
            "metrics": {
                "relativeDCReadability": 1.0728201588658182,
                "lexicalDiversity": 0.5276381909547738,
                "posComposition": {
                    "RB": 0.07,
                    ":": 0.005,
                    "DT": 0.116,
                    "NN": 0.201,
                    "VBZ": 0.055,
                    "JJ": 0.085,
                    "IN": 0.095,
                    "PRP": 0.06,
                    "MD": 0.02,
                    "VB": 0.035,
                    "VBG": 0.02,
                    "NNS": 0.045,
                    "VBP": 0.03,
                    "VBN": 0.01,
                    "CC": 0.055,
                    "WP": 0.025,
                    "NNP": 0.025,
                    "EX": 0.01,
                    "TO": 0.01,
                    "CD": 0.01,
                    "VBD": 0.01,
                    "WRB": 0.005
                },
                "syllableRate": 2.183,
                "topicScores": [
                    [
                        "heap",
                        0.2887702796112671
                    ],
                    [
                        "problem",
                        0.33147756821868074
                    ],
                    [
                        "right",
                        0.3323169232944631
                    ],
                    [
                        "list",
                        0.33978024883739183
                    ],
                    [
                        "binary",
                        0.43650533298399613
                    ],
                    [
                        "thing",
                        0.4427597718438825
                    ],
                    [
                        "search",
                        0.4437687238573268
                    ],
                    [
                        "time",
                        0.45392873500311864
                    ],
                    [
                        "audience",
                        0.5167187908350707
                    ],
                    [
                        "PROFESSOR",
                        0.5529372310045366
                    ],
                    [
                        "array",
                        0.5784749310114127
                    ],
                    [
                        "max",
                        0.5789272294715221
                    ],
                    [
                        "tree",
                        0.5792522576570549
                    ],
                    [
                        "INAUDIBLE",
                        0.5800690108471654
                    ],
                    [
                        "min",
                        0.5835845887170339
                    ],
                    [
                        "point",
                        0.7814569099353946
                    ],
                    [
                        "nice",
                        0.819023098312836
                    ],
                    [
                        "insertion",
                        0.819023098312836
                    ],
                    [
                        "pointer",
                        0.8345021783445691
                    ],
                    [
                        "constant",
                        0.8345021783445691
                    ],
                    [
                        "conventional",
                        0.9218555365730752
                    ],
                    [
                        "shifting",
                        0.926175263202714
                    ],
                    [
                        "toy",
                        0.9278349421959867
                    ],
                    [
                        "data",
                        0.9292636458461093
                    ],
                    [
                        "structure",
                        0.9292636458461093
                    ],
                    [
                        "notion",
                        0.9292985360526895
                    ],
                    [
                        "index",
                        0.9292985360526895
                    ],
                    [
                        "random",
                        0.9292985360526895
                    ],
                    [
                        "access",
                        0.9292985360526895
                    ],
                    [
                        "close",
                        0.9305101381475224
                    ]
                ],
                "topTopicSimilarity": 0.5,
                "sharedTopicScores": [
                    [
                        "heap",
                        0.2887702796112671
                    ],
                    [
                        "problem",
                        0.33147756821868074
                    ],
                    [
                        "right",
                        0.3323169232944631
                    ],
                    [
                        "binary",
                        0.43650533298399613
                    ],
                    [
                        "thing",
                        0.4427597718438825
                    ],
                    [
                        "search",
                        0.4437687238573268
                    ],
                    [
                        "time",
                        0.45392873500311864
                    ],
                    [
                        "audience",
                        0.5167187908350707
                    ],
                    [
                        "PROFESSOR",
                        0.5529372310045366
                    ],
                    [
                        "array",
                        0.5784749310114127
                    ],
                    [
                        "tree",
                        0.5792522576570549
                    ],
                    [
                        "INAUDIBLE",
                        0.5800690108471654
                    ],
                    [
                        "min",
                        0.5835845887170339
                    ],
                    [
                        "insertion",
                        0.819023098312836
                    ],
                    [
                        "structure",
                        0.9292636458461093
                    ]
                ]
            }
        },
        "9Jry5-82I68-990": {
            "id": "9Jry5-82I68-990",
            "heat": 0.458,
            "start": 990.0,
            "text": " AUDIENCE: You have to scan every element, which [INAUDIBLE]. PROFESSOR: That's right. I mean, sadly, you know when we talk about min heaps or max heaps, they actually have a fairly weak invariant. It turns out that-- I'm previewing a bit here-- binary search trees are obviously similar to heaps in the sense that you visualize an array as a tree, in the case of a heap. And binary search trees are trees. But the invariant in a min heap or a max heap, is this kind of a week invariant. It essentially says, look at the min element. And the min element has to be the root, so you can do that one operation pretty quickly. But if you want to look for a k minute check, you want to see if there's an element in the heap that is less than or equal to k, or greater than or equal to k from t, this is going to take order n time. OK? Good. And finally, we haven't talked about dictionaries, but we will next week. Eric will talk about hash tables and dictionaries. And they have the same problem. So it's not like dictionaries are going to solve the problem, for those of you who know about hash tables and dictionaries.",
            "metrics": {
                "relativeDCReadability": 1.0432169501093926,
                "lexicalDiversity": 0.4841628959276018,
                "posComposition": {
                    "NNP": 0.027,
                    "PRP": 0.077,
                    "VBP": 0.068,
                    "TO": 0.041,
                    "VB": 0.054,
                    "DT": 0.109,
                    "NN": 0.181,
                    "WDT": 0.009,
                    "POS": 0.005,
                    "RB": 0.05,
                    "WRB": 0.005,
                    "IN": 0.109,
                    "NNS": 0.05,
                    "CC": 0.063,
                    "JJ": 0.05,
                    "VBZ": 0.036,
                    "RP": 0.005,
                    ":": 0.009,
                    "VBG": 0.014,
                    "MD": 0.014,
                    "CD": 0.005,
                    "EX": 0.005,
                    "JJR": 0.009,
                    "VBN": 0.005,
                    "WP": 0.005
                },
                "syllableRate": 2.542,
                "topicScores": [
                    [
                        "heap",
                        0.2969470754185793
                    ],
                    [
                        "audience",
                        0.3769611851673472
                    ],
                    [
                        "INAUDIBLE",
                        0.3769611851673472
                    ],
                    [
                        "min",
                        0.3776125904354196
                    ],
                    [
                        "tree",
                        0.3782733396797963
                    ],
                    [
                        "element",
                        0.38110865192545856
                    ],
                    [
                        "dictionary",
                        0.38540852465003117
                    ],
                    [
                        "PROFESSOR",
                        0.4363912708281228
                    ],
                    [
                        "invariant",
                        0.44468467065899325
                    ],
                    [
                        "k",
                        0.45444484168221905
                    ],
                    [
                        "max",
                        0.538535610945259
                    ],
                    [
                        "search",
                        0.5476815720179486
                    ],
                    [
                        "binary",
                        0.5509483417810371
                    ],
                    [
                        "table",
                        0.5540869941082929
                    ],
                    [
                        "equal",
                        0.555359437011309
                    ],
                    [
                        "hash",
                        0.5633264094750515
                    ],
                    [
                        "problem",
                        0.5637228935662709
                    ],
                    [
                        "week",
                        0.566141827574462
                    ],
                    [
                        "right",
                        0.8600810756522963
                    ],
                    [
                        "that--",
                        0.8827982777965058
                    ],
                    [
                        "weak",
                        0.8964436965883357
                    ],
                    [
                        "time",
                        0.9051935036817801
                    ],
                    [
                        "Eric",
                        0.9112976268204109
                    ],
                    [
                        "bit",
                        0.9173255632878976
                    ],
                    [
                        "here--",
                        0.9173255632878976
                    ],
                    [
                        "similar",
                        0.9173255632878976
                    ],
                    [
                        "sense",
                        0.9173255632878976
                    ],
                    [
                        "array",
                        0.9173255632878976
                    ],
                    [
                        "case",
                        0.9173255632878976
                    ],
                    [
                        "root",
                        0.9208705103240201
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "heap",
                        0.2969470754185793
                    ],
                    [
                        "audience",
                        0.3769611851673472
                    ],
                    [
                        "INAUDIBLE",
                        0.3769611851673472
                    ],
                    [
                        "min",
                        0.3776125904354196
                    ],
                    [
                        "tree",
                        0.3782733396797963
                    ],
                    [
                        "PROFESSOR",
                        0.4363912708281228
                    ],
                    [
                        "search",
                        0.5476815720179486
                    ],
                    [
                        "binary",
                        0.5509483417810371
                    ],
                    [
                        "problem",
                        0.5637228935662709
                    ],
                    [
                        "right",
                        0.8600810756522963
                    ],
                    [
                        "time",
                        0.9051935036817801
                    ],
                    [
                        "array",
                        0.9173255632878976
                    ]
                ]
            }
        },
        "9Jry5-82I68-1080": {
            "id": "9Jry5-82I68-1080",
            "heat": 0.367,
            "start": 1080.0,
            "text": " But you'll hear about them in some detail. They're very good at other things. So I don't want to say much more about that, because you're not supposed to know about dictionaries. Or at least we don't want to assume you do, though we have talked about them and alluded to dictionaries earlier. And so that's a story here. Yeah, back there, question. AUDIENCE: Yeah, can you explain why it's [INAUDIBLE] time? PROFESSOR: So what is a heap, right? A heap essentially-- a min heap, for example, or we talked about max heaps last time, has the property that you have an element k, and you're going to look at, let's say it's 21. Let's do min heaps, so this has to be less than what's here, 23, and what there, maybe it's 30, and so on and so forth. And you have a recursive definition. And when you insert into a min heap, typically what happens is suppose you wanted to insert, for argument's sake, I want to insert 25. I want to insert 25 into this. The insertion algorithm for a min heap typically adds to the end of the min heap. So what you do is you would add 25 to this. And let's say that you had something out here.",
            "metrics": {
                "relativeDCReadability": 0.998139135310323,
                "lexicalDiversity": 0.45652173913043476,
                "posComposition": {
                    "CC": 0.052,
                    "PRP": 0.104,
                    "MD": 0.013,
                    "VB": 0.078,
                    "IN": 0.096,
                    "DT": 0.074,
                    "NN": 0.122,
                    "VBP": 0.057,
                    "RB": 0.074,
                    "JJ": 0.035,
                    "NNS": 0.017,
                    "TO": 0.048,
                    "RBR": 0.009,
                    "VBN": 0.009,
                    "JJS": 0.004,
                    "VBD": 0.017,
                    "VBZ": 0.061,
                    "NNP": 0.026,
                    "EX": 0.009,
                    "WRB": 0.009,
                    "WP": 0.022,
                    ":": 0.004,
                    "VBG": 0.004,
                    "POS": 0.017,
                    "CD": 0.026,
                    "FW": 0.004,
                    "JJR": 0.004,
                    "RP": 0.004
                },
                "syllableRate": 2.483,
                "topicScores": [
                    [
                        "heap",
                        0.2722423036876308
                    ],
                    [
                        "min",
                        0.3284112966976073
                    ],
                    [
                        "dictionary",
                        0.5367738696825173
                    ],
                    [
                        "time",
                        0.5559870255545453
                    ],
                    [
                        "audience",
                        0.5716326328007578
                    ],
                    [
                        "PROFESSOR",
                        0.589412176857839
                    ],
                    [
                        "detail",
                        0.7827178766414347
                    ],
                    [
                        "thing",
                        0.8442732457523063
                    ],
                    [
                        "good",
                        0.8750142061299292
                    ],
                    [
                        "question",
                        0.8867428379952208
                    ],
                    [
                        "right",
                        0.9009801077191757
                    ],
                    [
                        "story",
                        0.9057355132669476
                    ],
                    [
                        "definition",
                        0.9142278076315529
                    ],
                    [
                        "example",
                        0.9179364517955481
                    ],
                    [
                        "element",
                        0.924124535306751
                    ],
                    [
                        "k",
                        0.924124535306751
                    ],
                    [
                        "recursive",
                        0.9269264451833328
                    ],
                    [
                        "sake",
                        0.9280786440601411
                    ],
                    [
                        "argument",
                        0.9280786440601412
                    ],
                    [
                        "essentially--",
                        0.9296547132028441
                    ],
                    [
                        "max",
                        0.9296547132028441
                    ],
                    [
                        "property",
                        0.9296547132028441
                    ],
                    [
                        "insertion",
                        0.9300275385079324
                    ],
                    [
                        "algorithm",
                        0.9351576647488876
                    ],
                    [
                        "end",
                        0.9351576647488876
                    ],
                    [
                        "min heap",
                        1.0599581847187338
                    ],
                    [
                        "heap essentially--",
                        4.057671840785553
                    ],
                    [
                        "max heap",
                        4.057671840785553
                    ],
                    [
                        "recursive definition",
                        5.5540218977728735
                    ],
                    [
                        "element k",
                        5.849603913283784
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "heap",
                        0.2722423036876308
                    ],
                    [
                        "min",
                        0.3284112966976073
                    ],
                    [
                        "time",
                        0.5559870255545453
                    ],
                    [
                        "audience",
                        0.5716326328007578
                    ],
                    [
                        "PROFESSOR",
                        0.589412176857839
                    ],
                    [
                        "thing",
                        0.8442732457523063
                    ],
                    [
                        "question",
                        0.8867428379952208
                    ],
                    [
                        "right",
                        0.9009801077191757
                    ],
                    [
                        "insertion",
                        0.9300275385079324
                    ]
                ]
            }
        },
        "9Jry5-82I68-1170": {
            "id": "9Jry5-82I68-1170",
            "heat": 0.517,
            "start": 1170.0,
            "text": " So you'd add to it. And you'd start flipping things. And you could work with just this part of the array to insert 25 in here. And you'd be able to satisfy the invariant of the min heap. And you'd get a legitimate min heap. But you'd never check the left part of it, which is 23. So it's quite possible-- and this is a good example-- that your basic insertion algorithm, which is essentially a version of max heap of i, or min heap of i, would simply insert at the end, and keep flipping until you get the min heap property, would be unable to check for the k minute check during the insertion. But what you'd have to do is to go look elsewhere. That min heap of i we'd never look at-- or the insert algorithm we'd never look at-- and that would require order n time. All right? AUDIENCE: Thank you. PROFESSOR: So that's the story for the min heap. Thanks for the question. And it's similar for dictionaries, as I said. And so we're stuck. We have no data structure yet that can do all of the things that I put up on the board to the left, in order log n time. And as you can see, the sorted array got pretty close. And so if you could just solve this problem, if you could do fast insertion-- and by fast I mean order log n",
            "metrics": {
                "relativeDCReadability": 0.9675131700982633,
                "lexicalDiversity": 0.49230769230769234,
                "posComposition": {
                    "RB": 0.065,
                    "PRP": 0.088,
                    "MD": 0.054,
                    "VB": 0.077,
                    "TO": 0.027,
                    "CC": 0.062,
                    "VBG": 0.004,
                    "NNS": 0.012,
                    "IN": 0.112,
                    "DT": 0.108,
                    "NN": 0.188,
                    "CD": 0.008,
                    "JJ": 0.069,
                    "WDT": 0.012,
                    "VBZ": 0.027,
                    ":": 0.019,
                    "PRP$": 0.004,
                    "VBP": 0.015,
                    "WP": 0.004,
                    "VBD": 0.019,
                    "NNP": 0.019,
                    "VBN": 0.004,
                    "RP": 0.004
                },
                "syllableRate": 2.75,
                "topicScores": [
                    [
                        "heap",
                        0.2620790641583642
                    ],
                    [
                        "min",
                        0.292130466494193
                    ],
                    [
                        "order",
                        0.4414939939425633
                    ],
                    [
                        "check",
                        0.44170576483029617
                    ],
                    [
                        "insert",
                        0.4470767526555446
                    ],
                    [
                        "time",
                        0.5362567495373942
                    ],
                    [
                        "thank",
                        0.5400698176918233
                    ],
                    [
                        "insertion",
                        0.5587650302549834
                    ],
                    [
                        "log",
                        0.5626569336736793
                    ],
                    [
                        "at--",
                        0.5633020472776036
                    ],
                    [
                        "thing",
                        0.5642473665667844
                    ],
                    [
                        "left",
                        0.5646771238926804
                    ],
                    [
                        "algorithm",
                        0.5650741383535435
                    ],
                    [
                        "array",
                        0.5678908140304961
                    ],
                    [
                        "fast",
                        0.5844904598757326
                    ],
                    [
                        "audience",
                        0.5945306360982311
                    ],
                    [
                        "PROFESSOR",
                        0.6042920436927226
                    ],
                    [
                        "min heap",
                        0.6466398040143858
                    ],
                    [
                        "able",
                        0.9001306532539392
                    ],
                    [
                        "invariant",
                        0.9001306532539392
                    ],
                    [
                        "legitimate",
                        0.9073759905286225
                    ],
                    [
                        "question",
                        0.9088094622349877
                    ],
                    [
                        "end",
                        0.9088949002452714
                    ],
                    [
                        "property",
                        0.9088949002452714
                    ],
                    [
                        "stuck",
                        0.9110211182382848
                    ],
                    [
                        "close",
                        0.9128557570508995
                    ],
                    [
                        "possible--",
                        0.9163115701860839
                    ],
                    [
                        "good",
                        0.9163115701860839
                    ],
                    [
                        "example--",
                        0.9163115701860839
                    ],
                    [
                        "basic",
                        0.9163115701860839
                    ]
                ],
                "topTopicSimilarity": 0.43333333333333335,
                "sharedTopicScores": [
                    [
                        "heap",
                        0.2620790641583642
                    ],
                    [
                        "min",
                        0.292130466494193
                    ],
                    [
                        "order",
                        0.4414939939425633
                    ],
                    [
                        "check",
                        0.44170576483029617
                    ],
                    [
                        "insert",
                        0.4470767526555446
                    ],
                    [
                        "time",
                        0.5362567495373942
                    ],
                    [
                        "insertion",
                        0.5587650302549834
                    ],
                    [
                        "thing",
                        0.5642473665667844
                    ],
                    [
                        "left",
                        0.5646771238926804
                    ],
                    [
                        "array",
                        0.5678908140304961
                    ],
                    [
                        "audience",
                        0.5945306360982311
                    ],
                    [
                        "PROFESSOR",
                        0.6042920436927226
                    ],
                    [
                        "question",
                        0.9088094622349877
                    ]
                ]
            }
        },
        "9Jry5-82I68-1260": {
            "id": "9Jry5-82I68-1260",
            "heat": 0.501,
            "start": 1260.0,
            "text": " time-- into a sorted array, we'd be in business. So that's what we'd like to do with binary search trees. Binary search trees are, as you can imagine, enable binary search. But the sorted arrays don't allow fast insertion, but BSTs do. So let me introduce BSTs. As with any data structure, there's a nice invariant associated with BSTs. The invariant is stronger than the heap invariant. And actually, that makes them a different data structure, not necessarily a better data structure. And I'll say why, but different. For this problem they're better. So one example of a binary search tree looks like this. And as a binary tree you have a node, and we call it x. Each of the nodes has a key of x. So 30 is the key for this node, 17 for that one, et cetera. Unlike in a heap, your data structure is a little more complicated.",
            "metrics": {
                "relativeDCReadability": 1.109841591681907,
                "lexicalDiversity": 0.515527950310559,
                "posComposition": {
                    "NN": 0.155,
                    ":": 0.006,
                    "IN": 0.112,
                    "DT": 0.143,
                    "JJ": 0.099,
                    "PRP": 0.062,
                    "MD": 0.025,
                    "VB": 0.05,
                    "VBZ": 0.056,
                    "WP": 0.006,
                    "TO": 0.006,
                    "NNS": 0.037,
                    "NNP": 0.05,
                    "VBP": 0.037,
                    "CC": 0.043,
                    "RB": 0.037,
                    "EX": 0.006,
                    "VBN": 0.006,
                    "JJR": 0.019,
                    "WRB": 0.006,
                    "CD": 0.025,
                    "PRP$": 0.006,
                    "RBR": 0.006
                },
                "syllableRate": 1.908,
                "topicScores": [
                    [
                        "binary",
                        0.3260948690360832
                    ],
                    [
                        "search",
                        0.35690251972367343
                    ],
                    [
                        "tree",
                        0.36876743027921993
                    ],
                    [
                        "structure",
                        0.38650702435814854
                    ],
                    [
                        "data",
                        0.4403028083576746
                    ],
                    [
                        "invariant",
                        0.4471326983519567
                    ],
                    [
                        "node",
                        0.4620165134071775
                    ],
                    [
                        "sorted",
                        0.5365029357408063
                    ],
                    [
                        "array",
                        0.5376907037300875
                    ],
                    [
                        "bsts",
                        0.5461482408494387
                    ],
                    [
                        "different",
                        0.5658403741359397
                    ],
                    [
                        "well",
                        0.5717093825296271
                    ],
                    [
                        "heap",
                        0.5738729980177754
                    ],
                    [
                        "x.",
                        0.5760762963577027
                    ],
                    [
                        "key",
                        0.5896405624319464
                    ],
                    [
                        "business",
                        0.7761534251689842
                    ],
                    [
                        "cetera",
                        0.9001705945833598
                    ],
                    [
                        "fast",
                        0.900488875214492
                    ],
                    [
                        "insertion",
                        0.900488875214492
                    ],
                    [
                        "complicated",
                        0.9125626420550564
                    ],
                    [
                        "datum",
                        0.9196086666181456
                    ],
                    [
                        "nice",
                        0.9210317172364625
                    ],
                    [
                        "strong",
                        0.9245182160543197
                    ],
                    [
                        "problem",
                        0.9312925989462258
                    ],
                    [
                        "example",
                        0.9328455749412011
                    ],
                    [
                        "binary search",
                        0.9979997772101767
                    ],
                    [
                        "search tree",
                        1.2216284156601704
                    ],
                    [
                        "sorted array",
                        1.6606427843416505
                    ],
                    [
                        "data structure",
                        1.8842681266156363
                    ],
                    [
                        "binary tree",
                        2.5941639529634086
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "binary",
                        0.3260948690360832
                    ],
                    [
                        "search",
                        0.35690251972367343
                    ],
                    [
                        "tree",
                        0.36876743027921993
                    ],
                    [
                        "structure",
                        0.38650702435814854
                    ],
                    [
                        "node",
                        0.4620165134071775
                    ],
                    [
                        "array",
                        0.5376907037300875
                    ],
                    [
                        "heap",
                        0.5738729980177754
                    ],
                    [
                        "insertion",
                        0.900488875214492
                    ],
                    [
                        "problem",
                        0.9312925989462258
                    ]
                ]
            }
        },
        "9Jry5-82I68-1350": {
            "id": "9Jry5-82I68-1350",
            "heat": 0.387,
            "start": 1350.0,
            "text": " The heap is simply an array, and you happen to visualize it as a tree. The binary search tree is actually a tree that has pointers, unlike a heap. So it's a more complicated data structure. You need a few more bytes for every node of the binary search tree, as opposed to the heap, which is simply an array element. And the pointers are parent of x. I haven't bothered showing the arrows here, because you could be going upwards or backwards. And you could imagine that you actually have a parent pointer that goes up this way, and you have a child pointer that goes this way. So there's really, potentially, three pointers for each node, the parent, the left child, and the right child. So pretty straightforward. That's the data structure in terms of what it needs to have so you can operate on it. And there's an invariant for a BST. What makes a BST is that you have an ordering of the key values that satisfy the invariant that for all nodes x if y is",
            "metrics": {
                "relativeDCReadability": 1.0386024208666602,
                "lexicalDiversity": 0.44623655913978494,
                "posComposition": {
                    "DT": 0.167,
                    "NN": 0.188,
                    "VBZ": 0.075,
                    "RB": 0.054,
                    "CC": 0.038,
                    "PRP": 0.07,
                    "VBP": 0.048,
                    "TO": 0.016,
                    "VB": 0.027,
                    "IN": 0.108,
                    "JJ": 0.027,
                    "WDT": 0.027,
                    "NNS": 0.054,
                    "RBR": 0.005,
                    "JJR": 0.005,
                    "VBN": 0.011,
                    "VBG": 0.011,
                    "MD": 0.016,
                    "RP": 0.005,
                    "EX": 0.011,
                    "CD": 0.005,
                    "NNP": 0.016,
                    "VBD": 0.005,
                    "WP": 0.011
                },
                "syllableRate": 2.108,
                "topicScores": [
                    [
                        "pointer",
                        0.3440958096793289
                    ],
                    [
                        "tree",
                        0.35468449221555615
                    ],
                    [
                        "heap",
                        0.406311174070282
                    ],
                    [
                        "BST",
                        0.4144978400204611
                    ],
                    [
                        "node",
                        0.4356718577843626
                    ],
                    [
                        "child",
                        0.44368599468617775
                    ],
                    [
                        "parent",
                        0.4466581783333933
                    ],
                    [
                        "array",
                        0.506688403671607
                    ],
                    [
                        "binary",
                        0.5079160275823434
                    ],
                    [
                        "search",
                        0.5079160275823434
                    ],
                    [
                        "structure",
                        0.549337507763212
                    ],
                    [
                        "way",
                        0.5522691475642666
                    ],
                    [
                        "data",
                        0.5548336051913714
                    ],
                    [
                        "invariant",
                        0.5711026292770093
                    ],
                    [
                        "element",
                        0.861729704768911
                    ],
                    [
                        "straightforward",
                        0.8873650802899281
                    ],
                    [
                        "complicated",
                        0.8883968325094611
                    ],
                    [
                        "left",
                        0.8959848419891282
                    ],
                    [
                        "arrow",
                        0.8969133076654795
                    ],
                    [
                        "byte",
                        0.899743185746077
                    ],
                    [
                        "right",
                        0.9067545134836031
                    ],
                    [
                        "x.",
                        0.9070137292199701
                    ],
                    [
                        "term",
                        0.9214326477557443
                    ],
                    [
                        "ordering",
                        0.925173998104276
                    ],
                    [
                        "key",
                        0.925173998104276
                    ],
                    [
                        "value",
                        0.925173998104276
                    ],
                    [
                        "binary search",
                        1.1618400765316088
                    ],
                    [
                        "search tree",
                        1.2411665405891243
                    ],
                    [
                        "data structure",
                        2.061520977157814
                    ],
                    [
                        "array element",
                        2.2471719804359607
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "tree",
                        0.35468449221555615
                    ],
                    [
                        "heap",
                        0.406311174070282
                    ],
                    [
                        "BST",
                        0.4144978400204611
                    ],
                    [
                        "node",
                        0.4356718577843626
                    ],
                    [
                        "array",
                        0.506688403671607
                    ],
                    [
                        "binary",
                        0.5079160275823434
                    ],
                    [
                        "search",
                        0.5079160275823434
                    ],
                    [
                        "structure",
                        0.549337507763212
                    ],
                    [
                        "left",
                        0.8959848419891282
                    ],
                    [
                        "right",
                        0.9067545134836031
                    ]
                ]
            }
        },
        "9Jry5-82I68-1440": {
            "id": "9Jry5-82I68-1440",
            "heat": 0.374,
            "start": 1440.0,
            "text": " in the left subtree of x, we have-- if it's in the left subtree then key of y is less than or equal to key of x. And if y is in the right subtree we have key of y is greater than or equal to key of x. So if we're talking about trees here, subtrees here, everything underneath-- and that's the stronger part of the invariant in the BST, versus in the heap we were just talking about the children. And so you look at this BST, it is a BST because if I look to the right, from the root I only see values that are greater than 30. And if I look to the left, in the entire subtree, all the way down I only see values that are less than 30. And that has to be true for any intermediate node in the tree. And the only other nontrivial node here is 17. And you see that 14 is less than 17, and 20 is greater than 17. OK?",
            "metrics": {
                "relativeDCReadability": 1.050305111619294,
                "lexicalDiversity": 0.3854748603351955,
                "posComposition": {
                    "IN": 0.173,
                    "DT": 0.112,
                    "JJ": 0.056,
                    "NN": 0.134,
                    "PRP": 0.067,
                    "VBP": 0.061,
                    ":": 0.011,
                    "VBZ": 0.061,
                    "RB": 0.05,
                    "RBR": 0.006,
                    "CC": 0.056,
                    "TO": 0.028,
                    "VB": 0.017,
                    "VBN": 0.006,
                    "JJR": 0.034,
                    "NNP": 0.028,
                    "VBG": 0.011,
                    "NNS": 0.022,
                    "VBD": 0.006,
                    "WDT": 0.011,
                    "CD": 0.039,
                    "PDT": 0.006,
                    "RP": 0.006
                },
                "syllableRate": 1.833,
                "topicScores": [
                    [
                        "BST",
                        0.28926262726454177
                    ],
                    [
                        "subtree",
                        0.30129440394449103
                    ],
                    [
                        "key",
                        0.3040979478270311
                    ],
                    [
                        "left",
                        0.3799886476651305
                    ],
                    [
                        "x.",
                        0.39136807587900535
                    ],
                    [
                        "great",
                        0.40326408480903747
                    ],
                    [
                        "equal",
                        0.4352091995334629
                    ],
                    [
                        "value",
                        0.4976040332593156
                    ],
                    [
                        "right",
                        0.5120601733023836
                    ],
                    [
                        "node",
                        0.5520776665516259
                    ],
                    [
                        "ok",
                        0.5653978776403396
                    ],
                    [
                        "child",
                        0.8230223170452449
                    ],
                    [
                        "underneath--",
                        0.8516600327033156
                    ],
                    [
                        "strong",
                        0.863569733720087
                    ],
                    [
                        "invariant",
                        0.863569733720087
                    ],
                    [
                        "heap",
                        0.863569733720087
                    ],
                    [
                        "entire",
                        0.8755466344861457
                    ],
                    [
                        "root",
                        0.8770909756133427
                    ],
                    [
                        "way",
                        0.8857957289180909
                    ],
                    [
                        "true",
                        0.891949581978852
                    ],
                    [
                        "intermediate",
                        0.891949581978852
                    ],
                    [
                        "nontrivial",
                        0.8965758934072686
                    ],
                    [
                        "left subtree",
                        0.9150753349169558
                    ],
                    [
                        "right subtree",
                        1.7181246874525122
                    ],
                    [
                        "entire subtree",
                        2.143726113634611
                    ],
                    [
                        "intermediate node",
                        3.5553077378655207
                    ],
                    [
                        "nontrivial node",
                        3.6408878457500555
                    ]
                ],
                "topTopicSimilarity": 0.25925925925925924,
                "sharedTopicScores": [
                    [
                        "BST",
                        0.28926262726454177
                    ],
                    [
                        "subtree",
                        0.30129440394449103
                    ],
                    [
                        "left",
                        0.3799886476651305
                    ],
                    [
                        "right",
                        0.5120601733023836
                    ],
                    [
                        "node",
                        0.5520776665516259
                    ],
                    [
                        "ok",
                        0.5653978776403396
                    ],
                    [
                        "heap",
                        0.863569733720087
                    ]
                ]
            }
        },
        "9Jry5-82I68-1530": {
            "id": "9Jry5-82I68-1530",
            "heat": 0.352,
            "start": 1530.0,
            "text": " So that's the BST. That's the data structure. This is the invariant. So let's look at why BSTs are a possibility for solving our runway reservation problem. And what I'll do is I'll do the insert. So let's start with the nil set of elements, or null set of elements, R. And let's start inserting. So I insert 49. And all I do is make a node that has a key value of 49. This one is easy. Next insert, 79. And what happens here is I have to look at 49, and I compare 79 to 49. And because 79 is greater than 49 I go to the right and I attach 79 to the right child of 49. Then I want to insert 46. And when I want to insert 46 I look at this, I compare 49 and 46. 46 is less, so I go to the left side and I put 46 in there. Next, let's say I want to insert 41.",
            "metrics": {
                "relativeDCReadability": 1.2013534232539405,
                "lexicalDiversity": 0.4827586206896552,
                "posComposition": {
                    "IN": 0.069,
                    "DT": 0.092,
                    "VBZ": 0.063,
                    "NNP": 0.04,
                    "WDT": 0.011,
                    "NN": 0.121,
                    "POS": 0.023,
                    "WRB": 0.011,
                    "VBP": 0.075,
                    "VBG": 0.011,
                    "PRP$": 0.006,
                    "CC": 0.063,
                    "WP": 0.011,
                    "PRP": 0.086,
                    "MD": 0.011,
                    "VB": 0.057,
                    "JJ": 0.034,
                    "NNS": 0.011,
                    "RB": 0.029,
                    "CD": 0.103,
                    "TO": 0.046,
                    "JJR": 0.006,
                    "RBR": 0.006,
                    "VBD": 0.006,
                    "EX": 0.006
                },
                "syllableRate": 1.742,
                "topicScores": [
                    [
                        "insert",
                        0.2903564192860256
                    ],
                    [
                        "BST",
                        0.3941547856422343
                    ],
                    [
                        "element",
                        0.5557721747612244
                    ],
                    [
                        "set",
                        0.5661307429050769
                    ],
                    [
                        "right",
                        0.5766887893312131
                    ],
                    [
                        "R.",
                        0.6356221580665307
                    ],
                    [
                        "structure",
                        0.8480312644132739
                    ],
                    [
                        "invariant",
                        0.8714961765287684
                    ],
                    [
                        "data",
                        0.8720725828263293
                    ],
                    [
                        "problem",
                        0.8843370654996882
                    ],
                    [
                        "reservation",
                        0.9032898370660126
                    ],
                    [
                        "easy",
                        0.9090224618615225
                    ],
                    [
                        "possibility",
                        0.9111181814347793
                    ],
                    [
                        "runway",
                        0.9111181814347793
                    ],
                    [
                        "null",
                        0.9152871358086436
                    ],
                    [
                        "nil",
                        0.9222279551792733
                    ],
                    [
                        "node",
                        0.9283581692475741
                    ],
                    [
                        "key",
                        0.9283581692475741
                    ],
                    [
                        "value",
                        0.9283581692475741
                    ],
                    [
                        "great",
                        0.9351931645160803
                    ],
                    [
                        "child",
                        0.9351931645160803
                    ],
                    [
                        "left",
                        0.9382590776630759
                    ],
                    [
                        "data structure",
                        2.839432109157305
                    ],
                    [
                        "reservation problem",
                        3.9704922701933674
                    ],
                    [
                        "null set",
                        4.595453751740292
                    ],
                    [
                        "runway reservation",
                        4.649838607597274
                    ],
                    [
                        "nil set",
                        4.797486383391342
                    ],
                    [
                        "right child",
                        5.8868012954149345
                    ],
                    [
                        "key value",
                        6.238450729483156
                    ],
                    [
                        "runway reservation problem",
                        25.925293030342875
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "insert",
                        0.2903564192860256
                    ],
                    [
                        "BST",
                        0.3941547856422343
                    ],
                    [
                        "right",
                        0.5766887893312131
                    ],
                    [
                        "structure",
                        0.8480312644132739
                    ],
                    [
                        "problem",
                        0.8843370654996882
                    ],
                    [
                        "node",
                        0.9283581692475741
                    ],
                    [
                        "left",
                        0.9382590776630759
                    ]
                ]
            }
        },
        "9Jry5-82I68-1620": {
            "id": "9Jry5-82I68-1620",
            "heat": 0.344,
            "start": 1620.0,
            "text": " So far I haven't really talked about the k minute checks. And you could imagine that they're being done. I'll show you exactly, or talk about exactly how they're done in a second. It's not that hard. But let me go ahead and do one more. For 41, 41 is less than 49, so I go left. 41 is less than 46, so I go left and attach it to the left child. All right? So that's what I have right now. Now let's talk about the k minute check. It's good to talk about the K minute check when there's actually a violation. And let's assume the k equals 3 here. And so, same thing here. You're essentially doing binary search here. And you're doing the checks as you're doing the binary search. So what you're going to be doing is you're going to check that-- you're going to compare 42 with 49, with the k minute check. And you realize they're 7 apart. So that's OK. And 42 is less than 49, so you go left. And then you compare 42 with 46. And again, it's less than 46, but it's k away, more than 3 away from 46. So that's cool. And you go left. And then you get to 41. And you compare 42 with 41. In this case is greater. But it's not k more than it.",
            "metrics": {
                "relativeDCReadability": 0.9223395561236172,
                "lexicalDiversity": 0.4823529411764706,
                "posComposition": {
                    "RB": 0.11,
                    "PRP": 0.122,
                    "VBP": 0.078,
                    "VBN": 0.016,
                    "IN": 0.098,
                    "DT": 0.059,
                    "NN": 0.063,
                    "NNS": 0.008,
                    "CC": 0.067,
                    "MD": 0.008,
                    "VB": 0.059,
                    "VBG": 0.031,
                    "WRB": 0.008,
                    "JJ": 0.039,
                    "VBZ": 0.059,
                    "CD": 0.078,
                    "JJR": 0.035,
                    "TO": 0.024,
                    "NNP": 0.02,
                    "WP": 0.008,
                    "POS": 0.004,
                    "EX": 0.004,
                    ":": 0.004
                },
                "syllableRate": 2.55,
                "topicScores": [
                    [
                        "check",
                        0.3031537297752039
                    ],
                    [
                        "left",
                        0.3282525810445187
                    ],
                    [
                        "minute",
                        0.3484998508435607
                    ],
                    [
                        "search",
                        0.5683491655973671
                    ],
                    [
                        "binary",
                        0.569456652468469
                    ],
                    [
                        "K",
                        0.6689615057624587
                    ],
                    [
                        "ok",
                        0.6690287795290376
                    ],
                    [
                        "second",
                        0.8913747904650765
                    ],
                    [
                        "child",
                        0.9182906339398844
                    ],
                    [
                        "violation",
                        0.9272509743648542
                    ],
                    [
                        "thing",
                        0.9342365876648197
                    ],
                    [
                        "cool",
                        0.9368436575761556
                    ],
                    [
                        "great",
                        0.9386319163676327
                    ],
                    [
                        "good",
                        0.9394650026180349
                    ],
                    [
                        "that--",
                        0.9442465424467874
                    ],
                    [
                        "case",
                        0.9490401802532411
                    ],
                    [
                        "minute check",
                        0.9526707434224325
                    ],
                    [
                        "k minute",
                        1.1353012927865214
                    ],
                    [
                        "binary search",
                        2.7438145083338603
                    ],
                    [
                        "left child",
                        3.5287502790147016
                    ]
                ],
                "topTopicSimilarity": 0.35,
                "sharedTopicScores": [
                    [
                        "check",
                        0.3031537297752039
                    ],
                    [
                        "left",
                        0.3282525810445187
                    ],
                    [
                        "minute",
                        0.3484998508435607
                    ],
                    [
                        "search",
                        0.5683491655973671
                    ],
                    [
                        "binary",
                        0.569456652468469
                    ],
                    [
                        "ok",
                        0.6690287795290376
                    ],
                    [
                        "thing",
                        0.9342365876648197
                    ]
                ]
            }
        },
        "9Jry5-82I68-1710": {
            "id": "9Jry5-82I68-1710",
            "heat": 0.339,
            "start": 1710.0,
            "text": " And so that means that if you didn't have the check, you would be putting 42 in here. But because you have the check, you fail. And you say, look, I mean this violates the safety property, violates the check I need to do. And therefore I'm not going to insert-- I'm not going to reserve a request for you. All right? So what's happened here is it's basically a sorted array, except that you added a bunch of pointers associated with the tree. And so it's somewhere between a sorted list and a sorted array. And it does exactly the right thing with respect to being able to insert. Once you've found the place to insert, it's merely attaching this particular new node with it's appropriate key to the pointer. All right? So what's happened here is that if h is the height of the tree then insertion with or without the check is done in order h time. And that's what BSTs are good for. People buy that? Any questions about how they k minute check proceeded? Yeah, question. AUDIENCE: So, what's it called? The what check? PROFESSOR: The k minute check.",
            "metrics": {
                "relativeDCReadability": 0.9705804419750182,
                "lexicalDiversity": 0.47342995169082125,
                "posComposition": {
                    "CC": 0.043,
                    "RB": 0.068,
                    "IN": 0.106,
                    "VBZ": 0.077,
                    "PRP": 0.092,
                    "VBD": 0.024,
                    "VB": 0.039,
                    "DT": 0.111,
                    "NN": 0.15,
                    "MD": 0.005,
                    "VBG": 0.024,
                    "CD": 0.005,
                    "VBP": 0.058,
                    "TO": 0.034,
                    ":": 0.005,
                    "NNP": 0.043,
                    "WP": 0.024,
                    "VBN": 0.024,
                    "JJ": 0.048,
                    "NNS": 0.014,
                    "WRB": 0.005
                },
                "syllableRate": 2.275,
                "topicScores": [
                    [
                        "check",
                        0.2747479620263678
                    ],
                    [
                        "right",
                        0.4165053024326865
                    ],
                    [
                        "sorted",
                        0.4226980721772456
                    ],
                    [
                        "array",
                        0.5282716954540772
                    ],
                    [
                        "tree",
                        0.5489462900549948
                    ],
                    [
                        "question",
                        0.5535528555637175
                    ],
                    [
                        "minute",
                        0.554617641668891
                    ],
                    [
                        "pointer",
                        0.5550223921768586
                    ],
                    [
                        "audience",
                        0.616529109457363
                    ],
                    [
                        "PROFESSOR",
                        0.6237554439577114
                    ],
                    [
                        "insert--",
                        0.8680096169900895
                    ],
                    [
                        "safety",
                        0.8798238036991128
                    ],
                    [
                        "property",
                        0.8798238036991128
                    ],
                    [
                        "time",
                        0.8967143208710687
                    ],
                    [
                        "People",
                        0.8996964627197677
                    ],
                    [
                        "request",
                        0.9024995852215125
                    ],
                    [
                        "bunch",
                        0.9100331448971337
                    ],
                    [
                        "list",
                        0.9127166151530977
                    ],
                    [
                        "good",
                        0.9144322174997832
                    ],
                    [
                        "thing",
                        0.9149461014468843
                    ],
                    [
                        "respect",
                        0.9149461014468843
                    ],
                    [
                        "able",
                        0.9149461014468843
                    ],
                    [
                        "place",
                        0.9168355589984621
                    ],
                    [
                        "particular",
                        0.9168355589984621
                    ],
                    [
                        "new",
                        0.9168355589984621
                    ],
                    [
                        "node",
                        0.9168355589984621
                    ],
                    [
                        "appropriate",
                        0.9168355589984621
                    ],
                    [
                        "key",
                        0.9168355589984621
                    ],
                    [
                        "height",
                        0.9198832991200245
                    ],
                    [
                        "insertion",
                        0.9198832991200245
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "check",
                        0.2747479620263678
                    ],
                    [
                        "right",
                        0.4165053024326865
                    ],
                    [
                        "array",
                        0.5282716954540772
                    ],
                    [
                        "tree",
                        0.5489462900549948
                    ],
                    [
                        "question",
                        0.5535528555637175
                    ],
                    [
                        "minute",
                        0.554617641668891
                    ],
                    [
                        "audience",
                        0.616529109457363
                    ],
                    [
                        "PROFESSOR",
                        0.6237554439577114
                    ],
                    [
                        "time",
                        0.8967143208710687
                    ],
                    [
                        "thing",
                        0.9149461014468843
                    ],
                    [
                        "node",
                        0.9168355589984621
                    ],
                    [
                        "insertion",
                        0.9198832991200245
                    ]
                ]
            }
        },
        "9Jry5-82I68-1800": {
            "id": "9Jry5-82I68-1800",
            "heat": 0.1,
            "start": 1800.0,
            "text": " Sorry, the k was 3 minutes k. I had this thing over here, add t to the set R if no other landings are scheduled within k minutes. So k was just a number. I want it to be a parameter because it doesn't matter what k is. As long as you know what it is when you do the binary search, you can add that in to an argument to your insert, and do the check. AUDIENCE: OK. PROFESSOR: So in this case, I set k to be 3 out here. And I was doing a check to see that the invariant, any elements in the BST already, on any nodes that had keys that were within 3 minutes-- because I fixed k to be 3-- to the actual time that I was trying to insert. All right? AUDIENCE: So there's no way [INAUDIBLE]. PROFESSOR: I'm sorry, there's no way? AUDIENCE: There's no way you could insert the 42 into the tree then? PROFESSOR: Well, if the basic insertion method into a binary search tree doesn't have any constraints. But you can certainly augment the insertion method without changing the efficiency of the insertion method. So let's say that all you wanted to do was insert into a binary search tree, and it had nothing to do with the runway reservation. Then you would just insert the way I described to you. The beauty of the binary search tree is that while you're finding the place to insert,",
            "metrics": {
                "relativeDCReadability": 1.1270680632932988,
                "lexicalDiversity": 0.444015444015444,
                "posComposition": {
                    "NNP": 0.062,
                    "DT": 0.135,
                    "NN": 0.151,
                    "VBD": 0.042,
                    "CD": 0.019,
                    "NNS": 0.031,
                    "VBP": 0.035,
                    "PRP": 0.081,
                    "IN": 0.097,
                    "RB": 0.05,
                    "VB": 0.081,
                    "TO": 0.05,
                    "JJ": 0.039,
                    "VBN": 0.004,
                    "VBZ": 0.031,
                    "WP": 0.008,
                    "WRB": 0.004,
                    "MD": 0.015,
                    "PRP$": 0.004,
                    "CC": 0.015,
                    "VBG": 0.015,
                    "WDT": 0.008,
                    ":": 0.008,
                    "EX": 0.012,
                    "POS": 0.004
                },
                "syllableRate": 2.95,
                "topicScores": [
                    [
                        "PROFESSOR",
                        0.22693434128942344
                    ],
                    [
                        "k",
                        0.28875265747408935
                    ],
                    [
                        "insert",
                        0.3123574758971142
                    ],
                    [
                        "binary",
                        0.35285724424094816
                    ],
                    [
                        "search",
                        0.3551414578915101
                    ],
                    [
                        "audience",
                        0.3599555962694228
                    ],
                    [
                        "way",
                        0.3693157606522416
                    ],
                    [
                        "Sorry",
                        0.3695116202948719
                    ],
                    [
                        "tree",
                        0.37400516986325166
                    ],
                    [
                        "insertion",
                        0.43455323196582907
                    ],
                    [
                        "method",
                        0.4372370789240416
                    ],
                    [
                        "minute",
                        0.48518538424625834
                    ],
                    [
                        "check",
                        0.5454700480877652
                    ],
                    [
                        "set",
                        0.5513077138938195
                    ],
                    [
                        "INAUDIBLE",
                        0.6342508185931338
                    ],
                    [
                        "BST",
                        0.6575364504463075
                    ],
                    [
                        "set r",
                        0.8413981991226591
                    ],
                    [
                        "number",
                        0.8514690888672027
                    ],
                    [
                        "thing",
                        0.8603527358801327
                    ],
                    [
                        "landing",
                        0.8603527358801327
                    ],
                    [
                        "parameter",
                        0.8940825538983022
                    ],
                    [
                        "binary search",
                        0.896985917979594
                    ],
                    [
                        "argument",
                        0.9017187613898474
                    ],
                    [
                        "constraint",
                        0.9087644645327552
                    ],
                    [
                        "case",
                        0.9101622818556544
                    ],
                    [
                        "reservation",
                        0.9105047336062839
                    ],
                    [
                        "invariant",
                        0.9124507552271834
                    ],
                    [
                        "element",
                        0.9124507552271834
                    ],
                    [
                        "node",
                        0.9190159989112535
                    ],
                    [
                        "key",
                        0.9190159989112535
                    ]
                ],
                "topTopicSimilarity": 0.43333333333333335,
                "sharedTopicScores": [
                    [
                        "PROFESSOR",
                        0.22693434128942344
                    ],
                    [
                        "insert",
                        0.3123574758971142
                    ],
                    [
                        "binary",
                        0.35285724424094816
                    ],
                    [
                        "search",
                        0.3551414578915101
                    ],
                    [
                        "audience",
                        0.3599555962694228
                    ],
                    [
                        "tree",
                        0.37400516986325166
                    ],
                    [
                        "insertion",
                        0.43455323196582907
                    ],
                    [
                        "minute",
                        0.48518538424625834
                    ],
                    [
                        "check",
                        0.5454700480877652
                    ],
                    [
                        "INAUDIBLE",
                        0.6342508185931338
                    ],
                    [
                        "BST",
                        0.6575364504463075
                    ],
                    [
                        "thing",
                        0.8603527358801327
                    ],
                    [
                        "node",
                        0.9190159989112535
                    ]
                ]
            }
        },
        "9Jry5-82I68-1890": {
            "id": "9Jry5-82I68-1890",
            "heat": 0.1,
            "start": 1890.0,
            "text": " you can do these checks-- the k minute checks. Yeah, question back there. AUDIENCE: What about 45? PROFESSOR: What about 45? So this is after-- we haven't inserted 42 because it violated the check. So when you do 45, then what happens is you see that 45 is less than 49 and you pass, because you're more than 3 minutes away. We'll stick with that example. And then you get here and then you see that 45 is less than 46, and you'd fail right here. You would fail right here if you were doing the check, because 45 is not 3 away from 46. All right? So that's the story. And so if you have h being the height of the tree, as you can see you're just following a path. And depending on what the height is you're going to do that many operations, times some constant factor. And so you can say that this is order h time. All right? Any other questions? Yeah, question back there. AUDIENCE: In a normal array [INAUDIBLE]. PROFESSOR: Well, it's up to you. In a conventional binary search tree, or the vanilla binary search tree, typically what you're doing is you're doing either find or insert. And so what that means is that you would just return the pointer associated with that element.",
            "metrics": {
                "relativeDCReadability": 0.9506159510030806,
                "lexicalDiversity": 0.44017094017094016,
                "posComposition": {
                    "PRP": 0.098,
                    "MD": 0.03,
                    "VB": 0.043,
                    "DT": 0.085,
                    "NNS": 0.026,
                    ":": 0.009,
                    "NN": 0.103,
                    "NNP": 0.043,
                    "RB": 0.103,
                    "WP": 0.026,
                    "IN": 0.103,
                    "CD": 0.051,
                    "VBZ": 0.056,
                    "VBP": 0.051,
                    "VBN": 0.013,
                    "VBD": 0.009,
                    "WRB": 0.004,
                    "JJR": 0.013,
                    "CC": 0.047,
                    "VBG": 0.03,
                    "WDT": 0.004,
                    "TO": 0.009,
                    "JJ": 0.034,
                    "POS": 0.004,
                    "EX": 0.004,
                    "RP": 0.004
                },
                "syllableRate": 2.567,
                "topicScores": [
                    [
                        "PROFESSOR",
                        0.3291748215331151
                    ],
                    [
                        "audience",
                        0.35361090689232716
                    ],
                    [
                        "check",
                        0.41804656333420687
                    ],
                    [
                        "question",
                        0.42028073447500497
                    ],
                    [
                        "tree",
                        0.4424786761453117
                    ],
                    [
                        "minute",
                        0.5419986859635653
                    ],
                    [
                        "search",
                        0.5629238906346463
                    ],
                    [
                        "time",
                        0.5635180950639312
                    ],
                    [
                        "height",
                        0.5686416645361793
                    ],
                    [
                        "binary",
                        0.5734690478224939
                    ],
                    [
                        "INAUDIBLE",
                        0.6583853032379704
                    ],
                    [
                        "example",
                        0.8986593047577606
                    ],
                    [
                        "story",
                        0.9080470752230339
                    ],
                    [
                        "path",
                        0.9096310806237334
                    ],
                    [
                        "factor",
                        0.911029811335601
                    ],
                    [
                        "after--",
                        0.9128829121763653
                    ],
                    [
                        "element",
                        0.9195598405035619
                    ],
                    [
                        "operation",
                        0.9241626395377823
                    ],
                    [
                        "constant",
                        0.9241626395377823
                    ],
                    [
                        "normal",
                        0.9292879877955758
                    ],
                    [
                        "array",
                        0.9292879877955758
                    ],
                    [
                        "order",
                        0.9306955662488298
                    ],
                    [
                        "conventional",
                        0.936087391342123
                    ],
                    [
                        "vanilla",
                        0.936087391342123
                    ],
                    [
                        "pointer",
                        0.9365557995482164
                    ],
                    [
                        "k minute",
                        2.330625822738846
                    ],
                    [
                        "search tree",
                        2.3673680095559
                    ],
                    [
                        "minute check",
                        2.549167530140668
                    ],
                    [
                        "binary search",
                        2.7065576272908083
                    ],
                    [
                        "h time",
                        4.2153309231377225
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "PROFESSOR",
                        0.3291748215331151
                    ],
                    [
                        "audience",
                        0.35361090689232716
                    ],
                    [
                        "check",
                        0.41804656333420687
                    ],
                    [
                        "question",
                        0.42028073447500497
                    ],
                    [
                        "tree",
                        0.4424786761453117
                    ],
                    [
                        "minute",
                        0.5419986859635653
                    ],
                    [
                        "search",
                        0.5629238906346463
                    ],
                    [
                        "time",
                        0.5635180950639312
                    ],
                    [
                        "binary",
                        0.5734690478224939
                    ],
                    [
                        "INAUDIBLE",
                        0.6583853032379704
                    ],
                    [
                        "array",
                        0.9292879877955758
                    ],
                    [
                        "order",
                        0.9306955662488298
                    ]
                ]
            }
        },
        "9Jry5-82I68-1980": {
            "id": "9Jry5-82I68-1980",
            "heat": 0.1,
            "start": 1980.0,
            "text": " So if you're looking for find 46, for example, on the tree that I have out there, typically 46 is just the key value. And there may be a record associated with it. And you would get a pointer to that record because it's already in there. At that point you can say I want to override. Or if you want, you could have duplicate values. You could have this, what's called a multiset. A multiset is a set that has duplicate elements. In that case, you would need a little more sophistication to differentiate between two elements that have the same key values. So you'd have to call it 46a and 46b. And you'd have to have some way of differentiating. Any other questions? Yeah. AUDIENCE: Wouldn't it be a problem if the tree's not balanced? PROFESSOR: Ah, great question. Yes, stay tuned. So I was careful, right? I guess I kind of alluded to the fact that we'd solved the runway reservation system. Did I actually say that we'd solved the problem? Did I say we had solved the problem? OK, so I did not lie. I did not lie. I said that the height of the tree was h. And I said that this was accomplished in order h time, right? Which is not quite what I want, which is really your question. So we'll get to that. So we're not quite done yet. But before we do that, it turns out",
            "metrics": {
                "relativeDCReadability": 0.988002381549087,
                "lexicalDiversity": 0.43359375,
                "posComposition": {
                    "RB": 0.074,
                    "IN": 0.098,
                    "PRP": 0.125,
                    "VBP": 0.047,
                    "VBG": 0.008,
                    "$": 0.004,
                    "CD": 0.02,
                    "NN": 0.129,
                    "DT": 0.094,
                    "RP": 0.008,
                    "VBZ": 0.031,
                    "JJ": 0.035,
                    "CC": 0.023,
                    "EX": 0.004,
                    "MD": 0.047,
                    "VB": 0.062,
                    "VBN": 0.035,
                    "TO": 0.027,
                    "NNP": 0.043,
                    "NNS": 0.02,
                    "WP": 0.008,
                    "WDT": 0.012,
                    "JJR": 0.004,
                    "POS": 0.004,
                    "VBD": 0.035,
                    "PRP$": 0.004
                },
                "syllableRate": 2.775,
                "topicScores": [
                    [
                        "value",
                        0.39575969456327237
                    ],
                    [
                        "question",
                        0.4249467106020618
                    ],
                    [
                        "problem",
                        0.43764420955743805
                    ],
                    [
                        "tree",
                        0.4420821281092165
                    ],
                    [
                        "key",
                        0.5292137029713085
                    ],
                    [
                        "record",
                        0.5407492878988132
                    ],
                    [
                        "multiset",
                        0.5444598695481819
                    ],
                    [
                        "right",
                        0.5456779792733109
                    ],
                    [
                        "duplicate",
                        0.5489030729145946
                    ],
                    [
                        "element",
                        0.560666776771066
                    ],
                    [
                        "PROFESSOR",
                        0.6157467666455179
                    ],
                    [
                        "audience",
                        0.6395921295769698
                    ],
                    [
                        "example",
                        0.796940756579717
                    ],
                    [
                        "find",
                        0.810367797512331
                    ],
                    [
                        "pointer",
                        0.894528265759096
                    ],
                    [
                        "46b",
                        0.9063355686587155
                    ],
                    [
                        "balanced",
                        0.9139768082325135
                    ],
                    [
                        "case",
                        0.9176235953431732
                    ],
                    [
                        "system",
                        0.9194322666888747
                    ],
                    [
                        "h.",
                        0.922911197719244
                    ],
                    [
                        "great",
                        0.9230629356375646
                    ],
                    [
                        "little",
                        0.9235884157600972
                    ],
                    [
                        "sophistication",
                        0.9235884157600972
                    ],
                    [
                        "46a",
                        0.9259004901748906
                    ],
                    [
                        "way",
                        0.9278198513754607
                    ],
                    [
                        "careful",
                        0.9306560978733363
                    ],
                    [
                        "reservation",
                        0.9314181818876772
                    ],
                    [
                        "time",
                        0.9348962785176191
                    ],
                    [
                        "fact",
                        0.9364533177023361
                    ],
                    [
                        "runway",
                        0.9364533177023361
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "question",
                        0.4249467106020618
                    ],
                    [
                        "problem",
                        0.43764420955743805
                    ],
                    [
                        "tree",
                        0.4420821281092165
                    ],
                    [
                        "right",
                        0.5456779792733109
                    ],
                    [
                        "PROFESSOR",
                        0.6157467666455179
                    ],
                    [
                        "audience",
                        0.6395921295769698
                    ],
                    [
                        "find",
                        0.810367797512331
                    ],
                    [
                        "time",
                        0.9348962785176191
                    ]
                ]
            }
        },
        "9Jry5-82I68-2070": {
            "id": "9Jry5-82I68-2070",
            "heat": 0.113,
            "start": 2070.0,
            "text": " that today's lecture is really part one of two. You'll get a really good sense of BST operations in today's lecture. But there's going to be a few things that-- we can't cover all of double 6 in the lecture, right? We'd like to, and let you off for the entire fall, but that's not the way it works, all right? So it's a great question. I'll answer it towards the end. I just wanted you to say a little bit about other operations. There's many operations that you can do on a binary search tree, that can be done in order h time, and some even in constant time. And I'll put these in the notes. Some of these are fairly straightforward. Find min can be done in heap, in a min heap. If you want to find the minimum value, it's constant time. You just return the root. In the case of a binary search tree, how do you find the min? Someone? Worth a cushion. Yep. AUDIENCE: Keep going to the left? PROFESSOR: Keep going to the left. And how do you find the max? AUDIENCE: [INAUDIBLE]. PROFESSOR: Keep going to the right. All right great, thank you. And finally, what complexity is that? I sort gave it away, but I want to hear it from you. AUDIENCE: [INAUDIBLE]. PROFESSOR: Hm? AUDIENCE: It's the height PROFESSOR: It's the height, order h. All right, it's order h complexity. Go to the left until you hit a leaf, and until leaf order h complexity.",
            "metrics": {
                "relativeDCReadability": 0.9731271413007087,
                "lexicalDiversity": 0.5276752767527675,
                "posComposition": {
                    "DT": 0.122,
                    "NN": 0.166,
                    "POS": 0.007,
                    "VBZ": 0.041,
                    "RB": 0.048,
                    "CD": 0.011,
                    "IN": 0.089,
                    "PRP": 0.1,
                    "MD": 0.03,
                    "VB": 0.066,
                    "JJ": 0.066,
                    "NNP": 0.074,
                    "NNS": 0.018,
                    "CC": 0.033,
                    "EX": 0.007,
                    "VBG": 0.015,
                    "TO": 0.033,
                    "WDT": 0.007,
                    ":": 0.004,
                    "RP": 0.004,
                    "VBD": 0.011,
                    "VBN": 0.011,
                    "VBP": 0.026,
                    "WRB": 0.007,
                    "WP": 0.004
                },
                "syllableRate": 2.992,
                "topicScores": [
                    [
                        "PROFESSOR",
                        0.2511555389229876
                    ],
                    [
                        "audience",
                        0.2543669961989796
                    ],
                    [
                        "right",
                        0.3316607744519414
                    ],
                    [
                        "INAUDIBLE",
                        0.36142550287759767
                    ],
                    [
                        "order",
                        0.39077534866925007
                    ],
                    [
                        "lecture",
                        0.41201300740103647
                    ],
                    [
                        "left",
                        0.4347307073458561
                    ],
                    [
                        "time",
                        0.43958958978006146
                    ],
                    [
                        "complexity",
                        0.44341415329621403
                    ],
                    [
                        "operation",
                        0.4440778457024076
                    ],
                    [
                        "min",
                        0.44525406868455486
                    ],
                    [
                        "today",
                        0.525571643790591
                    ],
                    [
                        "search",
                        0.5512651984455461
                    ],
                    [
                        "tree",
                        0.5610234688574367
                    ],
                    [
                        "binary",
                        0.5631937789702007
                    ],
                    [
                        "constant",
                        0.5639906794301267
                    ],
                    [
                        "height",
                        0.5724564434771593
                    ],
                    [
                        "BST",
                        0.5726348420329125
                    ],
                    [
                        "heap",
                        0.5730136549989696
                    ],
                    [
                        "great",
                        0.5757518276843145
                    ],
                    [
                        "leaf",
                        0.5883938990411993
                    ],
                    [
                        "good",
                        0.9038832691438273
                    ],
                    [
                        "sense",
                        0.9038832691438273
                    ],
                    [
                        "question",
                        0.9064569155452198
                    ],
                    [
                        "end",
                        0.9105243880365868
                    ],
                    [
                        "thing",
                        0.9138079173283882
                    ],
                    [
                        "that--",
                        0.9138079173283882
                    ],
                    [
                        "double",
                        0.9138079173283882
                    ],
                    [
                        "entire",
                        0.9144242595745904
                    ],
                    [
                        "fall",
                        0.9144242595745904
                    ]
                ],
                "topTopicSimilarity": 0.5,
                "sharedTopicScores": [
                    [
                        "PROFESSOR",
                        0.2511555389229876
                    ],
                    [
                        "audience",
                        0.2543669961989796
                    ],
                    [
                        "right",
                        0.3316607744519414
                    ],
                    [
                        "INAUDIBLE",
                        0.36142550287759767
                    ],
                    [
                        "order",
                        0.39077534866925007
                    ],
                    [
                        "left",
                        0.4347307073458561
                    ],
                    [
                        "time",
                        0.43958958978006146
                    ],
                    [
                        "min",
                        0.44525406868455486
                    ],
                    [
                        "search",
                        0.5512651984455461
                    ],
                    [
                        "tree",
                        0.5610234688574367
                    ],
                    [
                        "binary",
                        0.5631937789702007
                    ],
                    [
                        "BST",
                        0.5726348420329125
                    ],
                    [
                        "heap",
                        0.5730136549989696
                    ],
                    [
                        "question",
                        0.9064569155452198
                    ],
                    [
                        "thing",
                        0.9138079173283882
                    ]
                ]
            }
        },
        "9Jry5-82I68-2160": {
            "id": "9Jry5-82I68-2160",
            "heat": 0.213,
            "start": 2160.0,
            "text": " Same thing for max. And then you can do a bunch of things. I'll put these in the notes. You can find things like next larger x, which is the next largest value beyond x. And you look at the key for x and you say, for example, if you put 46 in there, what's the next thing that's larger and that? In this tree here, it's 49. But that's something which was trivially done in this example. But in general you can do this in order h time as well. And you can see the pseudocode. And we'll probably cover that in section tomorrow. What I want to do today, for the rest of the time I have left, is actually talk about augmented binary search trees, which are things that can do more and have more data in them than just these pointers. And that's actually something which should give you a sense of the richness of the binary search tree structure, this notion of augmentation. And those of you, again, who have taken double 05, you know about design amendments. And so specifications never stay the same. I mean, you're working for someone, and they never really tell you what they want. They might, but they change their mind. So in this case, we're going to change our mind. And so we've done this to the extent that we can cover all of these in order h time.",
            "metrics": {
                "relativeDCReadability": 0.868912098761078,
                "lexicalDiversity": 0.4302788844621514,
                "posComposition": {
                    "JJ": 0.04,
                    "NN": 0.155,
                    "IN": 0.127,
                    "CC": 0.06,
                    "RB": 0.06,
                    "PRP": 0.104,
                    "MD": 0.04,
                    "VB": 0.052,
                    "DT": 0.108,
                    "NNS": 0.036,
                    "JJR": 0.016,
                    "WDT": 0.024,
                    "VBZ": 0.028,
                    "JJS": 0.004,
                    "NNP": 0.004,
                    "VBP": 0.064,
                    "CD": 0.012,
                    "EX": 0.004,
                    "WP": 0.016,
                    "VBD": 0.004,
                    "VBN": 0.016,
                    "TO": 0.012,
                    "VBG": 0.008,
                    "PRP$": 0.008
                },
                "syllableRate": 2.65,
                "topicScores": [
                    [
                        "thing",
                        0.3384571161277301
                    ],
                    [
                        "tree",
                        0.43543520155468873
                    ],
                    [
                        "large",
                        0.4381306688792123
                    ],
                    [
                        "time",
                        0.4424926172902408
                    ],
                    [
                        "mind",
                        0.5428072011391922
                    ],
                    [
                        "example",
                        0.5462750734587675
                    ],
                    [
                        "search",
                        0.5581057638373078
                    ],
                    [
                        "order",
                        0.5581948238536392
                    ],
                    [
                        "binary",
                        0.5640402994004983
                    ],
                    [
                        "max",
                        0.7722573151885964
                    ],
                    [
                        "note",
                        0.8611541393012864
                    ],
                    [
                        "bunch",
                        0.8724843850635382
                    ],
                    [
                        "x.",
                        0.8748800979812292
                    ],
                    [
                        "pseudocode",
                        0.9013587177117031
                    ],
                    [
                        "value",
                        0.9036122568146592
                    ],
                    [
                        "tomorrow",
                        0.9038477567588195
                    ],
                    [
                        "pointer",
                        0.9059584210021874
                    ],
                    [
                        "augmentation",
                        0.9077771810991491
                    ],
                    [
                        "amendment",
                        0.9093653717114673
                    ],
                    [
                        "key",
                        0.9106300880786059
                    ],
                    [
                        "section",
                        0.9198930687040175
                    ],
                    [
                        "today",
                        0.9216820371671063
                    ],
                    [
                        "general",
                        0.9221837898394101
                    ],
                    [
                        "structure",
                        0.9232224743521881
                    ],
                    [
                        "notion",
                        0.9232224743521881
                    ],
                    [
                        "double",
                        0.9245667805980763
                    ],
                    [
                        "design",
                        0.9245667805980763
                    ],
                    [
                        "rest",
                        0.9281400363102906
                    ],
                    [
                        "datum",
                        0.9281400363102906
                    ],
                    [
                        "case",
                        0.9286197493957065
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "thing",
                        0.3384571161277301
                    ],
                    [
                        "tree",
                        0.43543520155468873
                    ],
                    [
                        "time",
                        0.4424926172902408
                    ],
                    [
                        "search",
                        0.5581057638373078
                    ],
                    [
                        "order",
                        0.5581948238536392
                    ],
                    [
                        "binary",
                        0.5640402994004983
                    ],
                    [
                        "structure",
                        0.9232224743521881
                    ]
                ]
            }
        },
        "9Jry5-82I68-2250": {
            "id": "9Jry5-82I68-2250",
            "heat": 0.108,
            "start": 2250.0,
            "text": " And let's say that now the problem specification changed on us. There's an additional requirement that we're asked to solve. And so you sort of committed to BST structures. But now we have an additional requirement. And the new requirement is that we be able to compute rank t. And rank t is how many planes are scheduled to land at times less than or equal to t. So perfectly reasonable question. It wasn't part of the original spec. You now have built your BST data structure, you thought you were done. Sorry, you aren't. You've got to do this extra stuff. So that's the notion of augmentation, which we're going to use this is an example of how we're going to augment the BST structure. And oh, by the way, I don't want you to change the complexity from order h. And we eventually will get to order log n, but don't go change something that was logarithmic to linear. That would be bad. So let's talk about how you do this.",
            "metrics": {
                "relativeDCReadability": 1.004389229851394,
                "lexicalDiversity": 0.4810810810810811,
                "posComposition": {
                    "CC": 0.049,
                    "VB": 0.092,
                    "POS": 0.011,
                    "WDT": 0.016,
                    "RB": 0.054,
                    "DT": 0.081,
                    "NN": 0.162,
                    "VBD": 0.022,
                    "IN": 0.07,
                    "PRP": 0.092,
                    "EX": 0.005,
                    "VBZ": 0.027,
                    "JJ": 0.059,
                    "VBP": 0.07,
                    "VBN": 0.032,
                    "TO": 0.059,
                    "NNP": 0.032,
                    "NNS": 0.016,
                    "WRB": 0.016,
                    "JJR": 0.005,
                    "PRP$": 0.005,
                    "VBG": 0.011,
                    "MD": 0.011
                },
                "syllableRate": 2.075,
                "topicScores": [
                    [
                        "BST",
                        0.3013959468230513
                    ],
                    [
                        "requirement",
                        0.39432826792688097
                    ],
                    [
                        "structure",
                        0.4079169799656634
                    ],
                    [
                        "additional",
                        0.5018890061247664
                    ],
                    [
                        "t.",
                        0.5088309445283228
                    ],
                    [
                        "rank",
                        0.5395719140691216
                    ],
                    [
                        "order",
                        0.5625739137102007
                    ],
                    [
                        "BST structure",
                        0.6105156674182236
                    ],
                    [
                        "problem",
                        0.7824824890639791
                    ],
                    [
                        "specification",
                        0.7824824890639791
                    ],
                    [
                        "question",
                        0.8687763242919845
                    ],
                    [
                        "stuff",
                        0.8824715207867727
                    ],
                    [
                        "h.",
                        0.886622872915372
                    ],
                    [
                        "linear",
                        0.8883340075013276
                    ],
                    [
                        "new",
                        0.8896564351141931
                    ],
                    [
                        "able",
                        0.8896564351141931
                    ],
                    [
                        "bad",
                        0.8898605952311985
                    ],
                    [
                        "reasonable",
                        0.890990954834008
                    ],
                    [
                        "original",
                        0.8947963634126569
                    ],
                    [
                        "plane",
                        0.8956267679821288
                    ],
                    [
                        "time",
                        0.8956267679821288
                    ],
                    [
                        "equal",
                        0.8956267679821288
                    ],
                    [
                        "datum",
                        0.897883308759572
                    ],
                    [
                        "extra",
                        0.9026275653464836
                    ],
                    [
                        "augmentation",
                        0.904503953756827
                    ],
                    [
                        "way",
                        0.9061426852479838
                    ],
                    [
                        "log",
                        0.907589924136829
                    ],
                    [
                        "notion",
                        0.9126063625445231
                    ],
                    [
                        "example",
                        0.9126063625445231
                    ],
                    [
                        "complexity",
                        0.9141192565177674
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "BST",
                        0.3013959468230513
                    ],
                    [
                        "structure",
                        0.4079169799656634
                    ],
                    [
                        "order",
                        0.5625739137102007
                    ],
                    [
                        "BST structure",
                        0.6105156674182236
                    ],
                    [
                        "problem",
                        0.7824824890639791
                    ],
                    [
                        "question",
                        0.8687763242919845
                    ],
                    [
                        "time",
                        0.8956267679821288
                    ]
                ]
            }
        },
        "9Jry5-82I68-2340": {
            "id": "9Jry5-82I68-2340",
            "heat": 0.224,
            "start": 2340.0,
            "text": " And I don't think we need this anymore. So the first thing we need to do is add a little bit more information to the node structure. And what we're going to do is augment the BST structure. And we're going to add one little number associated with each node, that looks at the number of nodes below it. So in particular, let's say that I have 49, 46, let's just say 49, 46 for now. And over here I have 79, 64, and 83. I'm going to modify-- I'm going to have an extra number associated with each of these nodes. And I'm just going to write that number on the outside of the node. And you can just imagine that now the key value has two numbers associated with it-- the thing that I write inside the node, and what I write outside of it.",
            "metrics": {
                "relativeDCReadability": 0.9919971051684745,
                "lexicalDiversity": 0.4585987261146497,
                "posComposition": {
                    "CC": 0.051,
                    "PRP": 0.102,
                    "VBP": 0.076,
                    "RB": 0.057,
                    "VB": 0.076,
                    "DT": 0.108,
                    "IN": 0.121,
                    "JJ": 0.032,
                    "NN": 0.121,
                    "TO": 0.045,
                    "VBZ": 0.025,
                    "JJR": 0.006,
                    "WP": 0.013,
                    "VBG": 0.032,
                    "NNP": 0.006,
                    "CD": 0.057,
                    "VBN": 0.019,
                    "NNS": 0.019,
                    "POS": 0.013,
                    ":": 0.013,
                    "MD": 0.006
                },
                "syllableRate": 1.692,
                "topicScores": [
                    [
                        "node",
                        0.3258498414592098
                    ],
                    [
                        "number",
                        0.36155390383392855
                    ],
                    [
                        "structure",
                        0.5122262302722466
                    ],
                    [
                        "little",
                        0.5708485774240766
                    ],
                    [
                        "thing",
                        0.5795446504754554
                    ],
                    [
                        "outside",
                        0.5845387642001258
                    ],
                    [
                        "BST",
                        0.636422268532174
                    ],
                    [
                        "bit",
                        0.9088721369167359
                    ],
                    [
                        "information",
                        0.9088721369167359
                    ],
                    [
                        "particular",
                        0.9189008456143039
                    ],
                    [
                        "modify--",
                        0.9342705831135922
                    ],
                    [
                        "extra",
                        0.9342705831135922
                    ],
                    [
                        "key",
                        0.9379502155608223
                    ],
                    [
                        "value",
                        0.9379502155608223
                    ],
                    [
                        "it--",
                        0.9379502155608223
                    ],
                    [
                        "BST structure",
                        1.069045624940722
                    ],
                    [
                        "node structure",
                        2.886054524629747
                    ],
                    [
                        "little bit",
                        4.62820647986344
                    ],
                    [
                        "little number",
                        5.476867120440457
                    ],
                    [
                        "extra number",
                        6.884716274175222
                    ],
                    [
                        "key value",
                        7.3160502849594
                    ],
                    [
                        "bit more information",
                        32.08517557185275
                    ]
                ],
                "topTopicSimilarity": 0.22727272727272727,
                "sharedTopicScores": [
                    [
                        "node",
                        0.3258498414592098
                    ],
                    [
                        "structure",
                        0.5122262302722466
                    ],
                    [
                        "thing",
                        0.5795446504754554
                    ],
                    [
                        "BST",
                        0.636422268532174
                    ],
                    [
                        "BST structure",
                        1.069045624940722
                    ]
                ]
            }
        },
        "9Jry5-82I68-2430": {
            "id": "9Jry5-82I68-2430",
            "heat": 0.378,
            "start": 2430.0,
            "text": " So in particular, when I do insert or delete I'm going to be modifying these numbers. And these are size numbers. And what do I mean by that? Well these numbers correspond to subtree sizes. So the subtree size here is 1, 1, 1. So as I'm building this tree up I'm going to create an augmented BST structure, and I've modified insert and delete so they do some extra work. So let's say, for argument's sake, that I've added this in sort of a bottom up fashion. And what I have are these particular subtree sizes. All of these should make sense. This has just a single node, same thing here. So this subtree sizes associated with these nodes are all 1. The subtree size associated with 79 is 3, because you're counting 79 and 64 and 83. And the subtree size associated with 49 is 5, because you're counting everything underneath it. How did we get these numbers? Well you want to think about this as you started with an empty set, and you kept inserting into it. And you were doing a sequence of insert and delete operations. And if I explain to you how an insert operation modifies these numbers, that is pretty much all you need.",
            "metrics": {
                "relativeDCReadability": 1.0589802691963999,
                "lexicalDiversity": 0.45454545454545453,
                "posComposition": {
                    "RB": 0.041,
                    "IN": 0.091,
                    "JJ": 0.068,
                    "WRB": 0.014,
                    "PRP": 0.095,
                    "VBP": 0.091,
                    "VB": 0.05,
                    "CC": 0.059,
                    "VBG": 0.036,
                    "TO": 0.023,
                    "DT": 0.123,
                    "NNS": 0.045,
                    "NN": 0.105,
                    "WP": 0.009,
                    "NNP": 0.014,
                    "VBZ": 0.027,
                    "CD": 0.05,
                    "VBN": 0.023,
                    "POS": 0.009,
                    "RP": 0.005,
                    "MD": 0.005,
                    "VBD": 0.014,
                    "WDT": 0.005
                },
                "syllableRate": 2.55,
                "topicScores": [
                    [
                        "size",
                        0.2759277272907563
                    ],
                    [
                        "subtree",
                        0.29753933791068776
                    ],
                    [
                        "number",
                        0.329711817579209
                    ],
                    [
                        "insert",
                        0.3523916327634164
                    ],
                    [
                        "delete",
                        0.43842878982406397
                    ],
                    [
                        "particular",
                        0.5608199977863694
                    ],
                    [
                        "node",
                        0.5756424373682784
                    ],
                    [
                        "operation",
                        0.5770065602222042
                    ],
                    [
                        "BST",
                        0.6374631721925417
                    ],
                    [
                        "subtree size",
                        0.7982334251823167
                    ],
                    [
                        "work",
                        0.8945128995963885
                    ],
                    [
                        "fashion",
                        0.89904188201024
                    ],
                    [
                        "sense",
                        0.905479198482702
                    ],
                    [
                        "structure",
                        0.9128078966628401
                    ],
                    [
                        "extra",
                        0.9128078966628401
                    ],
                    [
                        "thing",
                        0.9165289275231753
                    ],
                    [
                        "argument",
                        0.9166246142420641
                    ],
                    [
                        "sake",
                        0.9166246142420641
                    ],
                    [
                        "sort",
                        0.9237852926100544
                    ],
                    [
                        "single",
                        0.9240492371557364
                    ],
                    [
                        "set",
                        0.9306347235288349
                    ],
                    [
                        "sequence",
                        0.9375057096289688
                    ],
                    [
                        "BST structure",
                        1.3916660049008645
                    ],
                    [
                        "size number",
                        2.395741980156735
                    ],
                    [
                        "particular subtree",
                        2.88317904050663
                    ],
                    [
                        "delete operation",
                        4.0483597486471155
                    ],
                    [
                        "extra work",
                        4.450138920662267
                    ],
                    [
                        "insert operation",
                        4.99040295269387
                    ],
                    [
                        "single node",
                        5.37252583603581
                    ],
                    [
                        "particular subtree size",
                        10.329711525312145
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "size",
                        0.2759277272907563
                    ],
                    [
                        "subtree",
                        0.29753933791068776
                    ],
                    [
                        "insert",
                        0.3523916327634164
                    ],
                    [
                        "node",
                        0.5756424373682784
                    ],
                    [
                        "BST",
                        0.6374631721925417
                    ],
                    [
                        "structure",
                        0.9128078966628401
                    ],
                    [
                        "thing",
                        0.9165289275231753
                    ],
                    [
                        "BST structure",
                        1.3916660049008645
                    ]
                ]
            }
        },
        "9Jry5-82I68-2520": {
            "id": "9Jry5-82I68-2520",
            "heat": 0.385,
            "start": 2520.0,
            "text": " And of course, analogously, for a delete operation. So what would happen for, let's say you wanted to insert 43? You would insert 43 at this point. And what you'd do is you follow the insertion path just like you did before. But when you're following that path you're going to increment the nodes that you're seeing by 1. So you're going to add 43 to this. And you'd add 5 plus 1, because you see 49. And then you would go down and you'd see 46. And so you'd add 1 to that. And then finally, you add 43 and you assign-- since it's a leaf-- you'd assign to value corresponding to the subtree size of this new node that you put in there, to be 1. It guess a little, teensy bit more complicated when you want to do the k minute check. But from a complexity standpoint, if you're not worried about constant factors, you can just say, you know what? I'm going to first run the regular insert, ignoring the subtree sizes. And if it fails, I'm done. Because I'm not going to modify the BST, and I'm done. I'm not going to have to modify the subtree sizes. If it succeeds, then I'm going to go in, and I know now that I can increment each of these nodes,",
            "metrics": {
                "relativeDCReadability": 0.9804289293365837,
                "lexicalDiversity": 0.47540983606557374,
                "posComposition": {
                    "CC": 0.057,
                    "IN": 0.094,
                    "NN": 0.078,
                    "RB": 0.057,
                    "DT": 0.074,
                    "JJ": 0.037,
                    "WP": 0.012,
                    "MD": 0.041,
                    "VB": 0.09,
                    "POS": 0.004,
                    "PRP": 0.139,
                    "VBN": 0.016,
                    "TO": 0.057,
                    "CD": 0.045,
                    "VBZ": 0.02,
                    "VBP": 0.078,
                    "VBD": 0.008,
                    "WRB": 0.008,
                    "VBG": 0.041,
                    "NNS": 0.016,
                    "RP": 0.004,
                    ":": 0.008,
                    "EX": 0.004,
                    "RBR": 0.004,
                    "NNP": 0.004
                },
                "syllableRate": 2.6,
                "topicScores": [
                    [
                        "size",
                        0.40774949179067665
                    ],
                    [
                        "subtree",
                        0.4148657485795626
                    ],
                    [
                        "insert",
                        0.4193899835790699
                    ],
                    [
                        "node",
                        0.42388425200816654
                    ],
                    [
                        "path",
                        0.5433972714187209
                    ],
                    [
                        "BST",
                        0.6705717837879094
                    ],
                    [
                        "operation",
                        0.7568166172589929
                    ],
                    [
                        "course",
                        0.7840163622721202
                    ],
                    [
                        "delete",
                        0.7840163622721202
                    ],
                    [
                        "point",
                        0.8505743492370132
                    ],
                    [
                        "insertion",
                        0.8895030964167281
                    ],
                    [
                        "check",
                        0.8983898034926959
                    ],
                    [
                        "little",
                        0.9116042643952726
                    ],
                    [
                        "bit",
                        0.9116042643952726
                    ],
                    [
                        "minute",
                        0.9116042643952726
                    ],
                    [
                        "complexity",
                        0.9133242806888394
                    ],
                    [
                        "standpoint",
                        0.9133242806888394
                    ],
                    [
                        "constant",
                        0.9133242806888394
                    ],
                    [
                        "factor",
                        0.9133242806888394
                    ],
                    [
                        "regular",
                        0.9148259065134122
                    ],
                    [
                        "leaf--",
                        0.9154125765365274
                    ],
                    [
                        "corresponding",
                        0.9154125765365274
                    ],
                    [
                        "new",
                        0.9154125765365274
                    ],
                    [
                        "complicated",
                        0.9172926081676023
                    ],
                    [
                        "worried",
                        0.918911785407081
                    ],
                    [
                        "subtree size",
                        1.0462890562457299
                    ],
                    [
                        "delete operation",
                        1.4591571570323862
                    ],
                    [
                        "insertion path",
                        3.275281257174656
                    ],
                    [
                        "regular insert",
                        3.298073897392785
                    ],
                    [
                        "new node",
                        3.4654409591090936
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "size",
                        0.40774949179067665
                    ],
                    [
                        "subtree",
                        0.4148657485795626
                    ],
                    [
                        "insert",
                        0.4193899835790699
                    ],
                    [
                        "node",
                        0.42388425200816654
                    ],
                    [
                        "BST",
                        0.6705717837879094
                    ],
                    [
                        "insertion",
                        0.8895030964167281
                    ],
                    [
                        "check",
                        0.8983898034926959
                    ],
                    [
                        "minute",
                        0.9116042643952726
                    ]
                ]
            }
        },
        "9Jry5-82I68-2610": {
            "id": "9Jry5-82I68-2610",
            "heat": 0.682,
            "start": 2610.0,
            "text": " because I know I'm going to be successful. So that's sort of a trivial way of solving this problem, that from an asymptotic complexity standpoint gives you your order h augmented insert. That make sense? Now you could do something better than that. I mean, I would urge you, if you had wrote something that-- we asked you to write something like this, to create a single procedure that essentially uses a recursion appropriately to do the right thing in one pass through the BST. And we'll talk about things like that as we go along in sections, and possibly in lectures. So that's the subtree insert delete. Everyone buy that? Yeah, question back there. AUDIENCE: If I wanted to delete a number, like let's say 79-- PROFESSOR: Yep? AUDIENCE: --would we have to take it out and then rewrite the entire BST? PROFESSOR: What you'd have to do is a bubble up pointers. So you'd have to actually have 64 connected to-- what will happen is 83 would actually come up, and you would essentially have some thing-- this is not quite how it works-- but 83 would move up and you'd have 64 to the left. That's what would happened for delete in this case. So you would have to move pointers in the case of delete. And we're not done with binary search tree operations from a standpoint of teaching you about them. We'll talk about them not just in today's lecture, but later as well. So there's one thing missing here,",
            "metrics": {
                "relativeDCReadability": 1.027963745721929,
                "lexicalDiversity": 0.5036496350364964,
                "posComposition": {
                    "IN": 0.109,
                    "PRP": 0.095,
                    "VBP": 0.026,
                    "VBG": 0.015,
                    "TO": 0.04,
                    "VB": 0.088,
                    "JJ": 0.036,
                    "NNP": 0.044,
                    "WDT": 0.011,
                    "VBZ": 0.036,
                    "NN": 0.12,
                    "DT": 0.08,
                    "PRP$": 0.004,
                    "VBD": 0.022,
                    "RB": 0.077,
                    "MD": 0.051,
                    "JJR": 0.004,
                    ":": 0.022,
                    "CD": 0.026,
                    "CC": 0.029,
                    "NNS": 0.022,
                    "POS": 0.007,
                    "RP": 0.011,
                    "WP": 0.011,
                    "VBN": 0.007,
                    "WRB": 0.004,
                    "EX": 0.004
                },
                "syllableRate": 3.067,
                "topicScores": [
                    [
                        "audience",
                        0.35545550176492996
                    ],
                    [
                        "PROFESSOR",
                        0.35859648353066115
                    ],
                    [
                        "BST",
                        0.3635478697103301
                    ],
                    [
                        "delete",
                        0.3883215550287203
                    ],
                    [
                        "thing",
                        0.45551745769249535
                    ],
                    [
                        "insert",
                        0.5403849734843454
                    ],
                    [
                        "lecture",
                        0.5616826485889931
                    ],
                    [
                        "case",
                        0.5626993107174425
                    ],
                    [
                        "pointer",
                        0.5697437684355148
                    ],
                    [
                        "standpoint",
                        0.5730721843922886
                    ],
                    [
                        "successful",
                        0.7453518553862571
                    ],
                    [
                        "sense",
                        0.8426105218122267
                    ],
                    [
                        "problem",
                        0.8479145452618442
                    ],
                    [
                        "trivial",
                        0.861340873466136
                    ],
                    [
                        "way",
                        0.861340873466136
                    ],
                    [
                        "asymptotic",
                        0.861340873466136
                    ],
                    [
                        "complexity",
                        0.861340873466136
                    ],
                    [
                        "order",
                        0.861340873466136
                    ],
                    [
                        "section",
                        0.8983384783233851
                    ],
                    [
                        "left",
                        0.8994746320920871
                    ],
                    [
                        "that--",
                        0.9024473836616138
                    ],
                    [
                        "single",
                        0.9024473836616138
                    ],
                    [
                        "procedure",
                        0.9024473836616138
                    ],
                    [
                        "recursion",
                        0.9024473836616138
                    ],
                    [
                        "right",
                        0.9024473836616138
                    ],
                    [
                        "pass",
                        0.9024473836616138
                    ],
                    [
                        "subtree",
                        0.9118122226489824
                    ],
                    [
                        "number",
                        0.9132274550597049
                    ],
                    [
                        "entire",
                        0.9163953643978561
                    ],
                    [
                        "bubble",
                        0.9255057853666229
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "audience",
                        0.35545550176492996
                    ],
                    [
                        "PROFESSOR",
                        0.35859648353066115
                    ],
                    [
                        "BST",
                        0.3635478697103301
                    ],
                    [
                        "thing",
                        0.45551745769249535
                    ],
                    [
                        "insert",
                        0.5403849734843454
                    ],
                    [
                        "problem",
                        0.8479145452618442
                    ],
                    [
                        "order",
                        0.861340873466136
                    ],
                    [
                        "left",
                        0.8994746320920871
                    ],
                    [
                        "right",
                        0.9024473836616138
                    ],
                    [
                        "subtree",
                        0.9118122226489824
                    ]
                ]
            }
        },
        "9Jry5-82I68-2700": {
            "id": "9Jry5-82I68-2700",
            "heat": 0.388,
            "start": 2700.0,
            "text": " though, which is I haven't quite figured out-- I've told you how these subtree sizes work. But it's not completely clear, this is the last thing we have to do, is how are you going to compute rank t from the subtree sizes? So everyone understand subtree sizes? It's just the number of nodes that are underneath you. And you remember to count yourself, all right? Now what is rank t? Rank t is how many planes are scheduled to land at times less than or equal to t. So now I have a BST structure that looks like the one and I just ended up with. So I've added this 43. And so let me draw that out here, and see if we can answer this question. This is a subtle question. So I got 49, and that subtree size is 6. I got 46, subtree size is 2. 43, 79, 64. and 83. So what I want is what lands before t? And how do I do that? Give me an algorithm that would allow",
            "metrics": {
                "relativeDCReadability": 1.0460013928051783,
                "lexicalDiversity": 0.4207650273224044,
                "posComposition": {
                    "IN": 0.077,
                    "WDT": 0.022,
                    "VBZ": 0.077,
                    "PRP": 0.109,
                    "VBP": 0.066,
                    "RB": 0.066,
                    "VBN": 0.022,
                    "RP": 0.011,
                    ":": 0.005,
                    "WRB": 0.022,
                    "DT": 0.087,
                    "JJ": 0.066,
                    "NNS": 0.027,
                    "CC": 0.049,
                    "NN": 0.077,
                    "TO": 0.027,
                    "VB": 0.066,
                    "VBG": 0.005,
                    "WP": 0.016,
                    "NNP": 0.016,
                    "JJR": 0.005,
                    "CD": 0.055,
                    "VBD": 0.016,
                    "MD": 0.011
                },
                "syllableRate": 1.842,
                "topicScores": [
                    [
                        "size",
                        0.31787608963753594
                    ],
                    [
                        "subtree",
                        0.3283890896527053
                    ],
                    [
                        "rank",
                        0.42240220657958133
                    ],
                    [
                        "question",
                        0.5396114249729032
                    ],
                    [
                        "BST",
                        0.6751524854574621
                    ],
                    [
                        "out--",
                        0.7482594186507289
                    ],
                    [
                        "right",
                        0.8626479951997628
                    ],
                    [
                        "clear",
                        0.8716480475568442
                    ],
                    [
                        "thing",
                        0.8826943631870933
                    ],
                    [
                        "t.",
                        0.8856883911324898
                    ],
                    [
                        "subtree size",
                        0.8920732192770754
                    ],
                    [
                        "number",
                        0.9021577435620362
                    ],
                    [
                        "node",
                        0.9021577435620362
                    ],
                    [
                        "plane",
                        0.9147041528108955
                    ],
                    [
                        "time",
                        0.9147041528108955
                    ],
                    [
                        "equal",
                        0.9147041528108955
                    ],
                    [
                        "subtle",
                        0.9150947635968859
                    ],
                    [
                        "structure",
                        0.9172609665407333
                    ],
                    [
                        "algorithm",
                        0.928949769754718
                    ],
                    [
                        "rank t",
                        1.3212869665331368
                    ],
                    [
                        "BST structure",
                        1.626678266445582
                    ],
                    [
                        "subtle question",
                        3.6008210809049186
                    ]
                ],
                "topTopicSimilarity": 0.45454545454545453,
                "sharedTopicScores": [
                    [
                        "size",
                        0.31787608963753594
                    ],
                    [
                        "subtree",
                        0.3283890896527053
                    ],
                    [
                        "question",
                        0.5396114249729032
                    ],
                    [
                        "BST",
                        0.6751524854574621
                    ],
                    [
                        "right",
                        0.8626479951997628
                    ],
                    [
                        "thing",
                        0.8826943631870933
                    ],
                    [
                        "node",
                        0.9021577435620362
                    ],
                    [
                        "time",
                        0.9147041528108955
                    ],
                    [
                        "structure",
                        0.9172609665407333
                    ],
                    [
                        "BST structure",
                        1.626678266445582
                    ]
                ]
            }
        },
        "9Jry5-82I68-2790": {
            "id": "9Jry5-82I68-2790",
            "heat": 0.257,
            "start": 2790.0,
            "text": " me to compute in order h time. I want to do this in order h time. What lands before t? Someone? Yeah. AUDIENCE: So first you would have to find where to insert it, like we did before. PROFESSOR: Right, right. AUDIENCE: And then because we have the order of whatever it was before-- not the order, the-- PROFESSOR: The sizes? The sizes? Yeah. AUDIENCE: And then we can look what's more than it on the right, we can subtract it and we get-- PROFESSOR: What is more than it on the right. Do you want to say-- AUDIENCE: Because, like-- PROFESSOR: OK. AUDIENCE: --on the right-- PROFESSOR: Right. AUDIENCE: --and then we can take this minus this and we get what's left. PROFESSOR: That's great, that's excellent. Excellent. So I'm going to do it a little bit differently from what you described. I'm going to actually do it in a, sort of, a more positive way, no offense intended. What we're going to do is we're going to add up the things that we want to add up. And what you have to do is walk-- your first step was right on. I mean, your answer is correct. I'm just going to do it a little bit differently. You walk down the tree to find the desired time. This is just your search. We know how to do that. As you walk down you add in the nodes that is the subtree sizes-- you're just adding in the notes here. So if you see-- depending on the number of nodes",
            "metrics": {
                "relativeDCReadability": 0.8262295475085724,
                "lexicalDiversity": 0.4326241134751773,
                "posComposition": {
                    "PRP": 0.121,
                    "TO": 0.05,
                    "VB": 0.071,
                    "IN": 0.096,
                    "NN": 0.096,
                    "VBP": 0.064,
                    "DT": 0.089,
                    "WP": 0.025,
                    "VBZ": 0.032,
                    "NNP": 0.082,
                    "RB": 0.05,
                    "MD": 0.014,
                    "WRB": 0.007,
                    "VBD": 0.018,
                    "CC": 0.021,
                    ":": 0.039,
                    "JJ": 0.039,
                    "JJR": 0.007,
                    "VBN": 0.004,
                    "POS": 0.007,
                    "WDT": 0.007,
                    "VBG": 0.025,
                    "RBR": 0.004,
                    "RP": 0.007,
                    "NNS": 0.018,
                    "PRP$": 0.011
                },
                "syllableRate": 2.992,
                "topicScores": [
                    [
                        "audience",
                        0.1694333484651548
                    ],
                    [
                        "PROFESSOR",
                        0.20852241684991887
                    ],
                    [
                        "right",
                        0.3030542451079683
                    ],
                    [
                        "order",
                        0.3710132421931645
                    ],
                    [
                        "time",
                        0.41669767694606824
                    ],
                    [
                        "size",
                        0.5331937436936304
                    ],
                    [
                        "excellent",
                        0.5573266487044759
                    ],
                    [
                        "little",
                        0.5678820087101375
                    ],
                    [
                        "bit",
                        0.5692124993694515
                    ],
                    [
                        "node",
                        0.583055559555714
                    ],
                    [
                        "left",
                        0.9321595532106561
                    ],
                    [
                        "like--",
                        0.9347374216403389
                    ],
                    [
                        "correct",
                        0.9354037763659089
                    ],
                    [
                        "before--",
                        0.9362528948774594
                    ],
                    [
                        "search",
                        0.9363087150222449
                    ],
                    [
                        "offense",
                        0.9390055294577196
                    ],
                    [
                        "great",
                        0.9421078327710716
                    ],
                    [
                        "positive",
                        0.9431880404631279
                    ],
                    [
                        "way",
                        0.9431880404631279
                    ],
                    [
                        "answer",
                        0.9441040477583593
                    ],
                    [
                        "note",
                        0.9453648527244449
                    ],
                    [
                        "thing",
                        0.9472634169929617
                    ],
                    [
                        "step",
                        0.9475491542228981
                    ],
                    [
                        "tree",
                        0.9483257905738349
                    ],
                    [
                        "subtree",
                        0.9490022100626311
                    ],
                    [
                        "number",
                        0.9492090892290772
                    ],
                    [
                        "h time",
                        1.072294784178962
                    ],
                    [
                        "order h",
                        1.1757157416650978
                    ],
                    [
                        "like-- PROFESSOR",
                        1.2084413162918883
                    ],
                    [
                        "right-- PROFESSOR",
                        1.222913429054318
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "audience",
                        0.1694333484651548
                    ],
                    [
                        "PROFESSOR",
                        0.20852241684991887
                    ],
                    [
                        "right",
                        0.3030542451079683
                    ],
                    [
                        "order",
                        0.3710132421931645
                    ],
                    [
                        "time",
                        0.41669767694606824
                    ],
                    [
                        "size",
                        0.5331937436936304
                    ],
                    [
                        "node",
                        0.583055559555714
                    ],
                    [
                        "left",
                        0.9321595532106561
                    ],
                    [
                        "search",
                        0.9363087150222449
                    ],
                    [
                        "thing",
                        0.9472634169929617
                    ],
                    [
                        "tree",
                        0.9483257905738349
                    ],
                    [
                        "subtree",
                        0.9490022100626311
                    ]
                ]
            }
        },
        "9Jry5-82I68-2880": {
            "id": "9Jry5-82I68-2880",
            "heat": 0.46,
            "start": 2880.0,
            "text": " that you see as you're going deeper in, you want to add in the nodes. And you're going to add one to that, corresponding to the nodes that are smaller. And we're going to add in the subtree sizes to the left, as opposed to subtracting. That may not make a lot of sense. But I guarantee you it will once we do an example. So what's going on here? I want to find a place to insert. I'm not actually going to do the insert. Think of it is doing a lookup. And along the way, I need to figure out the less than operator. I want to find all of the things that are less than this value I'm searching for. And so I have to do a bit of arithmetic. So let's say that I'm looking for what's less than or equal to 79. So t equals 79. So I'm going to look at 49. I'm going to walk down, I'm going to look at 49. And because I say I'm looking at 49-- and 49 is clearly less than 79. So I'm going to add 1. And that's this check over here.",
            "metrics": {
                "relativeDCReadability": 0.8686700564575042,
                "lexicalDiversity": 0.4339622641509434,
                "posComposition": {
                    "IN": 0.123,
                    "PRP": 0.108,
                    "VBP": 0.104,
                    "VBG": 0.071,
                    "NN": 0.066,
                    "TO": 0.085,
                    "VB": 0.071,
                    "DT": 0.09,
                    "NNS": 0.024,
                    "CC": 0.042,
                    "CD": 0.042,
                    "WDT": 0.009,
                    "JJR": 0.024,
                    "JJ": 0.019,
                    "VBN": 0.005,
                    "MD": 0.009,
                    "RB": 0.038,
                    "NNP": 0.019,
                    "WP": 0.009,
                    "VBZ": 0.024,
                    "RP": 0.009,
                    "POS": 0.005,
                    ":": 0.005
                },
                "syllableRate": 2.158,
                "topicScores": [
                    [
                        "node",
                        0.5208394164006583
                    ],
                    [
                        "insert",
                        0.5422989653841659
                    ],
                    [
                        "equal",
                        0.5683287339587454
                    ],
                    [
                        "small",
                        0.8659749501964265
                    ],
                    [
                        "sense",
                        0.8878599915295232
                    ],
                    [
                        "example",
                        0.8939159338868058
                    ],
                    [
                        "left",
                        0.8973092077546178
                    ],
                    [
                        "subtree",
                        0.9048915504980019
                    ],
                    [
                        "size",
                        0.9048915504980019
                    ],
                    [
                        "lookup",
                        0.907345710328348
                    ],
                    [
                        "operator",
                        0.909387287851868
                    ],
                    [
                        "lot",
                        0.9118253274539645
                    ],
                    [
                        "arithmetic",
                        0.9126819898219501
                    ],
                    [
                        "place",
                        0.9232375346262658
                    ],
                    [
                        "way",
                        0.9233047874393396
                    ],
                    [
                        "thing",
                        0.9305245040578571
                    ],
                    [
                        "value",
                        0.9305245040578571
                    ],
                    [
                        "bit",
                        0.9317504097664954
                    ],
                    [
                        "check",
                        0.9374111776895669
                    ],
                    [
                        "subtree size",
                        4.519638597567153
                    ]
                ],
                "topTopicSimilarity": 0.35,
                "sharedTopicScores": [
                    [
                        "node",
                        0.5208394164006583
                    ],
                    [
                        "insert",
                        0.5422989653841659
                    ],
                    [
                        "left",
                        0.8973092077546178
                    ],
                    [
                        "subtree",
                        0.9048915504980019
                    ],
                    [
                        "size",
                        0.9048915504980019
                    ],
                    [
                        "thing",
                        0.9305245040578571
                    ],
                    [
                        "check",
                        0.9374111776895669
                    ]
                ]
            }
        },
        "9Jry5-82I68-2970": {
            "id": "9Jry5-82I68-2970",
            "heat": 0.593,
            "start": 2970.0,
            "text": " I move on and what I need to do now is move to the right, because 79 is greater than 49. That's how my search would work. But because I've moved to the right, I'm going to add the subtree sizes that were to the left. Because I know that all of the things to the left are clearly less than 79. So I'm going to add 2, corresponding to a subtree 46. So I'm not actually looking there. But I'm going to add all of that stuff in. I'm going to move to the right, and now I'm going to see 79. At this point 79 is less than or equal to 79. So I'm going to see 79 and I'm going to add 1. And because I've added 79, just like I did with 49, I have to add the subtree size to the left of 79. So the final addition is I add 1 corresponding to the subtree 64. And at this point I've discovered where I have to insert, I've essentially found the location, it matches 79. And there was no modification required in this algorithm.",
            "metrics": {
                "relativeDCReadability": 0.9874402371335498,
                "lexicalDiversity": 0.4482758620689655,
                "posComposition": {
                    "PRP": 0.099,
                    "VBP": 0.094,
                    "IN": 0.103,
                    "CC": 0.044,
                    "WP": 0.005,
                    "TO": 0.094,
                    "VB": 0.054,
                    "RB": 0.034,
                    "VBZ": 0.03,
                    "NN": 0.079,
                    "DT": 0.103,
                    "CD": 0.079,
                    "JJR": 0.015,
                    "WRB": 0.01,
                    "PRP$": 0.005,
                    "MD": 0.005,
                    "VBN": 0.025,
                    "VBG": 0.049,
                    "JJ": 0.03,
                    "NNS": 0.01,
                    "WDT": 0.005,
                    "VBD": 0.015,
                    "EX": 0.01,
                    "NNP": 0.005
                },
                "syllableRate": 2.117,
                "topicScores": [
                    [
                        "subtree",
                        0.35970642025027316
                    ],
                    [
                        "right",
                        0.3944897562259066
                    ],
                    [
                        "left",
                        0.4126123363837491
                    ],
                    [
                        "size",
                        0.5516326263208788
                    ],
                    [
                        "point",
                        0.5593392508035584
                    ],
                    [
                        "great",
                        0.8126050964762424
                    ],
                    [
                        "search",
                        0.8671308034941667
                    ],
                    [
                        "thing",
                        0.8994148765241735
                    ],
                    [
                        "stuff",
                        0.9091809148362465
                    ],
                    [
                        "algorithm",
                        0.9112333057426395
                    ],
                    [
                        "equal",
                        0.92116914169213
                    ],
                    [
                        "location",
                        0.9232486677875104
                    ],
                    [
                        "final",
                        0.9276967824450854
                    ],
                    [
                        "addition",
                        0.9276967824450854
                    ],
                    [
                        "corresponding",
                        0.9276967824450854
                    ],
                    [
                        "modification",
                        0.9298543516107945
                    ],
                    [
                        "subtree size",
                        1.7079300833327928
                    ],
                    [
                        "final addition",
                        6.174698462781533
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "subtree",
                        0.35970642025027316
                    ],
                    [
                        "right",
                        0.3944897562259066
                    ],
                    [
                        "left",
                        0.4126123363837491
                    ],
                    [
                        "size",
                        0.5516326263208788
                    ],
                    [
                        "search",
                        0.8671308034941667
                    ],
                    [
                        "thing",
                        0.8994148765241735
                    ]
                ]
            }
        },
        "9Jry5-82I68-3060": {
            "id": "9Jry5-82I68-3060",
            "heat": 0.361,
            "start": 3060.0,
            "text": " So if that was 78 you'd essentially do the same things. But you're done because you found the value, or the place that you want to insert. And you've done a bunch of additions. And you go look at add 1, add 2, add 1, add 1, and you have 5. And that's the correct answer, as you can see from this example. So what's the bad news? The bad news was what this lady said up front, which was we haven't quite solved the problem. Because sadly, I could easily set things up such that the height h is order n, h could be order n. And if, for example, I gave you a sorted list, and I said insert into binary search tree that's originally null 43, and you put 43 in there. Then I say insert 46. And then I say instead of 48. And then I say insert 49, et cetera. And, you know, these could be any numbers. Then you see that what does this look like? Does it look like a tree? It looks like a list. That's the bad news. And I'll let Eric give you good news next week. We need to have this notion of balanced binary search trees. So everything I've said is true. I did not lie.",
            "metrics": {
                "relativeDCReadability": 0.9663992266514453,
                "lexicalDiversity": 0.5087719298245614,
                "posComposition": {
                    "RB": 0.057,
                    "IN": 0.092,
                    "DT": 0.092,
                    "VBD": 0.039,
                    "CD": 0.048,
                    "PRP": 0.114,
                    "MD": 0.026,
                    "VB": 0.053,
                    "JJ": 0.088,
                    "NNS": 0.026,
                    "CC": 0.057,
                    "VBP": 0.061,
                    "VBN": 0.013,
                    "NN": 0.136,
                    "TO": 0.009,
                    "VBZ": 0.035,
                    "NNP": 0.013,
                    "WP": 0.013,
                    "RP": 0.009,
                    "WDT": 0.013,
                    "EX": 0.004
                },
                "syllableRate": 2.275,
                "topicScores": [
                    [
                        "add",
                        0.3496245922227404
                    ],
                    [
                        "insert",
                        0.3665312544221379
                    ],
                    [
                        "news",
                        0.3717378451483243
                    ],
                    [
                        "bad",
                        0.4121882816840915
                    ],
                    [
                        "tree",
                        0.4386653936245509
                    ],
                    [
                        "example",
                        0.5528404773827368
                    ],
                    [
                        "thing",
                        0.5531365367849601
                    ],
                    [
                        "list",
                        0.560489244484962
                    ],
                    [
                        "search",
                        0.5637651864863981
                    ],
                    [
                        "order",
                        0.5642116713379371
                    ],
                    [
                        "binary",
                        0.5690799158291071
                    ],
                    [
                        "Eric",
                        0.7063188793941007
                    ],
                    [
                        "value",
                        0.8682076377401577
                    ],
                    [
                        "addition",
                        0.868709117481877
                    ],
                    [
                        "place",
                        0.8780515354183047
                    ],
                    [
                        "bunch",
                        0.8974417128876888
                    ],
                    [
                        "problem",
                        0.9006150147716933
                    ],
                    [
                        "n.",
                        0.9041206093900248
                    ],
                    [
                        "cetera",
                        0.904554629987039
                    ],
                    [
                        "correct",
                        0.9074970679791033
                    ],
                    [
                        "answer",
                        0.9074970679791033
                    ],
                    [
                        "number",
                        0.9145573275453104
                    ],
                    [
                        "week",
                        0.9199791936556001
                    ],
                    [
                        "true",
                        0.9215240203036685
                    ],
                    [
                        "sorted",
                        0.9218474955250574
                    ],
                    [
                        "null",
                        0.9218474955250574
                    ],
                    [
                        "lady",
                        0.9229841428181831
                    ],
                    [
                        "height",
                        0.9257657500693953
                    ],
                    [
                        "good",
                        0.9382885629436374
                    ],
                    [
                        "notion",
                        0.9389211080303561
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "add",
                        0.3496245922227404
                    ],
                    [
                        "insert",
                        0.3665312544221379
                    ],
                    [
                        "tree",
                        0.4386653936245509
                    ],
                    [
                        "thing",
                        0.5531365367849601
                    ],
                    [
                        "search",
                        0.5637651864863981
                    ],
                    [
                        "order",
                        0.5642116713379371
                    ],
                    [
                        "binary",
                        0.5690799158291071
                    ],
                    [
                        "problem",
                        0.9006150147716933
                    ]
                ]
            }
        },
        "9Jry5-82I68-3150": {
            "id": "9Jry5-82I68-3150",
            "heat": 0.161,
            "start": 3150.0,
            "text": " But the one extra thing is we need to make sure these trees are balanced so h is order log n. And then everything I said works. All right? See you next time.",
            "metrics": {
                "relativeDCReadability": 0.8434526426194242,
                "lexicalDiversity": 0.5757575757575758,
                "posComposition": {
                    "CC": 0.061,
                    "DT": 0.061,
                    "CD": 0.03,
                    "JJ": 0.091,
                    "NN": 0.212,
                    "VBZ": 0.061,
                    "PRP": 0.091,
                    "VBP": 0.061,
                    "TO": 0.03,
                    "VB": 0.03,
                    "NNS": 0.061,
                    "VBN": 0.03,
                    "IN": 0.03,
                    "RB": 0.061,
                    "VBD": 0.03,
                    "NNP": 0.061
                },
                "syllableRate": 0.317,
                "topicScores": [
                    [
                        "n.",
                        0.7229690375543809
                    ],
                    [
                        "work",
                        0.7970624461568875
                    ],
                    [
                        "log",
                        0.8226785367929946
                    ],
                    [
                        "time",
                        0.8432947756590958
                    ],
                    [
                        "extra",
                        0.8544784795412613
                    ],
                    [
                        "thing",
                        0.8544784795412613
                    ],
                    [
                        "sure",
                        0.8544784795412613
                    ],
                    [
                        "tree",
                        0.8544784795412613
                    ],
                    [
                        "balanced",
                        0.8544784795412613
                    ],
                    [
                        "order",
                        0.8544784795412613
                    ],
                    [
                        "log n.",
                        1.4677411324398018
                    ],
                    [
                        "order log",
                        2.3665624864021066
                    ],
                    [
                        "extra thing",
                        2.705535500856315
                    ]
                ],
                "topTopicSimilarity": 0.3076923076923077,
                "sharedTopicScores": [
                    [
                        "time",
                        0.8432947756590958
                    ],
                    [
                        "thing",
                        0.8544784795412613
                    ],
                    [
                        "tree",
                        0.8544784795412613
                    ],
                    [
                        "order",
                        0.8544784795412613
                    ]
                ]
            }
        }
    }
}