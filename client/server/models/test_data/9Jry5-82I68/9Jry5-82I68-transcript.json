[{"text": "The following\ncontent is provided", "start": 0.05, "duration": 1.72}, {"text": "under a Creative\nCommons license.", "start": 1.77, "duration": 2.24}, {"text": "Your support will help MIT\nOpenCourseWare continue", "start": 4.01, "duration": 2.85}, {"text": "to offer high quality\neducational resources for free.", "start": 6.86, "duration": 3.86}, {"text": "To make a donation or\nview additional materials", "start": 10.72, "duration": 2.6}, {"text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare", "start": 13.32, "duration": 3.887}, {"text": "at ocw.mit.edu.", "start": 17.207, "duration": 0.625}, {"text": "PROFESSOR: Today's lecture\nis about a brand new data", "start": 22.13, "duration": 3.73}, {"text": "structure that you've\nprobably seen before,", "start": 25.86, "duration": 3.27}, {"text": "and we've mentioned\nearlier in double 06,", "start": 29.13, "duration": 3.36}, {"text": "called a binary search tree.", "start": 32.49, "duration": 2.45}, {"text": "We've talked about\nbinary search.", "start": 34.94, "duration": 2.14}, {"text": "It's a fundamental divide\nand conquer paradigm.", "start": 37.08, "duration": 3.65}, {"text": "There's a data structure\nassociated with it,", "start": 40.73, "duration": 2.0}, {"text": "called the BST, a\nbinary search tree.", "start": 42.73, "duration": 3.15}, {"text": "And what I want to do is\nmotivate this data structure", "start": 45.88, "duration": 3.43}, {"text": "using a problem.", "start": 49.31, "duration": 2.08}, {"text": "It's a bit of a toy problem,\nbut certainly a problem", "start": 51.39, "duration": 3.86}, {"text": "that you could imagine\nexists in all sorts", "start": 55.25, "duration": 5.82}, {"text": "of scheduling problems.", "start": 61.07, "duration": 3.62}, {"text": "It's a part of a runway\nreservation system", "start": 64.69, "duration": 3.62}, {"text": "that you can imagine building.", "start": 68.31, "duration": 1.85}, {"text": "And what I'll do is\ndefine this problem", "start": 70.16, "duration": 3.75}, {"text": "and talk about how we could\npossibly solve it with the data", "start": 73.91, "duration": 3.87}, {"text": "structures you've already seen--\nso lists and arrays, heaps", "start": 77.78, "duration": 5.3}, {"text": "as well as, which\nwe saw last time--", "start": 83.08, "duration": 2.19}, {"text": "and hopefully motivate you into\nthe reason behind the existence", "start": 85.27, "duration": 7.27}, {"text": "of binary search\ntrees, because they", "start": 92.54, "duration": 2.475}, {"text": "are kind of the\nperfect data structure", "start": 95.015, "duration": 1.835}, {"text": "for this particular problem.", "start": 96.85, "duration": 3.23}, {"text": "So let's dive into what the\nrunway reservation system looks", "start": 100.08, "duration": 5.56}, {"text": "like.", "start": 105.64, "duration": 0.5}, {"text": "And it's your basic\nscheduling problem.", "start": 109.91, "duration": 3.14}, {"text": "We'll assume an airport\nwith a single runway.", "start": 113.05, "duration": 6.98}, {"text": "Now Logan has six runways.", "start": 124.286, "duration": 1.894}, {"text": "But the moment there's any sort\nof weather you're down to one.", "start": 126.18, "duration": 3.519}, {"text": "And of course, there's lots of\nairports with a single runway.", "start": 129.699, "duration": 3.481}, {"text": "And we can imagine that\nthis runway is pretty busy.", "start": 133.18, "duration": 2.67}, {"text": "There's obviously safety issues\nassociated with landing planes,", "start": 135.85, "duration": 3.82}, {"text": "and planes taking off.", "start": 139.67, "duration": 1.83}, {"text": "And so there are\nconstraints associated", "start": 141.5, "duration": 1.73}, {"text": "with the system, that\nhave to be obeyed.", "start": 143.23, "duration": 2.61}, {"text": "And you have to build these\nconstraints in-- and the checks", "start": 145.84, "duration": 2.69}, {"text": "for these constraints--\ninto your data structure.", "start": 148.53, "duration": 3.25}, {"text": "That's sort of the\nsummary of the context.", "start": 151.78, "duration": 2.74}, {"text": "So reservations\nfor future landings", "start": 157.17, "duration": 6.61}, {"text": "is really what this\nsystem is built for.", "start": 163.78, "duration": 4.46}, {"text": "There's a notion of time.", "start": 168.24, "duration": 1.96}, {"text": "We'll assume that\ntime is continuous.", "start": 170.2, "duration": 2.59}, {"text": "So it could be represented\nby a real variable,", "start": 172.79, "duration": 5.65}, {"text": "or a real quantity.", "start": 178.44, "duration": 1.85}, {"text": "And what we'd like to do is\nreserve requests for landings.", "start": 180.29, "duration": 14.17}, {"text": "And these are going to\nspecify landing time.", "start": 194.46, "duration": 5.88}, {"text": "Each of them is going to\nspecify a landing time.", "start": 200.34, "duration": 2.29}, {"text": "We call it t.", "start": 202.63, "duration": 3.48}, {"text": "And in particular,\nwe're going to add t", "start": 206.11, "duration": 7.1}, {"text": "to the set R of landing times if\nno other landings are scheduled", "start": 213.21, "duration": 19.16}, {"text": "within k minutes.", "start": 232.37, "duration": 2.225}, {"text": "And k is a parameter\nthat could vary.", "start": 237.79, "duration": 5.64}, {"text": "I mean, it could be statically\nset to 3 minutes, or maybe 4.", "start": 243.43, "duration": 4.38}, {"text": "You can imagine it\nvarying it dynamically", "start": 247.81, "duration": 2.61}, {"text": "depending on weather\nconditions, things like that.", "start": 250.42, "duration": 2.49}, {"text": "For the most of the examples\nwe'll talk about today,", "start": 256.23, "duration": 2.5}, {"text": "we'll assume k is 3 minutes,\nor something like that.", "start": 258.73, "duration": 4.4}, {"text": "So this is about adding\nto the data structure.", "start": 263.13, "duration": 5.57}, {"text": "And so an insert\noperation, if you will,", "start": 268.7, "duration": 2.59}, {"text": "that has a constraint associated\nwith it that you need to check.", "start": 271.29, "duration": 3.18}, {"text": "And so you wouldn't insert if\nthe constraint was violated.", "start": 274.47, "duration": 2.59}, {"text": "You would if the\nconstraint was satisfied.", "start": 277.06, "duration": 3.7}, {"text": "And time, as I\nsaid, is something", "start": 280.76, "duration": 4.27}, {"text": "that is part of the system.", "start": 285.03, "duration": 2.47}, {"text": "It needs to be modeled.", "start": 287.5, "duration": 1.8}, {"text": "You have the current\nnotion of time.", "start": 289.3, "duration": 2.26}, {"text": "And every time you have a\nplane that's already landed,", "start": 291.56, "duration": 5.68}, {"text": "which means that\nyou can essentially", "start": 297.24, "duration": 3.13}, {"text": "take this particular\nlanding time away", "start": 300.37, "duration": 3.06}, {"text": "from the set R. So this\nremoval, or delete-- we remove", "start": 303.43, "duration": 9.22}, {"text": "from set R, which is\nthe set of landing times", "start": 312.65, "duration": 5.08}, {"text": "after the plane lands.", "start": 317.73, "duration": 2.47}, {"text": "So every once in awhile,\nas time increments,", "start": 323.33, "duration": 2.562}, {"text": "you're going to be checking\nthe data structure.", "start": 325.892, "duration": 1.958}, {"text": "And you can do this, maybe,\nevery minute, every 30 seconds.", "start": 327.85, "duration": 3.59}, {"text": "That isn't really important.", "start": 331.44, "duration": 1.37}, {"text": "But you have to be able\nto remove from this data", "start": 332.81, "duration": 2.0}, {"text": "structure.", "start": 334.81, "duration": 1.25}, {"text": "So fairly straightforward\ndata structure.", "start": 336.06, "duration": 2.45}, {"text": "It's a set, R. We don't quite\nknow how to implement it yet.", "start": 338.51, "duration": 4.68}, {"text": "But we'd like to do all of these\noperations in order log n time,", "start": 343.19, "duration": 15.96}, {"text": "where n is the size of the set.", "start": 359.15, "duration": 3.94}, {"text": "All right?", "start": 363.09, "duration": 1.32}, {"text": "So any questions about that?", "start": 364.41, "duration": 3.53}, {"text": "Any questions about\nthe definition", "start": 367.94, "duration": 2.03}, {"text": "of the problem\nbefore we move on?", "start": 369.97, "duration": 4.82}, {"text": "Are we good on?", "start": 374.79, "duration": 1.65}, {"text": "OK.", "start": 376.44, "duration": 1.38}, {"text": "So let's look at a real\nstraightforward example,", "start": 377.82, "duration": 7.64}, {"text": "and put this up here so you\nget a better sense of this.", "start": 385.46, "duration": 7.26}, {"text": "Let's say that, right\nnow, we are at time 37.", "start": 392.72, "duration": 4.85}, {"text": "And the set R has\n41.2, 49, and 53 in it.", "start": 397.57, "duration": 8.01}, {"text": "And that's time.", "start": 405.58, "duration": 2.54}, {"text": "Now you may get a request\nfor landing time 53.", "start": 408.12, "duration": 4.92}, {"text": "And-- I'm sorry.", "start": 413.04, "duration": 1.97}, {"text": "I want to call this\n56.3-- 41.2, 49, and 56.3.", "start": 415.01, "duration": 6.49}, {"text": "You may get a request\nfor landing time 53.", "start": 421.5, "duration": 3.13}, {"text": "And right now the time is 37.", "start": 424.63, "duration": 2.11}, {"text": "It's in the future, and\nyou say OK because you've", "start": 426.74, "duration": 4.13}, {"text": "done the check.", "start": 430.87, "duration": 0.89}, {"text": "And let's assume\nthat k equals 3.", "start": 431.76, "duration": 3.58}, {"text": "And 53 is four ahead of 49, and\n3.3 before 56.3, so you're OK.", "start": 435.34, "duration": 9.19}, {"text": "44 is not allowed.", "start": 444.53, "duration": 2.99}, {"text": "It's too close to 41.2.", "start": 450.55, "duration": 3.06}, {"text": "And 20, just for\ncompleteness, is not", "start": 453.61, "duration": 4.68}, {"text": "allowed because it's passed.", "start": 458.29, "duration": 1.185}, {"text": "Can't schedule in the past.", "start": 462.71, "duration": 1.245}, {"text": "I mean, it could\nbe the next day.", "start": 463.955, "duration": 1.375}, {"text": "But then you\nwouldn't call it 20.", "start": 465.33, "duration": 1.46}, {"text": "Let's assume that time is\na monotonically increasing", "start": 466.79, "duration": 3.32}, {"text": "function.", "start": 470.11, "duration": 1.72}, {"text": "You have a 64-bit number.", "start": 471.83, "duration": 2.19}, {"text": "It can go to the end\nof the world, or 2012,", "start": 474.02, "duration": 2.58}, {"text": "or wherever you want.", "start": 476.6, "duration": 1.79}, {"text": "So you can keep the\nnumber a bit smaller,", "start": 478.39, "duration": 3.0}, {"text": "and do a little constant\nfactor optimization, I guess.", "start": 481.39, "duration": 4.0}, {"text": "So that's sort of the set up.", "start": 485.39, "duration": 3.04}, {"text": "And hopefully you get a sense\nof what the requirements.", "start": 488.43, "duration": 4.22}, {"text": "And you guys know about a bunch\nof data structures already.", "start": 492.65, "duration": 3.86}, {"text": "And what I want to do is\nlist each one of them,", "start": 496.51, "duration": 2.79}, {"text": "and essentially shoot\nthem down with respect", "start": 499.3, "duration": 4.01}, {"text": "to not being able to make\nthis efficiency requirement.", "start": 503.31, "duration": 8.21}, {"text": "And I'd like you guys to\nhelp me shoot them down.", "start": 511.52, "duration": 3.31}, {"text": "So let's talk about\nan easy one first.", "start": 514.83, "duration": 4.405}, {"text": "Let's say you have an unsorted\nlist or an array corresponding", "start": 522.11, "duration": 2.61}, {"text": "to R. That's all you have.", "start": 524.72, "duration": 4.95}, {"text": "What's wrong with\nthis data structure", "start": 529.67, "duration": 2.32}, {"text": "from an efficiency standpoint?", "start": 531.99, "duration": 3.26}, {"text": "Yeah.", "start": 535.25, "duration": 0.744}, {"text": "AUDIENCE: Pretty much everything\nyou want to do to it is linear.", "start": 535.994, "duration": 2.666}, {"text": "PROFESSOR: That's exactly right.", "start": 538.66, "duration": 1.333}, {"text": "Pretty much everything you\nwant to do to it is linear.", "start": 539.993, "duration": 3.237}, {"text": "And so you want to check\nthe k minute check.", "start": 543.23, "duration": 5.06}, {"text": "You can certainly insert\ninto it, and just add to it.", "start": 548.29, "duration": 6.07}, {"text": "So that part is not linear,\nthat's constant time.", "start": 554.36, "duration": 2.71}, {"text": "But certainly,\nanything where you", "start": 557.07, "duration": 3.18}, {"text": "want to go check against\nother elements of the array,", "start": 560.25, "duration": 4.79}, {"text": "it's unsorted.", "start": 565.04, "duration": 1.29}, {"text": "You have no idea of where\nto find these elements.", "start": 566.33, "duration": 2.51}, {"text": "You have to scan\nthrough the entire array", "start": 568.84, "duration": 2.17}, {"text": "to check to see whether\nthere's a landing time that's", "start": 571.01, "duration": 2.92}, {"text": "within k of the current time\nt that you're asking for.", "start": 573.93, "duration": 4.99}, {"text": "And that's going to\ntake order n time.", "start": 578.92, "duration": 3.57}, {"text": "So you can insert in\norder 1 without a check.", "start": 582.49, "duration": 11.25}, {"text": "But sadly, the check\ntakes order n time.", "start": 593.74, "duration": 9.79}, {"text": "All right?", "start": 603.53, "duration": 0.5}, {"text": "Let's do something that is\na little more plausible.", "start": 609.68, "duration": 5.78}, {"text": "Let's talk about a sorted array.", "start": 615.46, "duration": 3.49}, {"text": "So this is a little\nmore subtle question.", "start": 618.95, "duration": 3.77}, {"text": "Let's talk about a sorted array.", "start": 622.72, "duration": 2.92}, {"text": "What happens with\na sorted array?", "start": 625.64, "duration": 3.0}, {"text": "Someone?", "start": 628.64, "duration": 1.586}, {"text": "What can you do\nwith a sorted array?", "start": 630.226, "duration": 3.086}, {"text": "Yeah.", "start": 633.312, "duration": 0.5}, {"text": "AUDIENCE: Do a binary search\nto find the [INAUDIBLE].", "start": 633.812, "duration": 3.318}, {"text": "PROFESSOR: Binary search\nwould find a bad insert.", "start": 637.13, "duration": 3.77}, {"text": "OK, good.", "start": 640.9, "duration": 0.8}, {"text": "So that's good.", "start": 641.7, "duration": 2.25}, {"text": "So if you have a sorted array,\nand just for argument's sake,", "start": 643.95, "duration": 3.58}, {"text": "it looks like 4, 20, 32, 37, 45.", "start": 647.53, "duration": 7.21}, {"text": "And it's increasing order.", "start": 654.74, "duration": 1.9}, {"text": "And if you get a particular time\nt, you can use binary search.", "start": 656.64, "duration": 5.54}, {"text": "And let's say, in particular,\nthe time is, for example, 34.", "start": 662.18, "duration": 5.12}, {"text": "Then what you do is you go\nto the midpoint of the array,", "start": 667.3, "duration": 2.81}, {"text": "and maybe you just look at that.", "start": 670.11, "duration": 1.75}, {"text": "And you say oh, 34\nis greater than 32.", "start": 671.86, "duration": 6.02}, {"text": "So I'm going to go\ncheck and figure out", "start": 677.88, "duration": 4.99}, {"text": "if I need to move to\nthe left or the right.", "start": 682.87, "duration": 3.33}, {"text": "And since it's greater I'm\ngoing to move to the right.", "start": 686.2, "duration": 2.25}, {"text": "And within logarithmic\ntime, you'll", "start": 688.45, "duration": 3.43}, {"text": "find what we call the insertion\npoint of the sorted array,", "start": 691.88, "duration": 5.326}, {"text": "where this 34 is\nsupposed to sit.", "start": 697.206, "duration": 3.334}, {"text": "And you don't necessarily\nget to insert there.", "start": 700.54, "duration": 4.06}, {"text": "You need to look, once you've\nfound the insertion point,", "start": 704.6, "duration": 2.73}, {"text": "to your left and to your right.", "start": 707.33, "duration": 3.11}, {"text": "And do the k minute check.", "start": 710.44, "duration": 2.9}, {"text": "So finish up the\nanswer to the question,", "start": 713.34, "duration": 3.92}, {"text": "tell me how long it's going to\ntake me to find the insertion", "start": 717.26, "duration": 5.11}, {"text": "point, how long it's going\nto take me to do the check,", "start": 722.37, "duration": 3.73}, {"text": "and how long it's going\nto take me to actually do", "start": 726.1, "duration": 2.11}, {"text": "the insertion.", "start": 728.21, "duration": 1.592}, {"text": "AUDIENCE: Log n in the search--", "start": 729.802, "duration": 2.523}, {"text": "PROFESSOR: Log n for the\nsearch, to find the point.", "start": 732.325, "duration": 2.125}, {"text": "AUDIENCE: Constant\nfor the comparison?", "start": 734.45, "duration": 1.934}, {"text": "PROFESSOR: Constant\nto the comparison.", "start": 736.384, "duration": 0.936}, {"text": "And then the last step?", "start": 737.32, "duration": 0.958}, {"text": "AUDIENCE: Do the\nresearch [INAUDIBLE].", "start": 738.278, "duration": 1.85}, {"text": "PROFESSOR: Sorry, little louder.", "start": 740.128, "duration": 3.121}, {"text": "Sorry.", "start": 743.249, "duration": 0.499}, {"text": "AUDIENCE: The\ninsertion is constant.", "start": 743.748, "duration": 1.402}, {"text": "PROFESSOR: Insertion\nis constant?", "start": 745.15, "duration": 1.374}, {"text": "Is that right?", "start": 746.524, "duration": 0.806}, {"text": "Do you people agree with him,\nthat insertion is constant?", "start": 747.33, "duration": 3.994}, {"text": "AUDIENCE: You've got a\nmaximum size up there, right?", "start": 751.324, "duration": 2.405}, {"text": "There must be a maximum.", "start": 753.729, "duration": 1.443}, {"text": "[INAUDIBLE]", "start": 755.172, "duration": 1.928}, {"text": "PROFESSOR: No, the indices--\nso right now the array", "start": 757.1, "duration": 2.8}, {"text": "has indices i.", "start": 759.9, "duration": 1.78}, {"text": "And if you start with 1, it's\n1, 2, 3, 4, 5, et cetera.", "start": 761.68, "duration": 6.15}, {"text": "So what do you\nmean by insertion?", "start": 767.83, "duration": 2.08}, {"text": "Someone explain to me\nwhat-- yeah, go ahead.", "start": 769.91, "duration": 2.839}, {"text": "AUDIENCE: When you\nput something in you", "start": 772.749, "duration": 1.625}, {"text": "have to shift\nevery element over.", "start": 774.374, "duration": 1.668}, {"text": "PROFESSOR: That's exactly right.", "start": 776.042, "duration": 1.333}, {"text": "That's exactly right.", "start": 777.375, "duration": 0.934}, {"text": "Ok, good, that's great.", "start": 778.309, "duration": 2.583}, {"text": "I guess I should give\nyou half a cushion.", "start": 780.892, "duration": 1.708}, {"text": "But I'll do the full one, right?", "start": 782.6, "duration": 2.4}, {"text": "And you get one, too.", "start": 785.0, "duration": 0.94}, {"text": "So the point here is\nthis is pretty close.", "start": 789.01, "duration": 2.41}, {"text": "It's almost what we want.", "start": 791.42, "duration": 2.11}, {"text": "It's almost what we want.", "start": 793.53, "duration": 2.08}, {"text": "There's a little bit\nof a glitch here.", "start": 795.61, "duration": 2.71}, {"text": "We know about binary search.", "start": 798.32, "duration": 1.89}, {"text": "The binary search is\ngoing to allow us,", "start": 800.21, "duration": 2.15}, {"text": "if there's n elements\nhere, to find the place--", "start": 802.36, "duration": 3.59}, {"text": "it's going to be able\nto find-- and I'm", "start": 805.95, "duration": 3.97}, {"text": "going to precise here-- the\nsmallest i such that R of i", "start": 809.92, "duration": 10.05}, {"text": "is greater than or equal\nto t in order log n time.", "start": 819.97, "duration": 4.94}, {"text": "It's going to be\nable to do that.", "start": 827.52, "duration": 2.45}, {"text": "You're going to be able to\ncompare R of i and R of i", "start": 829.97, "duration": 10.44}, {"text": "minus 1-- so the left\nand the right-- against t", "start": 840.41, "duration": 6.12}, {"text": "in order 1 time.", "start": 846.53, "duration": 3.47}, {"text": "But sadly, the actual insertion\nis going to require shifting.", "start": 850.0, "duration": 14.105}, {"text": "And that could take order n\ntime, because it's an array.", "start": 869.8, "duration": 4.09}, {"text": "So that's the problem.", "start": 878.16, "duration": 2.31}, {"text": "Now you could imagine that\nyou had a sorted list.", "start": 880.47, "duration": 6.77}, {"text": "And you could say, hey\nif I have a sorted list,", "start": 887.24, "duration": 3.37}, {"text": "then the list looks\nlike this, and it's", "start": 890.61, "duration": 6.82}, {"text": "got a bunch of pointers in it.", "start": 897.43, "duration": 2.22}, {"text": "And if I've found\nthe insertion point,", "start": 899.65, "duration": 6.04}, {"text": "then-- the list is nice,\nbecause you can insert something", "start": 905.69, "duration": 7.68}, {"text": "by moving pointers\nin constant time", "start": 913.37, "duration": 3.29}, {"text": "once you've found\nthe insertion point.", "start": 916.66, "duration": 2.18}, {"text": "But what's the\nproblem with the list?", "start": 918.84, "duration": 2.78}, {"text": "Yeah.", "start": 921.62, "duration": 0.5}, {"text": "AUDIENCE: You can't do\nbinary search [INAUDIBLE].", "start": 922.12, "duration": 2.46}, {"text": "PROFESSOR: Well you can't\ndo binary search on a list.", "start": 924.58, "duration": 2.35}, {"text": "There's no notion of\ngoing to the n by 2 index", "start": 926.93, "duration": 3.87}, {"text": "and doing random access on\na conventional list, right?", "start": 930.8, "duration": 5.68}, {"text": "So the list does\none thing right,", "start": 936.48, "duration": 3.13}, {"text": "but doesn't do the\nother thing right.", "start": 939.61, "duration": 1.83}, {"text": "The array does a\ncouple things right,", "start": 941.44, "duration": 2.16}, {"text": "but doesn't do the\nshifting right.", "start": 943.6, "duration": 1.84}, {"text": "And so you see why we've\nconstructed this toy problem.", "start": 945.44, "duration": 3.99}, {"text": "It's to motivate the\nbinary search tree data", "start": 949.43, "duration": 3.24}, {"text": "structure, obviously.", "start": 952.67, "duration": 1.18}, {"text": "But you're close,\nbut not quite there.", "start": 953.85, "duration": 5.19}, {"text": "What about heaps?", "start": 959.04, "duration": 0.79}, {"text": "We talked about heaps last time.", "start": 963.19, "duration": 3.32}, {"text": "What's the basic problem with\nthe heap for this problem?", "start": 966.51, "duration": 5.84}, {"text": "The heaps are data\narrays, but you", "start": 972.35, "duration": 2.16}, {"text": "can visualize them as trees.", "start": 974.51, "duration": 1.46}, {"text": "And obviously if we're talking\nabout min heaps and max heaps.", "start": 975.97, "duration": 3.1}, {"text": "So in particular, what goes\nwrong with a min heap or a max", "start": 979.07, "duration": 4.36}, {"text": "heap for this problem?", "start": 983.43, "duration": 3.51}, {"text": "What takes a long time?", "start": 986.94, "duration": 1.575}, {"text": "Yeah.", "start": 988.515, "duration": 0.5}, {"text": "AUDIENCE: You have to scan every\nelement, which [INAUDIBLE].", "start": 991.66, "duration": 4.712}, {"text": "PROFESSOR: That's right.", "start": 996.372, "duration": 1.0}, {"text": "I mean, sadly, you know when\nwe talk about min heaps or max", "start": 997.372, "duration": 2.618}, {"text": "heaps, they actually have\na fairly weak invariant.", "start": 999.99, "duration": 6.47}, {"text": "It turns out that-- I'm\npreviewing a bit here--", "start": 1006.46, "duration": 3.05}, {"text": "binary search\ntrees are obviously", "start": 1009.51, "duration": 1.53}, {"text": "similar to heaps in the\nsense that you visualize", "start": 1011.04, "duration": 2.88}, {"text": "an array as a tree,\nin the case of a heap.", "start": 1013.92, "duration": 2.36}, {"text": "And binary search\ntrees are trees.", "start": 1016.28, "duration": 2.08}, {"text": "But the invariant in a\nmin heap or a max heap,", "start": 1018.36, "duration": 3.81}, {"text": "is this kind of\na week invariant.", "start": 1022.17, "duration": 1.899}, {"text": "It essentially says,\nlook at the min element.", "start": 1024.069, "duration": 8.671}, {"text": "And the min element\nhas to be the root,", "start": 1032.74, "duration": 2.93}, {"text": "so you can do that one\noperation pretty quickly.", "start": 1035.67, "duration": 2.52}, {"text": "But if you want to look\nfor a k minute check,", "start": 1038.19, "duration": 3.58}, {"text": "you want to see if there's\nan element in the heap that", "start": 1041.77, "duration": 8.99}, {"text": "is less than or equal to k,\nor greater than or equal to k", "start": 1050.76, "duration": 6.06}, {"text": "from t, this is going\nto take order n time.", "start": 1056.82, "duration": 4.7}, {"text": "OK?", "start": 1061.52, "duration": 1.731}, {"text": "Good.", "start": 1063.251, "duration": 0.499}, {"text": "And finally, we haven't\ntalked about dictionaries,", "start": 1066.39, "duration": 2.86}, {"text": "but we will next week.", "start": 1069.25, "duration": 2.79}, {"text": "Eric will talk about hash\ntables and dictionaries.", "start": 1072.04, "duration": 2.49}, {"text": "And they have the same problem.", "start": 1074.53, "duration": 2.27}, {"text": "So it's not like dictionaries\nare going to solve the problem,", "start": 1076.8, "duration": 2.89}, {"text": "for those of you who know about\nhash tables and dictionaries.", "start": 1079.69, "duration": 2.6}, {"text": "But you'll hear about\nthem in some detail.", "start": 1082.29, "duration": 1.75}, {"text": "They're very good\nat other things.", "start": 1084.04, "duration": 2.34}, {"text": "So I don't want to say much more\nabout that, because you're not", "start": 1086.38, "duration": 3.98}, {"text": "supposed to know\nabout dictionaries.", "start": 1090.36, "duration": 1.98}, {"text": "Or at least we\ndon't want to assume", "start": 1092.34, "duration": 1.458}, {"text": "you do, though we\nhave talked about them", "start": 1093.798, "duration": 2.332}, {"text": "and alluded to\ndictionaries earlier.", "start": 1096.13, "duration": 3.06}, {"text": "And so that's a story here.", "start": 1099.19, "duration": 2.215}, {"text": "Yeah, back there, question.", "start": 1101.405, "duration": 1.125}, {"text": "AUDIENCE: Yeah, can you explain\nwhy it's [INAUDIBLE] time?", "start": 1102.53, "duration": 2.92}, {"text": "PROFESSOR: So what\nis a heap, right?", "start": 1105.45, "duration": 2.08}, {"text": "A heap essentially-- a\nmin heap, for example,", "start": 1107.53, "duration": 2.69}, {"text": "or we talked about\nmax heaps last time,", "start": 1110.22, "duration": 4.06}, {"text": "has the property that\nyou have an element k,", "start": 1114.28, "duration": 5.16}, {"text": "and you're going to look\nat, let's say it's 21.", "start": 1119.44, "duration": 7.98}, {"text": "Let's do min heaps, so this\nhas to be less than what's", "start": 1127.42, "duration": 4.63}, {"text": "here, 23, and what\nthere, maybe it's", "start": 1132.05, "duration": 3.39}, {"text": "30, and so on and so forth.", "start": 1135.44, "duration": 2.105}, {"text": "And you have a\nrecursive definition.", "start": 1137.545, "duration": 1.5}, {"text": "And when you insert into a min\nheap, typically what happens", "start": 1144.22, "duration": 3.27}, {"text": "is suppose you wanted to\ninsert, for argument's sake,", "start": 1147.49, "duration": 4.1}, {"text": "I want to insert 25.", "start": 1151.59, "duration": 4.69}, {"text": "I want to insert 25 into this.", "start": 1156.28, "duration": 2.89}, {"text": "The insertion algorithm\nfor a min heap", "start": 1159.17, "duration": 3.84}, {"text": "typically adds to the\nend of the min heap.", "start": 1163.01, "duration": 2.77}, {"text": "So what you do is you\nwould add 25 to this.", "start": 1165.78, "duration": 3.5}, {"text": "And let's say that you\nhad something out here.", "start": 1169.28, "duration": 4.22}, {"text": "So you'd add to it.", "start": 1173.5, "duration": 1.13}, {"text": "And you'd start flipping things.", "start": 1174.63, "duration": 3.74}, {"text": "And you could work with\njust this part of the array", "start": 1178.37, "duration": 4.71}, {"text": "to insert 25 in here.", "start": 1183.08, "duration": 2.06}, {"text": "And you'd be able to satisfy\nthe invariant of the min heap.", "start": 1185.14, "duration": 3.52}, {"text": "And you'd get a\nlegitimate min heap.", "start": 1188.66, "duration": 3.09}, {"text": "But you'd never check the\nleft part of it, which is 23.", "start": 1191.75, "duration": 4.36}, {"text": "So it's quite possible--\nand this is a good example--", "start": 1196.11, "duration": 4.25}, {"text": "that your basic insertion\nalgorithm, which is essentially", "start": 1200.36, "duration": 4.06}, {"text": "a version of max heap\nof i, or min heap of i,", "start": 1204.42, "duration": 3.22}, {"text": "would simply insert\nat the end, and keep", "start": 1207.64, "duration": 2.2}, {"text": "flipping until you get\nthe min heap property,", "start": 1209.84, "duration": 2.16}, {"text": "would be unable to check\nfor the k minute check", "start": 1212.0, "duration": 3.11}, {"text": "during the insertion.", "start": 1215.11, "duration": 1.32}, {"text": "But what you'd have to do\nis to go look elsewhere.", "start": 1216.43, "duration": 2.43}, {"text": "That min heap of i\nwe'd never look at--", "start": 1218.86, "duration": 1.967}, {"text": "or the insert algorithm we'd\nnever look at-- and that", "start": 1220.827, "duration": 2.208}, {"text": "would require order n time.", "start": 1223.035, "duration": 1.865}, {"text": "All right?", "start": 1224.9, "duration": 0.56}, {"text": "AUDIENCE: Thank you.", "start": 1225.46, "duration": 0.833}, {"text": "PROFESSOR: So that's the\nstory for the min heap.", "start": 1228.89, "duration": 2.61}, {"text": "Thanks for the question.", "start": 1231.5, "duration": 1.23}, {"text": "And it's similar for\ndictionaries, as I said.", "start": 1232.73, "duration": 2.63}, {"text": "And so we're stuck.", "start": 1235.36, "duration": 1.79}, {"text": "We have no data structure yet\nthat can do all of the things", "start": 1237.15, "duration": 5.81}, {"text": "that I put up on the board to\nthe left, in order log n time.", "start": 1242.96, "duration": 5.95}, {"text": "And as you can see, the\nsorted array got pretty close.", "start": 1248.91, "duration": 3.86}, {"text": "And so if you could\njust solve this problem,", "start": 1252.77, "duration": 5.58}, {"text": "if you could do fast insertion--\nand by fast I mean order log n", "start": 1258.35, "duration": 5.75}, {"text": "time-- into a sorted\narray, we'd be in business.", "start": 1264.1, "duration": 10.38}, {"text": "So that's what we'd like to\ndo with binary search trees.", "start": 1274.48, "duration": 3.72}, {"text": "Binary search trees\nare, as you can imagine,", "start": 1278.2, "duration": 2.14}, {"text": "enable binary search.", "start": 1280.34, "duration": 1.74}, {"text": "But the sorted arrays\ndon't allow fast insertion,", "start": 1282.08, "duration": 5.24}, {"text": "but BSTs do.", "start": 1287.32, "duration": 1.1}, {"text": "So let me introduce BSTs.", "start": 1290.919, "duration": 1.041}, {"text": "As with any data\nstructure, there's", "start": 1298.5, "duration": 1.63}, {"text": "a nice invariant\nassociated with BSTs.", "start": 1300.13, "duration": 3.69}, {"text": "The invariant is stronger\nthan the heap invariant.", "start": 1303.82, "duration": 5.26}, {"text": "And actually, that makes them\na different data structure, not", "start": 1309.08, "duration": 3.49}, {"text": "necessarily a better\ndata structure.", "start": 1312.57, "duration": 1.95}, {"text": "And I'll say why, but different.", "start": 1314.52, "duration": 3.437}, {"text": "For this problem they're better.", "start": 1317.957, "duration": 1.333}, {"text": "So one example of a binary\nsearch tree looks like this.", "start": 1322.13, "duration": 2.49}, {"text": "And as a binary tree you have\na node, and we call it x.", "start": 1334.0, "duration": 5.6}, {"text": "Each of the nodes\nhas a key of x.", "start": 1339.6, "duration": 3.28}, {"text": "So 30 is the key for this node,\n17 for that one, et cetera.", "start": 1342.88, "duration": 4.41}, {"text": "Unlike in a heap,\nyour data structure", "start": 1347.29, "duration": 2.285}, {"text": "is a little more complicated.", "start": 1349.575, "duration": 2.115}, {"text": "The heap is simply\nan array, and you", "start": 1351.69, "duration": 2.18}, {"text": "happen to visualize\nit as a tree.", "start": 1353.87, "duration": 2.654}, {"text": "The binary search\ntree is actually", "start": 1356.524, "duration": 1.416}, {"text": "a tree that has\npointers, unlike a heap.", "start": 1357.94, "duration": 6.1}, {"text": "So it's a more complicated\ndata structure.", "start": 1364.04, "duration": 2.77}, {"text": "You need a few more bytes for\nevery node of the binary search", "start": 1366.81, "duration": 3.43}, {"text": "tree, as opposed\nto the heap, which", "start": 1370.24, "duration": 1.93}, {"text": "is simply an array element.", "start": 1372.17, "duration": 3.27}, {"text": "And the pointers\nare parent of x.", "start": 1375.44, "duration": 4.23}, {"text": "I haven't bothered\nshowing the arrows here,", "start": 1379.67, "duration": 4.19}, {"text": "because you could be going\nupwards or backwards.", "start": 1383.86, "duration": 3.29}, {"text": "And you could imagine\nthat you actually", "start": 1387.15, "duration": 1.93}, {"text": "have a parent pointer\nthat goes up this way,", "start": 1389.08, "duration": 2.85}, {"text": "and you have a child\npointer that goes this way.", "start": 1391.93, "duration": 2.67}, {"text": "So there's really,\npotentially, three pointers", "start": 1394.6, "duration": 3.19}, {"text": "for each node, the\nparent, the left child,", "start": 1397.79, "duration": 4.43}, {"text": "and the right child.", "start": 1402.22, "duration": 1.8}, {"text": "So pretty straightforward.", "start": 1404.02, "duration": 2.56}, {"text": "That's the data\nstructure in terms", "start": 1406.58, "duration": 2.06}, {"text": "of what it needs to have\nso you can operate on it.", "start": 1408.64, "duration": 4.78}, {"text": "And there's an\ninvariant for a BST.", "start": 1413.42, "duration": 8.02}, {"text": "What makes a BST\nis that you have", "start": 1421.44, "duration": 6.98}, {"text": "an ordering of the\nkey values that", "start": 1428.42, "duration": 5.28}, {"text": "satisfy the invariant that\nfor all nodes x if y is", "start": 1433.7, "duration": 11.92}, {"text": "in the left subtree\nof x, we have--", "start": 1445.62, "duration": 13.16}, {"text": "if it's in the left\nsubtree then key of y", "start": 1458.78, "duration": 4.35}, {"text": "is less than or\nequal to key of x.", "start": 1463.13, "duration": 4.82}, {"text": "And if y is in the\nright subtree we", "start": 1467.95, "duration": 7.92}, {"text": "have key of y is greater\nthan or equal to key of x.", "start": 1475.87, "duration": 6.2}, {"text": "So if we're talking\nabout trees here,", "start": 1482.07, "duration": 2.47}, {"text": "subtrees here,\neverything underneath--", "start": 1484.54, "duration": 2.57}, {"text": "and that's the stronger part\nof the invariant in the BST,", "start": 1487.11, "duration": 4.06}, {"text": "versus in the heap we were just\ntalking about the children.", "start": 1491.17, "duration": 3.53}, {"text": "And so you look at\nthis BST, it is a BST", "start": 1494.7, "duration": 3.39}, {"text": "because if I look to\nthe right, from the root", "start": 1498.09, "duration": 3.34}, {"text": "I only see values that\nare greater than 30.", "start": 1501.43, "duration": 3.04}, {"text": "And if I look to the left,\nin the entire subtree,", "start": 1504.47, "duration": 3.68}, {"text": "all the way down I only see\nvalues that are less than 30.", "start": 1508.15, "duration": 5.74}, {"text": "And that has to be true for any\nintermediate node in the tree.", "start": 1513.89, "duration": 6.22}, {"text": "And the only other\nnontrivial node here is 17.", "start": 1520.11, "duration": 3.83}, {"text": "And you see that 14 is less than\n17, and 20 is greater than 17.", "start": 1523.94, "duration": 4.89}, {"text": "OK?", "start": 1528.83, "duration": 1.17}, {"text": "So that's the BST.", "start": 1530.0, "duration": 2.317}, {"text": "That's the data structure.", "start": 1532.317, "duration": 1.083}, {"text": "This is the invariant.", "start": 1533.4, "duration": 1.51}, {"text": "So let's look at why BSTs\nare a possibility for solving", "start": 1534.91, "duration": 5.98}, {"text": "our runway reservation problem.", "start": 1540.89, "duration": 3.98}, {"text": "And what I'll do is\nI'll do the insert.", "start": 1544.87, "duration": 5.32}, {"text": "So let's start with the\nnil set of elements,", "start": 1554.79, "duration": 4.18}, {"text": "or null set of elements, R.\nAnd let's start inserting.", "start": 1558.97, "duration": 5.09}, {"text": "So I insert 49.", "start": 1568.37, "duration": 5.2}, {"text": "And all I do is make a node\nthat has a key value of 49.", "start": 1573.57, "duration": 6.27}, {"text": "This one is easy.", "start": 1579.84, "duration": 2.27}, {"text": "Next insert, 79.", "start": 1582.11, "duration": 1.485}, {"text": "And what happens here\nis I have to look at 49,", "start": 1587.09, "duration": 5.51}, {"text": "and I compare 79 to 49.", "start": 1592.6, "duration": 1.565}, {"text": "And because 79 is greater\nthan 49 I go to the right", "start": 1594.165, "duration": 3.615}, {"text": "and I attach 79 to\nthe right child of 49.", "start": 1597.78, "duration": 7.4}, {"text": "Then I want to insert 46.", "start": 1605.18, "duration": 1.495}, {"text": "And when I want to\ninsert 46 I look at this,", "start": 1609.5, "duration": 2.69}, {"text": "I compare 49 and 46.", "start": 1612.19, "duration": 1.88}, {"text": "46 is less, so I go to the left\nside and I put 46 in there.", "start": 1614.07, "duration": 5.32}, {"text": "Next, let's say I\nwant to insert 41.", "start": 1619.39, "duration": 5.17}, {"text": "So far I haven't really talked\nabout the k minute checks.", "start": 1624.56, "duration": 4.92}, {"text": "And you could imagine\nthat they're being done.", "start": 1629.48, "duration": 2.22}, {"text": "I'll show you exactly, or\ntalk about exactly how they're", "start": 1631.7, "duration": 2.38}, {"text": "done in a second.", "start": 1634.08, "duration": 1.46}, {"text": "It's not that hard.", "start": 1635.54, "duration": 1.87}, {"text": "But let me go ahead\nand do one more.", "start": 1637.41, "duration": 3.75}, {"text": "For 41, 41 is less\nthan 49, so I go left.", "start": 1641.16, "duration": 4.78}, {"text": "41 is less than 46, so\nI go left and attach it", "start": 1645.94, "duration": 4.27}, {"text": "to the left child.", "start": 1650.21, "duration": 0.945}, {"text": "All right?", "start": 1651.155, "duration": 0.635}, {"text": "So that's what I have right now.", "start": 1651.79, "duration": 1.86}, {"text": "Now let's talk about\nthe k minute check.", "start": 1653.65, "duration": 2.86}, {"text": "It's good to talk about\nthe K minute check", "start": 1656.51, "duration": 2.59}, {"text": "when there's\nactually a violation.", "start": 1659.1, "duration": 2.65}, {"text": "And let's assume\nthe k equals 3 here.", "start": 1661.75, "duration": 3.47}, {"text": "And so, same thing here.", "start": 1665.22, "duration": 1.89}, {"text": "You're essentially doing\nbinary search here.", "start": 1667.11, "duration": 2.67}, {"text": "And you're doing the checks as\nyou're doing the binary search.", "start": 1669.78, "duration": 2.722}, {"text": "So what you're\ngoing to be doing is", "start": 1672.502, "duration": 1.458}, {"text": "you're going to check that--\nyou're going to compare 42", "start": 1673.96, "duration": 4.62}, {"text": "with 49, with the\nk minute check.", "start": 1678.58, "duration": 3.35}, {"text": "And you realize they're 7 apart.", "start": 1681.93, "duration": 1.85}, {"text": "So that's OK.", "start": 1683.78, "duration": 1.18}, {"text": "And 42 is less than\n49, so you go left.", "start": 1684.96, "duration": 4.05}, {"text": "And then you compare 42 with 46.", "start": 1689.01, "duration": 3.36}, {"text": "And again, it's less than 46,\nbut it's k away, more than 3", "start": 1692.37, "duration": 4.4}, {"text": "away from 46.", "start": 1696.77, "duration": 1.26}, {"text": "So that's cool.", "start": 1698.03, "duration": 0.92}, {"text": "And you go left.", "start": 1698.95, "duration": 1.63}, {"text": "And then you get to 41.", "start": 1700.58, "duration": 1.77}, {"text": "And you compare 42 with 41.", "start": 1702.35, "duration": 2.83}, {"text": "In this case is greater.", "start": 1705.18, "duration": 1.43}, {"text": "But it's not k more than it.", "start": 1706.61, "duration": 3.97}, {"text": "And so that means that if\nyou didn't have the check,", "start": 1710.58, "duration": 3.93}, {"text": "you would be putting 42 in here.", "start": 1714.51, "duration": 3.42}, {"text": "But because you have\nthe check, you fail.", "start": 1717.93, "duration": 2.82}, {"text": "And you say, look,\nI mean this violates", "start": 1720.75, "duration": 2.83}, {"text": "the safety property, violates\nthe check I need to do.", "start": 1723.58, "duration": 2.905}, {"text": "And therefore I'm\nnot going to insert--", "start": 1726.485, "duration": 1.625}, {"text": "I'm not going to reserve\na request for you.", "start": 1728.11, "duration": 2.64}, {"text": "All right?", "start": 1730.75, "duration": 0.77}, {"text": "So what's happened here is\nit's basically a sorted array,", "start": 1731.52, "duration": 3.82}, {"text": "except that you added\na bunch of pointers", "start": 1735.34, "duration": 2.51}, {"text": "associated with the tree.", "start": 1737.85, "duration": 1.45}, {"text": "And so it's somewhere between a\nsorted list and a sorted array.", "start": 1739.3, "duration": 4.22}, {"text": "And it does exactly\nthe right thing", "start": 1743.52, "duration": 1.98}, {"text": "with respect to\nbeing able to insert.", "start": 1745.5, "duration": 3.81}, {"text": "Once you've found\nthe place to insert,", "start": 1749.31, "duration": 2.05}, {"text": "it's merely attaching\nthis particular new node", "start": 1751.36, "duration": 3.01}, {"text": "with it's appropriate\nkey to the pointer.", "start": 1754.37, "duration": 2.78}, {"text": "All right?", "start": 1757.15, "duration": 2.05}, {"text": "So what's happened\nhere is that if h", "start": 1759.2, "duration": 9.19}, {"text": "is the height of the\ntree then insertion", "start": 1768.39, "duration": 9.58}, {"text": "with or without the check\nis done in order h time.", "start": 1777.97, "duration": 6.54}, {"text": "And that's what\nBSTs are good for.", "start": 1788.33, "duration": 3.714}, {"text": "People buy that?", "start": 1792.044, "duration": 0.666}, {"text": "Any questions about how they\nk minute check proceeded?", "start": 1792.71, "duration": 2.99}, {"text": "Yeah, question.", "start": 1795.7, "duration": 0.741}, {"text": "AUDIENCE: So, what's it called?", "start": 1796.441, "duration": 1.291}, {"text": "The what check?", "start": 1797.732, "duration": 0.728}, {"text": "PROFESSOR: The k minute check.", "start": 1798.46, "duration": 1.562}, {"text": "Sorry, the k was 3 minutes k.", "start": 1800.022, "duration": 4.388}, {"text": "I had this thing over\nhere, add t to the set R", "start": 1804.41, "duration": 3.38}, {"text": "if no other landings are\nscheduled within k minutes.", "start": 1807.79, "duration": 4.32}, {"text": "So k was just a number.", "start": 1812.11, "duration": 1.35}, {"text": "I want it to be a\nparameter because it", "start": 1813.46, "duration": 3.69}, {"text": "doesn't matter what k is.", "start": 1817.15, "duration": 1.98}, {"text": "As long as you know what it is\nwhen you do the binary search,", "start": 1819.13, "duration": 3.74}, {"text": "you can add that in to an\nargument to your insert,", "start": 1822.87, "duration": 3.2}, {"text": "and do the check.", "start": 1826.07, "duration": 1.022}, {"text": "AUDIENCE: OK.", "start": 1827.092, "duration": 1.608}, {"text": "PROFESSOR: So in this case,\nI set k to be 3 out here.", "start": 1828.7, "duration": 4.38}, {"text": "And I was doing a check\nto see that the invariant,", "start": 1833.08, "duration": 2.83}, {"text": "any elements in the BST\nalready, on any nodes that", "start": 1835.91, "duration": 4.92}, {"text": "had keys that were\nwithin 3 minutes--", "start": 1840.83, "duration": 5.09}, {"text": "because I fixed k to be\n3-- to the actual time", "start": 1845.92, "duration": 2.98}, {"text": "that I was trying to insert.", "start": 1848.9, "duration": 1.69}, {"text": "All right?", "start": 1850.59, "duration": 0.5}, {"text": "AUDIENCE: So there's\nno way [INAUDIBLE].", "start": 1851.09, "duration": 2.164}, {"text": "PROFESSOR: I'm sorry,\nthere's no way?", "start": 1853.254, "duration": 1.541}, {"text": "AUDIENCE: There's\nno way you could", "start": 1854.795, "duration": 0.747}, {"text": "insert the 42 into\nthe tree then?", "start": 1855.542, "duration": 1.618}, {"text": "PROFESSOR: Well, if\nthe basic insertion", "start": 1857.16, "duration": 3.32}, {"text": "method into a binary search tree\ndoesn't have any constraints.", "start": 1860.48, "duration": 3.055}, {"text": "But you can certainly\naugment the insertion method", "start": 1866.04, "duration": 4.61}, {"text": "without changing the efficiency\nof the insertion method.", "start": 1870.65, "duration": 4.07}, {"text": "So let's say that\nall you wanted to do", "start": 1874.72, "duration": 1.99}, {"text": "was insert into a\nbinary search tree,", "start": 1876.71, "duration": 3.07}, {"text": "and it had nothing to do\nwith the runway reservation.", "start": 1879.78, "duration": 2.93}, {"text": "Then you would just insert\nthe way I described to you.", "start": 1882.71, "duration": 2.69}, {"text": "The beauty of the\nbinary search tree", "start": 1885.4, "duration": 1.68}, {"text": "is that while you're\nfinding the place to insert,", "start": 1887.08, "duration": 4.07}, {"text": "you can do these checks--\nthe k minute checks.", "start": 1891.15, "duration": 2.337}, {"text": "Yeah, question back there.", "start": 1893.487, "duration": 1.083}, {"text": "AUDIENCE: What about 45?", "start": 1894.57, "duration": 2.159}, {"text": "PROFESSOR: What about 45?", "start": 1896.729, "duration": 1.041}, {"text": "So this is after-- we\nhaven't inserted 42", "start": 1897.77, "duration": 5.42}, {"text": "because it violated the check.", "start": 1903.19, "duration": 2.44}, {"text": "So when you do 45,\nthen what happens", "start": 1905.63, "duration": 1.89}, {"text": "is you see that\n45 is less than 49", "start": 1907.52, "duration": 3.58}, {"text": "and you pass, because you're\nmore than 3 minutes away.", "start": 1911.1, "duration": 4.41}, {"text": "We'll stick with that example.", "start": 1915.51, "duration": 1.72}, {"text": "And then you get\nhere and then you", "start": 1917.23, "duration": 1.7}, {"text": "see that 45 is less than 46,\nand you'd fail right here.", "start": 1918.93, "duration": 5.85}, {"text": "You would fail right here\nif you were doing the check,", "start": 1924.78, "duration": 2.61}, {"text": "because 45 is not\n3 away from 46.", "start": 1927.39, "duration": 3.83}, {"text": "All right?", "start": 1931.22, "duration": 2.17}, {"text": "So that's the story.", "start": 1933.39, "duration": 3.19}, {"text": "And so if you have h being\nthe height of the tree,", "start": 1936.58, "duration": 2.55}, {"text": "as you can see you're\njust following a path.", "start": 1939.13, "duration": 2.54}, {"text": "And depending on\nwhat the height is", "start": 1941.67, "duration": 2.48}, {"text": "you're going to do\nthat many operations,", "start": 1944.15, "duration": 2.3}, {"text": "times some constant factor.", "start": 1946.45, "duration": 1.87}, {"text": "And so you can say that\nthis is order h time.", "start": 1948.32, "duration": 2.69}, {"text": "All right?", "start": 1951.01, "duration": 1.08}, {"text": "Any other questions?", "start": 1952.09, "duration": 3.12}, {"text": "Yeah, question back there.", "start": 1955.21, "duration": 1.342}, {"text": "AUDIENCE: In a normal\narray [INAUDIBLE].", "start": 1956.552, "duration": 1.666}, {"text": "PROFESSOR: Well, it's up to you.", "start": 1964.55, "duration": 1.86}, {"text": "In a conventional binary search\ntree, or the vanilla binary", "start": 1966.41, "duration": 4.27}, {"text": "search tree, typically\nwhat you're doing", "start": 1970.68, "duration": 1.88}, {"text": "is you're doing\neither find or insert.", "start": 1972.56, "duration": 2.54}, {"text": "And so what that means\nis that you would just", "start": 1975.1, "duration": 1.95}, {"text": "return the pointer\nassociated with that element.", "start": 1977.05, "duration": 3.82}, {"text": "So if you're looking for find\n46, for example, on the tree", "start": 1980.87, "duration": 3.84}, {"text": "that I have out there, typically\n46 is just the key value.", "start": 1984.71, "duration": 3.946}, {"text": "And there may be a record\nassociated with it.", "start": 1988.656, "duration": 1.874}, {"text": "And you would get a\npointer to that record", "start": 1990.53, "duration": 1.749}, {"text": "because it's already in there.", "start": 1992.279, "duration": 1.921}, {"text": "At that point you can\nsay I want to override.", "start": 1994.2, "duration": 3.69}, {"text": "Or if you want, you could\nhave duplicate values.", "start": 1997.89, "duration": 3.53}, {"text": "You could have this,\nwhat's called a multiset.", "start": 2001.42, "duration": 2.47}, {"text": "A multiset is a set that\nhas duplicate elements.", "start": 2003.89, "duration": 2.88}, {"text": "In that case, you would need\na little more sophistication", "start": 2006.77, "duration": 2.63}, {"text": "to differentiate between\ntwo elements that", "start": 2009.4, "duration": 4.07}, {"text": "have the same key values.", "start": 2013.47, "duration": 2.4}, {"text": "So you'd have to\ncall it 46a and 46b.", "start": 2015.87, "duration": 2.3}, {"text": "And you'd have to have some\nway of differentiating.", "start": 2018.17, "duration": 3.71}, {"text": "Any other questions?", "start": 2021.88, "duration": 1.54}, {"text": "Yeah.", "start": 2023.42, "duration": 0.838}, {"text": "AUDIENCE: Wouldn't\nit be a problem", "start": 2024.258, "duration": 1.434}, {"text": "if the tree's not balanced?", "start": 2025.692, "duration": 1.912}, {"text": "PROFESSOR: Ah, great question.", "start": 2027.604, "duration": 3.166}, {"text": "Yes, stay tuned.", "start": 2030.77, "duration": 5.16}, {"text": "So I was careful, right?", "start": 2035.93, "duration": 2.06}, {"text": "I guess I kind of\nalluded to the fact", "start": 2040.369, "duration": 1.541}, {"text": "that we'd solved the\nrunway reservation system.", "start": 2041.91, "duration": 1.96}, {"text": "Did I actually say that\nwe'd solved the problem?", "start": 2043.87, "duration": 2.67}, {"text": "Did I say we had\nsolved the problem?", "start": 2046.54, "duration": 1.54}, {"text": "OK, so I did not lie.", "start": 2048.08, "duration": 2.53}, {"text": "I did not lie.", "start": 2050.61, "duration": 1.54}, {"text": "I said that the height\nof the tree was h.", "start": 2052.15, "duration": 3.58}, {"text": "And I said that this was\naccomplished in order h time,", "start": 2055.73, "duration": 3.23}, {"text": "right?", "start": 2058.96, "duration": 0.8}, {"text": "Which is not quite what I want,\nwhich is really your question.", "start": 2059.76, "duration": 3.97}, {"text": "So we'll get to that.", "start": 2063.73, "duration": 1.57}, {"text": "So we're not quite done yet.", "start": 2065.3, "duration": 2.78}, {"text": "But before we do\nthat, it turns out", "start": 2068.08, "duration": 2.639}, {"text": "that today's lecture is\nreally part one of two.", "start": 2070.719, "duration": 4.19}, {"text": "You'll get a really good\nsense of BST operations", "start": 2074.909, "duration": 5.171}, {"text": "in today's lecture.", "start": 2080.08, "duration": 1.619}, {"text": "But there's going to be a few\nthings that-- we can't cover", "start": 2081.699, "duration": 2.821}, {"text": "all of double 6 in\nthe lecture, right?", "start": 2084.52, "duration": 2.57}, {"text": "We'd like to, and let you\noff for the entire fall,", "start": 2087.09, "duration": 3.64}, {"text": "but that's not the way\nit works, all right?", "start": 2090.73, "duration": 2.21}, {"text": "So it's a great question.", "start": 2092.94, "duration": 1.42}, {"text": "I'll answer it towards the end.", "start": 2094.36, "duration": 2.599}, {"text": "I just wanted you\nto say a little bit", "start": 2096.959, "duration": 1.541}, {"text": "about other operations.", "start": 2098.5, "duration": 2.9}, {"text": "There's many operations that\nyou can do on a binary search", "start": 2101.4, "duration": 3.71}, {"text": "tree, that can be\ndone in order h time,", "start": 2105.11, "duration": 5.22}, {"text": "and some even in constant time.", "start": 2110.33, "duration": 2.71}, {"text": "And I'll put these in the notes.", "start": 2113.04, "duration": 1.9}, {"text": "Some of these are\nfairly straightforward.", "start": 2114.94, "duration": 2.03}, {"text": "Find min can be done\nin heap, in a min heap.", "start": 2116.97, "duration": 5.78}, {"text": "If you want to find the minimum\nvalue, it's constant time.", "start": 2122.75, "duration": 2.7}, {"text": "You just return the root.", "start": 2125.45, "duration": 2.28}, {"text": "In the case of a binary search\ntree, how do you find the min?", "start": 2127.73, "duration": 4.31}, {"text": "Someone?", "start": 2132.04, "duration": 2.094}, {"text": "Worth a cushion.", "start": 2134.134, "duration": 0.666}, {"text": "Yep.", "start": 2134.8, "duration": 0.535}, {"text": "AUDIENCE: Keep\ngoing to the left?", "start": 2135.335, "duration": 1.375}, {"text": "PROFESSOR: Keep\ngoing to the left.", "start": 2136.71, "duration": 1.0}, {"text": "And how do you find the max?", "start": 2137.71, "duration": 0.95}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 2138.66, "duration": 0.785}, {"text": "PROFESSOR: Keep\ngoing to the right.", "start": 2139.445, "duration": 1.458}, {"text": "All right great, thank you.", "start": 2140.903, "duration": 1.737}, {"text": "And finally, what\ncomplexity is that?", "start": 2142.64, "duration": 2.006}, {"text": "I sort gave it away, but I\nwant to hear it from you.", "start": 2144.646, "duration": 2.166}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 2146.812, "duration": 1.185}, {"text": "PROFESSOR: Hm?", "start": 2147.997, "duration": 0.583}, {"text": "AUDIENCE: It's the height", "start": 2148.58, "duration": 0.89}, {"text": "PROFESSOR: It's the\nheight, order h.", "start": 2149.47, "duration": 1.5}, {"text": "All right, it's\norder h complexity.", "start": 2150.97, "duration": 1.79}, {"text": "Go to the left until\nyou hit a leaf,", "start": 2152.76, "duration": 4.85}, {"text": "and until leaf\norder h complexity.", "start": 2157.61, "duration": 6.86}, {"text": "Same thing for max.", "start": 2164.47, "duration": 1.447}, {"text": "And then you can do\na bunch of things.", "start": 2165.917, "duration": 1.583}, {"text": "I'll put these in the notes.", "start": 2167.5, "duration": 2.53}, {"text": "You can find things\nlike next larger", "start": 2170.03, "duration": 3.15}, {"text": "x, which is the next\nlargest value beyond x.", "start": 2173.18, "duration": 5.76}, {"text": "And you look at the key for\nx and you say, for example,", "start": 2178.94, "duration": 3.59}, {"text": "if you put 46 in there, what's\nthe next thing that's larger", "start": 2182.53, "duration": 3.31}, {"text": "and that?", "start": 2185.84, "duration": 2.38}, {"text": "In this tree here, it's 49.", "start": 2188.22, "duration": 3.71}, {"text": "But that's something which was\ntrivially done in this example.", "start": 2191.93, "duration": 4.34}, {"text": "But in general you can do\nthis in order h time as well.", "start": 2196.27, "duration": 4.28}, {"text": "And you can see the pseudocode.", "start": 2200.55, "duration": 1.73}, {"text": "And we'll probably cover\nthat in section tomorrow.", "start": 2202.28, "duration": 3.85}, {"text": "What I want to do today, for the\nrest of the time I have left,", "start": 2206.13, "duration": 3.0}, {"text": "is actually talk about augmented\nbinary search trees, which", "start": 2209.13, "duration": 4.59}, {"text": "are things that can do more\nand have more data in them", "start": 2213.72, "duration": 5.15}, {"text": "than just these pointers.", "start": 2218.87, "duration": 2.81}, {"text": "And that's actually\nsomething which", "start": 2221.68, "duration": 2.231}, {"text": "should give you a sense of the\nrichness of the binary search", "start": 2223.911, "duration": 2.499}, {"text": "tree structure, this\nnotion of augmentation.", "start": 2226.41, "duration": 3.107}, {"text": "And those of you, again,\nwho have taken double 05,", "start": 2229.517, "duration": 2.083}, {"text": "you know about\ndesign amendments.", "start": 2231.6, "duration": 2.16}, {"text": "And so specifications\nnever stay the same.", "start": 2233.76, "duration": 2.78}, {"text": "I mean, you're\nworking for someone,", "start": 2236.54, "duration": 1.79}, {"text": "and they never really\ntell you what they want.", "start": 2238.33, "duration": 2.7}, {"text": "They might, but they\nchange their mind.", "start": 2241.03, "duration": 3.22}, {"text": "So in this case, we're\ngoing to change our mind.", "start": 2244.25, "duration": 2.45}, {"text": "And so we've done\nthis to the extent", "start": 2246.7, "duration": 2.27}, {"text": "that we can cover all of\nthese in order h time.", "start": 2248.97, "duration": 3.36}, {"text": "And let's say that now\nthe problem specification", "start": 2252.33, "duration": 2.78}, {"text": "changed on us.", "start": 2255.11, "duration": 1.7}, {"text": "There's an additional\nrequirement", "start": 2256.81, "duration": 1.76}, {"text": "that we're asked to solve.", "start": 2258.57, "duration": 3.68}, {"text": "And so you sort of\ncommitted to BST structures.", "start": 2262.25, "duration": 4.81}, {"text": "But now we have an\nadditional requirement.", "start": 2267.06, "duration": 3.09}, {"text": "And the new requirement is that\nwe be able to compute rank t.", "start": 2270.15, "duration": 9.95}, {"text": "And rank t is how\nmany planes are", "start": 2280.1, "duration": 8.33}, {"text": "scheduled to land at times\nless than or equal to t.", "start": 2288.43, "duration": 14.04}, {"text": "So perfectly\nreasonable question.", "start": 2302.47, "duration": 1.57}, {"text": "It wasn't part of\nthe original spec.", "start": 2304.04, "duration": 2.7}, {"text": "You now have built your\nBST data structure,", "start": 2306.74, "duration": 3.07}, {"text": "you thought you were done.", "start": 2309.81, "duration": 1.67}, {"text": "Sorry, you aren't.", "start": 2311.48, "duration": 1.86}, {"text": "You've got to do\nthis extra stuff.", "start": 2313.34, "duration": 2.39}, {"text": "So that's the notion\nof augmentation,", "start": 2315.73, "duration": 3.81}, {"text": "which we're going to use this\nis an example of how we're", "start": 2319.54, "duration": 3.204}, {"text": "going to augment\nthe BST structure.", "start": 2322.744, "duration": 2.456}, {"text": "And oh, by the way,\nI don't want you", "start": 2325.2, "duration": 1.75}, {"text": "to change the\ncomplexity from order h.", "start": 2326.95, "duration": 3.19}, {"text": "And we eventually will\nget to order log n,", "start": 2330.14, "duration": 1.94}, {"text": "but don't go change something\nthat was logarithmic to linear.", "start": 2332.08, "duration": 4.55}, {"text": "That would be bad.", "start": 2336.63, "duration": 0.75}, {"text": "So let's talk about\nhow you do this.", "start": 2339.97, "duration": 1.72}, {"text": "And I don't think we\nneed this anymore.", "start": 2341.69, "duration": 1.625}, {"text": "So the first thing we need to\ndo is add a little bit more", "start": 2347.83, "duration": 3.17}, {"text": "information to the\nnode structure.", "start": 2351.0, "duration": 4.79}, {"text": "And what we're going to do\nis augment the BST structure.", "start": 2360.25, "duration": 9.033}, {"text": "And we're going to add one\nlittle number associated", "start": 2374.13, "duration": 4.85}, {"text": "with each node, that looks at\nthe number of nodes below it.", "start": 2378.98, "duration": 6.69}, {"text": "So in particular,\nlet's say that I", "start": 2385.67, "duration": 3.33}, {"text": "have 49, 46, let's just\nsay 49, 46 for now.", "start": 2389.0, "duration": 10.5}, {"text": "And over here I\nhave 79, 64, and 83.", "start": 2399.5, "duration": 7.2}, {"text": "I'm going to modify--\nI'm going to have", "start": 2409.64, "duration": 1.85}, {"text": "an extra number associated\nwith each of these nodes.", "start": 2411.49, "duration": 4.945}, {"text": "And I'm just going\nto write that number", "start": 2416.435, "duration": 1.625}, {"text": "on the outside of the node.", "start": 2418.06, "duration": 2.77}, {"text": "And you can just imagine\nthat now the key value has", "start": 2420.83, "duration": 2.81}, {"text": "two numbers associated\nwith it-- the thing", "start": 2423.64, "duration": 2.24}, {"text": "that I write inside the node,\nand what I write outside of it.", "start": 2425.88, "duration": 4.57}, {"text": "So in particular, when\nI do insert or delete", "start": 2430.45, "duration": 5.509}, {"text": "I'm going to be\nmodifying these numbers.", "start": 2435.959, "duration": 1.666}, {"text": "And these are size numbers.", "start": 2440.48, "duration": 3.99}, {"text": "And what do I mean by that?", "start": 2444.47, "duration": 1.74}, {"text": "Well these numbers\ncorrespond to subtree sizes.", "start": 2446.21, "duration": 5.63}, {"text": "So the subtree size\nhere is 1, 1, 1.", "start": 2457.47, "duration": 3.71}, {"text": "So as I'm building\nthis tree up I'm", "start": 2461.18, "duration": 2.92}, {"text": "going to create an\naugmented BST structure,", "start": 2464.1, "duration": 2.35}, {"text": "and I've modified\ninsert and delete", "start": 2466.45, "duration": 1.95}, {"text": "so they do some extra work.", "start": 2468.4, "duration": 1.964}, {"text": "So let's say, for\nargument's sake,", "start": 2470.364, "duration": 1.416}, {"text": "that I've added this in\nsort of a bottom up fashion.", "start": 2471.78, "duration": 6.31}, {"text": "And what I have are these\nparticular subtree sizes.", "start": 2478.09, "duration": 3.3}, {"text": "All of these should make sense.", "start": 2481.39, "duration": 1.72}, {"text": "This has just a single\nnode, same thing here.", "start": 2483.11, "duration": 4.13}, {"text": "So this subtree sizes associated\nwith these nodes are all 1.", "start": 2487.24, "duration": 3.94}, {"text": "The subtree size\nassociated with 79", "start": 2491.18, "duration": 2.56}, {"text": "is 3, because you're\ncounting 79 and 64 and 83.", "start": 2493.74, "duration": 5.32}, {"text": "And the subtree size\nassociated with 49", "start": 2499.06, "duration": 2.14}, {"text": "is 5, because you're counting\neverything underneath it.", "start": 2501.2, "duration": 3.73}, {"text": "How did we get these numbers?", "start": 2504.93, "duration": 1.466}, {"text": "Well you want to\nthink about this", "start": 2506.396, "duration": 1.374}, {"text": "as you started\nwith an empty set,", "start": 2507.77, "duration": 2.35}, {"text": "and you kept inserting into it.", "start": 2510.12, "duration": 1.41}, {"text": "And you were doing a sequence\nof insert and delete operations.", "start": 2511.53, "duration": 3.12}, {"text": "And if I explain to you how\nan insert operation modifies", "start": 2514.65, "duration": 4.44}, {"text": "these numbers, that is\npretty much all you need.", "start": 2519.09, "duration": 3.29}, {"text": "And of course, analogously,\nfor a delete operation.", "start": 2522.38, "duration": 3.59}, {"text": "So what would happen for, let's\nsay you wanted to insert 43?", "start": 2525.97, "duration": 5.21}, {"text": "You would insert\n43 at this point.", "start": 2531.18, "duration": 3.98}, {"text": "And what you'd do is you\nfollow the insertion path", "start": 2535.16, "duration": 4.29}, {"text": "just like you did before.", "start": 2539.45, "duration": 1.71}, {"text": "But when you're\nfollowing that path", "start": 2541.16, "duration": 2.27}, {"text": "you're going to increment the\nnodes that you're seeing by 1.", "start": 2543.43, "duration": 5.14}, {"text": "So you're going\nto add 43 to this.", "start": 2548.57, "duration": 3.77}, {"text": "And you'd add 5 plus\n1, because you see 49.", "start": 2552.34, "duration": 8.18}, {"text": "And then you would go\ndown and you'd see 46.", "start": 2560.52, "duration": 4.62}, {"text": "And so you'd add 1 to that.", "start": 2565.14, "duration": 2.03}, {"text": "And then finally,\nyou add 43 and you", "start": 2567.17, "duration": 2.44}, {"text": "assign-- since\nit's a leaf-- you'd", "start": 2569.61, "duration": 2.03}, {"text": "assign to value corresponding\nto the subtree size", "start": 2571.64, "duration": 2.74}, {"text": "of this new node that you\nput in there, to be 1.", "start": 2574.38, "duration": 3.99}, {"text": "It guess a little, teensy\nbit more complicated", "start": 2578.37, "duration": 2.83}, {"text": "when you want to do\nthe k minute check.", "start": 2581.2, "duration": 2.91}, {"text": "But from a complexity\nstandpoint,", "start": 2584.11, "duration": 2.59}, {"text": "if you're not worried\nabout constant factors,", "start": 2586.7, "duration": 2.16}, {"text": "you can just say, you know what?", "start": 2588.86, "duration": 1.84}, {"text": "I'm going to first run\nthe regular insert,", "start": 2590.7, "duration": 3.62}, {"text": "ignoring the subtree sizes.", "start": 2594.32, "duration": 2.36}, {"text": "And if it fails, I'm done.", "start": 2596.68, "duration": 2.82}, {"text": "Because I'm not going to\nmodify the BST, and I'm done.", "start": 2599.5, "duration": 3.37}, {"text": "I'm not going to have to\nmodify the subtree sizes.", "start": 2602.87, "duration": 2.4}, {"text": "If it succeeds, then\nI'm going to go in,", "start": 2605.27, "duration": 2.66}, {"text": "and I know now that I can\nincrement each of these nodes,", "start": 2607.93, "duration": 3.45}, {"text": "because I know I'm\ngoing to be successful.", "start": 2611.38, "duration": 2.61}, {"text": "So that's sort of a trivial\nway of solving this problem,", "start": 2613.99, "duration": 2.36}, {"text": "that from an asymptotic\ncomplexity standpoint", "start": 2616.35, "duration": 2.5}, {"text": "gives you your order\nh augmented insert.", "start": 2618.85, "duration": 3.45}, {"text": "That make sense?", "start": 2622.3, "duration": 1.887}, {"text": "Now you could do something\nbetter than that.", "start": 2624.187, "duration": 1.833}, {"text": "I mean, I would urge you,\nif you had wrote something", "start": 2626.02, "duration": 3.53}, {"text": "that-- we asked you to\nwrite something like this,", "start": 2629.55, "duration": 2.58}, {"text": "to create a single procedure\nthat essentially uses", "start": 2632.13, "duration": 3.64}, {"text": "a recursion appropriately to\ndo the right thing in one pass", "start": 2635.77, "duration": 4.73}, {"text": "through the BST.", "start": 2640.5, "duration": 1.09}, {"text": "And we'll talk about\nthings like that", "start": 2641.59, "duration": 1.84}, {"text": "as we go along in sections,\nand possibly in lectures.", "start": 2643.43, "duration": 4.78}, {"text": "So that's the subtree\ninsert delete.", "start": 2648.21, "duration": 3.306}, {"text": "Everyone buy that?", "start": 2651.516, "duration": 0.749}, {"text": "Yeah, question back there.", "start": 2652.265, "duration": 1.428}, {"text": "AUDIENCE: If I wanted to delete\na number, like let's say 79--", "start": 2653.693, "duration": 2.541}, {"text": "PROFESSOR: Yep?", "start": 2656.234, "duration": 0.625}, {"text": "AUDIENCE: --would we\nhave to take it out", "start": 2656.859, "duration": 1.845}, {"text": "and then rewrite the entire BST?", "start": 2658.704, "duration": 2.306}, {"text": "PROFESSOR: What you'd have to\ndo is a bubble up pointers.", "start": 2661.01, "duration": 3.02}, {"text": "So you'd have to actually\nhave 64 connected to-- what", "start": 2664.03, "duration": 6.1}, {"text": "will happen is 83\nwould actually come up,", "start": 2670.13, "duration": 3.83}, {"text": "and you would essentially\nhave some thing-- this", "start": 2673.96, "duration": 2.45}, {"text": "is not quite how it works--\nbut 83 would move up", "start": 2676.41, "duration": 2.37}, {"text": "and you'd have 64 to the left.", "start": 2678.78, "duration": 1.63}, {"text": "That's what would happened\nfor delete in this case.", "start": 2680.41, "duration": 2.9}, {"text": "So you would have to move\npointers in the case of delete.", "start": 2683.31, "duration": 4.05}, {"text": "And we're not done with\nbinary search tree operations", "start": 2687.36, "duration": 3.31}, {"text": "from a standpoint of\nteaching you about them.", "start": 2690.67, "duration": 2.767}, {"text": "We'll talk about them not\njust in today's lecture,", "start": 2693.437, "duration": 2.083}, {"text": "but later as well.", "start": 2695.52, "duration": 3.15}, {"text": "So there's one\nthing missing here,", "start": 2698.67, "duration": 1.71}, {"text": "though, which is I haven't\nquite figured out--", "start": 2700.38, "duration": 2.86}, {"text": "I've told you how these\nsubtree sizes work.", "start": 2703.24, "duration": 2.45}, {"text": "But it's not\ncompletely clear, this", "start": 2705.69, "duration": 2.96}, {"text": "is the last thing we have\nto do, is how are you", "start": 2708.65, "duration": 2.69}, {"text": "going to compute rank t\nfrom the subtree sizes?", "start": 2711.34, "duration": 6.12}, {"text": "So everyone understand\nsubtree sizes?", "start": 2717.46, "duration": 3.99}, {"text": "It's just the number of nodes\nthat are underneath you.", "start": 2721.45, "duration": 2.33}, {"text": "And you remember to count\nyourself, all right?", "start": 2723.78, "duration": 3.58}, {"text": "Now what is rank t?", "start": 2727.36, "duration": 1.24}, {"text": "Rank t is how many\nplanes are scheduled", "start": 2728.6, "duration": 2.26}, {"text": "to land at times less\nthan or equal to t.", "start": 2730.86, "duration": 2.81}, {"text": "So now I have a BST structure\nthat looks like the one", "start": 2733.67, "duration": 3.79}, {"text": "and I just ended up with.", "start": 2737.46, "duration": 3.47}, {"text": "So I've added this 43.", "start": 2740.93, "duration": 2.01}, {"text": "And so let me draw\nthat out here,", "start": 2742.94, "duration": 1.56}, {"text": "and see if we can\nanswer this question.", "start": 2744.5, "duration": 3.66}, {"text": "This is a subtle question.", "start": 2748.16, "duration": 3.21}, {"text": "So I got 49, and that\nsubtree size is 6.", "start": 2751.37, "duration": 4.46}, {"text": "I got 46, subtree size is 2.", "start": 2755.83, "duration": 3.34}, {"text": "43, 79, 64.", "start": 2759.17, "duration": 7.84}, {"text": "and 83.", "start": 2767.01, "duration": 1.32}, {"text": "So what I want is\nwhat lands before t?", "start": 2771.0, "duration": 10.64}, {"text": "And how do I do that?", "start": 2784.36, "duration": 3.06}, {"text": "Give me an algorithm\nthat would allow", "start": 2787.42, "duration": 3.24}, {"text": "me to compute in order h time.", "start": 2790.66, "duration": 5.04}, {"text": "I want to do this\nin order h time.", "start": 2795.7, "duration": 2.43}, {"text": "What lands before t?", "start": 2798.13, "duration": 1.91}, {"text": "Someone?", "start": 2800.04, "duration": 2.719}, {"text": "Yeah.", "start": 2802.759, "duration": 0.499}, {"text": "AUDIENCE: So first\nyou would have", "start": 2803.258, "duration": 1.404}, {"text": "to find where to insert\nit, like we did before.", "start": 2804.662, "duration": 2.624}, {"text": "PROFESSOR: Right, right.", "start": 2807.286, "duration": 0.999}, {"text": "AUDIENCE: And then because we\nhave the order of whatever it", "start": 2808.285, "duration": 4.786}, {"text": "was before-- not\nthe order, the--", "start": 2813.071, "duration": 1.804}, {"text": "PROFESSOR: The sizes?", "start": 2814.875, "duration": 0.875}, {"text": "The sizes?", "start": 2815.75, "duration": 0.53}, {"text": "Yeah.", "start": 2816.28, "duration": 0.5}, {"text": "AUDIENCE: And then we can\nlook what's more than it", "start": 2816.78, "duration": 2.665}, {"text": "on the right, we can\nsubtract it and we get--", "start": 2819.445, "duration": 3.04}, {"text": "PROFESSOR: What is more\nthan it on the right.", "start": 2822.485, "duration": 1.875}, {"text": "Do you want to say--", "start": 2824.36, "duration": 0.39}, {"text": "AUDIENCE: Because, like--", "start": 2824.75, "duration": 1.041}, {"text": "PROFESSOR: OK.", "start": 2825.791, "duration": 0.599}, {"text": "AUDIENCE: --on the right--", "start": 2826.39, "duration": 0.67}, {"text": "PROFESSOR: Right.", "start": 2827.06, "duration": 0.708}, {"text": "AUDIENCE: --and then we\ncan take this minus this", "start": 2827.768, "duration": 2.202}, {"text": "and we get what's left.", "start": 2829.97, "duration": 1.89}, {"text": "PROFESSOR: That's\ngreat, that's excellent.", "start": 2831.86, "duration": 1.75}, {"text": "Excellent.", "start": 2833.61, "duration": 2.137}, {"text": "So I'm going to do it a little\nbit differently from what", "start": 2835.747, "duration": 2.333}, {"text": "you described.", "start": 2838.08, "duration": 0.93}, {"text": "I'm going to\nactually do it in a,", "start": 2839.01, "duration": 1.46}, {"text": "sort of, a more positive\nway, no offense intended.", "start": 2840.47, "duration": 3.084}, {"text": "What we're going to\ndo is we're going", "start": 2843.554, "duration": 1.541}, {"text": "to add up the things\nthat we want to add up.", "start": 2845.095, "duration": 3.075}, {"text": "And what you have\nto do is walk--", "start": 2848.17, "duration": 2.35}, {"text": "your first step was right on.", "start": 2850.52, "duration": 2.69}, {"text": "I mean, your answer is correct.", "start": 2853.21, "duration": 2.05}, {"text": "I'm just going to do it\na little bit differently.", "start": 2855.26, "duration": 3.14}, {"text": "You walk down the tree\nto find the desired time.", "start": 2858.4, "duration": 3.78}, {"text": "This is just your search.", "start": 2862.18, "duration": 1.63}, {"text": "We know how to do that.", "start": 2863.81, "duration": 2.49}, {"text": "As you walk down you\nadd in the nodes that", "start": 2866.3, "duration": 7.54}, {"text": "is the subtree sizes-- you're\njust adding in the notes here.", "start": 2873.84, "duration": 4.301}, {"text": "So if you see-- depending\non the number of nodes", "start": 2878.141, "duration": 1.999}, {"text": "that you see as you're\ngoing deeper in,", "start": 2880.14, "duration": 1.74}, {"text": "you want to add in the nodes.", "start": 2881.88, "duration": 1.61}, {"text": "And you're going to add\none to that, corresponding", "start": 2883.49, "duration": 2.13}, {"text": "to the nodes that are smaller.", "start": 2885.62, "duration": 1.79}, {"text": "And we're going to add in the\nsubtree sizes to the left,", "start": 2887.41, "duration": 4.757}, {"text": "as opposed to subtracting.", "start": 2892.167, "duration": 1.083}, {"text": "That may not make\na lot of sense.", "start": 2899.136, "duration": 1.374}, {"text": "But I guarantee you it\nwill once we do an example.", "start": 2900.51, "duration": 3.21}, {"text": "So what's going on here?", "start": 2914.27, "duration": 1.91}, {"text": "I want to find a\nplace to insert.", "start": 2916.18, "duration": 2.25}, {"text": "I'm not actually going\nto do the insert.", "start": 2918.43, "duration": 2.06}, {"text": "Think of it is doing a lookup.", "start": 2920.49, "duration": 1.79}, {"text": "And along the way,\nI need to figure out", "start": 2922.28, "duration": 3.59}, {"text": "the less than operator.", "start": 2925.87, "duration": 1.64}, {"text": "I want to find all\nof the things that", "start": 2927.51, "duration": 1.6}, {"text": "are less than this\nvalue I'm searching for.", "start": 2929.11, "duration": 2.42}, {"text": "And so I have to do\na bit of arithmetic.", "start": 2931.53, "duration": 3.11}, {"text": "So let's say that I'm\nlooking for what's", "start": 2934.64, "duration": 5.74}, {"text": "less than or equal to 79.", "start": 2940.38, "duration": 2.64}, {"text": "So t equals 79.", "start": 2943.02, "duration": 4.7}, {"text": "So I'm going to look at 49.", "start": 2947.72, "duration": 2.17}, {"text": "I'm going to walk down,\nI'm going to look at 49.", "start": 2949.89, "duration": 3.42}, {"text": "And because I say I'm\nlooking at 49-- and 49", "start": 2953.31, "duration": 9.36}, {"text": "is clearly less than 79.", "start": 2962.67, "duration": 2.14}, {"text": "So I'm going to add 1.", "start": 2964.81, "duration": 3.15}, {"text": "And that's this check over here.", "start": 2967.96, "duration": 2.41}, {"text": "I move on and what I need to\ndo now is move to the right,", "start": 2970.37, "duration": 11.46}, {"text": "because 79 is greater than 49.", "start": 2981.83, "duration": 3.68}, {"text": "That's how my search would work.", "start": 2985.51, "duration": 1.89}, {"text": "But because I've\nmoved to the right,", "start": 2987.4, "duration": 3.1}, {"text": "I'm going to add the subtree\nsizes that were to the left.", "start": 2990.5, "duration": 5.07}, {"text": "Because I know that all\nof the things to the left", "start": 2995.57, "duration": 2.67}, {"text": "are clearly less than 79.", "start": 2998.24, "duration": 3.4}, {"text": "So I'm going to add 2,\ncorresponding to a subtree 46.", "start": 3001.64, "duration": 8.38}, {"text": "So I'm not actually\nlooking there.", "start": 3010.02, "duration": 2.1}, {"text": "But I'm going to add\nall of that stuff in.", "start": 3012.12, "duration": 2.3}, {"text": "I'm going to move to the right,\nand now I'm going to see 79.", "start": 3014.42, "duration": 3.83}, {"text": "At this point 79 is less\nthan or equal to 79.", "start": 3018.25, "duration": 8.64}, {"text": "So I'm going to see 79\nand I'm going to add 1.", "start": 3026.89, "duration": 6.4}, {"text": "And because I've added 79,\njust like I did with 49,", "start": 3033.29, "duration": 4.01}, {"text": "I have to add the subtree\nsize to the left of 79.", "start": 3037.3, "duration": 4.79}, {"text": "So the final addition\nis I add 1 corresponding", "start": 3042.09, "duration": 4.07}, {"text": "to the subtree 64.", "start": 3046.16, "duration": 4.6}, {"text": "And at this point\nI've discovered", "start": 3050.76, "duration": 1.63}, {"text": "where I have to insert, I've\nessentially found the location,", "start": 3052.39, "duration": 3.65}, {"text": "it matches 79.", "start": 3056.04, "duration": 1.86}, {"text": "And there was no modification\nrequired in this algorithm.", "start": 3057.9, "duration": 3.28}, {"text": "So if that was 78 you'd\nessentially do the same things.", "start": 3061.18, "duration": 4.81}, {"text": "But you're done because you\nfound the value, or the place", "start": 3065.99, "duration": 4.68}, {"text": "that you want to insert.", "start": 3070.67, "duration": 1.1}, {"text": "And you've done a\nbunch of additions.", "start": 3071.77, "duration": 1.73}, {"text": "And you go look at add 1, add\n2, add 1, add 1, and you have 5.", "start": 3073.5, "duration": 6.66}, {"text": "And that's the\ncorrect answer, as you", "start": 3083.539, "duration": 1.541}, {"text": "can see from this example.", "start": 3085.08, "duration": 3.36}, {"text": "So what's the bad news?", "start": 3088.44, "duration": 2.59}, {"text": "The bad news was what\nthis lady said up", "start": 3091.03, "duration": 2.79}, {"text": "front, which was we haven't\nquite solved the problem.", "start": 3093.82, "duration": 3.57}, {"text": "Because sadly, I could\neasily set things", "start": 3097.39, "duration": 3.2}, {"text": "up such that the height h is\norder n, h could be order n.", "start": 3100.59, "duration": 9.36}, {"text": "And if, for example, I\ngave you a sorted list,", "start": 3109.95, "duration": 4.46}, {"text": "and I said insert into\nbinary search tree", "start": 3114.41, "duration": 2.24}, {"text": "that's originally null 43,\nand you put 43 in there.", "start": 3116.65, "duration": 3.76}, {"text": "Then I say insert 46.", "start": 3120.41, "duration": 1.94}, {"text": "And then I say instead of 48.", "start": 3122.35, "duration": 1.74}, {"text": "And then I say\ninsert 49, et cetera.", "start": 3124.09, "duration": 2.78}, {"text": "And, you know, these\ncould be any numbers.", "start": 3126.87, "duration": 2.33}, {"text": "Then you see that what\ndoes this look like?", "start": 3129.2, "duration": 2.83}, {"text": "Does it look like a tree?", "start": 3132.03, "duration": 2.03}, {"text": "It looks like a list.", "start": 3134.06, "duration": 2.24}, {"text": "That's the bad news.", "start": 3136.3, "duration": 2.12}, {"text": "And I'll let Eric give\nyou good news next week.", "start": 3138.42, "duration": 4.78}, {"text": "We need to have this notion of\nbalanced binary search trees.", "start": 3143.2, "duration": 2.73}, {"text": "So everything I've said is true.", "start": 3145.93, "duration": 3.02}, {"text": "I did not lie.", "start": 3148.95, "duration": 1.18}, {"text": "But the one extra\nthing is we need", "start": 3150.13, "duration": 1.99}, {"text": "to make sure these trees are\nbalanced so h is order log n.", "start": 3152.12, "duration": 3.65}, {"text": "And then everything\nI said works.", "start": 3155.77, "duration": 1.811}, {"text": "All right?", "start": 3157.581, "duration": 0.499}, {"text": "See you next time.", "start": 3158.08, "duration": 1.87}]