{
    "metadata": {
        "id": "SLvTCHhu5SE",
        "avgHeat": 0.3,
        "runtime": 2985.36,
        "dale-challReadabilityScore": 7.557826972921733,
        "lexicalDiversity": 0.4706508246142933,
        "posComposition": {
            "DT": 0.113,
            "JJ": 0.05,
            "NN": 0.133,
            "VBZ": 0.054,
            "VBN": 0.015,
            "IN": 0.11,
            "NNP": 0.037,
            "PRP$": 0.003,
            "MD": 0.03,
            "VB": 0.062,
            "VBP": 0.042,
            "TO": 0.027,
            "NNS": 0.04,
            "CC": 0.035,
            "PRP": 0.098,
            "RB": 0.066,
            "VBG": 0.014,
            "JJS": 0.001,
            "VBD": 0.011,
            "WDT": 0.007,
            "WP": 0.008,
            "WRB": 0.008,
            "JJR": 0.002,
            "RP": 0.002,
            "RBS": 0.001,
            "EX": 0.004,
            "CD": 0.017,
            "POS": 0.003,
            "``": 0.001,
            "''": 0.001,
            "PDT": 0.001,
            "NNPS": 0.001,
            ":": 0.001,
            "RBR": 0.001,
            "FW": 0.0
        },
        "syllableRate": 2.555,
        "topicScores": [
            [
                "Python",
                0.0724373237703737
            ],
            [
                "type",
                0.11764691445078775
            ],
            [
                "program",
                0.11775105961571979
            ],
            [
                "PROFESSOR",
                0.13239504193991614
            ],
            [
                "audience",
                0.14005135853324047
            ],
            [
                "thing",
                0.14206066795164105
            ],
            [
                "IDLE",
                0.1644781329721495
            ],
            [
                "string",
                0.1732498332901343
            ],
            [
                "print",
                0.1750920708683711
            ],
            [
                "Creative Commons",
                0.18319084073624958
            ],
            [
                "float",
                0.1933346605684063
            ],
            [
                "statement",
                0.19701899575152124
            ],
            [
                "time",
                0.1972717886874578
            ],
            [
                "MIT",
                0.2035103573783529
            ],
            [
                "value",
                0.20370810397508027
            ],
            [
                "way",
                0.2046959839688103
            ],
            [
                "language",
                0.2053711609956399
            ],
            [
                "input",
                0.20577101721016694
            ],
            [
                "number",
                0.21566935847601085
            ],
            [
                "object",
                0.2158872293421395
            ],
            [
                "kind",
                0.2162238613064672
            ],
            [
                "expression",
                0.21652923012357855
            ],
            [
                "line",
                0.21692824541028854
            ],
            [
                "right",
                0.22059616310180827
            ],
            [
                "example",
                0.2215900401450571
            ],
            [
                "command",
                0.22511471101964778
            ],
            [
                "error",
                0.23795887815801492
            ],
            [
                "raw",
                0.2485302892019374
            ],
            [
                "code",
                0.24900081251763484
            ],
            [
                "comment",
                0.25076601871373394
            ]
        ],
        "topicsList": [
            "Python",
            "type",
            "program",
            "PROFESSOR",
            "audience",
            "thing",
            "IDLE",
            "string",
            "print",
            "Creative Commons",
            "float",
            "statement",
            "time",
            "MIT",
            "value",
            "way",
            "language",
            "input",
            "number",
            "object",
            "kind",
            "expression",
            "line",
            "right",
            "example",
            "command",
            "error",
            "raw",
            "code",
            "comment"
        ]
    },
    "chunks": {
        "SLvTCHhu5SE-0": {
            "id": "SLvTCHhu5SE-0",
            "heat": 0.1,
            "start": 0.0,
            "text": " The following content is provided under a Creative Commons license. Your support will help MIT OpenCourseWare continue to offer high quality educational resources for free. To make a donation or view additional materials from hundreds of MIT courses, visit MIT OpenCourseWare at ocw.mit.edu. PROFESSOR: Good morning. AUDIENCE: Good morning. PROFESSOR: Thank you. OK. So we're about to launch into learning some basic elements of Python today. The elements I'm going to talk about are common to every programming language that I know, at least in concept, and of course slightly different in detail. But as I said last time, everything you're going to learn about Python should be readily transferable. I'll be using, for all of the examples I present, something called an integrated development environment, and in particular, one that's built for Python called IDLE. Usually we talk about these things as IDEs.",
            "metrics": {
                "relativeDCReadability": 1.2563179029305969,
                "lexicalDiversity": 0.6040268456375839,
                "posComposition": {
                    "DT": 0.067,
                    "JJ": 0.081,
                    "NN": 0.141,
                    "VBZ": 0.013,
                    "VBN": 0.027,
                    "IN": 0.148,
                    "NNP": 0.121,
                    "PRP$": 0.007,
                    "MD": 0.02,
                    "VB": 0.054,
                    "VBP": 0.067,
                    "TO": 0.04,
                    "NNS": 0.054,
                    "CC": 0.027,
                    "PRP": 0.06,
                    "RB": 0.02,
                    "VBG": 0.027,
                    "JJS": 0.007,
                    "VBD": 0.013,
                    "WDT": 0.007
                },
                "syllableRate": 2.2,
                "topicScores": [
                    [
                        "Creative Commons",
                        0.23077349668420366
                    ],
                    [
                        "MIT",
                        0.2794783815674432
                    ],
                    [
                        "Creative Commons license",
                        0.2991108993945062
                    ],
                    [
                        "PROFESSOR",
                        0.32318317938971897
                    ],
                    [
                        "Python",
                        0.34996172695272953
                    ],
                    [
                        "good",
                        0.4632463911468027
                    ],
                    [
                        "morning",
                        0.4632463911468027
                    ],
                    [
                        "OpenCourseWare",
                        0.5263276954503365
                    ],
                    [
                        "audience",
                        0.5326874367468853
                    ],
                    [
                        "course",
                        0.5504763662154232
                    ],
                    [
                        "MIT OpenCourseWare",
                        0.551222281461939
                    ],
                    [
                        "element",
                        0.5663902333123081
                    ],
                    [
                        "IDLE",
                        0.6518839913493281
                    ],
                    [
                        "good morning",
                        0.7379516053841205
                    ],
                    [
                        "following",
                        0.7735178283175064
                    ],
                    [
                        "content",
                        0.7929170731451338
                    ],
                    [
                        "free",
                        0.8000734995479316
                    ],
                    [
                        "ocw.mit.edu",
                        0.8294541877314894
                    ],
                    [
                        "support",
                        0.8371372320783234
                    ],
                    [
                        "high",
                        0.8521289065604145
                    ],
                    [
                        "quality",
                        0.8521289065604145
                    ],
                    [
                        "educational",
                        0.8521289065604145
                    ],
                    [
                        "resource",
                        0.8521289065604145
                    ],
                    [
                        "donation",
                        0.8750543371712534
                    ],
                    [
                        "additional",
                        0.8750543371712534
                    ],
                    [
                        "material",
                        0.8750543371712534
                    ],
                    [
                        "hundred",
                        0.8750543371712534
                    ],
                    [
                        "today",
                        0.8805430693748623
                    ],
                    [
                        "detail",
                        0.8830991366351092
                    ],
                    [
                        "transferable",
                        0.8853040239559169
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "Creative Commons",
                        0.23077349668420366
                    ],
                    [
                        "MIT",
                        0.2794783815674432
                    ],
                    [
                        "PROFESSOR",
                        0.32318317938971897
                    ],
                    [
                        "Python",
                        0.34996172695272953
                    ],
                    [
                        "audience",
                        0.5326874367468853
                    ],
                    [
                        "IDLE",
                        0.6518839913493281
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-90": {
            "id": "SLvTCHhu5SE-90",
            "heat": 0.179,
            "start": 90.0,
            "text": " I'm told, I don't know if it's true, that the IDE for Python is called IDLE after Eric Idle of Monty Python, which was also, I'm told, the inspiration for the name of the programming language. So what is an integrated programming environment? In this case, it includes a specialized text editor that provides highlighting, auto-completion, smart indent, and you'll see shortly why all that's very important, and a few other amenities that make it easier to use this to type Python than typing it into a generic text editor. It includes something called a shell, which is the environment that actually interprets the Python code. And the nice thing about it is it includes syntax highlighting. So the shell gives you some information about the syntax, as does the text editor of course. And finally, it includes an integrated debugger.",
            "metrics": {
                "relativeDCReadability": 1.2910776981355603,
                "lexicalDiversity": 0.5034013605442177,
                "posComposition": {
                    "PRP": 0.088,
                    "VBP": 0.027,
                    "JJ": 0.088,
                    "RB": 0.041,
                    "VB": 0.027,
                    "IN": 0.102,
                    "VBZ": 0.095,
                    "DT": 0.143,
                    "NNP": 0.068,
                    "VBN": 0.007,
                    "WDT": 0.034,
                    "VBD": 0.02,
                    "NN": 0.17,
                    "WP": 0.007,
                    "VBG": 0.014,
                    "CC": 0.027,
                    "MD": 0.007,
                    "WRB": 0.007,
                    "NNS": 0.007,
                    "JJR": 0.007,
                    "TO": 0.014
                },
                "syllableRate": 1.917,
                "topicScores": [
                    [
                        "Python",
                        0.2578121343660317
                    ],
                    [
                        "Eric Idle",
                        0.39940573144269664
                    ],
                    [
                        "text",
                        0.4198182301725316
                    ],
                    [
                        "editor",
                        0.4234252714944321
                    ],
                    [
                        "Monty Python",
                        0.449200236446581
                    ],
                    [
                        "programming",
                        0.5133237194785106
                    ],
                    [
                        "highlighting",
                        0.5311169369560284
                    ],
                    [
                        "environment",
                        0.5315842300114675
                    ],
                    [
                        "IDE",
                        0.5342386720514202
                    ],
                    [
                        "IDLE",
                        0.5342386720514202
                    ],
                    [
                        "syntax",
                        0.5451089878523496
                    ],
                    [
                        "shell",
                        0.5494116147673097
                    ],
                    [
                        "language",
                        0.7907874620065842
                    ],
                    [
                        "true",
                        0.8271046376522506
                    ],
                    [
                        "inspiration",
                        0.8271046376522506
                    ],
                    [
                        "code",
                        0.8491468557655605
                    ],
                    [
                        "auto",
                        0.8539399687990973
                    ],
                    [
                        "completion",
                        0.8539399687990973
                    ],
                    [
                        "smart",
                        0.8539399687990973
                    ],
                    [
                        "indent",
                        0.8539399687990973
                    ],
                    [
                        "course",
                        0.8628508151901372
                    ],
                    [
                        "debugger",
                        0.867492477000214
                    ],
                    [
                        "case",
                        0.8676295050341715
                    ],
                    [
                        "important",
                        0.8676295050341715
                    ],
                    [
                        "specialized",
                        0.8795625825213336
                    ],
                    [
                        "amenity",
                        0.8795625825213336
                    ],
                    [
                        "easy",
                        0.8795625825213336
                    ],
                    [
                        "generic",
                        0.8795625825213336
                    ],
                    [
                        "nice",
                        0.8941584502649303
                    ],
                    [
                        "thing",
                        0.8941584502649303
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "Python",
                        0.2578121343660317
                    ],
                    [
                        "IDLE",
                        0.5342386720514202
                    ],
                    [
                        "language",
                        0.7907874620065842
                    ],
                    [
                        "code",
                        0.8491468557655605
                    ],
                    [
                        "thing",
                        0.8941584502649303
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-180": {
            "id": "SLvTCHhu5SE-180",
            "heat": 0.152,
            "start": 180.0,
            "text": " This could be useful in the unlikely event that your programs have errors when you write them. Though truth be told, I've been programming in Python for years and I don't know that I've ever used the debugger. It's not that I don't make mistakes, it's just that I'm kind of a Luddite, and I typically use print statements for debugging. And in fact, almost every programmer that I know, when push comes to shove, ends up using print statements. But the debugger is there, should you care to take a try. All right. So you'll see on the screen here an IDLE shell. In the shell, we can type things. What are we going to type? Well the first thing to understand is that at the core of Python, and probably the most important thing to understand, are something called objects. Everything in Python is an object. So every kind of entity that you can create in Python is an object, and in fact, Python code itself is an object. You'll remember, we talked about stored program computers last time, and the concept that a program is data, just",
            "metrics": {
                "relativeDCReadability": 1.0260508647674413,
                "lexicalDiversity": 0.48743718592964824,
                "posComposition": {
                    "DT": 0.101,
                    "MD": 0.03,
                    "VB": 0.07,
                    "JJ": 0.04,
                    "IN": 0.111,
                    "NN": 0.136,
                    "PRP$": 0.005,
                    "NNS": 0.05,
                    "VBP": 0.055,
                    "WRB": 0.01,
                    "PRP": 0.095,
                    "VBN": 0.02,
                    "VBG": 0.02,
                    "NNP": 0.05,
                    "CC": 0.035,
                    "RB": 0.07,
                    "VBZ": 0.05,
                    "TO": 0.025,
                    "RP": 0.01,
                    "WP": 0.005,
                    "RBS": 0.005,
                    "VBD": 0.005
                },
                "syllableRate": 2.192,
                "topicScores": [
                    [
                        "Python",
                        0.24607867459216767
                    ],
                    [
                        "object",
                        0.3570842266936248
                    ],
                    [
                        "program",
                        0.3873709946999551
                    ],
                    [
                        "thing",
                        0.43787500219146885
                    ],
                    [
                        "statement",
                        0.5153759020033729
                    ],
                    [
                        "print",
                        0.5222299372223715
                    ],
                    [
                        "debugger",
                        0.5273113146493998
                    ],
                    [
                        "fact",
                        0.5401471394243489
                    ],
                    [
                        "shell",
                        0.5515475067188741
                    ],
                    [
                        "kind",
                        0.5595869514656165
                    ],
                    [
                        "luddite",
                        0.5675263518685217
                    ],
                    [
                        "IDLE",
                        0.6425041728032318
                    ],
                    [
                        "useful",
                        0.8061827110739839
                    ],
                    [
                        "unlikely",
                        0.8061827110739839
                    ],
                    [
                        "event",
                        0.8061827110739839
                    ],
                    [
                        "error",
                        0.8061827110739839
                    ],
                    [
                        "truth",
                        0.8502561851027576
                    ],
                    [
                        "year",
                        0.8622603674867686
                    ],
                    [
                        "try",
                        0.8725991085041532
                    ],
                    [
                        "mistake",
                        0.8734288302953349
                    ],
                    [
                        "push",
                        0.8861018363752267
                    ],
                    [
                        "programmer",
                        0.8955853433251906
                    ],
                    [
                        "screen",
                        0.912431051392863
                    ],
                    [
                        "time",
                        0.9177848493908883
                    ],
                    [
                        "datum",
                        0.9177848493908883
                    ],
                    [
                        "core",
                        0.92019660089127
                    ],
                    [
                        "important",
                        0.92019660089127
                    ],
                    [
                        "entity",
                        0.9235144400521549
                    ],
                    [
                        "computer",
                        0.9248540503356307
                    ],
                    [
                        "concept",
                        0.9248540503356307
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "Python",
                        0.24607867459216767
                    ],
                    [
                        "object",
                        0.3570842266936248
                    ],
                    [
                        "program",
                        0.3873709946999551
                    ],
                    [
                        "thing",
                        0.43787500219146885
                    ],
                    [
                        "statement",
                        0.5153759020033729
                    ],
                    [
                        "print",
                        0.5222299372223715
                    ],
                    [
                        "kind",
                        0.5595869514656165
                    ],
                    [
                        "IDLE",
                        0.6425041728032318
                    ],
                    [
                        "error",
                        0.8061827110739839
                    ],
                    [
                        "time",
                        0.9177848493908883
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-270": {
            "id": "SLvTCHhu5SE-270",
            "heat": 0.182,
            "start": 270.0,
            "text": " like a number is data. Each object has a type that tells us the kind of object it is, and in particular, what we can do with it. And then there's a built-in function, called type, that can be used to find out the type of an object. As we'll see, there are two fundamental kinds of types. Scalar and non-scalar. We'll start with talking about scalar types. And the key thing to think about there is that they are indivisible. Think of them as the atoms of the programming language. Now, I know that some of you have studied physics and know that atoms are in principle divisible, but of course, only at great expense and with serious consequences. And we've seen the same thing here. You can, if you're desperate, chop up these scalar types, but it almost always leads to something bad.",
            "metrics": {
                "relativeDCReadability": 1.0143274399814508,
                "lexicalDiversity": 0.43333333333333335,
                "posComposition": {
                    "IN": 0.153,
                    "DT": 0.087,
                    "NN": 0.113,
                    "VBZ": 0.047,
                    "JJ": 0.107,
                    "WDT": 0.013,
                    "PRP": 0.093,
                    "CC": 0.06,
                    "WP": 0.007,
                    "MD": 0.033,
                    "VB": 0.04,
                    "RB": 0.04,
                    "EX": 0.02,
                    "VBN": 0.027,
                    "TO": 0.02,
                    "RP": 0.007,
                    "VBP": 0.053,
                    "CD": 0.007,
                    "NNS": 0.053,
                    "NNP": 0.013,
                    "VBG": 0.007
                },
                "syllableRate": 1.65,
                "topicScores": [
                    [
                        "type",
                        0.3189208745296541
                    ],
                    [
                        "scalar",
                        0.379894130916353
                    ],
                    [
                        "object",
                        0.42769922679376043
                    ],
                    [
                        "kind",
                        0.5524011426366755
                    ],
                    [
                        "thing",
                        0.5695157550893848
                    ],
                    [
                        "atom",
                        0.5811448073076568
                    ],
                    [
                        "datum",
                        0.7653359029180348
                    ],
                    [
                        "number",
                        0.8278508477956659
                    ],
                    [
                        "particular",
                        0.865066006173666
                    ],
                    [
                        "function",
                        0.8725786157403137
                    ],
                    [
                        "indivisible",
                        0.8909470315592596
                    ],
                    [
                        "language",
                        0.8947537923401777
                    ],
                    [
                        "consequence",
                        0.8978418442180586
                    ],
                    [
                        "bad",
                        0.9025878182153193
                    ],
                    [
                        "non",
                        0.9051897317741321
                    ],
                    [
                        "fundamental",
                        0.9083942719831307
                    ],
                    [
                        "programming",
                        0.9173829509077123
                    ],
                    [
                        "principle",
                        0.9198665001287001
                    ],
                    [
                        "course",
                        0.9198665001287001
                    ],
                    [
                        "key",
                        0.9233503211409023
                    ],
                    [
                        "desperate",
                        0.9236762523570692
                    ],
                    [
                        "physics",
                        0.9283611832254651
                    ],
                    [
                        "great",
                        0.9283611832254651
                    ],
                    [
                        "expense",
                        0.9283611832254651
                    ],
                    [
                        "scalar type",
                        2.369976703288303
                    ],
                    [
                        "fundamental kind",
                        3.885939370494262
                    ],
                    [
                        "programming language",
                        4.581349899086687
                    ],
                    [
                        "key thing",
                        5.005011690529311
                    ],
                    [
                        "principle divisible",
                        5.500022473071454
                    ],
                    [
                        "great expense",
                        6.238743950546194
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "type",
                        0.3189208745296541
                    ],
                    [
                        "object",
                        0.42769922679376043
                    ],
                    [
                        "kind",
                        0.5524011426366755
                    ],
                    [
                        "thing",
                        0.5695157550893848
                    ],
                    [
                        "number",
                        0.8278508477956659
                    ],
                    [
                        "language",
                        0.8947537923401777
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-360": {
            "id": "SLvTCHhu5SE-360",
            "heat": 0.333,
            "start": 360.0,
            "text": " All right. Well let's look at some. Well, the first one you'll see is used to represent integers, and that's called int. For every type, or every built-in type, there's the notion of a literal, which is how we type it. So for example, we can type 3, and that will now tell us it is the value 3. You'll note it's typed it in blue. And I can ask what the type of 3 is. So you'll notice as I type things into the shell, it's using colors to give me a hint. So it's this fuchsia color for the word type, telling me that's a built-in function. And now if I ask it, it will tell me that the type of the literal 3 is \"int\". So it's an integer. And I can use other sorts of things. All right. There's also a type float. So those correspond to the real numbers. So I can do something like that. And we'll talk about this in a second, but you'll notice if I do type of 3.2, it tells me it's a float. And for that matter, I can do type of 3.0, and it will tell",
            "metrics": {
                "relativeDCReadability": 1.0032594207670589,
                "lexicalDiversity": 0.44651162790697674,
                "posComposition": {
                    "DT": 0.13,
                    "RB": 0.028,
                    "NNP": 0.019,
                    "VB": 0.074,
                    "POS": 0.005,
                    "NN": 0.112,
                    "IN": 0.112,
                    "JJ": 0.047,
                    "CD": 0.033,
                    "PRP": 0.144,
                    "MD": 0.06,
                    "VBZ": 0.07,
                    "VBN": 0.009,
                    "TO": 0.014,
                    "NNS": 0.033,
                    "CC": 0.047,
                    "EX": 0.009,
                    "WDT": 0.005,
                    "WRB": 0.005,
                    "VBP": 0.019,
                    "VBD": 0.005,
                    "WP": 0.005,
                    "VBG": 0.009,
                    "``": 0.005,
                    "''": 0.005
                },
                "syllableRate": 2.108,
                "topicScores": [
                    [
                        "type",
                        0.24546916517092734
                    ],
                    [
                        "int",
                        0.5286346947106182
                    ],
                    [
                        "float",
                        0.5546191761947764
                    ],
                    [
                        "integer",
                        0.5655284128837842
                    ],
                    [
                        "literal",
                        0.5677282153327503
                    ],
                    [
                        "thing",
                        0.5751913621240008
                    ],
                    [
                        "color",
                        0.5800067890287525
                    ],
                    [
                        "blue",
                        0.9069291429582249
                    ],
                    [
                        "function",
                        0.9085510639137696
                    ],
                    [
                        "hint",
                        0.9141530003080728
                    ],
                    [
                        "example",
                        0.9172085132705259
                    ],
                    [
                        "value",
                        0.9172085132705259
                    ],
                    [
                        "notion",
                        0.917630662046075
                    ],
                    [
                        "number",
                        0.9258602847338845
                    ],
                    [
                        "shell",
                        0.9279790210470208
                    ],
                    [
                        "word",
                        0.9301682885953881
                    ],
                    [
                        "fuchsia",
                        0.9357268012175588
                    ],
                    [
                        "real",
                        0.9379288243665019
                    ],
                    [
                        "second",
                        0.9394812737753832
                    ],
                    [
                        "sort",
                        0.9400576948818251
                    ],
                    [
                        "matter",
                        0.9401526067770481
                    ],
                    [
                        "type float",
                        3.962291588337471
                    ],
                    [
                        "word type",
                        5.4479788598380186
                    ],
                    [
                        "fuchsia color",
                        6.153248024833717
                    ],
                    [
                        "real number",
                        6.598267349995983
                    ]
                ],
                "topTopicSimilarity": 0.24,
                "sharedTopicScores": [
                    [
                        "type",
                        0.24546916517092734
                    ],
                    [
                        "float",
                        0.5546191761947764
                    ],
                    [
                        "thing",
                        0.5751913621240008
                    ],
                    [
                        "example",
                        0.9172085132705259
                    ],
                    [
                        "value",
                        0.9172085132705259
                    ],
                    [
                        "number",
                        0.9258602847338845
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-450": {
            "id": "SLvTCHhu5SE-450",
            "heat": 0.284,
            "start": 450.0,
            "text": " me it's a float. So there's a difference between 3 and 3.0. One is an int, and one is a float. Now you'll notice something kind of weird here. When the interpreter printed back the value of the literal 3.2, it gave me 3.2 and a bunch of zeroes, and then this funny 2 standing at the end. In a few lectures, I'll explain why it does this, but for now, you should just take this as a warning that floats are not the same thing as real numbers. You learned about reals, presumably in middle school or high school. Floats are a computer scientist's approximation to reals, but they're not quite the same. The good news is almost all the time, you can pretend that a floating point number is a real, but as we'll see in a few lectures, every once in a while it can really sit up and bite you, if you believe that. But for now, we'll just pretend that they're reals. There's Booleans, a nice scalar type of which there are only two values. One of them is true, and what do you think the other",
            "metrics": {
                "relativeDCReadability": 0.8364322760121135,
                "lexicalDiversity": 0.4158415841584158,
                "posComposition": {
                    "PRP": 0.094,
                    "VBZ": 0.045,
                    "DT": 0.129,
                    "NN": 0.119,
                    "IN": 0.119,
                    "EX": 0.015,
                    "CD": 0.045,
                    "CC": 0.054,
                    "RB": 0.074,
                    "MD": 0.035,
                    "VB": 0.045,
                    "WRB": 0.01,
                    "VBD": 0.015,
                    "RP": 0.01,
                    "JJ": 0.079,
                    "NNS": 0.05,
                    "VBP": 0.035,
                    "POS": 0.005,
                    "TO": 0.005,
                    "PDT": 0.005,
                    "NNPS": 0.005,
                    "WDT": 0.005,
                    "WP": 0.005
                },
                "syllableRate": 2.075,
                "topicScores": [
                    [
                        "float",
                        0.3093441851700078
                    ],
                    [
                        "real",
                        0.3313515259105772
                    ],
                    [
                        "lecture",
                        0.5368259112731933
                    ],
                    [
                        "number",
                        0.5555182558678923
                    ],
                    [
                        "value",
                        0.556767016363627
                    ],
                    [
                        "school",
                        0.5630354798592028
                    ],
                    [
                        "Booleans",
                        0.6698857118425098
                    ],
                    [
                        "difference",
                        0.8594871100815736
                    ],
                    [
                        "end",
                        0.8700026288405711
                    ],
                    [
                        "int",
                        0.8708467578302821
                    ],
                    [
                        "weird",
                        0.8837438839588455
                    ],
                    [
                        "literal",
                        0.892035459127407
                    ],
                    [
                        "zero",
                        0.892035459127407
                    ],
                    [
                        "interpreter",
                        0.9010800680372449
                    ],
                    [
                        "bunch",
                        0.9010800680372449
                    ],
                    [
                        "funny",
                        0.9010800680372449
                    ],
                    [
                        "high",
                        0.9022916014994676
                    ],
                    [
                        "warning",
                        0.9064972668873668
                    ],
                    [
                        "thing",
                        0.9064972668873668
                    ],
                    [
                        "good",
                        0.9085427874343955
                    ],
                    [
                        "time",
                        0.9085427874343955
                    ],
                    [
                        "middle",
                        0.910563157925028
                    ],
                    [
                        "nice",
                        0.9128398869526967
                    ],
                    [
                        "computer",
                        0.9137514572396229
                    ],
                    [
                        "scientist",
                        0.9137514572396229
                    ],
                    [
                        "approximation",
                        0.9137514572396229
                    ],
                    [
                        "true",
                        0.9145381143301154
                    ],
                    [
                        "news",
                        0.9163342166922722
                    ],
                    [
                        "point",
                        0.9163342166922722
                    ],
                    [
                        "scalar",
                        0.9202973519654224
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "float",
                        0.3093441851700078
                    ],
                    [
                        "number",
                        0.5555182558678923
                    ],
                    [
                        "value",
                        0.556767016363627
                    ],
                    [
                        "thing",
                        0.9064972668873668
                    ],
                    [
                        "time",
                        0.9085427874343955
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-540": {
            "id": "SLvTCHhu5SE-540",
            "heat": 0.249,
            "start": 540.0,
            "text": " Boolean value is? AUDIENCE: False? PROFESSOR: Thank you. So somebody said false. I have no idea who, but whoever it is, there's probably some candy to be had. Oh, I managed to find the one place in the room where there was an empty. I'm hoping that people will now scramble and fight for it, like a foul ball at a baseball game. No, people are too polite thus far. All right. So we have true and false as the type Booleans. And then we can do operations on them. So for example, true and false is false, as you might guess. Finally, there's this funny value, none, which doesn't print anything when I type it. And if I look at the type of none, we'll see it's the none type. Not very interesting. Fundamentally, as we'll see, that gets used when you want to put in something temporary. When you don't yet know what its value is going to be, you know it's going to eventually have one, so maybe you start out calling it none. And then you can check, and we'll see how we might do that. So those are the fundamental scalar types, the indivisible ones. Interestingly enough, Python does not have what is a common",
            "metrics": {
                "relativeDCReadability": 0.8759313202338804,
                "lexicalDiversity": 0.4590909090909091,
                "posComposition": {
                    "NNP": 0.05,
                    "NN": 0.095,
                    "VBZ": 0.055,
                    "PRP": 0.114,
                    "VBP": 0.055,
                    "VBD": 0.014,
                    "JJ": 0.073,
                    "DT": 0.073,
                    "WP": 0.018,
                    "CC": 0.036,
                    "EX": 0.014,
                    "RB": 0.095,
                    "TO": 0.023,
                    "VB": 0.077,
                    "VBN": 0.009,
                    "CD": 0.009,
                    "IN": 0.073,
                    "WRB": 0.023,
                    "VBG": 0.018,
                    "NNS": 0.023,
                    "MD": 0.036,
                    "NNPS": 0.005,
                    "WDT": 0.005,
                    "PRP$": 0.005,
                    "RP": 0.005
                },
                "syllableRate": 2.433,
                "topicScores": [
                    [
                        "type",
                        0.3445102447862726
                    ],
                    [
                        "false",
                        0.376102764022779
                    ],
                    [
                        "boolean",
                        0.38869801491124917
                    ],
                    [
                        "value",
                        0.44060599918774984
                    ],
                    [
                        "AUDIENCE",
                        0.4433297587257021
                    ],
                    [
                        "boolean value",
                        0.5209711991494173
                    ],
                    [
                        "PROFESSOR",
                        0.5530958776468781
                    ],
                    [
                        "true",
                        0.559802421289496
                    ],
                    [
                        "people",
                        0.5674951013340427
                    ],
                    [
                        "Python",
                        0.6986533145446916
                    ],
                    [
                        "game",
                        0.9021643488450031
                    ],
                    [
                        "idea",
                        0.9100890835234876
                    ],
                    [
                        "common",
                        0.9138589595591814
                    ],
                    [
                        "interesting",
                        0.916440271662361
                    ],
                    [
                        "candy",
                        0.9168152814456039
                    ],
                    [
                        "baseball",
                        0.917090098201199
                    ],
                    [
                        "temporary",
                        0.9174225132737038
                    ],
                    [
                        "place",
                        0.9204718643579054
                    ],
                    [
                        "room",
                        0.9204718643579054
                    ],
                    [
                        "foul",
                        0.9233366717790957
                    ],
                    [
                        "polite",
                        0.9256557503496364
                    ],
                    [
                        "example",
                        0.9262302438257579
                    ],
                    [
                        "indivisible",
                        0.9264852622591468
                    ],
                    [
                        "funny",
                        0.9273925602878417
                    ],
                    [
                        "operation",
                        0.9306149375116995
                    ],
                    [
                        "scalar",
                        0.9323156066431418
                    ],
                    [
                        "fundamental",
                        0.9374932491897308
                    ],
                    [
                        "type Booleans",
                        1.343157780657871
                    ],
                    [
                        "funny value",
                        4.471341018976518
                    ],
                    [
                        "indivisible one",
                        4.707490382202056
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "type",
                        0.3445102447862726
                    ],
                    [
                        "value",
                        0.44060599918774984
                    ],
                    [
                        "PROFESSOR",
                        0.5530958776468781
                    ],
                    [
                        "Python",
                        0.6986533145446916
                    ],
                    [
                        "example",
                        0.9262302438257579
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-630": {
            "id": "SLvTCHhu5SE-630",
            "heat": 0.294,
            "start": 630.0,
            "text": " scalar type in every other language called char, short for character. Instead, what it has is strings that can be used to represent strings of characters. So for example, I can write the string \"a\", and if I ask for the type of it, it tells me it's an str, short for string. Happens to be a string of length 1, which we might usually think of as a character, but there is no type char. So it's not a problem. We just have to remember it. Literals of type string can be written with single quotes or with double quotes. There's no difference. Just convenient that you can do it either way, and we can build strings of things. It's worth noting that the type of, say, the string 123 is str, whereas the type of 123 without the quotes is int.",
            "metrics": {
                "relativeDCReadability": 1.0517952098370793,
                "lexicalDiversity": 0.46308724832214765,
                "posComposition": {
                    "JJ": 0.054,
                    "NN": 0.141,
                    "IN": 0.148,
                    "DT": 0.101,
                    "VBN": 0.027,
                    "RB": 0.034,
                    "WP": 0.007,
                    "PRP": 0.101,
                    "VBZ": 0.074,
                    "NNS": 0.054,
                    "WDT": 0.013,
                    "MD": 0.04,
                    "VB": 0.06,
                    "TO": 0.02,
                    "NNP": 0.02,
                    "``": 0.007,
                    "''": 0.007,
                    "CC": 0.027,
                    "VBP": 0.02,
                    "VBG": 0.013,
                    "CD": 0.02,
                    "EX": 0.013
                },
                "syllableRate": 1.542,
                "topicScores": [
                    [
                        "string",
                        0.2878658490195573
                    ],
                    [
                        "type",
                        0.3232168319530725
                    ],
                    [
                        "character",
                        0.42839687410336397
                    ],
                    [
                        "quote",
                        0.45650878307919074
                    ],
                    [
                        "short",
                        0.5376701608717736
                    ],
                    [
                        "scalar",
                        0.8355173535734511
                    ],
                    [
                        "language",
                        0.8797314106937324
                    ],
                    [
                        "problem",
                        0.8895160013785027
                    ],
                    [
                        "literal",
                        0.8979393141986071
                    ],
                    [
                        "example",
                        0.8993920453273017
                    ],
                    [
                        "difference",
                        0.9009442464733146
                    ],
                    [
                        "thing",
                        0.9034426236184281
                    ],
                    [
                        "int",
                        0.9055612518434647
                    ],
                    [
                        "length",
                        0.9066854122437947
                    ],
                    [
                        "double",
                        0.9187035527348666
                    ],
                    [
                        "convenient",
                        0.923182998031719
                    ],
                    [
                        "way",
                        0.923182998031719
                    ],
                    [
                        "single",
                        0.9268431108302158
                    ],
                    [
                        "worth",
                        0.932468837590329
                    ],
                    [
                        "scalar type",
                        3.1345444014388786
                    ],
                    [
                        "type char",
                        3.668589930266154
                    ],
                    [
                        "type string",
                        4.8139591001466915
                    ],
                    [
                        "double quote",
                        5.203184632997422
                    ],
                    [
                        "single quote",
                        5.502967097063638
                    ]
                ],
                "topTopicSimilarity": 0.25,
                "sharedTopicScores": [
                    [
                        "string",
                        0.2878658490195573
                    ],
                    [
                        "type",
                        0.3232168319530725
                    ],
                    [
                        "language",
                        0.8797314106937324
                    ],
                    [
                        "example",
                        0.8993920453273017
                    ],
                    [
                        "thing",
                        0.9034426236184281
                    ],
                    [
                        "way",
                        0.923182998031719
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-720": {
            "id": "SLvTCHhu5SE-720",
            "heat": 0.347,
            "start": 720.0,
            "text": " So we have to be a little bit careful sometimes as to whether we're dealing with strings or ints when we look at these literals. You can only get so far with literals, things you can type. So of course, Python has in it something called an expression. Again, this shouldn't surprise anybody. And an expression is a sequence of operands and operators. The operands are objects. So for example, we can write the expression 3 plus 2. And when we type an expression into IDLE, it automatically evaluates it and prints the value of the expression. In this case, of course it's 5. One thing to be a little careful about is if I type the expression 3/2, slash is the divide operator, I get 1.",
            "metrics": {
                "relativeDCReadability": 1.1073729811244042,
                "lexicalDiversity": 0.46153846153846156,
                "posComposition": {
                    "IN": 0.123,
                    "PRP": 0.1,
                    "VBP": 0.054,
                    "TO": 0.023,
                    "VB": 0.046,
                    "DT": 0.115,
                    "JJ": 0.031,
                    "NN": 0.146,
                    "RB": 0.062,
                    "VBG": 0.008,
                    "NNS": 0.069,
                    "CC": 0.046,
                    "WRB": 0.015,
                    "MD": 0.031,
                    "NNP": 0.023,
                    "VBZ": 0.054,
                    "VBD": 0.008,
                    "CD": 0.046
                },
                "syllableRate": 1.558,
                "topicScores": [
                    [
                        "expression",
                        0.3194147023405815
                    ],
                    [
                        "literal",
                        0.5080931542662879
                    ],
                    [
                        "little",
                        0.5448131747299942
                    ],
                    [
                        "course",
                        0.5535005798249412
                    ],
                    [
                        "operator",
                        0.5625936945938713
                    ],
                    [
                        "thing",
                        0.5645669296658268
                    ],
                    [
                        "careful",
                        0.5657608473761391
                    ],
                    [
                        "operand",
                        0.5685238904427861
                    ],
                    [
                        "Python",
                        0.5935366926677473
                    ],
                    [
                        "IDLE",
                        0.6754378477020446
                    ],
                    [
                        "bit",
                        0.8203062390053806
                    ],
                    [
                        "string",
                        0.8203062390053806
                    ],
                    [
                        "int",
                        0.8203062390053806
                    ],
                    [
                        "object",
                        0.8778797350412961
                    ],
                    [
                        "example",
                        0.9095076565313458
                    ],
                    [
                        "sequence",
                        0.910964439568157
                    ],
                    [
                        "case",
                        0.9153404909255803
                    ],
                    [
                        "slash",
                        0.9175090127672418
                    ],
                    [
                        "divide",
                        0.9175090127672418
                    ],
                    [
                        "value",
                        0.9224785962223181
                    ],
                    [
                        "little bit",
                        2.4286659086900215
                    ],
                    [
                        "bit careful",
                        2.7818133325579253
                    ],
                    [
                        "little careful",
                        3.4309826960131233
                    ],
                    [
                        "divide operator",
                        4.498539614968157
                    ],
                    [
                        "little bit careful",
                        12.187089047907604
                    ]
                ],
                "topTopicSimilarity": 0.32,
                "sharedTopicScores": [
                    [
                        "expression",
                        0.3194147023405815
                    ],
                    [
                        "thing",
                        0.5645669296658268
                    ],
                    [
                        "Python",
                        0.5935366926677473
                    ],
                    [
                        "IDLE",
                        0.6754378477020446
                    ],
                    [
                        "string",
                        0.8203062390053806
                    ],
                    [
                        "object",
                        0.8778797350412961
                    ],
                    [
                        "example",
                        0.9095076565313458
                    ],
                    [
                        "value",
                        0.9224785962223181
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-810": {
            "id": "SLvTCHhu5SE-810",
            "heat": 0.368,
            "start": 810.0,
            "text": " Whereas if I type the expression 3.0 divided by 2.0, I get 1.5. So dividing two integers in Python 2.x gives you essentially a floor operator. In 3.0, by the way, integer division is not allowed. It always converts it to floats and does a floating point division. But for many of you this will be something that will trip you up as a bug. If you want to get real division, write floating point numbers. Otherwise, unpleasant things may happen. Some other interesting things I can type, just as I could type 3 plus 2, I can type a plus b. What do you think I'll get there? It does concatenation. So what we see here is that the operator plus is overloaded. So overloaded operators have a meaning that depends upon the",
            "metrics": {
                "relativeDCReadability": 1.139288465969011,
                "lexicalDiversity": 0.5111111111111111,
                "posComposition": {
                    "IN": 0.096,
                    "PRP": 0.111,
                    "VBP": 0.059,
                    "DT": 0.081,
                    "NN": 0.133,
                    "CD": 0.059,
                    "VBN": 0.022,
                    "RB": 0.059,
                    "JJ": 0.059,
                    "NNS": 0.044,
                    "NNP": 0.015,
                    "VBZ": 0.059,
                    "TO": 0.015,
                    "CC": 0.03,
                    "MD": 0.052,
                    "VB": 0.052,
                    "WDT": 0.015,
                    "RP": 0.007,
                    "VBG": 0.007,
                    "WP": 0.015,
                    "EX": 0.007
                },
                "syllableRate": 1.625,
                "topicScores": [
                    [
                        "division",
                        0.44352557175423735
                    ],
                    [
                        "plus",
                        0.458956198042221
                    ],
                    [
                        "operator",
                        0.4600236528009125
                    ],
                    [
                        "integer",
                        0.5525098782113382
                    ],
                    [
                        "point",
                        0.553870342925379
                    ],
                    [
                        "Python",
                        0.5743805662695891
                    ],
                    [
                        "thing",
                        0.5770668182005496
                    ],
                    [
                        "expression",
                        0.8249361742721657
                    ],
                    [
                        "floor",
                        0.8606821481104232
                    ],
                    [
                        "bug",
                        0.8711216444361228
                    ],
                    [
                        "number",
                        0.8779572631747171
                    ],
                    [
                        "way",
                        0.8824644197340239
                    ],
                    [
                        "b.",
                        0.8871500155545795
                    ],
                    [
                        "concatenation",
                        0.8931658863971346
                    ],
                    [
                        "real",
                        0.9073355969105866
                    ],
                    [
                        "unpleasant",
                        0.9113685980875905
                    ],
                    [
                        "overloaded",
                        0.9225750481523359
                    ],
                    [
                        "interesting",
                        0.9247175870687405
                    ],
                    [
                        "meaning",
                        0.9318744243324617
                    ],
                    [
                        "point number",
                        3.3616093867772396
                    ],
                    [
                        "integer division",
                        3.480232230310698
                    ],
                    [
                        "point division",
                        3.5189574339526435
                    ],
                    [
                        "floor operator",
                        3.804649932869346
                    ],
                    [
                        "real division",
                        4.124344231394394
                    ],
                    [
                        "plus b.",
                        4.385783582818057
                    ],
                    [
                        "unpleasant thing",
                        5.008329698507933
                    ],
                    [
                        "interesting thing",
                        5.483981317866755
                    ],
                    [
                        "overloaded operator",
                        5.614311623970975
                    ]
                ],
                "topTopicSimilarity": 0.17857142857142858,
                "sharedTopicScores": [
                    [
                        "Python",
                        0.5743805662695891
                    ],
                    [
                        "thing",
                        0.5770668182005496
                    ],
                    [
                        "expression",
                        0.8249361742721657
                    ],
                    [
                        "number",
                        0.8779572631747171
                    ],
                    [
                        "way",
                        0.8824644197340239
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-900": {
            "id": "SLvTCHhu5SE-900",
            "heat": 0.339,
            "start": 900.0,
            "text": " type of the operands. And of course, we've already seen that with the slash operator, which means one thing for ints and another things for floats. And of course, we see the same thing with plus. What do you think will happen here? 3 blank 3? Any guesses? I get a syntax error. Remember, we talked about that on Tuesday. It's not a valid Python expression, so we get an error. How about this one? That is syntactically valid. It's got operand, operator, operand. What do you think it will do when I hit Return here? Somebody? AUDIENCE: A static semantics error? PROFESSOR: Pardon? AUDIENCE: A static semantics error? PROFESSOR: A static semantics error. And because of these-- Wait, I can't see who said that. Raise your hand? Oh, come on.",
            "metrics": {
                "relativeDCReadability": 1.1919947765188839,
                "lexicalDiversity": 0.5367647058823529,
                "posComposition": {
                    "NN": 0.14,
                    "IN": 0.118,
                    "DT": 0.066,
                    "NNS": 0.059,
                    "CC": 0.037,
                    "PRP": 0.088,
                    "VBP": 0.059,
                    "RB": 0.044,
                    "VBN": 0.007,
                    "WDT": 0.015,
                    "VBZ": 0.029,
                    "CD": 0.022,
                    "JJ": 0.051,
                    "WP": 0.022,
                    "VB": 0.037,
                    "MD": 0.022,
                    "NNPS": 0.007,
                    "NNP": 0.11,
                    "VBD": 0.029,
                    "RP": 0.007,
                    "WRB": 0.015,
                    ":": 0.007,
                    "PRP$": 0.007
                },
                "syllableRate": 1.642,
                "topicScores": [
                    [
                        "error",
                        0.3236462808453748
                    ],
                    [
                        "audience",
                        0.3406107037333517
                    ],
                    [
                        "PROFESSOR",
                        0.39097087101511796
                    ],
                    [
                        "static",
                        0.4258943040074556
                    ],
                    [
                        "semantic",
                        0.4258943040074556
                    ],
                    [
                        "operand",
                        0.45660501636157214
                    ],
                    [
                        "thing",
                        0.4568254617227924
                    ],
                    [
                        "course",
                        0.5292730473688964
                    ],
                    [
                        "operator",
                        0.5776983808518638
                    ],
                    [
                        "valid",
                        0.58599304359416
                    ],
                    [
                        "Tuesday",
                        0.6536942994301711
                    ],
                    [
                        "Pardon",
                        0.6710763067857651
                    ],
                    [
                        "Python",
                        0.6939938484885602
                    ],
                    [
                        "Return",
                        0.7111910947694158
                    ],
                    [
                        "Wait",
                        0.7317318517433954
                    ],
                    [
                        "type",
                        0.8599545362122836
                    ],
                    [
                        "float",
                        0.8818349509549608
                    ],
                    [
                        "guess",
                        0.8980909348491407
                    ],
                    [
                        "slash",
                        0.906952952545367
                    ],
                    [
                        "int",
                        0.9166925814666761
                    ],
                    [
                        "blank",
                        0.9178478713055206
                    ],
                    [
                        "hand",
                        0.9320216581316537
                    ],
                    [
                        "syntax",
                        0.9328467770179504
                    ],
                    [
                        "expression",
                        0.9366007074111153
                    ],
                    [
                        "these--",
                        0.9467165292630143
                    ],
                    [
                        "semantic error",
                        1.2398436083043214
                    ],
                    [
                        "static semantic",
                        1.321784531201978
                    ],
                    [
                        "valid Python",
                        1.8134580881472995
                    ],
                    [
                        "Python expression",
                        1.8571030979683691
                    ],
                    [
                        "these-- Wait",
                        2.254600628134989
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "error",
                        0.3236462808453748
                    ],
                    [
                        "audience",
                        0.3406107037333517
                    ],
                    [
                        "PROFESSOR",
                        0.39097087101511796
                    ],
                    [
                        "thing",
                        0.4568254617227924
                    ],
                    [
                        "Python",
                        0.6939938484885602
                    ],
                    [
                        "type",
                        0.8599545362122836
                    ],
                    [
                        "float",
                        0.8818349509549608
                    ],
                    [
                        "expression",
                        0.9366007074111153
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-990": {
            "id": "SLvTCHhu5SE-990",
            "heat": 0.329,
            "start": 990.0,
            "text": " All the way back there? All right. I have the most chance of carrying with one of these. I'm going to lie. Those of you who are watching OpenCourseWare, it was a perfect throw. OK. So indeed, we get a static semantic error of a particular kind, called the type error, saying you cannot concatenate an str and an int. Type errors are actually good things. The language does type checking in order to reduce the probability that a programmer will write a program with a meaning that will surprise its author. So it looks at it and says, somebody might have a weird guess what this means, but just to be safe, we're going to disallow it rather than-- it could, of course, make up some funny meaning if it wanted to. But it doesn't. And I think you'll find type checking saves you from a lot of careless programming errors as you go on. All right, let's continue. Let's look at some other things. I can write this.",
            "metrics": {
                "relativeDCReadability": 0.9225026536828991,
                "lexicalDiversity": 0.47752808988764045,
                "posComposition": {
                    "PDT": 0.006,
                    "DT": 0.118,
                    "NN": 0.146,
                    "RB": 0.045,
                    "NNP": 0.034,
                    "PRP": 0.101,
                    "VBP": 0.051,
                    "RBS": 0.006,
                    "IN": 0.101,
                    "VBG": 0.045,
                    "CD": 0.006,
                    "TO": 0.028,
                    "VB": 0.067,
                    "WP": 0.011,
                    "VBD": 0.022,
                    "JJ": 0.056,
                    "MD": 0.039,
                    "CC": 0.028,
                    "NNS": 0.028,
                    "VBZ": 0.028,
                    "WDT": 0.006,
                    "PRP$": 0.006,
                    ":": 0.006,
                    "RP": 0.006,
                    "POS": 0.011
                },
                "syllableRate": 1.967,
                "topicScores": [
                    [
                        "type",
                        0.3763262630716298
                    ],
                    [
                        "error",
                        0.3847445190052394
                    ],
                    [
                        "thing",
                        0.5375174274344988
                    ],
                    [
                        "checking",
                        0.5647478952190457
                    ],
                    [
                        "meaning",
                        0.5700330231466457
                    ],
                    [
                        "way",
                        0.8020140480266343
                    ],
                    [
                        "throw",
                        0.8677186628576229
                    ],
                    [
                        "int",
                        0.8799739753140013
                    ],
                    [
                        "chance",
                        0.8810842264440312
                    ],
                    [
                        "author",
                        0.8874749319300871
                    ],
                    [
                        "opencourseware",
                        0.8912320206541003
                    ],
                    [
                        "perfect",
                        0.8912320206541003
                    ],
                    [
                        "particular",
                        0.9015560631278327
                    ],
                    [
                        "kind",
                        0.9015560631278327
                    ],
                    [
                        "good",
                        0.9050319644468332
                    ],
                    [
                        "language",
                        0.9078495012900675
                    ],
                    [
                        "safe",
                        0.9101910757846613
                    ],
                    [
                        "static",
                        0.9102933167643767
                    ],
                    [
                        "semantic",
                        0.9102933167643767
                    ],
                    [
                        "str",
                        0.9102933167643767
                    ],
                    [
                        "order",
                        0.9160801827456515
                    ],
                    [
                        "probability",
                        0.9160801827456515
                    ],
                    [
                        "programmer",
                        0.9160801827456515
                    ],
                    [
                        "weird",
                        0.9182314502102585
                    ],
                    [
                        "guess",
                        0.9182314502102585
                    ],
                    [
                        "than--",
                        0.9182314502102585
                    ],
                    [
                        "funny",
                        0.9182314502102585
                    ],
                    [
                        "lot",
                        0.9216240320632859
                    ],
                    [
                        "careless",
                        0.9216240320632859
                    ],
                    [
                        "programming",
                        0.9216240320632859
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "type",
                        0.3763262630716298
                    ],
                    [
                        "error",
                        0.3847445190052394
                    ],
                    [
                        "thing",
                        0.5375174274344988
                    ],
                    [
                        "way",
                        0.8020140480266343
                    ],
                    [
                        "kind",
                        0.9015560631278327
                    ],
                    [
                        "language",
                        0.9078495012900675
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-1080": {
            "id": "SLvTCHhu5SE-1080",
            "heat": 0.351,
            "start": 1080.0,
            "text": " Because that's just two strings, and it just concatenates them, the string a and the string 3. Or interestingly, I can do this. So now what we're seeing is that you can take any type name, use it as a conversion function to attempt to convert one type to another. So this has now converted the int 3 to the str \"3\". Similarly, I can do something like this. And here, it's converted the str \"3\" to the int 3. On the other hand, I could do this. And it will tell me it's a static semantic error. It can't convert 0.0 into an int. Similarly, it can't convert 2.1.",
            "metrics": {
                "relativeDCReadability": 1.215727195448304,
                "lexicalDiversity": 0.4666666666666667,
                "posComposition": {
                    "IN": 0.05,
                    "DT": 0.15,
                    "VBZ": 0.05,
                    "RB": 0.1,
                    "CD": 0.075,
                    "NNS": 0.008,
                    "CC": 0.033,
                    "PRP": 0.117,
                    "VBG": 0.017,
                    "NN": 0.125,
                    "NNP": 0.008,
                    "MD": 0.058,
                    "VB": 0.075,
                    "WP": 0.008,
                    "VBP": 0.008,
                    "TO": 0.042,
                    "VBN": 0.017,
                    "``": 0.017,
                    "''": 0.017,
                    "JJ": 0.025
                },
                "syllableRate": 1.3,
                "topicScores": [
                    [
                        "string",
                        0.432173755470577
                    ],
                    [
                        "int",
                        0.4473994581057286
                    ],
                    [
                        "type",
                        0.5808712282038336
                    ],
                    [
                        "error",
                        0.9082141716822465
                    ],
                    [
                        "conversion",
                        0.9198051047068978
                    ],
                    [
                        "function",
                        0.9198051047068978
                    ],
                    [
                        "hand",
                        0.9272367815529876
                    ],
                    [
                        "semantic",
                        0.9294468960418542
                    ],
                    [
                        "static",
                        0.9374560895780656
                    ],
                    [
                        "semantic error",
                        5.415884408072418
                    ],
                    [
                        "conversion function",
                        5.49525391271546
                    ],
                    [
                        "static semantic",
                        6.770952881742496
                    ],
                    [
                        "static semantic error",
                        50.0245853733409
                    ]
                ],
                "topTopicSimilarity": 0.23076923076923078,
                "sharedTopicScores": [
                    [
                        "string",
                        0.432173755470577
                    ],
                    [
                        "type",
                        0.5808712282038336
                    ],
                    [
                        "error",
                        0.9082141716822465
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-1170": {
            "id": "SLvTCHhu5SE-1170",
            "heat": 0.186,
            "start": 1170.0,
            "text": " Or can it? So now I've given it the float 2.1, and I've tried to convert it to int. Not the string 2.1, but the float. And it succeeds. And it succeeded by essentially truncating it. Is this a good thing or a bad thing? To me, it's kind of a bad thing. If I've typed something like that or I've evaluated some expression that happened to work that way, more likely than not, I'm confused. And I would probably have preferred to get a type error, rather than it deciding how to do it. It's one of the things I don't like about Python. It's too generous. It lets me get away with stuff it shouldn't let me get away with. Other languages, for example Java, are much stricter. This is a design decision and it is the way it is, and we have to live with it. AUDIENCE: Professor? Yes? AUDIENCE: Is that the same reason that 3 divided by 2 turned into 1 up top? PROFESSOR: Yeah. Exactly. If it's the same reason that that happens, this will never go that far. [UNINTELLIGIBLE]. Yeah, exactly. It's the same reason. The question was, is it the same reason that 3 divided by 2 doesn't give you the answer you would get",
            "metrics": {
                "relativeDCReadability": 0.9686566549047679,
                "lexicalDiversity": 0.46017699115044247,
                "posComposition": {
                    "CC": 0.044,
                    "MD": 0.022,
                    "PRP": 0.142,
                    "RB": 0.075,
                    "VBP": 0.035,
                    "VBN": 0.031,
                    "DT": 0.102,
                    "NN": 0.106,
                    "CD": 0.035,
                    "TO": 0.031,
                    "VB": 0.062,
                    "VBZ": 0.066,
                    "VBD": 0.022,
                    "IN": 0.093,
                    "VBG": 0.009,
                    "JJ": 0.058,
                    "WDT": 0.004,
                    "RBR": 0.004,
                    "WRB": 0.004,
                    "NNS": 0.009,
                    "NNP": 0.044
                },
                "syllableRate": 2.492,
                "topicScores": [
                    [
                        "reason",
                        0.3398873018129052
                    ],
                    [
                        "thing",
                        0.3648369244896833
                    ],
                    [
                        "audience",
                        0.37590235724038706
                    ],
                    [
                        "float",
                        0.5090596540597332
                    ],
                    [
                        "bad",
                        0.5357447429502332
                    ],
                    [
                        "type",
                        0.5641006632659025
                    ],
                    [
                        "way",
                        0.5680988421142834
                    ],
                    [
                        "PROFESSOR",
                        0.6262524918723484
                    ],
                    [
                        "Python",
                        0.635222601547959
                    ],
                    [
                        "Java",
                        0.6731117395770563
                    ],
                    [
                        "string",
                        0.8816721422047805
                    ],
                    [
                        "confused",
                        0.8992226465424115
                    ],
                    [
                        "generous",
                        0.9067586962860814
                    ],
                    [
                        "strict",
                        0.9101395302314348
                    ],
                    [
                        "good",
                        0.9133748081054288
                    ],
                    [
                        "likely",
                        0.9139336728343027
                    ],
                    [
                        "error",
                        0.9165114743008803
                    ],
                    [
                        "language",
                        0.9171503054265778
                    ],
                    [
                        "example",
                        0.9171503054265778
                    ],
                    [
                        "expression",
                        0.9201424259132092
                    ],
                    [
                        "question",
                        0.9268242705041402
                    ],
                    [
                        "stuff",
                        0.9277002013382606
                    ],
                    [
                        "design",
                        0.9300945140263794
                    ],
                    [
                        "decision",
                        0.9300945140263794
                    ],
                    [
                        "answer",
                        0.9373600020031722
                    ],
                    [
                        "example Java",
                        1.6133176171096664
                    ],
                    [
                        "bad thing",
                        1.6169625646030197
                    ],
                    [
                        "good thing",
                        3.4197474895537563
                    ],
                    [
                        "type error",
                        4.538113899867671
                    ],
                    [
                        "design decision",
                        6.411569141937879
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "thing",
                        0.3648369244896833
                    ],
                    [
                        "audience",
                        0.37590235724038706
                    ],
                    [
                        "float",
                        0.5090596540597332
                    ],
                    [
                        "type",
                        0.5641006632659025
                    ],
                    [
                        "way",
                        0.5680988421142834
                    ],
                    [
                        "PROFESSOR",
                        0.6262524918723484
                    ],
                    [
                        "Python",
                        0.635222601547959
                    ],
                    [
                        "string",
                        0.8816721422047805
                    ],
                    [
                        "error",
                        0.9165114743008803
                    ],
                    [
                        "language",
                        0.9171503054265778
                    ],
                    [
                        "example",
                        0.9171503054265778
                    ],
                    [
                        "expression",
                        0.9201424259132092
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-1260": {
            "id": "SLvTCHhu5SE-1260",
            "heat": 0.1,
            "start": 1260.0,
            "text": " with floating point. And it's because Python has tried to help you. Again, Python 3.0 is a little stricter about these things. We'll talk much more about this during the term. This is close to the last time you'll see me typing things directly into IDLE. For the most part, as you write programs, you'll use the text editor to produce them and then go to the shell to run them. But you want to-- obviously, if I had a 100 line program, I wouldn't want to sit here and retype it every time I needed to change it. So instead, I use the editor in IDLE to produce the programs, and then I can run them. And that's what I wanted to start doing. I should probably mention that what most people call a program, some Python programmers call a script. Think of those two things as synonyms. But you will see people use both of them. I will typically call them a program. All right. Let's look at an example. So the first thing to say is that things look a little bit different when they're executed from a script than",
            "metrics": {
                "relativeDCReadability": 0.9824947587719713,
                "lexicalDiversity": 0.47029702970297027,
                "posComposition": {
                    "IN": 0.089,
                    "VBG": 0.015,
                    "NN": 0.104,
                    "CC": 0.035,
                    "PRP": 0.124,
                    "VBZ": 0.03,
                    "NNP": 0.035,
                    "VBN": 0.01,
                    "TO": 0.054,
                    "VB": 0.089,
                    "VBP": 0.045,
                    "JJ": 0.035,
                    "CD": 0.015,
                    "DT": 0.124,
                    "NNS": 0.045,
                    "MD": 0.04,
                    "RB": 0.059,
                    "JJR": 0.005,
                    "JJS": 0.01,
                    ":": 0.005,
                    "VBD": 0.015,
                    "WP": 0.01,
                    "POS": 0.005,
                    "WRB": 0.005
                },
                "syllableRate": 2.158,
                "topicScores": [
                    [
                        "Python",
                        0.30624736904819316
                    ],
                    [
                        "program",
                        0.33979474073182825
                    ],
                    [
                        "thing",
                        0.35260747419551514
                    ],
                    [
                        "IDLE",
                        0.39386871819782615
                    ],
                    [
                        "script",
                        0.553799333367583
                    ],
                    [
                        "editor",
                        0.559296050686757
                    ],
                    [
                        "time",
                        0.5633442197502379
                    ],
                    [
                        "little",
                        0.5646798619935685
                    ],
                    [
                        "people",
                        0.5731911647750797
                    ],
                    [
                        "point",
                        0.756457613614111
                    ],
                    [
                        "term",
                        0.8649548880257844
                    ],
                    [
                        "strict",
                        0.8854885374538012
                    ],
                    [
                        "synonym",
                        0.8982116901892215
                    ],
                    [
                        "close",
                        0.9045384462046658
                    ],
                    [
                        "example",
                        0.9047180202884102
                    ],
                    [
                        "to--",
                        0.905712054949616
                    ],
                    [
                        "line",
                        0.905712054949616
                    ],
                    [
                        "text",
                        0.9097852139840813
                    ],
                    [
                        "shell",
                        0.9097852139840813
                    ],
                    [
                        "programmer",
                        0.9213826933693027
                    ],
                    [
                        "bit",
                        0.9291148136479834
                    ],
                    [
                        "different",
                        0.9291148136479834
                    ],
                    [
                        "Python programmer",
                        1.2953787560982764
                    ],
                    [
                        "little strict",
                        3.8194875104850645
                    ],
                    [
                        "line program",
                        3.8908895840469735
                    ],
                    [
                        "text editor",
                        4.167722922275703
                    ],
                    [
                        "little bit",
                        4.936635409920159
                    ],
                    [
                        "bit different",
                        6.312846181908951
                    ],
                    [
                        "little bit different",
                        40.974454690499215
                    ]
                ],
                "topTopicSimilarity": 0.2413793103448276,
                "sharedTopicScores": [
                    [
                        "Python",
                        0.30624736904819316
                    ],
                    [
                        "program",
                        0.33979474073182825
                    ],
                    [
                        "thing",
                        0.35260747419551514
                    ],
                    [
                        "IDLE",
                        0.39386871819782615
                    ],
                    [
                        "time",
                        0.5633442197502379
                    ],
                    [
                        "example",
                        0.9047180202884102
                    ],
                    [
                        "line",
                        0.905712054949616
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-1350": {
            "id": "SLvTCHhu5SE-1350",
            "heat": 0.1,
            "start": 1350.0,
            "text": " when you execute them directly in the interpreter. So I happen to have a script here. If a line in a script starts with a sharp sign or a number sign, that makes it a comment. So it's not executed. So I've started here just by commenting out everything. But now-- whoops-- what happens if I just put the number 3 here? We saw when I typed it into IDLE, it echoed it in some sense and gave me what it was. Or just to be clear, I'm going to put in the expression type of 3. I'll save it, and then I'll hit F5 to run it. And it does nothing. Right? You saw it move. It didn't print anything. So when you type an expression into the shell, it prints the value. But when it executes a script with an expression, it evaluates the expression but does not display it on the screen. Well, so what do we do about that? There is something called a print command. So I can do this, Print type of 3, and now if I run it, it",
            "metrics": {
                "relativeDCReadability": 0.9480131092296238,
                "lexicalDiversity": 0.38144329896907214,
                "posComposition": {
                    "WRB": 0.021,
                    "PRP": 0.17,
                    "VBP": 0.036,
                    "RB": 0.077,
                    "IN": 0.098,
                    "DT": 0.103,
                    "NN": 0.134,
                    "NNP": 0.036,
                    "TO": 0.021,
                    "VB": 0.057,
                    "VBZ": 0.052,
                    "JJ": 0.01,
                    "CC": 0.041,
                    "WDT": 0.005,
                    "VBN": 0.015,
                    "VBG": 0.01,
                    "RP": 0.005,
                    ":": 0.01,
                    "NNS": 0.005,
                    "WP": 0.015,
                    "VBD": 0.041,
                    "CD": 0.015,
                    "MD": 0.015,
                    "EX": 0.005
                },
                "syllableRate": 2.0,
                "topicScores": [
                    [
                        "print",
                        0.3565504844084104
                    ],
                    [
                        "type",
                        0.3813714439632483
                    ],
                    [
                        "expression",
                        0.3879817916826549
                    ],
                    [
                        "script",
                        0.4292561503446677
                    ],
                    [
                        "sign",
                        0.5417539998218549
                    ],
                    [
                        "comment",
                        0.5458452314626593
                    ],
                    [
                        "number",
                        0.5541447118650832
                    ],
                    [
                        "IDLE",
                        0.6406609876137634
                    ],
                    [
                        "F5",
                        0.6689024922047696
                    ],
                    [
                        "interpreter",
                        0.7734535066382832
                    ],
                    [
                        "right",
                        0.8751227075123543
                    ],
                    [
                        "line",
                        0.8919915287951982
                    ],
                    [
                        "sharp",
                        0.8919915287951982
                    ],
                    [
                        "value",
                        0.9113200346491417
                    ],
                    [
                        "screen",
                        0.9125633101615899
                    ],
                    [
                        "command",
                        0.914692469525245
                    ],
                    [
                        "clear",
                        0.9150271673674989
                    ],
                    [
                        "whoops--",
                        0.9150408063064781
                    ],
                    [
                        "sense",
                        0.9187684794522676
                    ],
                    [
                        "shell",
                        0.925565165415918
                    ],
                    [
                        "print type",
                        2.7468049220687454
                    ],
                    [
                        "number sign",
                        3.067680800274747
                    ],
                    [
                        "print command",
                        3.1196307373902874
                    ],
                    [
                        "sharp sign",
                        3.2719934633452965
                    ],
                    [
                        "expression type",
                        3.943937328300907
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "print",
                        0.3565504844084104
                    ],
                    [
                        "type",
                        0.3813714439632483
                    ],
                    [
                        "expression",
                        0.3879817916826549
                    ],
                    [
                        "comment",
                        0.5458452314626593
                    ],
                    [
                        "number",
                        0.5541447118650832
                    ],
                    [
                        "IDLE",
                        0.6406609876137634
                    ],
                    [
                        "right",
                        0.8751227075123543
                    ],
                    [
                        "line",
                        0.8919915287951982
                    ],
                    [
                        "value",
                        0.9113200346491417
                    ],
                    [
                        "command",
                        0.914692469525245
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-1440": {
            "id": "SLvTCHhu5SE-1440",
            "heat": 0.108,
            "start": 1440.0,
            "text": " will actually appear. So whenever you want to get something to appear, you have to use the Print command. Not a very complicated concept. A program, or a script, is a sequence of commands. Each one tells the interpreter to do something. So a command is Print, for example. OK. So that's there. That's kind of boring. I'll get rid of that. The next command is a really interesting one. It's an assignment statement. A key concept in almost every programming language is that of a variable. Different languages have different notions of what a variable means. In Python, a variable is simply a name for an object.",
            "metrics": {
                "relativeDCReadability": 1.0120253639037367,
                "lexicalDiversity": 0.5089285714285714,
                "posComposition": {
                    "MD": 0.018,
                    "RB": 0.062,
                    "VB": 0.054,
                    "IN": 0.116,
                    "PRP": 0.036,
                    "VBP": 0.027,
                    "TO": 0.036,
                    "NN": 0.179,
                    "DT": 0.161,
                    "NNP": 0.054,
                    "VBN": 0.009,
                    "CC": 0.009,
                    "VBZ": 0.08,
                    "NNS": 0.036,
                    "CD": 0.018,
                    "WDT": 0.009,
                    "EX": 0.009,
                    "VBG": 0.018,
                    "JJ": 0.062,
                    "WP": 0.009
                },
                "syllableRate": 1.433,
                "topicScores": [
                    [
                        "command",
                        0.37070156334580606
                    ],
                    [
                        "Print",
                        0.38230421757963606
                    ],
                    [
                        "variable",
                        0.4360864418475362
                    ],
                    [
                        "concept",
                        0.5643135205463727
                    ],
                    [
                        "language",
                        0.5751726838245973
                    ],
                    [
                        "different",
                        0.5772543537121215
                    ],
                    [
                        "Python",
                        0.6793218778395145
                    ],
                    [
                        "example",
                        0.8792623605966252
                    ],
                    [
                        "program",
                        0.8905788533214651
                    ],
                    [
                        "complicated",
                        0.8924411731955866
                    ],
                    [
                        "script",
                        0.9001825060192521
                    ],
                    [
                        "boring",
                        0.9003496316626092
                    ],
                    [
                        "statement",
                        0.9060471174172737
                    ],
                    [
                        "sequence",
                        0.9086145255712205
                    ],
                    [
                        "mean",
                        0.9087872052747417
                    ],
                    [
                        "object",
                        0.9099482038627841
                    ],
                    [
                        "interpreter",
                        0.9136586478909938
                    ],
                    [
                        "interesting",
                        0.9211372234353629
                    ],
                    [
                        "assignment",
                        0.9225149762537815
                    ],
                    [
                        "key",
                        0.9237310102797069
                    ],
                    [
                        "programming",
                        0.9303277482757605
                    ],
                    [
                        "notion",
                        0.9313246211814191
                    ],
                    [
                        "Print command",
                        1.0901104418442726
                    ],
                    [
                        "variable mean",
                        3.8220554836077483
                    ],
                    [
                        "complicated concept",
                        3.9557318831961767
                    ],
                    [
                        "key concept",
                        4.7537260811628705
                    ],
                    [
                        "different language",
                        5.026704128194451
                    ],
                    [
                        "assignment statement",
                        5.091693449384843
                    ],
                    [
                        "programming language",
                        5.583799457606456
                    ],
                    [
                        "different notion",
                        5.761031727770449
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "command",
                        0.37070156334580606
                    ],
                    [
                        "language",
                        0.5751726838245973
                    ],
                    [
                        "Python",
                        0.6793218778395145
                    ],
                    [
                        "example",
                        0.8792623605966252
                    ],
                    [
                        "program",
                        0.8905788533214651
                    ],
                    [
                        "statement",
                        0.9060471174172737
                    ],
                    [
                        "object",
                        0.9099482038627841
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-1530": {
            "id": "SLvTCHhu5SE-1530",
            "heat": 0.204,
            "start": 1530.0,
            "text": " And what an assignment statement does in Python, is it binds the name to an object. So the assignment stetement you see here binds the name x to the object 3. The next statement rebinds the name x to the value of the expression x times x. So it takes the old value of x, evaluates the expression, and then binds the name x to the new value. So at the end of the second statement, x will be bound to 9. By the way, these are really stupid comments I've written here. I put them in just to show you what these statements are doing. For goodness sake, when you write comments in your programs, assume that the reader can read Python, and you don't have to explain the programming language in your comments. That's not to say you shouldn't write any comments.",
            "metrics": {
                "relativeDCReadability": 1.0939582570287354,
                "lexicalDiversity": 0.46621621621621623,
                "posComposition": {
                    "CC": 0.02,
                    "WP": 0.014,
                    "DT": 0.155,
                    "JJ": 0.041,
                    "NN": 0.162,
                    "VBZ": 0.061,
                    "IN": 0.088,
                    "NNP": 0.047,
                    "PRP": 0.068,
                    "TO": 0.054,
                    "VBP": 0.061,
                    "RB": 0.061,
                    "CD": 0.014,
                    "NNS": 0.047,
                    "MD": 0.02,
                    "VB": 0.047,
                    "VBN": 0.014,
                    "VBG": 0.007,
                    "WRB": 0.007,
                    "PRP$": 0.014
                },
                "syllableRate": 1.592,
                "topicScores": [
                    [
                        "x",
                        0.2696490171177225
                    ],
                    [
                        "statement",
                        0.3508607559307365
                    ],
                    [
                        "Python",
                        0.3589368402762623
                    ],
                    [
                        "comment",
                        0.3644571509433559
                    ],
                    [
                        "value",
                        0.3932538361639273
                    ],
                    [
                        "object",
                        0.4459957102891484
                    ],
                    [
                        "assignment",
                        0.4868462691842299
                    ],
                    [
                        "expression",
                        0.5116619797417781
                    ],
                    [
                        "time",
                        0.8469880893919352
                    ],
                    [
                        "new",
                        0.8618898721729553
                    ],
                    [
                        "second",
                        0.8715134986807048
                    ],
                    [
                        "old",
                        0.8721361626469806
                    ],
                    [
                        "goodness",
                        0.8778696874942686
                    ],
                    [
                        "way",
                        0.8783312365787729
                    ],
                    [
                        "end",
                        0.8811442766330576
                    ],
                    [
                        "sake",
                        0.8874994293416419
                    ],
                    [
                        "program",
                        0.8874994293416419
                    ],
                    [
                        "stupid",
                        0.8875169435860841
                    ],
                    [
                        "reader",
                        0.8960748584184104
                    ],
                    [
                        "programming",
                        0.8960748584184104
                    ],
                    [
                        "language",
                        0.8960748584184104
                    ],
                    [
                        "assignment statement",
                        1.692724926986782
                    ],
                    [
                        "x time",
                        1.7868381236809157
                    ],
                    [
                        "new value",
                        2.104462015978769
                    ],
                    [
                        "old value",
                        2.1841230275875962
                    ],
                    [
                        "second statement",
                        2.4482628504538915
                    ],
                    [
                        "stupid comment",
                        3.0169558197492705
                    ],
                    [
                        "goodness sake",
                        3.5271165685174632
                    ],
                    [
                        "programming language",
                        4.074858009733681
                    ],
                    [
                        "expression x time",
                        5.306623421587457
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "statement",
                        0.3508607559307365
                    ],
                    [
                        "Python",
                        0.3589368402762623
                    ],
                    [
                        "comment",
                        0.3644571509433559
                    ],
                    [
                        "value",
                        0.3932538361639273
                    ],
                    [
                        "object",
                        0.4459957102891484
                    ],
                    [
                        "expression",
                        0.5116619797417781
                    ],
                    [
                        "time",
                        0.8469880893919352
                    ],
                    [
                        "way",
                        0.8783312365787729
                    ],
                    [
                        "program",
                        0.8874994293416419
                    ],
                    [
                        "language",
                        0.8960748584184104
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-1620": {
            "id": "SLvTCHhu5SE-1620",
            "heat": 0.325,
            "start": 1620.0,
            "text": " The purpose of a comment is to make the program easier to read. And so typically, comments are there to explain things. Not to explain the language or its semantics, but to explain your thinking when you wrote the program. What is the algorithm you've used? And we'll see some useful examples of comments, probably not today, but later. All right. So let's execute this script. Sure enough, it printed 9. Just what we would have hoped. All right. Now let's try some other things. Print lets us output things. Raw input lets us input things. Get things from the keyboard, essentially. So this statement here is making a request to whoever is using the program to enter a number. There are two kinds of input statements in Python 2.x. There's raw input, which is the only one you will see me use, and input.",
            "metrics": {
                "relativeDCReadability": 1.0211272352271135,
                "lexicalDiversity": 0.5333333333333333,
                "posComposition": {
                    "DT": 0.107,
                    "NN": 0.127,
                    "IN": 0.04,
                    "VBZ": 0.053,
                    "TO": 0.047,
                    "VB": 0.1,
                    "JJR": 0.007,
                    "CC": 0.04,
                    "RB": 0.08,
                    "NNS": 0.073,
                    "VBP": 0.027,
                    "PRP$": 0.013,
                    "WRB": 0.007,
                    "PRP": 0.06,
                    "VBD": 0.02,
                    "WP": 0.02,
                    "VBN": 0.013,
                    "MD": 0.02,
                    "JJ": 0.027,
                    "NNP": 0.053,
                    "POS": 0.013,
                    "CD": 0.02,
                    "VBG": 0.013,
                    "EX": 0.013,
                    "WDT": 0.007
                },
                "syllableRate": 1.7,
                "topicScores": [
                    [
                        "thing",
                        0.3361737606728412
                    ],
                    [
                        "input",
                        0.3493219917817739
                    ],
                    [
                        "comment",
                        0.4094055008354044
                    ],
                    [
                        "program",
                        0.4249726885760983
                    ],
                    [
                        "print",
                        0.5569292036787853
                    ],
                    [
                        "raw",
                        0.5595946547645853
                    ],
                    [
                        "statement",
                        0.5799574046210888
                    ],
                    [
                        "Python",
                        0.6908743319324641
                    ],
                    [
                        "purpose",
                        0.8060934372278277
                    ],
                    [
                        "easy",
                        0.8202236231139648
                    ],
                    [
                        "semantic",
                        0.883770525497808
                    ],
                    [
                        "language",
                        0.8929917117954577
                    ],
                    [
                        "thinking",
                        0.8929917117954577
                    ],
                    [
                        "script",
                        0.8950079429958332
                    ],
                    [
                        "today",
                        0.9030749553791857
                    ],
                    [
                        "algorithm",
                        0.9039214388535156
                    ],
                    [
                        "useful",
                        0.9109189782976781
                    ],
                    [
                        "example",
                        0.9109189782976781
                    ],
                    [
                        "number",
                        0.9123029173409528
                    ],
                    [
                        "output",
                        0.9234740801126459
                    ],
                    [
                        "keyboard",
                        0.9259971827670369
                    ],
                    [
                        "request",
                        0.9330985633876907
                    ],
                    [
                        "kind",
                        0.9339725984107818
                    ],
                    [
                        "program easy",
                        2.301913171744269
                    ],
                    [
                        "raw input",
                        2.537815636705927
                    ],
                    [
                        "output thing",
                        4.06318355735973
                    ],
                    [
                        "useful example",
                        4.8745220313195015
                    ],
                    [
                        "input statement",
                        4.883488753206838
                    ]
                ],
                "topTopicSimilarity": 0.42857142857142855,
                "sharedTopicScores": [
                    [
                        "thing",
                        0.3361737606728412
                    ],
                    [
                        "input",
                        0.3493219917817739
                    ],
                    [
                        "comment",
                        0.4094055008354044
                    ],
                    [
                        "program",
                        0.4249726885760983
                    ],
                    [
                        "print",
                        0.5569292036787853
                    ],
                    [
                        "raw",
                        0.5595946547645853
                    ],
                    [
                        "statement",
                        0.5799574046210888
                    ],
                    [
                        "Python",
                        0.6908743319324641
                    ],
                    [
                        "language",
                        0.8929917117954577
                    ],
                    [
                        "example",
                        0.9109189782976781
                    ],
                    [
                        "number",
                        0.9123029173409528
                    ],
                    [
                        "kind",
                        0.9339725984107818
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-1710": {
            "id": "SLvTCHhu5SE-1710",
            "heat": 0.173,
            "start": 1710.0,
            "text": " Raw input, by the way, is the only one that exists in 3.0. So please, just use raw input. The difference is, raw input always expects, interprets what the user types as a string. So it will see here, it says, y equals float of raw input. Enter a number. So let's run it. So it's taken the argument to raw input, the string enter a number asked me to enter a number. I'll enter a number. And then it's converted it to a float. Suppose I get rid of that. Suppose I do this. That should work.",
            "metrics": {
                "relativeDCReadability": 0.8545317886344559,
                "lexicalDiversity": 0.5098039215686274,
                "posComposition": {
                    "NNP": 0.059,
                    "NN": 0.196,
                    "IN": 0.069,
                    "DT": 0.137,
                    "VBZ": 0.078,
                    "JJ": 0.059,
                    "WDT": 0.02,
                    "CD": 0.01,
                    "RB": 0.039,
                    "VB": 0.078,
                    "NNS": 0.02,
                    "WP": 0.01,
                    "PRP": 0.098,
                    "MD": 0.029,
                    "POS": 0.01,
                    "VBN": 0.029,
                    "TO": 0.029,
                    "CC": 0.01,
                    "VBP": 0.02
                },
                "syllableRate": 1.1,
                "topicScores": [
                    [
                        "raw",
                        0.28680286424024415
                    ],
                    [
                        "input",
                        0.3169141193404895
                    ],
                    [
                        "number",
                        0.3531798268693216
                    ],
                    [
                        "string",
                        0.558153572825431
                    ],
                    [
                        "float",
                        0.5690302294331592
                    ],
                    [
                        "raw input",
                        0.598363728738058
                    ],
                    [
                        "way",
                        0.8176833376517144
                    ],
                    [
                        "difference",
                        0.8790312864626507
                    ],
                    [
                        "user",
                        0.9019299303817228
                    ],
                    [
                        "type",
                        0.9019299303817228
                    ],
                    [
                        "argument",
                        0.926446171652607
                    ],
                    [
                        "user type",
                        4.3612863460133235
                    ]
                ],
                "topTopicSimilarity": 0.5833333333333334,
                "sharedTopicScores": [
                    [
                        "raw",
                        0.28680286424024415
                    ],
                    [
                        "input",
                        0.3169141193404895
                    ],
                    [
                        "number",
                        0.3531798268693216
                    ],
                    [
                        "string",
                        0.558153572825431
                    ],
                    [
                        "float",
                        0.5690302294331592
                    ],
                    [
                        "way",
                        0.8176833376517144
                    ],
                    [
                        "type",
                        0.9019299303817228
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-1800": {
            "id": "SLvTCHhu5SE-1800",
            "heat": 0.223,
            "start": 1800.0,
            "text": " So now something has happened. It's printed both of them as 3.0. It looks like they're the same, but in fact, they're not. And this is something to beware of. What we've seen here is when it prints a string, it does not print the quotation marks. So even though, if I were to put this in here, I'll put in two print types of y. And I'll comment this out because I'm getting kind of tired of seeing 9. You'll note that one is a string and the other is a float. Again, I point this out because this is something that can confuse people when they're debugging programs. Because you think it's a float, when in fact it's a string. OK. Nothing deep, but these are the things that sort of get people in trouble. Now the kinds of programs we've been looking at so far",
            "metrics": {
                "relativeDCReadability": 0.7535003900101255,
                "lexicalDiversity": 0.4125,
                "posComposition": {
                    "RB": 0.069,
                    "NN": 0.119,
                    "VBZ": 0.075,
                    "VBN": 0.025,
                    "PRP": 0.119,
                    "DT": 0.106,
                    "IN": 0.138,
                    "CD": 0.025,
                    "VBP": 0.056,
                    "JJ": 0.019,
                    "CC": 0.031,
                    "TO": 0.013,
                    "VB": 0.044,
                    "WP": 0.006,
                    "WRB": 0.019,
                    "NNS": 0.05,
                    "VBD": 0.006,
                    "MD": 0.025,
                    "VBG": 0.025,
                    "NNP": 0.013,
                    "RP": 0.006,
                    "WDT": 0.013
                },
                "syllableRate": 1.575,
                "topicScores": [
                    [
                        "print",
                        0.3742356008749016
                    ],
                    [
                        "string",
                        0.4164757818621977
                    ],
                    [
                        "float",
                        0.5309333549019369
                    ],
                    [
                        "fact",
                        0.5475227398686674
                    ],
                    [
                        "program",
                        0.5603019564235858
                    ],
                    [
                        "kind",
                        0.5612420903318407
                    ],
                    [
                        "people",
                        0.5687340844657147
                    ],
                    [
                        "mark",
                        0.8664675855748842
                    ],
                    [
                        "y.",
                        0.8735142103386911
                    ],
                    [
                        "quotation",
                        0.8890231325962008
                    ],
                    [
                        "trouble",
                        0.8936640082803926
                    ],
                    [
                        "deep",
                        0.9035111072720653
                    ],
                    [
                        "type",
                        0.9038449458951842
                    ],
                    [
                        "tired",
                        0.9080144676155357
                    ],
                    [
                        "thing",
                        0.9196076005364564
                    ],
                    [
                        "quotation mark",
                        3.3536889390240465
                    ],
                    [
                        "print type",
                        3.659710625536139
                    ]
                ],
                "topTopicSimilarity": 0.4117647058823529,
                "sharedTopicScores": [
                    [
                        "print",
                        0.3742356008749016
                    ],
                    [
                        "string",
                        0.4164757818621977
                    ],
                    [
                        "float",
                        0.5309333549019369
                    ],
                    [
                        "program",
                        0.5603019564235858
                    ],
                    [
                        "kind",
                        0.5612420903318407
                    ],
                    [
                        "type",
                        0.9038449458951842
                    ],
                    [
                        "thing",
                        0.9196076005364564
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-1890": {
            "id": "SLvTCHhu5SE-1890",
            "heat": 0.188,
            "start": 1890.0,
            "text": " are what are called straight line programs. What distinguishes a straight line program is it's a sequence of commands you execute one after another. You execute every command without making any deviations, without going back with any loops to execute a command more than once. So in a straight line program, every command gets executed exactly once. There is a very elegant, and even useful theory that talks about different layers of, levels of complexity of programs and says, for example, what kind of functions can you compute with straight line programs. We'll talk more about that field, which is called complexity theory, later in this semester. But for now, the thing to realize is that straight line programs are just dead boring. You can't compute anything interesting with one. Last time we talked about a recipe as an analogy for a program. Imagine a recipe with no tests. So every recipe, or almost every recipe I know, has some decisions.",
            "metrics": {
                "relativeDCReadability": 1.109249995669565,
                "lexicalDiversity": 0.5426829268292683,
                "posComposition": {
                    "VBP": 0.037,
                    "WP": 0.018,
                    "VBN": 0.018,
                    "JJ": 0.061,
                    "NN": 0.177,
                    "NNS": 0.073,
                    "VBZ": 0.061,
                    "DT": 0.128,
                    "PRP": 0.049,
                    "IN": 0.14,
                    "CD": 0.012,
                    "VBG": 0.018,
                    "RB": 0.073,
                    "TO": 0.012,
                    "VB": 0.03,
                    "JJR": 0.012,
                    "NNP": 0.012,
                    "EX": 0.006,
                    "CC": 0.024,
                    "WDT": 0.012,
                    "MD": 0.018,
                    "VBD": 0.006
                },
                "syllableRate": 2.183,
                "topicScores": [
                    [
                        "program",
                        0.2846323461366305
                    ],
                    [
                        "line",
                        0.2987746666765512
                    ],
                    [
                        "straight",
                        0.3197923613781243
                    ],
                    [
                        "command",
                        0.3794968064088104
                    ],
                    [
                        "recipe",
                        0.3990378619021191
                    ],
                    [
                        "theory",
                        0.572442632568062
                    ],
                    [
                        "complexity",
                        0.572442632568062
                    ],
                    [
                        "straight line",
                        0.6831029940620715
                    ],
                    [
                        "line program",
                        0.7492216608833951
                    ],
                    [
                        "sequence",
                        0.883618550230545
                    ],
                    [
                        "semester",
                        0.8908449482857087
                    ],
                    [
                        "deviation",
                        0.8909919047162795
                    ],
                    [
                        "boring",
                        0.8955130154678868
                    ],
                    [
                        "example",
                        0.8979885987160027
                    ],
                    [
                        "loop",
                        0.9022221262094644
                    ],
                    [
                        "test",
                        0.9046220171343917
                    ],
                    [
                        "decision",
                        0.9067174394663298
                    ],
                    [
                        "elegant",
                        0.9092201434352665
                    ],
                    [
                        "layer",
                        0.9092201434352665
                    ],
                    [
                        "level",
                        0.9092201434352665
                    ],
                    [
                        "kind",
                        0.9092201434352665
                    ],
                    [
                        "field",
                        0.9142339933216431
                    ],
                    [
                        "thing",
                        0.9179938936954967
                    ],
                    [
                        "dead",
                        0.9179938936954967
                    ],
                    [
                        "useful",
                        0.918743717677645
                    ],
                    [
                        "different",
                        0.918743717677645
                    ],
                    [
                        "function",
                        0.918743717677645
                    ],
                    [
                        "time",
                        0.9233258468058885
                    ],
                    [
                        "interesting",
                        0.9293298957626783
                    ],
                    [
                        "analogy",
                        0.9314811318963616
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "program",
                        0.2846323461366305
                    ],
                    [
                        "line",
                        0.2987746666765512
                    ],
                    [
                        "command",
                        0.3794968064088104
                    ],
                    [
                        "example",
                        0.8979885987160027
                    ],
                    [
                        "kind",
                        0.9092201434352665
                    ],
                    [
                        "thing",
                        0.9179938936954967
                    ],
                    [
                        "time",
                        0.9233258468058885
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-1980": {
            "id": "SLvTCHhu5SE-1980",
            "heat": 0.117,
            "start": 1980.0,
            "text": " Taste it and add salt if you need it. Or poke at the meat and see if it's done. Or cook it until the thermometer says some degree on it. Those are the kinds of tests we need to make interesting programs. The most primitive kind of test we see is what's called a conditional statement. And those are written using the word if, and optionally as we'll see, the words else or elif, standing for else, if. So let's look at an example here. Where'd my mouse, oh there it is. Yes? Somebody has a question? Shout it out. AUDIENCE: Sorry. I was wondering, when the user's prompted to put in the raw input, instead of putting in a float, puts in string, could you define it as a floating integer? How would you interpret that input? PROFESSOR: I didn't get the question. So this is an argument to raw input, or their response to raw input.",
            "metrics": {
                "relativeDCReadability": 0.9216015348362667,
                "lexicalDiversity": 0.48484848484848486,
                "posComposition": {
                    "NN": 0.152,
                    "PRP": 0.097,
                    "CC": 0.048,
                    "VB": 0.079,
                    "IN": 0.127,
                    "VBP": 0.03,
                    "DT": 0.115,
                    "VBZ": 0.048,
                    "VBN": 0.03,
                    "NNS": 0.024,
                    "TO": 0.024,
                    "JJ": 0.024,
                    "RBS": 0.006,
                    "WP": 0.006,
                    "VBG": 0.024,
                    "RB": 0.036,
                    "MD": 0.024,
                    "NNP": 0.042,
                    "FW": 0.006,
                    "POS": 0.012,
                    "PRP$": 0.012,
                    "EX": 0.006,
                    "RP": 0.006,
                    "VBD": 0.012,
                    "WRB": 0.006
                },
                "syllableRate": 1.808,
                "topicScores": [
                    [
                        "input",
                        0.3788072250757141
                    ],
                    [
                        "raw",
                        0.43792478977941357
                    ],
                    [
                        "test",
                        0.5367409048644969
                    ],
                    [
                        "kind",
                        0.5480106785283171
                    ],
                    [
                        "question",
                        0.5485711564090192
                    ],
                    [
                        "word",
                        0.556860051013926
                    ],
                    [
                        "float",
                        0.5716479234683313
                    ],
                    [
                        "audience",
                        0.5914990246765983
                    ],
                    [
                        "PROFESSOR",
                        0.651673148645015
                    ],
                    [
                        "salt",
                        0.8182554000377312
                    ],
                    [
                        "program",
                        0.8657208835386851
                    ],
                    [
                        "meat",
                        0.8713972432314439
                    ],
                    [
                        "statement",
                        0.8751162415459246
                    ],
                    [
                        "thermometer",
                        0.8917149899200814
                    ],
                    [
                        "degree",
                        0.8917149899200814
                    ],
                    [
                        "interesting",
                        0.8922534236379372
                    ],
                    [
                        "conditional",
                        0.9000067553148436
                    ],
                    [
                        "integer",
                        0.9039472744421139
                    ],
                    [
                        "elif",
                        0.9054765666397652
                    ],
                    [
                        "example",
                        0.9095824149389794
                    ],
                    [
                        "primitive",
                        0.9098345510276121
                    ],
                    [
                        "mouse",
                        0.9128023283245706
                    ],
                    [
                        "string",
                        0.9235932026177647
                    ],
                    [
                        "user",
                        0.9312798192721014
                    ],
                    [
                        "argument",
                        0.9339482138059831
                    ],
                    [
                        "response",
                        0.9339482138059831
                    ],
                    [
                        "raw input",
                        1.6773684799838409
                    ],
                    [
                        "interesting program",
                        3.394492197963711
                    ],
                    [
                        "conditional statement",
                        3.7083313294888534
                    ],
                    [
                        "primitive kind",
                        3.7678258704043257
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "input",
                        0.3788072250757141
                    ],
                    [
                        "raw",
                        0.43792478977941357
                    ],
                    [
                        "kind",
                        0.5480106785283171
                    ],
                    [
                        "float",
                        0.5716479234683313
                    ],
                    [
                        "audience",
                        0.5914990246765983
                    ],
                    [
                        "PROFESSOR",
                        0.651673148645015
                    ],
                    [
                        "program",
                        0.8657208835386851
                    ],
                    [
                        "statement",
                        0.8751162415459246
                    ],
                    [
                        "example",
                        0.9095824149389794
                    ],
                    [
                        "string",
                        0.9235932026177647
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-2070": {
            "id": "SLvTCHhu5SE-2070",
            "heat": 0.1,
            "start": 2070.0,
            "text": " AUDIENCE: So yeah, for the raw input where you define it as a quote-- PROFESSOR: Yeah. AUDIENCE: It usually puts in a string. How does Python interpret that? PROFESSOR: It will interpret it as a string containing quotation marks. AUDIENCE: OK. PROFESSOR: So typically you don't type a string, because it interprets everything you type as if it were a string. So don't bother typing strings. Good question. Thank you. All right. So let's look at this. So here I'm going to get an int, or at least a string. I'll convert it to an int. Then I'll say, if x remainder two, that's what the percent sign is, it's a remainder or a mod operator, is equal equal zero. That's important. You'll notice that we used an equal sign to do assignments. If we want to do a comparison, whether two objects have the same value, we don't write a single equal. We write a double equal. So whenever you're testing for equality of objects, you use double equal. So it says, if the object x mod 2 has the same value as the object zero, print even. Else, print odd. And then, just for fun, I'm going to see whether or not",
            "metrics": {
                "relativeDCReadability": 1.0111112356475573,
                "lexicalDiversity": 0.5229357798165137,
                "posComposition": {
                    "NNP": 0.078,
                    "RB": 0.064,
                    "IN": 0.096,
                    "DT": 0.096,
                    "JJ": 0.069,
                    "NN": 0.151,
                    "WRB": 0.009,
                    "PRP": 0.11,
                    "VBP": 0.06,
                    ":": 0.005,
                    "VBZ": 0.046,
                    "VB": 0.064,
                    "MD": 0.018,
                    "VBG": 0.023,
                    "NNS": 0.023,
                    "VBD": 0.009,
                    "POS": 0.005,
                    "TO": 0.023,
                    "CC": 0.018,
                    "JJS": 0.005,
                    "CD": 0.014,
                    "WDT": 0.009,
                    "WP": 0.005
                },
                "syllableRate": 2.5,
                "topicScores": [
                    [
                        "audience",
                        0.19406250820839455
                    ],
                    [
                        "PROFESSOR",
                        0.2701611352024576
                    ],
                    [
                        "string",
                        0.30262693280313374
                    ],
                    [
                        "equal",
                        0.30982537541245175
                    ],
                    [
                        "object",
                        0.39436697037380086
                    ],
                    [
                        "int",
                        0.5679675216230963
                    ],
                    [
                        "value",
                        0.5730856971495915
                    ],
                    [
                        "double",
                        0.5730856971495915
                    ],
                    [
                        "print",
                        0.573860613037634
                    ],
                    [
                        "sign",
                        0.5815482857023332
                    ],
                    [
                        "mod",
                        0.5823792457612986
                    ],
                    [
                        "remainder",
                        0.5849724320102881
                    ],
                    [
                        "Python",
                        0.6234602379599126
                    ],
                    [
                        "quote--",
                        0.8765751347775393
                    ],
                    [
                        "raw",
                        0.8848142054532856
                    ],
                    [
                        "input",
                        0.8848142054532856
                    ],
                    [
                        "quote-- PROFESSOR",
                        0.8998153898216835
                    ],
                    [
                        "mark",
                        0.9091351540245367
                    ],
                    [
                        "good",
                        0.9153463829485141
                    ],
                    [
                        "question",
                        0.9153463829485141
                    ],
                    [
                        "quotation",
                        0.9220034083900609
                    ],
                    [
                        "odd",
                        0.9256976621351715
                    ],
                    [
                        "important",
                        0.9283941766102136
                    ],
                    [
                        "assignment",
                        0.929023507954977
                    ],
                    [
                        "operator",
                        0.9381297139761692
                    ],
                    [
                        "comparison",
                        0.9397686998440418
                    ],
                    [
                        "single",
                        0.9397686998440418
                    ],
                    [
                        "fun",
                        0.941844611893873
                    ],
                    [
                        "percent",
                        0.9425291844816633
                    ],
                    [
                        "equality",
                        0.944908140110499
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "audience",
                        0.19406250820839455
                    ],
                    [
                        "PROFESSOR",
                        0.2701611352024576
                    ],
                    [
                        "string",
                        0.30262693280313374
                    ],
                    [
                        "object",
                        0.39436697037380086
                    ],
                    [
                        "value",
                        0.5730856971495915
                    ],
                    [
                        "print",
                        0.573860613037634
                    ],
                    [
                        "Python",
                        0.6234602379599126
                    ],
                    [
                        "raw",
                        0.8848142054532856
                    ],
                    [
                        "input",
                        0.8848142054532856
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-2160": {
            "id": "SLvTCHhu5SE-2160",
            "heat": 0.132,
            "start": 2160.0,
            "text": " it's divisible by three. Why did I do that? Just to show you that I can nest conditionals inside conditionals. So in one of the branches of the conditionals, I'm now doing a test. So what this does, is if comes down, it does the test. If the value of the test is true, it executes the block of code following the if, in this case, just print. And then it skips the else. It does not execute the else. So it executes one or the other. If the test is false, it skips the block of code following the if and executes the block of code following the else. So it does a or b, but not both. The indentation is important. Python is very unusual in that the way you indent things actually affects the meaning of them. And you can tell that, if I were to type this in the editor, you'll note here it's on that line, but if I hit Return, it automatically indents it. That's the auto indent feature I mentioned earlier in the editor of IDLE. And this tells me how these things line up.",
            "metrics": {
                "relativeDCReadability": 0.9283697623968804,
                "lexicalDiversity": 0.3756345177664975,
                "posComposition": {
                    "PRP": 0.117,
                    "VBZ": 0.107,
                    "JJ": 0.041,
                    "IN": 0.137,
                    "CD": 0.015,
                    "WRB": 0.01,
                    "VBD": 0.015,
                    "VBP": 0.02,
                    "DT": 0.162,
                    "NNP": 0.015,
                    "TO": 0.01,
                    "VB": 0.036,
                    "MD": 0.015,
                    "NNS": 0.03,
                    "RB": 0.071,
                    "VBG": 0.02,
                    "NN": 0.117,
                    "WP": 0.005,
                    "CC": 0.041,
                    "WDT": 0.005,
                    "RBR": 0.005,
                    "RP": 0.005
                },
                "syllableRate": 2.175,
                "topicScores": [
                    [
                        "test",
                        0.343320544772749
                    ],
                    [
                        "code",
                        0.39648132691831073
                    ],
                    [
                        "block",
                        0.40507701839354343
                    ],
                    [
                        "conditional",
                        0.4150837030580627
                    ],
                    [
                        "indent",
                        0.443922352980665
                    ],
                    [
                        "editor",
                        0.5517744176072463
                    ],
                    [
                        "line",
                        0.5610268709557811
                    ],
                    [
                        "thing",
                        0.5680027320381897
                    ],
                    [
                        "IDLE",
                        0.651585268464334
                    ],
                    [
                        "Return",
                        0.6694371607668054
                    ],
                    [
                        "divisible",
                        0.7993250596493786
                    ],
                    [
                        "print",
                        0.8733328916035812
                    ],
                    [
                        "branch",
                        0.8914650772519959
                    ],
                    [
                        "true",
                        0.898069751193416
                    ],
                    [
                        "case",
                        0.898069751193416
                    ],
                    [
                        "important",
                        0.9013402010301256
                    ],
                    [
                        "Python",
                        0.9030274026157553
                    ],
                    [
                        "value",
                        0.9047746441196399
                    ],
                    [
                        "false",
                        0.9110260124637708
                    ],
                    [
                        "indentation",
                        0.9146897733914572
                    ],
                    [
                        "unusual",
                        0.9217878817165626
                    ],
                    [
                        "way",
                        0.9217878817165626
                    ],
                    [
                        "meaning",
                        0.9217878817165626
                    ],
                    [
                        "auto",
                        0.9241073511210864
                    ],
                    [
                        "feature",
                        0.9241073511210864
                    ],
                    [
                        "auto indent",
                        4.569907953041964
                    ],
                    [
                        "indent feature",
                        4.569907953041964
                    ],
                    [
                        "auto indent feature",
                        35.27930427435504
                    ]
                ],
                "topTopicSimilarity": 0.2857142857142857,
                "sharedTopicScores": [
                    [
                        "code",
                        0.39648132691831073
                    ],
                    [
                        "line",
                        0.5610268709557811
                    ],
                    [
                        "thing",
                        0.5680027320381897
                    ],
                    [
                        "IDLE",
                        0.651585268464334
                    ],
                    [
                        "print",
                        0.8733328916035812
                    ],
                    [
                        "Python",
                        0.9030274026157553
                    ],
                    [
                        "value",
                        0.9047746441196399
                    ],
                    [
                        "way",
                        0.9217878817165626
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-2250": {
            "id": "SLvTCHhu5SE-2250",
            "heat": 0.37,
            "start": 2250.0,
            "text": " So the fact that this is here tells me I execute it only as part of the else clause. The program would mean something quite different if I wrote this. Then it would mean, if x mod 2 is zero, print even. Otherwise, print odd. And whether or not it was even or odd, do this test in the if statement. So the indentation actually affects the meaning of the program. Now a lot of other languages, almost all other languages, don't do that. They have some punctuation. For example, c uses set braces to designate what's called a block of code. If you look, however, at a well-written piece of C code, or Java code, or any other language that I know, programmers are trained to use indentation to show the structure of the program. Even though you don't need, it you could line up everything right at the left edge and just use the punctuation. People don't do that. And the reason they don't do that is programs are intended to be read, not just executed.",
            "metrics": {
                "relativeDCReadability": 0.9700812023795883,
                "lexicalDiversity": 0.47540983606557374,
                "posComposition": {
                    "IN": 0.12,
                    "DT": 0.126,
                    "NN": 0.175,
                    "VBZ": 0.033,
                    "RB": 0.115,
                    "NNS": 0.033,
                    "PRP": 0.071,
                    "VBP": 0.06,
                    "JJ": 0.044,
                    "MD": 0.016,
                    "VB": 0.06,
                    "VBD": 0.011,
                    "CD": 0.011,
                    "NNP": 0.022,
                    "CC": 0.038,
                    "VBN": 0.033,
                    "TO": 0.022,
                    "WP": 0.005,
                    "RP": 0.005
                },
                "syllableRate": 2.092,
                "topicScores": [
                    [
                        "program",
                        0.36514100884125267
                    ],
                    [
                        "code",
                        0.4305039007630749
                    ],
                    [
                        "language",
                        0.4407484196827157
                    ],
                    [
                        "use",
                        0.4527302512597651
                    ],
                    [
                        "print",
                        0.5274992335901353
                    ],
                    [
                        "odd",
                        0.535764366955163
                    ],
                    [
                        "punctuation",
                        0.5394754513749753
                    ],
                    [
                        "indentation",
                        0.5708562968259635
                    ],
                    [
                        "Java",
                        0.6555293207225931
                    ],
                    [
                        "C",
                        0.6699357111612594
                    ],
                    [
                        "clause",
                        0.7571033580928901
                    ],
                    [
                        "fact",
                        0.8118233516398808
                    ],
                    [
                        "different",
                        0.8665391625652485
                    ],
                    [
                        "statement",
                        0.8747808644748967
                    ],
                    [
                        "mod",
                        0.8875253628940303
                    ],
                    [
                        "People",
                        0.9004786034071531
                    ],
                    [
                        "example",
                        0.9040009974149628
                    ],
                    [
                        "test",
                        0.9062722952321067
                    ],
                    [
                        "meaning",
                        0.9114330978257672
                    ],
                    [
                        "piece",
                        0.9152073498317277
                    ],
                    [
                        "programmer",
                        0.9152073498317277
                    ],
                    [
                        "lot",
                        0.9153044115373694
                    ],
                    [
                        "brace",
                        0.9207961445933333
                    ],
                    [
                        "block",
                        0.9207961445933333
                    ],
                    [
                        "structure",
                        0.9228367023742468
                    ],
                    [
                        "right",
                        0.9245653236183757
                    ],
                    [
                        "left",
                        0.9245653236183757
                    ],
                    [
                        "edge",
                        0.9245653236183757
                    ],
                    [
                        "reason",
                        0.9273522357773575
                    ],
                    [
                        "Java code",
                        1.2957676978942614
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "program",
                        0.36514100884125267
                    ],
                    [
                        "code",
                        0.4305039007630749
                    ],
                    [
                        "language",
                        0.4407484196827157
                    ],
                    [
                        "print",
                        0.5274992335901353
                    ],
                    [
                        "statement",
                        0.8747808644748967
                    ],
                    [
                        "example",
                        0.9040009974149628
                    ],
                    [
                        "right",
                        0.9245653236183757
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-2340": {
            "id": "SLvTCHhu5SE-2340",
            "heat": 0.313,
            "start": 2340.0,
            "text": " Why are they intended to be read? Because the only reason, the only way you can debug a program is reading the code in it. Typically, you want to write your program so that if you look at it from a distance, the visual structure of the program reflects the semantics of the program. And that's why people use indentation when they don't need to, so that you can see the structure of the program by looking at it on your screen and not having to parse each symbol. The authors of Python made what I think is a very good design decision. They said, well, if that's the way you ought to write your programs, let's force people to write their programs that way and guarantee that the visual structure of the program actually matches the semantic structure. The problem with languages like C and Java is that you can indent things and fool the reader of the program by making it look like something is under something else, when in fact it really isn't, because of the punctuation. So here we have a guarantee that the visual structure",
            "metrics": {
                "relativeDCReadability": 1.0863144220165517,
                "lexicalDiversity": 0.4358974358974359,
                "posComposition": {
                    "WRB": 0.021,
                    "VBP": 0.041,
                    "PRP": 0.082,
                    "VBD": 0.015,
                    "TO": 0.031,
                    "VB": 0.062,
                    "VBN": 0.005,
                    "IN": 0.144,
                    "DT": 0.138,
                    "JJ": 0.036,
                    "NN": 0.164,
                    "MD": 0.021,
                    "VBZ": 0.046,
                    "VBG": 0.021,
                    "NNP": 0.021,
                    "PRP$": 0.021,
                    "RB": 0.056,
                    "NNS": 0.041,
                    "CC": 0.026,
                    "WP": 0.005,
                    "POS": 0.005
                },
                "syllableRate": 2.233,
                "topicScores": [
                    [
                        "program",
                        0.22864975394687612
                    ],
                    [
                        "structure",
                        0.24978068422210542
                    ],
                    [
                        "visual",
                        0.3473273793700337
                    ],
                    [
                        "way",
                        0.4046075015650283
                    ],
                    [
                        "visual structure",
                        0.40665170242530885
                    ],
                    [
                        "semantic",
                        0.5037109644264737
                    ],
                    [
                        "guarantee",
                        0.5149148906923804
                    ],
                    [
                        "people",
                        0.5234020608395467
                    ],
                    [
                        "Python",
                        0.5994199682016779
                    ],
                    [
                        "C",
                        0.6258130367938711
                    ],
                    [
                        "Java",
                        0.6258130367938711
                    ],
                    [
                        "reason",
                        0.7966740348303909
                    ],
                    [
                        "code",
                        0.8095793413050453
                    ],
                    [
                        "symbol",
                        0.8185460554435108
                    ],
                    [
                        "distance",
                        0.8264459301752726
                    ],
                    [
                        "decision",
                        0.8305962904038579
                    ],
                    [
                        "punctuation",
                        0.8456791795257579
                    ],
                    [
                        "indentation",
                        0.8534842970710291
                    ],
                    [
                        "screen",
                        0.8534842970710291
                    ],
                    [
                        "design",
                        0.8536951792602016
                    ],
                    [
                        "author",
                        0.8536951792602017
                    ],
                    [
                        "good",
                        0.8636009393408872
                    ],
                    [
                        "problem",
                        0.8670506465028692
                    ],
                    [
                        "language",
                        0.8761833060227968
                    ],
                    [
                        "thing",
                        0.8761833060227968
                    ],
                    [
                        "reader",
                        0.8761833060227968
                    ],
                    [
                        "fact",
                        0.8761833060227968
                    ],
                    [
                        "semantic structure",
                        1.0639067562548719
                    ],
                    [
                        "design decision",
                        2.437324416442773
                    ],
                    [
                        "good design",
                        2.805927515683928
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "program",
                        0.22864975394687612
                    ],
                    [
                        "way",
                        0.4046075015650283
                    ],
                    [
                        "Python",
                        0.5994199682016779
                    ],
                    [
                        "code",
                        0.8095793413050453
                    ],
                    [
                        "language",
                        0.8761833060227968
                    ],
                    [
                        "thing",
                        0.8761833060227968
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-2430": {
            "id": "SLvTCHhu5SE-2430",
            "heat": 0.169,
            "start": 2430.0,
            "text": " matches the semantic structure, and I think that was one of the really good design decisions in Python. OK, people see that? So we could execute this program. Let me get back to what it was before. Control z is the go back. And now we can enter an integer, say 14, and it will tell us it's even. I can run it again, and now I'll put 15 in, and it will tell me it's odd. We'll try it once more. We'll put in 17. It was odd and it's not divisible by three. These kinds of programs are called branching programs. And that's because the structure of them, as you go down you execute some statements, and then there's a branch which says execute these statements or execute those statements. And then typically it comes back together and continues.",
            "metrics": {
                "relativeDCReadability": 0.9942275915106712,
                "lexicalDiversity": 0.46308724832214765,
                "posComposition": {
                    "NNS": 0.06,
                    "DT": 0.087,
                    "JJ": 0.034,
                    "NN": 0.067,
                    "CC": 0.074,
                    "PRP": 0.154,
                    "VBP": 0.047,
                    "VBD": 0.02,
                    "CD": 0.034,
                    "IN": 0.074,
                    "RB": 0.094,
                    "NNP": 0.027,
                    "MD": 0.054,
                    "VB": 0.067,
                    "TO": 0.007,
                    "WP": 0.007,
                    "VBZ": 0.06,
                    "RBR": 0.007,
                    "VBN": 0.007,
                    "RP": 0.007,
                    "EX": 0.007,
                    "WDT": 0.007
                },
                "syllableRate": 1.608,
                "topicScores": [
                    [
                        "program",
                        0.45170146168328335
                    ],
                    [
                        "statement",
                        0.4519387225558978
                    ],
                    [
                        "Python",
                        0.4977879337429506
                    ],
                    [
                        "odd",
                        0.5518483297229214
                    ],
                    [
                        "structure",
                        0.5635049315963001
                    ],
                    [
                        "semantic",
                        0.8601197986922318
                    ],
                    [
                        "good",
                        0.8733160545347532
                    ],
                    [
                        "design",
                        0.8733160545347532
                    ],
                    [
                        "decision",
                        0.8733160545347532
                    ],
                    [
                        "people",
                        0.8819779367964127
                    ],
                    [
                        "control",
                        0.8835534883555932
                    ],
                    [
                        "z",
                        0.9069412008211346
                    ],
                    [
                        "integer",
                        0.9109896832485196
                    ],
                    [
                        "kind",
                        0.9222399551076194
                    ],
                    [
                        "branching",
                        0.9222399551076194
                    ],
                    [
                        "divisible",
                        0.9286384036570295
                    ],
                    [
                        "good design",
                        3.213736404198129
                    ],
                    [
                        "design decision",
                        3.213736404198129
                    ],
                    [
                        "semantic structure",
                        3.314108438713415
                    ],
                    [
                        "control z",
                        4.033499492433007
                    ],
                    [
                        "branching program",
                        4.993560691834635
                    ],
                    [
                        "good design decision",
                        15.11021618933978
                    ]
                ],
                "topTopicSimilarity": 0.18181818181818182,
                "sharedTopicScores": [
                    [
                        "program",
                        0.45170146168328335
                    ],
                    [
                        "statement",
                        0.4519387225558978
                    ],
                    [
                        "Python",
                        0.4977879337429506
                    ],
                    [
                        "kind",
                        0.9222399551076194
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-2520": {
            "id": "SLvTCHhu5SE-2520",
            "heat": 0.201,
            "start": 2520.0,
            "text": " Of course, branches can have sub-branches. We could do this and then join further down, as we've seen here. Now branching programs are much more interesting than straight line programs. We can do a lot of things with them, but fundamentally nothing really interesting. And we can think about that by thinking about how long it takes a branching program to run. So let's first ask the question, how long does it take a straight line program to run? 14 seconds? No, that's not the way to think about it. How would we think about how long it takes it to run? What governs the length of time a straight line program can take? AUDIENCE: [INAUDIBLE]. PROFESSOR: Exactly. The number of statements or commands in the program. Since it executes every command exactly once, if you have 100 command, it will have 100 steps in it. Now there's some variation on how long each step will be. Some commands might take longer than others, but the length of time it can take to run has nothing to do with its input. It has to do only with the number of lines of code. And that tells us it's not very useful because, well, we",
            "metrics": {
                "relativeDCReadability": 0.8860288023190402,
                "lexicalDiversity": 0.45454545454545453,
                "posComposition": {
                    "IN": 0.11,
                    "NN": 0.12,
                    "NNS": 0.053,
                    "MD": 0.048,
                    "VB": 0.096,
                    "PRP": 0.096,
                    "DT": 0.091,
                    "CC": 0.029,
                    "RB": 0.091,
                    "VBP": 0.014,
                    "VBN": 0.005,
                    "VBG": 0.014,
                    "RBR": 0.005,
                    "JJ": 0.048,
                    "WRB": 0.019,
                    "VBZ": 0.062,
                    "TO": 0.033,
                    "NNP": 0.024,
                    "POS": 0.005,
                    "CD": 0.014,
                    "WDT": 0.005,
                    "WP": 0.005,
                    "EX": 0.005,
                    "JJR": 0.005,
                    "PRP$": 0.005
                },
                "syllableRate": 2.275,
                "topicScores": [
                    [
                        "program",
                        0.3164192846995422
                    ],
                    [
                        "line",
                        0.3831577101298782
                    ],
                    [
                        "command",
                        0.4031079084960076
                    ],
                    [
                        "branch",
                        0.4136840401821336
                    ],
                    [
                        "straight",
                        0.4338136846241438
                    ],
                    [
                        "interesting",
                        0.5573983166008655
                    ],
                    [
                        "length",
                        0.5695352663036237
                    ],
                    [
                        "number",
                        0.5735536958869925
                    ],
                    [
                        "time",
                        0.5769297202375047
                    ],
                    [
                        "step",
                        0.5897039953750471
                    ],
                    [
                        "audience",
                        0.5981758774139773
                    ],
                    [
                        "INAUDIBLE",
                        0.6033409334689454
                    ],
                    [
                        "PROFESSOR",
                        0.6079074037715756
                    ],
                    [
                        "sub",
                        0.8261519119655224
                    ],
                    [
                        "second",
                        0.8920876677261337
                    ],
                    [
                        "lot",
                        0.9160957187629668
                    ],
                    [
                        "thing",
                        0.9160957187629668
                    ],
                    [
                        "question",
                        0.9189343341518572
                    ],
                    [
                        "branching",
                        0.9222828218965406
                    ],
                    [
                        "input",
                        0.9226785739407918
                    ],
                    [
                        "code",
                        0.9234580697062721
                    ],
                    [
                        "way",
                        0.9324418253481954
                    ],
                    [
                        "useful",
                        0.9391205280663061
                    ],
                    [
                        "statement",
                        0.9418137442933256
                    ],
                    [
                        "variation",
                        0.943274905216944
                    ],
                    [
                        "straight line",
                        1.6919960719577245
                    ],
                    [
                        "line program",
                        1.8842472997642998
                    ],
                    [
                        "branching program",
                        4.532961735247673
                    ],
                    [
                        "straight line program",
                        8.915842377118377
                    ]
                ],
                "topTopicSimilarity": 0.41379310344827586,
                "sharedTopicScores": [
                    [
                        "program",
                        0.3164192846995422
                    ],
                    [
                        "line",
                        0.3831577101298782
                    ],
                    [
                        "command",
                        0.4031079084960076
                    ],
                    [
                        "number",
                        0.5735536958869925
                    ],
                    [
                        "time",
                        0.5769297202375047
                    ],
                    [
                        "audience",
                        0.5981758774139773
                    ],
                    [
                        "PROFESSOR",
                        0.6079074037715756
                    ],
                    [
                        "thing",
                        0.9160957187629668
                    ],
                    [
                        "input",
                        0.9226785739407918
                    ],
                    [
                        "code",
                        0.9234580697062721
                    ],
                    [
                        "way",
                        0.9324418253481954
                    ],
                    [
                        "statement",
                        0.9418137442933256
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-2610": {
            "id": "SLvTCHhu5SE-2610",
            "heat": 0.268,
            "start": 2610.0,
            "text": " can only type so many lines in our lifetime. Well branching programs have the same problem. In a branching program, each command is executed at most once. So again, the length of time it takes to execute the program is governed strictly by the size of the program. Why isn't that good enough? Well, think about a program, say, to compute the GPA of all the students at MIT. Well how long is that going to take? Think instead about a program to compute the GPA of all the students at the University of Michigan, which is probably 10 times bigger than MIT. Well you would expect that to take longer, right? Because you have to look at more students. And in fact, it's true. Most programs that are interesting, the amount of time they take to run should depend not on the length of the program, but on the size of the data that you want to evaluate using the program. So you would argue that the amount of time taken to compute the GPA of the students at MIT should be proportional to the number of students, not proportional to",
            "metrics": {
                "relativeDCReadability": 1.0402986816272617,
                "lexicalDiversity": 0.4536082474226804,
                "posComposition": {
                    "MD": 0.026,
                    "RB": 0.077,
                    "VB": 0.077,
                    "JJ": 0.041,
                    "NNS": 0.052,
                    "IN": 0.155,
                    "PRP$": 0.005,
                    "NN": 0.113,
                    "NNP": 0.067,
                    "VBP": 0.031,
                    "DT": 0.124,
                    "VBZ": 0.036,
                    "VBN": 0.015,
                    "JJS": 0.005,
                    "PRP": 0.036,
                    "TO": 0.057,
                    "WRB": 0.01,
                    "PDT": 0.01,
                    "VBG": 0.015,
                    "WDT": 0.015,
                    "CD": 0.005,
                    "JJR": 0.015,
                    "CC": 0.01
                },
                "syllableRate": 2.25,
                "topicScores": [
                    [
                        "program",
                        0.24782429841882392
                    ],
                    [
                        "GPA",
                        0.2698504422148547
                    ],
                    [
                        "MIT",
                        0.288936754707635
                    ],
                    [
                        "student",
                        0.31260111960063475
                    ],
                    [
                        "time",
                        0.3601010821714876
                    ],
                    [
                        "branching",
                        0.5120294634342626
                    ],
                    [
                        "size",
                        0.5352583869074521
                    ],
                    [
                        "length",
                        0.5371978000394702
                    ],
                    [
                        "proportional",
                        0.5568915219125453
                    ],
                    [
                        "Michigan",
                        0.6431154700940198
                    ],
                    [
                        "University",
                        0.6537707834151768
                    ],
                    [
                        "lifetime",
                        0.8138282438877932
                    ],
                    [
                        "problem",
                        0.8415877937236284
                    ],
                    [
                        "line",
                        0.8481654546394167
                    ],
                    [
                        "command",
                        0.8761816936137184
                    ],
                    [
                        "right",
                        0.8804822949521234
                    ],
                    [
                        "good",
                        0.8911365804352089
                    ],
                    [
                        "true",
                        0.893972076508868
                    ],
                    [
                        "fact",
                        0.9087722403859115
                    ],
                    [
                        "big",
                        0.9091085683713935
                    ],
                    [
                        "interesting",
                        0.9103449872722176
                    ],
                    [
                        "datum",
                        0.9165444145782593
                    ],
                    [
                        "number",
                        0.9178458048875247
                    ],
                    [
                        "branching program",
                        1.2700916710941523
                    ],
                    [
                        "time big",
                        3.1689574088026164
                    ]
                ],
                "topTopicSimilarity": 0.28,
                "sharedTopicScores": [
                    [
                        "program",
                        0.24782429841882392
                    ],
                    [
                        "MIT",
                        0.288936754707635
                    ],
                    [
                        "time",
                        0.3601010821714876
                    ],
                    [
                        "line",
                        0.8481654546394167
                    ],
                    [
                        "command",
                        0.8761816936137184
                    ],
                    [
                        "right",
                        0.8804822949521234
                    ],
                    [
                        "number",
                        0.9178458048875247
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-2700": {
            "id": "SLvTCHhu5SE-2700",
            "heat": 0.289,
            "start": 2700.0,
            "text": " the length of the program used to do it. We'll talk a lot more about that later in the term in a much more thorough way. But it's important to get that as something you think about. So the fact that branching programs are not proportional in time to the input means that they're limited in what they can do. So that gets us to the final concept we need to write every program that could ever be written, or at least to compute every function that could ever be computed. And that's some sort of a looping construct. Once we add loops, we get to a class of programming languages or programming constructs that's called Turing Complete. And I mentioned this last time. Any program that can be written, or any function that can be computed, rather, can be computed in a Turing Complete language. So let's look at an example here. This concept, by the way, is called iteration.",
            "metrics": {
                "relativeDCReadability": 0.9535313725581233,
                "lexicalDiversity": 0.47305389221556887,
                "posComposition": {
                    "DT": 0.132,
                    "NN": 0.15,
                    "IN": 0.114,
                    "VBN": 0.054,
                    "TO": 0.042,
                    "VB": 0.066,
                    "PRP": 0.066,
                    "MD": 0.042,
                    "JJR": 0.012,
                    "RBR": 0.006,
                    "RB": 0.048,
                    "JJ": 0.036,
                    "CC": 0.036,
                    "VBZ": 0.042,
                    "VBP": 0.036,
                    "VBG": 0.018,
                    "NNS": 0.018,
                    "WP": 0.006,
                    "WDT": 0.03,
                    "JJS": 0.006,
                    "NNP": 0.03,
                    "VBD": 0.006,
                    "POS": 0.006
                },
                "syllableRate": 1.9,
                "topicScores": [
                    [
                        "program",
                        0.3870280833515284
                    ],
                    [
                        "Complete",
                        0.39930060061684236
                    ],
                    [
                        "Turing",
                        0.4162537125192691
                    ],
                    [
                        "Turing Complete",
                        0.45228222571591015
                    ],
                    [
                        "way",
                        0.5564494739805388
                    ],
                    [
                        "time",
                        0.5610354966583045
                    ],
                    [
                        "construct",
                        0.5626242901833106
                    ],
                    [
                        "loop",
                        0.5626242901833106
                    ],
                    [
                        "concept",
                        0.5663626060392312
                    ],
                    [
                        "language",
                        0.5663626060392312
                    ],
                    [
                        "function",
                        0.5667825315158966
                    ],
                    [
                        "programming",
                        0.5807506357776322
                    ],
                    [
                        "length",
                        0.7962017542719632
                    ],
                    [
                        "thorough",
                        0.8546465581122433
                    ],
                    [
                        "lot",
                        0.8690709208685147
                    ],
                    [
                        "term",
                        0.8690709208685147
                    ],
                    [
                        "important",
                        0.8897096820578795
                    ],
                    [
                        "iteration",
                        0.894713120926385
                    ],
                    [
                        "fact",
                        0.9009374451222845
                    ],
                    [
                        "branching",
                        0.9009374451222845
                    ],
                    [
                        "proportional",
                        0.9009374451222845
                    ],
                    [
                        "input",
                        0.9009374451222845
                    ],
                    [
                        "limited",
                        0.9009374451222845
                    ],
                    [
                        "final",
                        0.9081302249915986
                    ],
                    [
                        "sort",
                        0.9131985251116638
                    ],
                    [
                        "example",
                        0.9154713737488025
                    ],
                    [
                        "class",
                        0.9169996982624826
                    ],
                    [
                        "Complete language",
                        1.3154049747275516
                    ],
                    [
                        "Turing Complete language",
                        2.182434377044859
                    ],
                    [
                        "thorough way",
                        3.0610267787972063
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "program",
                        0.3870280833515284
                    ],
                    [
                        "way",
                        0.5564494739805388
                    ],
                    [
                        "time",
                        0.5610354966583045
                    ],
                    [
                        "language",
                        0.5663626060392312
                    ],
                    [
                        "input",
                        0.9009374451222845
                    ],
                    [
                        "example",
                        0.9154713737488025
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-2790": {
            "id": "SLvTCHhu5SE-2790",
            "heat": 0.291,
            "start": 2790.0,
            "text": " And if we look at languages with iteration, what we'll see is a more complicated flow of control. You execute some statements, maybe you do some branching if you want. But then you're allowed to go back and execute statements you've already executed. Typically what you have is another branch. One branch goes back and one continues. So now we see we can execute a statement more than once. Suddenly we have enormous power at our disposal. So let's look at an example of that. By the way, I'm skipping some of the code in your handout, but that's probably fine because it's there for you to be able to read. And what I would recommend by the way, is that we will post the handouts on the web, but at the end of every lecture",
            "metrics": {
                "relativeDCReadability": 0.9237347814486838,
                "lexicalDiversity": 0.43356643356643354,
                "posComposition": {
                    "CC": 0.049,
                    "IN": 0.133,
                    "PRP": 0.112,
                    "VBP": 0.07,
                    "NNS": 0.028,
                    "NN": 0.133,
                    "WP": 0.021,
                    "MD": 0.028,
                    "VB": 0.049,
                    "VBZ": 0.049,
                    "DT": 0.112,
                    "RBR": 0.007,
                    "JJ": 0.035,
                    "RB": 0.084,
                    "VBN": 0.014,
                    "TO": 0.021,
                    "CD": 0.014,
                    "JJR": 0.007,
                    "PRP$": 0.014,
                    "NNP": 0.007,
                    "POS": 0.007,
                    "VBG": 0.007
                },
                "syllableRate": 1.642,
                "topicScores": [
                    [
                        "statement",
                        0.4373902306556219
                    ],
                    [
                        "branch",
                        0.5515749454888971
                    ],
                    [
                        "way",
                        0.5516951613250649
                    ],
                    [
                        "handout",
                        0.5778184421215775
                    ],
                    [
                        "control",
                        0.7412282667991332
                    ],
                    [
                        "iteration",
                        0.7958675379965574
                    ],
                    [
                        "language",
                        0.8173729524024194
                    ],
                    [
                        "complicated",
                        0.8173729524024194
                    ],
                    [
                        "flow",
                        0.8173729524024194
                    ],
                    [
                        "branching",
                        0.8707320589494011
                    ],
                    [
                        "disposal",
                        0.8776813259374275
                    ],
                    [
                        "lecture",
                        0.8881507034688534
                    ],
                    [
                        "web",
                        0.9153119476918437
                    ],
                    [
                        "enormous",
                        0.9181100472413805
                    ],
                    [
                        "power",
                        0.9181100472413805
                    ],
                    [
                        "example",
                        0.921052636311167
                    ],
                    [
                        "code",
                        0.9234350780540977
                    ],
                    [
                        "fine",
                        0.9234350780540977
                    ],
                    [
                        "able",
                        0.9234350780540977
                    ],
                    [
                        "end",
                        0.9254131552170645
                    ],
                    [
                        "complicated flow",
                        2.0129424860020197
                    ],
                    [
                        "enormous power",
                        5.366428400856328
                    ]
                ],
                "topTopicSimilarity": 0.22727272727272727,
                "sharedTopicScores": [
                    [
                        "statement",
                        0.4373902306556219
                    ],
                    [
                        "way",
                        0.5516951613250649
                    ],
                    [
                        "language",
                        0.8173729524024194
                    ],
                    [
                        "example",
                        0.921052636311167
                    ],
                    [
                        "code",
                        0.9234350780540977
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-2880": {
            "id": "SLvTCHhu5SE-2880",
            "heat": 0.183,
            "start": 2880.0,
            "text": " within a few hours or a few days at least, go through the handouts and make sure you understand everything in. Because if you don't, you're probably missing something you'll need to understand to do the problem sets. So here's a little program that finds the cube root of a perfect cube. This, by the way, is a useful comment here, right? Tells you what the program is intended to do. So we get an integer. We set the variable ans to zero. And then while ans times ans times ans is less than the absolute value of x, we're going to set ans to ans plus 1. We could print where we are. I put those sort of things in as debugging statements. If ans times ans times ans is not equal to the absolute value of x when I finish the loop, then I'll print x is not a perfect cube. Otherwise I have to do something to deal with positive and negative values. Now I know that this was fast and that most of you probably don't fully assimilate this program. Do not worry. It will be discussed in recitations tomorrow.",
            "metrics": {
                "relativeDCReadability": 0.9521754002652064,
                "lexicalDiversity": 0.48258706467661694,
                "posComposition": {
                    "IN": 0.1,
                    "DT": 0.104,
                    "JJ": 0.075,
                    "NNS": 0.1,
                    "CC": 0.03,
                    "JJS": 0.005,
                    "VBP": 0.065,
                    "VB": 0.065,
                    "PRP": 0.085,
                    "NN": 0.104,
                    "RB": 0.08,
                    "VBG": 0.01,
                    "MD": 0.02,
                    "TO": 0.045,
                    "VBZ": 0.04,
                    "WDT": 0.005,
                    "NNP": 0.02,
                    "WP": 0.005,
                    "VBN": 0.01,
                    "CD": 0.01,
                    "JJR": 0.005,
                    "WRB": 0.01,
                    "VBD": 0.005,
                    "RBS": 0.005
                },
                "syllableRate": 2.208,
                "topicScores": [
                    [
                        "time",
                        0.3671686833294391
                    ],
                    [
                        "value",
                        0.4191631197419926
                    ],
                    [
                        "cube",
                        0.4201241413191146
                    ],
                    [
                        "set",
                        0.4342976053968094
                    ],
                    [
                        "ans",
                        0.4353852654286445
                    ],
                    [
                        "program",
                        0.44166417421276766
                    ],
                    [
                        "x",
                        0.44327648164795036
                    ],
                    [
                        "perfect",
                        0.5308282243720591
                    ],
                    [
                        "absolute",
                        0.5452939443463197
                    ],
                    [
                        "hour",
                        0.8011860789644436
                    ],
                    [
                        "day",
                        0.8011860789644436
                    ],
                    [
                        "handout",
                        0.8011860789644436
                    ],
                    [
                        "sure",
                        0.8011860789644436
                    ],
                    [
                        "right",
                        0.8417290555444561
                    ],
                    [
                        "problem",
                        0.8455262343844182
                    ],
                    [
                        "integer",
                        0.8741371423550578
                    ],
                    [
                        "little",
                        0.8805376716037041
                    ],
                    [
                        "root",
                        0.8805376716037041
                    ],
                    [
                        "way",
                        0.88234746698041
                    ],
                    [
                        "comment",
                        0.88234746698041
                    ],
                    [
                        "statement",
                        0.8897620442376716
                    ],
                    [
                        "useful",
                        0.8925864348427318
                    ],
                    [
                        "tomorrow",
                        0.8989955184440801
                    ],
                    [
                        "variable",
                        0.9098672779330379
                    ],
                    [
                        "loop",
                        0.9117580618252119
                    ],
                    [
                        "negative",
                        0.9134753695501502
                    ],
                    [
                        "recitation",
                        0.9174780571592202
                    ],
                    [
                        "sort",
                        0.9178397088051592
                    ],
                    [
                        "thing",
                        0.9178397088051592
                    ],
                    [
                        "equal",
                        0.9196705290468311
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "time",
                        0.3671686833294391
                    ],
                    [
                        "value",
                        0.4191631197419926
                    ],
                    [
                        "program",
                        0.44166417421276766
                    ],
                    [
                        "right",
                        0.8417290555444561
                    ],
                    [
                        "way",
                        0.88234746698041
                    ],
                    [
                        "comment",
                        0.88234746698041
                    ],
                    [
                        "statement",
                        0.8897620442376716
                    ],
                    [
                        "thing",
                        0.9178397088051592
                    ]
                ]
            }
        },
        "SLvTCHhu5SE-2970": {
            "id": "SLvTCHhu5SE-2970",
            "heat": 0.289,
            "start": 2970.0,
            "text": " So tomorrow, the recitations will review the Python concepts we've discussed today, but we'll start by emphasizing how these loops work. OK. Thanks for coming. Enjoy recitation tomorrow.",
            "metrics": {
                "relativeDCReadability": 1.049402166577244,
                "lexicalDiversity": 0.6333333333333333,
                "posComposition": {
                    "RB": 0.033,
                    "NN": 0.167,
                    "DT": 0.1,
                    "NNS": 0.067,
                    "MD": 0.067,
                    "VB": 0.067,
                    "NNP": 0.067,
                    "VBZ": 0.067,
                    "PRP": 0.067,
                    "VBP": 0.033,
                    "VBN": 0.033,
                    "CC": 0.033,
                    "IN": 0.067,
                    "VBG": 0.067,
                    "WRB": 0.033,
                    "JJ": 0.033
                },
                "syllableRate": 0.425,
                "topicScores": [
                    [
                        "tomorrow",
                        0.5513310353960247
                    ],
                    [
                        "recitation",
                        0.5618161354170008
                    ],
                    [
                        "Python",
                        0.5627924324098472
                    ],
                    [
                        "today",
                        0.8224592704885567
                    ],
                    [
                        "loop",
                        0.8224592704885567
                    ],
                    [
                        "thank",
                        0.836754809751504
                    ],
                    [
                        "concept",
                        0.851171620264794
                    ],
                    [
                        "Python concept",
                        0.9195071807524794
                    ],
                    [
                        "recitation tomorrow",
                        3.5068698432384084
                    ]
                ],
                "topTopicSimilarity": 0.1111111111111111,
                "sharedTopicScores": [
                    [
                        "Python",
                        0.5627924324098472
                    ]
                ]
            }
        }
    }
}