{
    "metadata": {
        "id": "auK3PSZoidc",
        "avgHeat": 0.11,
        "runtime": 3250.92,
        "dale-challReadabilityScore": 7.219627986690451,
        "lexicalDiversity": 0.4560253468808041,
        "posComposition": {
            "NNP": 0.026,
            "RB": 0.079,
            "JJ": 0.057,
            "NN": 0.097,
            "PRP": 0.086,
            "VBP": 0.053,
            "VBD": 0.015,
            "DT": 0.113,
            "POS": 0.002,
            "VBZ": 0.046,
            "VBN": 0.011,
            "TO": 0.034,
            "VB": 0.056,
            "IN": 0.104,
            "CD": 0.033,
            "NNS": 0.038,
            "CC": 0.053,
            "WP": 0.007,
            "RBR": 0.002,
            "WDT": 0.011,
            "EX": 0.005,
            "MD": 0.017,
            "VBG": 0.025,
            "JJS": 0.001,
            "WRB": 0.005,
            ":": 0.01,
            "RP": 0.004,
            "PRP$": 0.004,
            "UH": 0.001,
            "JJR": 0.002,
            "PDT": 0.001,
            "NNPS": 0.001,
            "FW": 0.0,
            "RBS": 0.0
        },
        "syllableRate": 3.763,
        "topicScores": [
            [
                "Sudoku",
                0.07491855255247301
            ],
            [
                "sudoku puzzle",
                0.10727705182302248
            ],
            [
                "implication",
                0.12269911483374864
            ],
            [
                "right",
                0.12585199359018853
            ],
            [
                "IJ",
                0.12816306011546788
            ],
            [
                "look",
                0.14284700807186218
            ],
            [
                "code",
                0.14482308571162994
            ],
            [
                "thing",
                0.15226518705683248
            ],
            [
                "backtrack",
                0.15877537853063983
            ],
            [
                "number",
                0.16304079051472845
            ],
            [
                "location",
                0.1649191038187941
            ],
            [
                "N",
                0.16495274108710428
            ],
            [
                "grid",
                0.16546363741612738
            ],
            [
                "way",
                0.16634369709425906
            ],
            [
                "grid IJ",
                0.17188322737766087
            ],
            [
                "sector",
                0.17459327601926458
            ],
            [
                "guess",
                0.17592891857449075
            ],
            [
                "zero",
                0.18222627264860347
            ],
            [
                "audience",
                0.182304987573087
            ],
            [
                "different",
                0.18633777358469897
            ],
            [
                "sense",
                0.19033652121423686
            ],
            [
                "imply",
                0.19659142776512434
            ],
            [
                "queen",
                0.1980120692386338
            ],
            [
                "set",
                0.20198924694955223
            ],
            [
                "column",
                0.20333178804467736
            ],
            [
                "solution",
                0.20337134753961486
            ],
            [
                "kind",
                0.20450565115756406
            ],
            [
                "hard",
                0.21466748990585552
            ],
            [
                "constraint",
                0.21473628624062005
            ],
            [
                "row",
                0.21486920052576602
            ]
        ],
        "topicsList": [
            "Sudoku",
            "sudoku puzzle",
            "implication",
            "right",
            "IJ",
            "look",
            "code",
            "thing",
            "backtrack",
            "number",
            "location",
            "N",
            "grid",
            "way",
            "grid IJ",
            "sector",
            "guess",
            "zero",
            "audience",
            "different",
            "sense",
            "imply",
            "queen",
            "set",
            "column",
            "solution",
            "kind",
            "hard",
            "constraint",
            "row"
        ]
    },
    "chunks": {
        "auK3PSZoidc-0": {
            "id": "auK3PSZoidc-0",
            "heat": 0.1,
            "start": 0.0,
            "text": " SRINI DEVADAS: All right good morning, everyone. Welcome back. I hope you had a good long weekend. So today's puzzle is, I guess, a classic puzzle. It's Sudoku. I've never actually successfully managed to complete a Sudoku puzzle by myself, because they've fallen into two categories for me. Either they're easy, and I get bored and I stop. Or they're too hard, and I get lazy and I stop. But what I have done is write a computer program that essentially solves any Sudoku puzzle that is put in front of it in seconds. Maybe there exist puzzles for which it would take minutes, but I haven't discovered such puzzles. And what we're going to do today is talk about Sudoku, compare and contrast the human way of solving Sudoku puzzles against a brute force way, and then try and integrate the two together. You know perhaps this is the closest we're going to get to AI in this class, where we're going to try and marry an exhaustive search method with some smarts. And back-- I think when we were doing the N-queens puzzle--",
            "metrics": {
                "relativeDCReadability": 1.086171139802218,
                "lexicalDiversity": 0.5279187817258884,
                "posComposition": {
                    "NNP": 0.061,
                    "RB": 0.066,
                    "JJ": 0.066,
                    "NN": 0.102,
                    "PRP": 0.122,
                    "VBP": 0.091,
                    "VBD": 0.01,
                    "DT": 0.071,
                    "POS": 0.005,
                    "VBZ": 0.036,
                    "VBN": 0.03,
                    "TO": 0.025,
                    "VB": 0.046,
                    "IN": 0.066,
                    "CD": 0.01,
                    "NNS": 0.036,
                    "CC": 0.066,
                    "WP": 0.01,
                    "RBR": 0.005,
                    "WDT": 0.015,
                    "EX": 0.005,
                    "MD": 0.005,
                    "VBG": 0.025,
                    "JJS": 0.005,
                    "WRB": 0.01,
                    ":": 0.01
                },
                "syllableRate": 2.325,
                "topicScores": [
                    [
                        "SRINI devada",
                        0.17967378390116925
                    ],
                    [
                        "puzzle",
                        0.3001653713418471
                    ],
                    [
                        "sudoku",
                        0.32569496195073183
                    ],
                    [
                        "good",
                        0.5263708633241703
                    ],
                    [
                        "today",
                        0.5649034185393371
                    ],
                    [
                        "way",
                        0.5766461279421445
                    ],
                    [
                        "AI",
                        0.6994402670071943
                    ],
                    [
                        "sudoku puzzle",
                        0.7094065567279053
                    ],
                    [
                        "morning",
                        0.7851683432565582
                    ],
                    [
                        "weekend",
                        0.838826822374633
                    ],
                    [
                        "classic",
                        0.8697224695752386
                    ],
                    [
                        "long",
                        0.8698746763765592
                    ],
                    [
                        "second",
                        0.8846304154351996
                    ],
                    [
                        "smart",
                        0.8920069548387134
                    ],
                    [
                        "easy",
                        0.9015294304289541
                    ],
                    [
                        "hard",
                        0.9050061730245166
                    ],
                    [
                        "queen",
                        0.905475691327583
                    ],
                    [
                        "category",
                        0.90718335394105
                    ],
                    [
                        "minute",
                        0.9101665463996659
                    ],
                    [
                        "bored",
                        0.9112223328182956
                    ],
                    [
                        "force",
                        0.9121519864138492
                    ],
                    [
                        "lazy",
                        0.9143893427949459
                    ],
                    [
                        "computer",
                        0.9169547364662902
                    ],
                    [
                        "program",
                        0.9169547364662902
                    ],
                    [
                        "talk",
                        0.9208910161279418
                    ],
                    [
                        "human",
                        0.9208910161279418
                    ],
                    [
                        "brute",
                        0.9208910161279418
                    ],
                    [
                        "close",
                        0.922445702749677
                    ],
                    [
                        "exhaustive",
                        0.922445702749677
                    ],
                    [
                        "search",
                        0.922445702749677
                    ]
                ],
                "topTopicSimilarity": 0.13333333333333333,
                "sharedTopicScores": [
                    [
                        "way",
                        0.5766461279421445
                    ],
                    [
                        "sudoku puzzle",
                        0.7094065567279053
                    ],
                    [
                        "hard",
                        0.9050061730245166
                    ],
                    [
                        "queen",
                        0.905475691327583
                    ]
                ]
            }
        },
        "auK3PSZoidc-90": {
            "id": "auK3PSZoidc-90",
            "heat": 0.1,
            "start": 90.0,
            "text": " one of you asked a question about what the number of possibilities were. For an eight queens puzzle, was it eight raised to eight? And I said, well no. You can prune the search by figuring out that particular partial configurations that correspond to perhaps two queens being placed on the eight by eight board already does not correspond to a solution, because the two queens conflict with each other. And you can then shrink this eight raised to eight substantially. So that's exactly the methodology that we're going to follow here in trying to take our brute force solver, which will work, given enough time, on arbitrary Sudoku puzzles. But we may not want to wait that long. And we're going to take this strategy of pruning the search to try and improve the solver. And one last thing before I get started on the rules of Sudoku, we're going to have to have a way of measuring performance. Just like we can measure eight raised to eight or four raised to four or what have you, we want to have a way of measuring-- outside of the particular machine that's being used, we can obviously measure real time in terms of seconds, but that's not as precise-- you want to measure more precisely what the number of combinations are. And so we could certainly instrument our code with appropriate counters that will allow",
            "metrics": {
                "relativeDCReadability": 0.9383801542858436,
                "lexicalDiversity": 0.4897119341563786,
                "posComposition": {
                    "CD": 0.062,
                    "IN": 0.123,
                    "PRP": 0.066,
                    "VBD": 0.029,
                    "DT": 0.078,
                    "NN": 0.095,
                    "WP": 0.012,
                    "NNS": 0.045,
                    "TO": 0.062,
                    "CC": 0.041,
                    "RB": 0.062,
                    "MD": 0.033,
                    "VB": 0.078,
                    "VBG": 0.041,
                    "RP": 0.004,
                    "JJ": 0.037,
                    "WDT": 0.016,
                    "VBP": 0.041,
                    "VBN": 0.021,
                    "VBZ": 0.016,
                    "NNP": 0.016,
                    "PRP$": 0.008,
                    ":": 0.008,
                    "RBR": 0.004
                },
                "syllableRate": 2.858,
                "topicScores": [
                    [
                        "queen",
                        0.4113037303128756
                    ],
                    [
                        "number",
                        0.5105527842637965
                    ],
                    [
                        "puzzle",
                        0.5117705185603946
                    ],
                    [
                        "search",
                        0.5252148018431377
                    ],
                    [
                        "way",
                        0.5258791288501583
                    ],
                    [
                        "solver",
                        0.5294512583080692
                    ],
                    [
                        "time",
                        0.5453422653720019
                    ],
                    [
                        "particular",
                        0.5479480452813529
                    ],
                    [
                        "sudoku",
                        0.618001699920704
                    ],
                    [
                        "possibility",
                        0.7431120251885429
                    ],
                    [
                        "question",
                        0.7612940170463194
                    ],
                    [
                        "solution",
                        0.8564262881513489
                    ],
                    [
                        "performance",
                        0.8632792561241099
                    ],
                    [
                        "partial",
                        0.8680126273542301
                    ],
                    [
                        "configuration",
                        0.8680126273542301
                    ],
                    [
                        "board",
                        0.8680126273542301
                    ],
                    [
                        "conflict",
                        0.8680126273542301
                    ],
                    [
                        "force",
                        0.8734225466194129
                    ],
                    [
                        "arbitrary",
                        0.8734225466194129
                    ],
                    [
                        "methodology",
                        0.8838233549867895
                    ],
                    [
                        "brute",
                        0.8838233549867895
                    ],
                    [
                        "second",
                        0.8891249079195387
                    ],
                    [
                        "combination",
                        0.8891249079195387
                    ],
                    [
                        "strategy",
                        0.8926282875783247
                    ],
                    [
                        "thing",
                        0.8957714395581756
                    ],
                    [
                        "rule",
                        0.8957714395581756
                    ],
                    [
                        "measuring--",
                        0.8983855698103222
                    ],
                    [
                        "machine",
                        0.8983855698103222
                    ],
                    [
                        "real",
                        0.8983855698103222
                    ],
                    [
                        "term",
                        0.8983855698103222
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "queen",
                        0.4113037303128756
                    ],
                    [
                        "number",
                        0.5105527842637965
                    ],
                    [
                        "way",
                        0.5258791288501583
                    ],
                    [
                        "solution",
                        0.8564262881513489
                    ],
                    [
                        "thing",
                        0.8957714395581756
                    ]
                ]
            }
        },
        "auK3PSZoidc-180": {
            "id": "auK3PSZoidc-180",
            "heat": 0.1,
            "start": 180.0,
            "text": " us to measure this performance. And so then it won't matter if our code runs on a fast machine or a slow machine. We can compare it with another piece of code or another variant of the code and say, oh this new variant is slower or the new variant is faster according to this metric. All right? So without further ado, let's dive into Sudoku. How many of you have never seen Sudoku, never played Sudoku? All right, so that's fine. It's only going to take me about 30 seconds to explain what the rules of Sudoku are. And then we can dive into trying to, at least partially, solve this puzzle. I do not want to completely solve the puzzle because, as I said, it's either too simple or it's too hard. And I'd rather write computer programs. And so the rules of Sudoku are simple. So this is classic Sudoku, and it's a nine by nine. There's many variants of Sudoku. In fact, a couple of the exercises talk about two variants, diagonal Sudoku and even Sudoku, I think-- there's probably odd Sudokus as well-- that add even more constraints to the basic constraints of Sudoku that I'm going to write up here. And this is nine by nine Sudoku. And the numbers are one through nine.",
            "metrics": {
                "relativeDCReadability": 1.0662975592793449,
                "lexicalDiversity": 0.5150214592274678,
                "posComposition": {
                    "PRP": 0.069,
                    "TO": 0.034,
                    "VB": 0.056,
                    "DT": 0.086,
                    "NN": 0.077,
                    "CC": 0.06,
                    "RB": 0.09,
                    "MD": 0.017,
                    "IN": 0.116,
                    "PRP$": 0.004,
                    "VBZ": 0.052,
                    "JJ": 0.073,
                    "UH": 0.004,
                    "JJR": 0.009,
                    "RBR": 0.004,
                    "VBG": 0.017,
                    "NNP": 0.069,
                    "POS": 0.004,
                    "VBP": 0.034,
                    "VBN": 0.004,
                    "VBD": 0.013,
                    "CD": 0.034,
                    "NNS": 0.043,
                    "WP": 0.004,
                    "JJS": 0.004,
                    "EX": 0.009,
                    ":": 0.009,
                    "RP": 0.004
                },
                "syllableRate": 2.758,
                "topicScores": [
                    [
                        "Sudoku",
                        0.18624647554435586
                    ],
                    [
                        "variant",
                        0.34835321278588827
                    ],
                    [
                        "code",
                        0.43257596305198925
                    ],
                    [
                        "machine",
                        0.5226770731709307
                    ],
                    [
                        "slow",
                        0.539761115824655
                    ],
                    [
                        "new",
                        0.5423198739749229
                    ],
                    [
                        "fast",
                        0.5454917273254549
                    ],
                    [
                        "puzzle",
                        0.5540650365729578
                    ],
                    [
                        "rule",
                        0.5549798902503552
                    ],
                    [
                        "simple",
                        0.5693469729157915
                    ],
                    [
                        "constraint",
                        0.5856893139925988
                    ],
                    [
                        "performance",
                        0.7713750445813224
                    ],
                    [
                        "metric",
                        0.8605540679553196
                    ],
                    [
                        "piece",
                        0.8936140892688416
                    ],
                    [
                        "fine",
                        0.8942004156817166
                    ],
                    [
                        "ado",
                        0.9032489630329413
                    ],
                    [
                        "hard",
                        0.9034115053641741
                    ],
                    [
                        "program",
                        0.9055307449789847
                    ],
                    [
                        "fact",
                        0.9199489287504649
                    ],
                    [
                        "computer",
                        0.9220813288581275
                    ],
                    [
                        "second",
                        0.9229044098110153
                    ],
                    [
                        "classic",
                        0.9249525624252235
                    ],
                    [
                        "couple",
                        0.9271855932491713
                    ],
                    [
                        "diagonal",
                        0.9271855932491713
                    ],
                    [
                        "exercise",
                        0.933505042799065
                    ],
                    [
                        "odd",
                        0.933505042799065
                    ],
                    [
                        "well--",
                        0.933505042799065
                    ],
                    [
                        "basic",
                        0.933505042799065
                    ],
                    [
                        "number",
                        0.9351604857390537
                    ],
                    [
                        "classic Sudoku",
                        1.4749618077004454
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "Sudoku",
                        0.18624647554435586
                    ],
                    [
                        "code",
                        0.43257596305198925
                    ],
                    [
                        "constraint",
                        0.5856893139925988
                    ],
                    [
                        "hard",
                        0.9034115053641741
                    ],
                    [
                        "number",
                        0.9351604857390537
                    ]
                ]
            }
        },
        "auK3PSZoidc-270": {
            "id": "auK3PSZoidc-270",
            "heat": 0.1,
            "start": 270.0,
            "text": " And the rules are simple. Each row has all the numbers, which means that no numbers could be repeated, because there's nine columns and nine rows. So there's nine numbers on each row. Each column has all the numbers-- same thing. So there's nine rows and nine columns. And then each sector, which is a three by three grid-- and so that's why I have these overhangs here corresponding to pointing out what the nine sectors are in Sudoku. So this is a sector. That's a sector. This middle one, which is completely blank right now is a sector, et cetera. So each sector has all the numbers. You can grow the size of the puzzle. It gets more difficult. You could add more constraints. As I mentioned, diagonal Sudoku might say something like both of the diagonals, the large diagonals, the full size diagonals, have all nine numbers on them, et cetera. So that makes the puzzle different.",
            "metrics": {
                "relativeDCReadability": 0.9616685158316999,
                "lexicalDiversity": 0.4759036144578313,
                "posComposition": {
                    "CC": 0.03,
                    "DT": 0.169,
                    "NNS": 0.108,
                    "VBP": 0.03,
                    "JJ": 0.054,
                    "NN": 0.102,
                    "VBZ": 0.09,
                    "PDT": 0.018,
                    "WDT": 0.024,
                    "IN": 0.078,
                    "MD": 0.024,
                    "VB": 0.024,
                    "VBN": 0.006,
                    "EX": 0.018,
                    "CD": 0.06,
                    ":": 0.012,
                    "RB": 0.036,
                    "WRB": 0.006,
                    "PRP": 0.036,
                    "VBG": 0.012,
                    "TO": 0.006,
                    "RP": 0.006,
                    "WP": 0.006,
                    "NNP": 0.024,
                    "RBR": 0.006,
                    "JJR": 0.006,
                    "VBD": 0.006
                },
                "syllableRate": 1.858,
                "topicScores": [
                    [
                        "sector",
                        0.3118661962266098
                    ],
                    [
                        "number",
                        0.3363868836846845
                    ],
                    [
                        "row",
                        0.36108733313287067
                    ],
                    [
                        "diagonal",
                        0.3927839583296722
                    ],
                    [
                        "Sudoku",
                        0.40960589483230464
                    ],
                    [
                        "column",
                        0.4283600203864369
                    ],
                    [
                        "cetera",
                        0.5189695198623522
                    ],
                    [
                        "puzzle",
                        0.5635467855610837
                    ],
                    [
                        "size",
                        0.5726429255648612
                    ],
                    [
                        "simple",
                        0.783453927386599
                    ],
                    [
                        "rule",
                        0.8312076363522852
                    ],
                    [
                        "thing",
                        0.8818036189319867
                    ],
                    [
                        "difficult",
                        0.913061232512743
                    ],
                    [
                        "constraint",
                        0.9145669892676266
                    ],
                    [
                        "middle",
                        0.9157037436010048
                    ],
                    [
                        "different",
                        0.9170813393322161
                    ],
                    [
                        "grid--",
                        0.9215480531061461
                    ],
                    [
                        "overhang",
                        0.9215480531061461
                    ],
                    [
                        "large",
                        0.9238600947996373
                    ],
                    [
                        "blank",
                        0.9299239905191691
                    ],
                    [
                        "diagonal Sudoku",
                        1.4515209426917308
                    ],
                    [
                        "et cetera",
                        1.6277282565673288
                    ],
                    [
                        "puzzle different",
                        4.529063095240467
                    ],
                    [
                        "size diagonal",
                        4.8059142453426675
                    ],
                    [
                        "large diagonal",
                        5.352242844593303
                    ],
                    [
                        "numbers-- same thing",
                        25.076557511254798
                    ]
                ],
                "topTopicSimilarity": 0.3076923076923077,
                "sharedTopicScores": [
                    [
                        "sector",
                        0.3118661962266098
                    ],
                    [
                        "number",
                        0.3363868836846845
                    ],
                    [
                        "row",
                        0.36108733313287067
                    ],
                    [
                        "Sudoku",
                        0.40960589483230464
                    ],
                    [
                        "column",
                        0.4283600203864369
                    ],
                    [
                        "thing",
                        0.8818036189319867
                    ],
                    [
                        "constraint",
                        0.9145669892676266
                    ],
                    [
                        "different",
                        0.9170813393322161
                    ]
                ]
            }
        },
        "auK3PSZoidc-360": {
            "id": "auK3PSZoidc-360",
            "heat": 0.1,
            "start": 360.0,
            "text": " You may have a solution to the nine by nine original Sudoku puzzle, but it may not be a solution to the diagonal puzzle. Obviously the other way around works because the diagonal puzzle only has more constraints. And so what we do here is try and use implications. Right, so we have these rules. And we'll first forget about computer programs and try and solve this the way people do when they just have a paper and pencil and they have the puzzle in front of them. And they try and use these rules to discover empty positions. And it's kind of hard to do anything with this sector here. You could use the row and column constraints, obviously, even for this sector. Because you have constraints on these three based on the fact that you have nine and seven and one and six on this row, et cetera. But usually you go with sectors that have a few numbers in them. You go with rows that have a few numbers in them. And you go with columns that have a few numbers in them. And then you can try and shrink the possibilities. All right? So just because I don't want to go overboard with respect to looking all over the puzzle, let's focus in on eight-- the number eight. And one of you tell me if I can imply something",
            "metrics": {
                "relativeDCReadability": 0.8845689814118106,
                "lexicalDiversity": 0.4117647058823529,
                "posComposition": {
                    "PRP": 0.101,
                    "MD": 0.025,
                    "VB": 0.059,
                    "DT": 0.105,
                    "NN": 0.118,
                    "TO": 0.025,
                    "CD": 0.042,
                    "IN": 0.118,
                    "JJ": 0.038,
                    "NNP": 0.013,
                    "CC": 0.084,
                    "RB": 0.071,
                    "NNS": 0.071,
                    "VBZ": 0.017,
                    "JJR": 0.004,
                    "WP": 0.004,
                    "VBP": 0.071,
                    "WRB": 0.004,
                    "VBN": 0.004,
                    "WDT": 0.013,
                    "VBG": 0.004,
                    "POS": 0.004,
                    ":": 0.004
                },
                "syllableRate": 2.658,
                "topicScores": [
                    [
                        "puzzle",
                        0.31406509317476916
                    ],
                    [
                        "number",
                        0.342554116698717
                    ],
                    [
                        "sudoku",
                        0.4050534194124107
                    ],
                    [
                        "sector",
                        0.4185696578876584
                    ],
                    [
                        "constraint",
                        0.4195657164263352
                    ],
                    [
                        "row",
                        0.4391715770353237
                    ],
                    [
                        "solution",
                        0.4422696044950012
                    ],
                    [
                        "diagonal",
                        0.46427273021255944
                    ],
                    [
                        "original sudoku",
                        0.4698003178328189
                    ],
                    [
                        "sudoku puzzle",
                        0.4899603408780322
                    ],
                    [
                        "rule",
                        0.5277114929793418
                    ],
                    [
                        "way",
                        0.5284300737507878
                    ],
                    [
                        "column",
                        0.557334724628765
                    ],
                    [
                        "implication",
                        0.8397501022187756
                    ],
                    [
                        "position",
                        0.8723524426987332
                    ],
                    [
                        "cetera",
                        0.8750419674575015
                    ],
                    [
                        "computer",
                        0.8934684000976424
                    ],
                    [
                        "program",
                        0.8934684000976424
                    ],
                    [
                        "people",
                        0.8934684000976424
                    ],
                    [
                        "paper",
                        0.8934684000976424
                    ],
                    [
                        "pencil",
                        0.8934684000976424
                    ],
                    [
                        "possibility",
                        0.8944827709992508
                    ],
                    [
                        "hard",
                        0.9036031295455718
                    ],
                    [
                        "fact",
                        0.9097787967173198
                    ],
                    [
                        "respect",
                        0.9196094224945571
                    ],
                    [
                        "eight--",
                        0.9196094224945571
                    ],
                    [
                        "diagonal puzzle",
                        0.9362128668494132
                    ],
                    [
                        "original sudoku puzzle",
                        1.1288795219931962
                    ],
                    [
                        "column constraint",
                        2.8647439161312094
                    ],
                    [
                        "way people",
                        2.973254873340607
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "number",
                        0.342554116698717
                    ],
                    [
                        "sector",
                        0.4185696578876584
                    ],
                    [
                        "constraint",
                        0.4195657164263352
                    ],
                    [
                        "row",
                        0.4391715770353237
                    ],
                    [
                        "solution",
                        0.4422696044950012
                    ],
                    [
                        "sudoku puzzle",
                        0.4899603408780322
                    ],
                    [
                        "way",
                        0.5284300737507878
                    ],
                    [
                        "column",
                        0.557334724628765
                    ],
                    [
                        "implication",
                        0.8397501022187756
                    ],
                    [
                        "hard",
                        0.9036031295455718
                    ]
                ]
            }
        },
        "auK3PSZoidc-450": {
            "id": "auK3PSZoidc-450",
            "heat": 0.1,
            "start": 450.0,
            "text": " based on the locations of eight on the top third of this puzzle. Yeah, go ahead. AUDIENCE: Top middle square. SRINI DEVADAS: Top middle square, what's your name? Kye? So Kye says top middle square should be an eight, right here. Right, and-- oh, top OK. Yeah that clearly can't be an eight, because this is an eight here. But good, so the claim is this is an eight. And Kye, how did you figure that out? AUDIENCE: You can eliminate the first two rows because. SRINI DEVADAS: Right you can eliminate this, because eight can't be here because of this eight. Eight can't be here because of this eight. You need to have an 8 in here somewhere, because eight doesn't exist in the sector. So that would imply that I need to put an eight up here. OK? So this is what's called a horizontal scan. The only thing that Kye did here was scan horizontally. And you can imagine that-- so Kye did not use, in order to imply the eight-- and so this word implication, imply, is something that we're going to use in a more technical sense as well when we write our code, but an implication essentially says these rules imply the location of the eight. Right? And we didn't do a vertical scan. We did not use the fact that-- in this particular implication, we did not use the fact that a column needs to have all numbers on it,",
            "metrics": {
                "relativeDCReadability": 1.0027274342895365,
                "lexicalDiversity": 0.4749034749034749,
                "posComposition": {
                    "VBN": 0.008,
                    "IN": 0.1,
                    "DT": 0.143,
                    "NNS": 0.019,
                    "CD": 0.054,
                    "JJ": 0.042,
                    "NN": 0.093,
                    "NNP": 0.097,
                    "VBP": 0.023,
                    "RB": 0.097,
                    "VBD": 0.031,
                    "WP": 0.008,
                    "VBZ": 0.042,
                    "PRP$": 0.008,
                    "MD": 0.031,
                    "VB": 0.073,
                    "CC": 0.027,
                    ":": 0.015,
                    "UH": 0.004,
                    "WRB": 0.008,
                    "PRP": 0.046,
                    "RP": 0.004,
                    "TO": 0.019,
                    "VBG": 0.004,
                    "RBR": 0.004
                },
                "syllableRate": 2.792,
                "topicScores": [
                    [
                        "Kye",
                        0.2604955607537708
                    ],
                    [
                        "audience",
                        0.31627717553508394
                    ],
                    [
                        "srini",
                        0.3693274712439872
                    ],
                    [
                        "right",
                        0.3778374321912575
                    ],
                    [
                        "middle",
                        0.40990091277204865
                    ],
                    [
                        "square",
                        0.4215692929836036
                    ],
                    [
                        "scan",
                        0.45230723312276466
                    ],
                    [
                        "implication",
                        0.4630843714366069
                    ],
                    [
                        "srini devada",
                        0.5569952697473113
                    ],
                    [
                        "location",
                        0.5756134812898744
                    ],
                    [
                        "that--",
                        0.5856146697598587
                    ],
                    [
                        "fact",
                        0.5863897102154526
                    ],
                    [
                        "devadas",
                        0.6547370946002401
                    ],
                    [
                        "puzzle",
                        0.8024746827166569
                    ],
                    [
                        "good",
                        0.9274777329464517
                    ],
                    [
                        "sector",
                        0.9281166420318614
                    ],
                    [
                        "row",
                        0.9372590421073135
                    ],
                    [
                        "claim",
                        0.9393002440706086
                    ],
                    [
                        "horizontal",
                        0.9420761426830233
                    ],
                    [
                        "order",
                        0.9434304899241434
                    ],
                    [
                        "word",
                        0.9438248727203895
                    ],
                    [
                        "code",
                        0.9438248727203895
                    ],
                    [
                        "vertical",
                        0.9445449238044406
                    ],
                    [
                        "particular",
                        0.9448749168649968
                    ],
                    [
                        "thing",
                        0.947394249469491
                    ],
                    [
                        "technical",
                        0.9485589077350416
                    ],
                    [
                        "sense",
                        0.9485589077350416
                    ],
                    [
                        "rule",
                        0.9485589077350416
                    ],
                    [
                        "column",
                        0.9495251940887689
                    ],
                    [
                        "number",
                        0.9495251940887689
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "audience",
                        0.31627717553508394
                    ],
                    [
                        "right",
                        0.3778374321912575
                    ],
                    [
                        "implication",
                        0.4630843714366069
                    ],
                    [
                        "location",
                        0.5756134812898744
                    ],
                    [
                        "sector",
                        0.9281166420318614
                    ],
                    [
                        "row",
                        0.9372590421073135
                    ],
                    [
                        "code",
                        0.9438248727203895
                    ],
                    [
                        "thing",
                        0.947394249469491
                    ],
                    [
                        "sense",
                        0.9485589077350416
                    ],
                    [
                        "column",
                        0.9495251940887689
                    ],
                    [
                        "number",
                        0.9495251940887689
                    ]
                ]
            }
        },
        "auK3PSZoidc-540": {
            "id": "auK3PSZoidc-540",
            "heat": 0.1,
            "start": 540.0,
            "text": " and therefore all of the numbers on a column have to be unique. Take a look at-- take a look at this part here. And let's look at one. And try and use a more sophisticated form of implication corresponding to both horizontal and vertical scans to imply the position of a one somewhere on the puzzle. Can someone do that? Yeah, back there. AUDIENCE: In the top box-- in the top right box, it's to the right of six. SRINI DEVADAS: OK, so the one can't be here. The one can't be here. Right? And the one can't be here. So it has to be over here. What's your name? AUDIENCE: George. SRINI DEVADAS: George-- so George says the one has to be here. And he used both vertical scanning as well as horizontal scanning in order to imply the one. So it's a little more sophisticated. OK, on top of that, obviously, sectors are going to give you some implications as well. And there's no end to this, honestly. There's combinations, there's also a little bit of look ahead, where the hardest puzzles are the ones where you run out of the eights and the ones in terms of the examples that we have here where we've just sort of implied--",
            "metrics": {
                "relativeDCReadability": 1.0031621838589764,
                "lexicalDiversity": 0.47368421052631576,
                "posComposition": {
                    "CC": 0.039,
                    "RB": 0.096,
                    "DT": 0.136,
                    "IN": 0.114,
                    "NNS": 0.048,
                    "NN": 0.118,
                    "VBP": 0.031,
                    "TO": 0.039,
                    "VB": 0.066,
                    "JJ": 0.048,
                    ":": 0.018,
                    "POS": 0.004,
                    "CD": 0.018,
                    "RBR": 0.009,
                    "VBG": 0.009,
                    "NNP": 0.07,
                    "PRP": 0.035,
                    "VBZ": 0.039,
                    "MD": 0.013,
                    "WP": 0.004,
                    "PRP$": 0.004,
                    "VBD": 0.004,
                    "EX": 0.013,
                    "WRB": 0.013,
                    "JJS": 0.004,
                    "VBN": 0.004
                },
                "syllableRate": 2.508,
                "topicScores": [
                    [
                        "SRINI",
                        0.35594597424756447
                    ],
                    [
                        "look",
                        0.38139405035991986
                    ],
                    [
                        "right",
                        0.43626754123033307
                    ],
                    [
                        "George",
                        0.4741759604476758
                    ],
                    [
                        "sophisticated",
                        0.5640428056350254
                    ],
                    [
                        "puzzle",
                        0.565454119415965
                    ],
                    [
                        "audience",
                        0.5758507481923305
                    ],
                    [
                        "horizontal",
                        0.5779897069602774
                    ],
                    [
                        "vertical",
                        0.5779897069602774
                    ],
                    [
                        "little",
                        0.578628932998994
                    ],
                    [
                        "implication",
                        0.5788148427094489
                    ],
                    [
                        "scanning",
                        0.5859841749214302
                    ],
                    [
                        "unique",
                        0.8364434990625408
                    ],
                    [
                        "number",
                        0.8727180041813206
                    ],
                    [
                        "column",
                        0.8727180041813206
                    ],
                    [
                        "form",
                        0.9108009659741776
                    ],
                    [
                        "corresponding",
                        0.9108009659741776
                    ],
                    [
                        "position",
                        0.9108009659741776
                    ],
                    [
                        "box",
                        0.9179400390120068
                    ],
                    [
                        "implied--",
                        0.92002369105877
                    ],
                    [
                        "sector",
                        0.9326147305157152
                    ],
                    [
                        "combination",
                        0.9335680588579331
                    ],
                    [
                        "order",
                        0.9372249794266273
                    ],
                    [
                        "end",
                        0.9386853718068984
                    ],
                    [
                        "bit",
                        0.939110700825982
                    ],
                    [
                        "hard",
                        0.939110700825982
                    ],
                    [
                        "term",
                        0.939110700825982
                    ],
                    [
                        "example",
                        0.939110700825982
                    ],
                    [
                        "right box",
                        4.023481955782544
                    ],
                    [
                        "sophisticated form",
                        4.383404624996533
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "look",
                        0.38139405035991986
                    ],
                    [
                        "right",
                        0.43626754123033307
                    ],
                    [
                        "audience",
                        0.5758507481923305
                    ],
                    [
                        "implication",
                        0.5788148427094489
                    ],
                    [
                        "number",
                        0.8727180041813206
                    ],
                    [
                        "column",
                        0.8727180041813206
                    ],
                    [
                        "sector",
                        0.9326147305157152
                    ],
                    [
                        "hard",
                        0.939110700825982
                    ]
                ]
            }
        },
        "auK3PSZoidc-630": {
            "id": "auK3PSZoidc-630",
            "heat": 0.1,
            "start": 630.0,
            "text": " without guessing, we've implied the location of a number. And then because of that, our puzzle got smaller in the sense that there's fewer blank locations, blank squares. And then that helps us move forward. So the easy puzzles are the ones where fairly straightforward implications like the ones we did here always exist, are easy to find. Sometimes you have to search a little bit, look at the top, look at the bottom, look at the middle. And then you fill things in. And because you filled things in, something else now is in play, right? It becomes viable in terms of an implication. The fact that I put an eight in there implies that the eight is now taken-- its location. And so now obviously there's only four left here. And the fact that there's an eight here implies that all of these can't have an eight in them. These seven locations underneath can't have an eight in them, right, because of the constraints. So this shrinking of possibilities is something that a human does. And you can kind of go through this process. It's an iterative process that you go through. And if you get stuck then you can't do an implication that gives you a number. And some of the harder puzzles you have to-- you have a couple of choices, and only one of them",
            "metrics": {
                "relativeDCReadability": 0.890555692266341,
                "lexicalDiversity": 0.4375,
                "posComposition": {
                    "IN": 0.158,
                    "VBG": 0.004,
                    "PRP": 0.079,
                    "VBP": 0.042,
                    "VBN": 0.013,
                    "DT": 0.138,
                    "NN": 0.113,
                    "CC": 0.042,
                    "RB": 0.092,
                    "PRP$": 0.008,
                    "VBD": 0.021,
                    "JJR": 0.008,
                    "EX": 0.017,
                    "VBZ": 0.05,
                    "JJ": 0.046,
                    "NNS": 0.062,
                    "VB": 0.025,
                    "WRB": 0.004,
                    "TO": 0.013,
                    "NNP": 0.004,
                    "CD": 0.033,
                    ":": 0.008,
                    "MD": 0.017,
                    "WDT": 0.004
                },
                "syllableRate": 2.617,
                "topicScores": [
                    [
                        "location",
                        0.3818008569066011
                    ],
                    [
                        "implication",
                        0.44431965587940936
                    ],
                    [
                        "puzzle",
                        0.44454327199804866
                    ],
                    [
                        "blank",
                        0.5234711272727535
                    ],
                    [
                        "thing",
                        0.5248582029872382
                    ],
                    [
                        "number",
                        0.5274432171521664
                    ],
                    [
                        "right",
                        0.5488731509495264
                    ],
                    [
                        "fact",
                        0.5549518910244314
                    ],
                    [
                        "easy",
                        0.5595030233877504
                    ],
                    [
                        "process",
                        0.5713127764830019
                    ],
                    [
                        "square",
                        0.8146845108209411
                    ],
                    [
                        "small",
                        0.8702712714825683
                    ],
                    [
                        "sense",
                        0.8702712714825683
                    ],
                    [
                        "few",
                        0.8702712714825683
                    ],
                    [
                        "middle",
                        0.8800923316132475
                    ],
                    [
                        "little",
                        0.9006104504689374
                    ],
                    [
                        "bit",
                        0.9006104504689374
                    ],
                    [
                        "straightforward",
                        0.901878630083867
                    ],
                    [
                        "constraint",
                        0.9048186417087586
                    ],
                    [
                        "play",
                        0.9101340709090336
                    ],
                    [
                        "viable",
                        0.9207548965412816
                    ],
                    [
                        "term",
                        0.9207548965412816
                    ],
                    [
                        "human",
                        0.9228553806599078
                    ],
                    [
                        "choice",
                        0.9269930407978192
                    ],
                    [
                        "shrinking",
                        0.9295220761155449
                    ],
                    [
                        "possibility",
                        0.9295220761155449
                    ],
                    [
                        "iterative",
                        0.9316291917301067
                    ],
                    [
                        "stuck",
                        0.9325210351412371
                    ],
                    [
                        "hard",
                        0.9333279999995129
                    ],
                    [
                        "to--",
                        0.9333279999995129
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "location",
                        0.3818008569066011
                    ],
                    [
                        "implication",
                        0.44431965587940936
                    ],
                    [
                        "thing",
                        0.5248582029872382
                    ],
                    [
                        "number",
                        0.5274432171521664
                    ],
                    [
                        "right",
                        0.5488731509495264
                    ],
                    [
                        "sense",
                        0.8702712714825683
                    ],
                    [
                        "constraint",
                        0.9048186417087586
                    ],
                    [
                        "hard",
                        0.9333279999995129
                    ]
                ]
            }
        },
        "auK3PSZoidc-720": {
            "id": "auK3PSZoidc-720",
            "heat": 0.1,
            "start": 720.0,
            "text": " is going to be a correct one going forward, but you don't know that at that moment. So you now have to guess. And perhaps you put an eight over here or an eight over there. And then you say I'm going to go with an eight over here. And then you go a little bit further, and then you realize, wait a minute, there's no way I can solve this puzzle. Because I need to put two sevens into this sector. And then you go back and there's actually a bit of backtracking that happens-- a wrong guess, and you need to go backwards. And it's very hard to do for us. It's very hard to do for us with pencil and paper, keeping things in our head, or you know writing down notes on the side of the paper. Whereas it's very easy to do that for a computer program. And we kind of did that already in the eight queens. But we're going to do that in a much more systematic way over here. So you kind of weigh these two ways of approaching this problem. One of which is I'm just going to blast through the different combinations, having a giant tree structure in my head of where, you know this might imply that particular grid location grid IJ equals eight. This might imply that grid IJ equals seven. And there's obviously a huge number of combinations corresponding to which of these squares that I pick and what value I assign to those squares. And then once I do that there's another set. And this explodes on you very quickly. And so if you just did this in a completely brutish way,",
            "metrics": {
                "relativeDCReadability": 0.8977031179772477,
                "lexicalDiversity": 0.4261744966442953,
                "posComposition": {
                    "VBZ": 0.037,
                    "VBG": 0.037,
                    "TO": 0.04,
                    "VB": 0.05,
                    "DT": 0.117,
                    "JJ": 0.047,
                    "CD": 0.034,
                    "RB": 0.094,
                    "CC": 0.064,
                    "PRP": 0.091,
                    "VBP": 0.057,
                    "IN": 0.117,
                    "NN": 0.097,
                    "RBR": 0.007,
                    "EX": 0.013,
                    "MD": 0.01,
                    "NNS": 0.04,
                    ":": 0.003,
                    "PRP$": 0.007,
                    "RP": 0.003,
                    "VBD": 0.007,
                    "NNP": 0.01,
                    "WDT": 0.01,
                    "WRB": 0.003,
                    "WP": 0.003
                },
                "syllableRate": 3.233,
                "topicScores": [
                    [
                        "way",
                        0.38414362448247735
                    ],
                    [
                        "IJ",
                        0.4098283235832789
                    ],
                    [
                        "grid",
                        0.44101760940248586
                    ],
                    [
                        "hard",
                        0.5333980808315663
                    ],
                    [
                        "guess",
                        0.5390159303408694
                    ],
                    [
                        "bit",
                        0.5476653524208471
                    ],
                    [
                        "paper",
                        0.558120430311548
                    ],
                    [
                        "head",
                        0.5583868301533447
                    ],
                    [
                        "seven",
                        0.5593932761977443
                    ],
                    [
                        "combination",
                        0.5681687983208042
                    ],
                    [
                        "square",
                        0.5699082521713583
                    ],
                    [
                        "moment",
                        0.8217090209112909
                    ],
                    [
                        "grid IJ",
                        0.8464396001908078
                    ],
                    [
                        "correct",
                        0.8575431313403866
                    ],
                    [
                        "puzzle",
                        0.8795875489692986
                    ],
                    [
                        "sector",
                        0.8846747203626378
                    ],
                    [
                        "program",
                        0.8969075682519008
                    ],
                    [
                        "minute",
                        0.8975665288208342
                    ],
                    [
                        "queen",
                        0.8988818340902243
                    ],
                    [
                        "problem",
                        0.9021298258711367
                    ],
                    [
                        "little",
                        0.9051318805898901
                    ],
                    [
                        "wrong",
                        0.9054413147463151
                    ],
                    [
                        "set",
                        0.9068233841185276
                    ],
                    [
                        "thing",
                        0.9105803854050739
                    ],
                    [
                        "computer",
                        0.912557557743265
                    ],
                    [
                        "pencil",
                        0.9172731701753888
                    ],
                    [
                        "note",
                        0.9172731701753888
                    ],
                    [
                        "different",
                        0.9182303761862575
                    ],
                    [
                        "easy",
                        0.919115502360267
                    ],
                    [
                        "systematic",
                        0.9220867894639809
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "way",
                        0.38414362448247735
                    ],
                    [
                        "IJ",
                        0.4098283235832789
                    ],
                    [
                        "grid",
                        0.44101760940248586
                    ],
                    [
                        "hard",
                        0.5333980808315663
                    ],
                    [
                        "guess",
                        0.5390159303408694
                    ],
                    [
                        "grid IJ",
                        0.8464396001908078
                    ],
                    [
                        "sector",
                        0.8846747203626378
                    ],
                    [
                        "queen",
                        0.8988818340902243
                    ],
                    [
                        "set",
                        0.9068233841185276
                    ],
                    [
                        "thing",
                        0.9105803854050739
                    ],
                    [
                        "different",
                        0.9182303761862575
                    ]
                ]
            }
        },
        "auK3PSZoidc-810": {
            "id": "auK3PSZoidc-810",
            "heat": 0.1,
            "start": 810.0,
            "text": " there's no way your program would ever end, even on a simple puzzle. But thanks to these rules, it turns out a fairly straightforward program that's 20 lines of code is going to solve most problems-- at least the ones that I've looked at-- in a reasonable amount of time. And then it's just interesting from an algorithmic standpoint and an efficiency standpoint to look and see how we can take that fairly naive approach which does have some pruning but it's exhaustive and improve that. All right, so that's kind of where we are headed. Make sense? Any questions about what we have so far? All right. So what we're going to do is go ahead and look at code for Sudoku that-- so all you need to think about now for the next few minutes, because we're going to move into exhaustive search mode and code things up in a computer, is just those rules. So you don't have to really think about horizontal scans and implications or vertical scans. That's going to come a little bit later. And we're going to vary that up as well. But we're going to do kind of what we did for the N-queens problem, which is set up a recursive search that is going to explore all of these different possibilities. And the equivalent of no conflicts for the eight queens",
            "metrics": {
                "relativeDCReadability": 0.9845330462069787,
                "lexicalDiversity": 0.45714285714285713,
                "posComposition": {
                    "EX": 0.004,
                    "VBZ": 0.053,
                    "DT": 0.098,
                    "NN": 0.098,
                    "PRP$": 0.004,
                    "MD": 0.008,
                    "RB": 0.098,
                    "VB": 0.073,
                    "IN": 0.094,
                    "JJ": 0.061,
                    "CC": 0.053,
                    "NNS": 0.061,
                    "TO": 0.045,
                    "PRP": 0.057,
                    "RP": 0.016,
                    "WDT": 0.029,
                    "CD": 0.008,
                    "VBG": 0.029,
                    "JJS": 0.008,
                    ":": 0.012,
                    "VBP": 0.037,
                    "VBN": 0.012,
                    "WRB": 0.008,
                    "NNP": 0.016,
                    "WP": 0.012,
                    "VBD": 0.004
                },
                "syllableRate": 2.733,
                "topicScores": [
                    [
                        "code",
                        0.4261994960102758
                    ],
                    [
                        "program",
                        0.4737437003024054
                    ],
                    [
                        "standpoint",
                        0.5087082980970656
                    ],
                    [
                        "rule",
                        0.5153706725647
                    ],
                    [
                        "queen",
                        0.5296200089508485
                    ],
                    [
                        "exhaustive",
                        0.5391572900527257
                    ],
                    [
                        "scan",
                        0.5435825872476339
                    ],
                    [
                        "search",
                        0.5501238545138571
                    ],
                    [
                        "sudoku",
                        0.6385021571938866
                    ],
                    [
                        "N",
                        0.6636274705012966
                    ],
                    [
                        "puzzle",
                        0.6835251376478376
                    ],
                    [
                        "simple",
                        0.7251566767803189
                    ],
                    [
                        "way",
                        0.7433066634811181
                    ],
                    [
                        "time",
                        0.7647350687336675
                    ],
                    [
                        "pruning",
                        0.7979978142710963
                    ],
                    [
                        "thank",
                        0.7988277974143616
                    ],
                    [
                        "straightforward",
                        0.8133648535319293
                    ],
                    [
                        "line",
                        0.8133648535319293
                    ],
                    [
                        "one",
                        0.8133648535319293
                    ],
                    [
                        "reasonable",
                        0.8133648535319293
                    ],
                    [
                        "sense",
                        0.8221881828731183
                    ],
                    [
                        "interesting",
                        0.8411800142304356
                    ],
                    [
                        "algorithmic",
                        0.8411800142304356
                    ],
                    [
                        "efficiency",
                        0.8411800142304356
                    ],
                    [
                        "naive",
                        0.8411800142304356
                    ],
                    [
                        "approach",
                        0.8411800142304356
                    ],
                    [
                        "that--",
                        0.8533763657071571
                    ],
                    [
                        "possibility",
                        0.8666854104989521
                    ],
                    [
                        "question",
                        0.8685819061025821
                    ],
                    [
                        "problem",
                        0.8780990939737514
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "code",
                        0.4261994960102758
                    ],
                    [
                        "queen",
                        0.5296200089508485
                    ],
                    [
                        "N",
                        0.6636274705012966
                    ],
                    [
                        "way",
                        0.7433066634811181
                    ],
                    [
                        "sense",
                        0.8221881828731183
                    ]
                ]
            }
        },
        "auK3PSZoidc-900": {
            "id": "auK3PSZoidc-900",
            "heat": 0.1,
            "start": 900.0,
            "text": " or the N-queens problem, which said there's no conflicts here because none of the queens attack each other, we're going to have something that essentially says this is valid so far, none of the rules of Sudoku corresponding to these three rules that I have up on the board are going to be violated. All right so let's take a look. And so this structure hopefully, given that we've done N-queens, should be a little bit easier to understand. So when we did eight queens or N-queens, we decided to start column by column. And we could have done row by row, but we decided to start column by column. And it was a fairly straightforward puzzle. There's obviously no real change in an eight queens puzzle. I mean, you're solving the same puzzle as I am. But if I give you a Sudoku puzzle, there's more variety to it in the sense that depending on what I fill up-- the hard puzzles are the ones that are kind of intermediate in the sense of they're not obviously fully filled and they're not empty. Right if it's completely empty then it's trivial to solve a Sudoku puzzle. You can take any solution to a Sudoku puzzle and present it as a solution to the empty puzzle. And then if everything is full except for two things, I mean it's kind of obvious what those two things are assuming that the puzzle had a valid solution.",
            "metrics": {
                "relativeDCReadability": 1.0010385387811542,
                "lexicalDiversity": 0.4689922480620155,
                "posComposition": {
                    "CC": 0.039,
                    "DT": 0.112,
                    "NNP": 0.023,
                    "NN": 0.124,
                    "WDT": 0.016,
                    "VBD": 0.023,
                    "EX": 0.012,
                    "VBZ": 0.035,
                    "NNS": 0.043,
                    "RB": 0.074,
                    "IN": 0.101,
                    "VBP": 0.066,
                    "JJ": 0.058,
                    "PRP": 0.089,
                    "VBG": 0.023,
                    "TO": 0.039,
                    "VB": 0.043,
                    "CD": 0.019,
                    "RP": 0.004,
                    "VBN": 0.019,
                    "POS": 0.004,
                    "MD": 0.012,
                    "JJR": 0.008,
                    "WRB": 0.004,
                    "WP": 0.008,
                    ":": 0.004
                },
                "syllableRate": 2.967,
                "topicScores": [
                    [
                        "N",
                        0.22090895649135306
                    ],
                    [
                        "sudoku",
                        0.2397917296540994
                    ],
                    [
                        "puzzle",
                        0.250560729417292
                    ],
                    [
                        "queen",
                        0.27765514217439125
                    ],
                    [
                        "column",
                        0.3207135150384375
                    ],
                    [
                        "solution",
                        0.4270671536127024
                    ],
                    [
                        "sudoku puzzle",
                        0.4318486744370646
                    ],
                    [
                        "rule",
                        0.47617277805836006
                    ],
                    [
                        "valid",
                        0.5425928436954518
                    ],
                    [
                        "row",
                        0.5464895639295312
                    ],
                    [
                        "sense",
                        0.5501423988924701
                    ],
                    [
                        "thing",
                        0.5574863853774186
                    ],
                    [
                        "problem",
                        0.7505039168185572
                    ],
                    [
                        "sudoku corresponding",
                        0.7664049292476823
                    ],
                    [
                        "conflict",
                        0.7792647915605022
                    ],
                    [
                        "board",
                        0.7792647915605022
                    ],
                    [
                        "look",
                        0.8061179392137252
                    ],
                    [
                        "structure",
                        0.856528768091363
                    ],
                    [
                        "little",
                        0.865901295015722
                    ],
                    [
                        "bit",
                        0.865901295015722
                    ],
                    [
                        "easy",
                        0.865901295015722
                    ],
                    [
                        "straightforward",
                        0.886180216584676
                    ],
                    [
                        "real",
                        0.8984097440127025
                    ],
                    [
                        "change",
                        0.8984097440127025
                    ],
                    [
                        "variety",
                        0.9048831026702839
                    ],
                    [
                        "up--",
                        0.9048831026702839
                    ],
                    [
                        "hard",
                        0.9048831026702839
                    ],
                    [
                        "one",
                        0.9048831026702839
                    ],
                    [
                        "intermediate",
                        0.9048831026702839
                    ],
                    [
                        "trivial",
                        0.9072923569755581
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "N",
                        0.22090895649135306
                    ],
                    [
                        "queen",
                        0.27765514217439125
                    ],
                    [
                        "column",
                        0.3207135150384375
                    ],
                    [
                        "solution",
                        0.4270671536127024
                    ],
                    [
                        "sudoku puzzle",
                        0.4318486744370646
                    ],
                    [
                        "row",
                        0.5464895639295312
                    ],
                    [
                        "sense",
                        0.5501423988924701
                    ],
                    [
                        "thing",
                        0.5574863853774186
                    ],
                    [
                        "look",
                        0.8061179392137252
                    ],
                    [
                        "hard",
                        0.9048831026702839
                    ]
                ]
            }
        },
        "auK3PSZoidc-990": {
            "id": "auK3PSZoidc-990",
            "heat": 0.1,
            "start": 990.0,
            "text": " So really it's puzzles like this where maybe a third are full that are more difficult. And it's kind of a separate school, a little community that designs puzzles and tries to create hard puzzles. And they try and make the human's problem harder by making this requirement of look ahead, like I mentioned. So good. So let's take a look at the code here. So what I want to do here-- and the first part here is-- as I said, we went column by column in the case of N-queens. And the question is, where do I start. I want to do something in a fairly naive way. And what I'm going to do is I'm going to do some sort of scan. I'm going to scan like that. And I'm going to find-- as I do the scan, I'm going to find the next empty grid location. And I'm going to say that is going to be something that I'm going to try and fill in. OK so it's not going to be I discovered this eight in the-- it was, if you count in terms of the empty locations, if I went this way, it was the fourth empty location and decided to fill that up. But here I'm just-- in this code I'm going to try one, two, three, four, five, six, seven, eight, nine here. And the first part of the code here that says what is the name of this procedure. It says find next cell to fill. Which means what its name is--",
            "metrics": {
                "relativeDCReadability": 0.8779500636824851,
                "lexicalDiversity": 0.475,
                "posComposition": {
                    "RB": 0.05,
                    "PRP": 0.093,
                    "VBZ": 0.046,
                    "NNS": 0.021,
                    "IN": 0.093,
                    "DT": 0.104,
                    "WRB": 0.007,
                    "JJ": 0.061,
                    "VBP": 0.068,
                    "WDT": 0.007,
                    "RBR": 0.004,
                    "CC": 0.046,
                    "NN": 0.114,
                    "TO": 0.054,
                    "VB": 0.064,
                    "POS": 0.007,
                    "VBG": 0.039,
                    "VBD": 0.029,
                    "NNP": 0.014,
                    "WP": 0.014,
                    ":": 0.021,
                    "CD": 0.036,
                    "RP": 0.004,
                    "PRP$": 0.004
                },
                "syllableRate": 2.817,
                "topicScores": [
                    [
                        "puzzle",
                        0.39890791351873656
                    ],
                    [
                        "location",
                        0.4369596102593593
                    ],
                    [
                        "code",
                        0.43789082362781645
                    ],
                    [
                        "scan",
                        0.43796218204607773
                    ],
                    [
                        "hard",
                        0.5276876344545149
                    ],
                    [
                        "look",
                        0.5440951563226144
                    ],
                    [
                        "way",
                        0.5584348585117999
                    ],
                    [
                        "column",
                        0.5653166375819184
                    ],
                    [
                        "N",
                        0.6183764540911227
                    ],
                    [
                        "difficult",
                        0.7771768920990936
                    ],
                    [
                        "separate",
                        0.8596045581775403
                    ],
                    [
                        "school",
                        0.8596045581775403
                    ],
                    [
                        "little",
                        0.8596045581775403
                    ],
                    [
                        "community",
                        0.8681551660164216
                    ],
                    [
                        "good",
                        0.8689103757907124
                    ],
                    [
                        "queen",
                        0.8846278562527456
                    ],
                    [
                        "human",
                        0.8889198300173744
                    ],
                    [
                        "problem",
                        0.8889198300173744
                    ],
                    [
                        "requirement",
                        0.8889198300173744
                    ],
                    [
                        "question",
                        0.9106423524951768
                    ],
                    [
                        "here--",
                        0.9125603579326407
                    ],
                    [
                        "case",
                        0.9125603579326407
                    ],
                    [
                        "naive",
                        0.9138280958069056
                    ],
                    [
                        "procedure",
                        0.9163456011895301
                    ],
                    [
                        "grid",
                        0.9203686808917856
                    ],
                    [
                        "sort",
                        0.9218144567338119
                    ],
                    [
                        "term",
                        0.9304339381564495
                    ],
                    [
                        "fourth",
                        0.9304339381564495
                    ],
                    [
                        "just--",
                        0.9313402236646832
                    ],
                    [
                        "cell",
                        0.9329070271698182
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "location",
                        0.4369596102593593
                    ],
                    [
                        "code",
                        0.43789082362781645
                    ],
                    [
                        "hard",
                        0.5276876344545149
                    ],
                    [
                        "look",
                        0.5440951563226144
                    ],
                    [
                        "way",
                        0.5584348585117999
                    ],
                    [
                        "column",
                        0.5653166375819184
                    ],
                    [
                        "N",
                        0.6183764540911227
                    ],
                    [
                        "queen",
                        0.8846278562527456
                    ],
                    [
                        "grid",
                        0.9203686808917856
                    ]
                ]
            }
        },
        "auK3PSZoidc-1080": {
            "id": "auK3PSZoidc-1080",
            "heat": 0.1,
            "start": 1080.0,
            "text": " find the next cell. Find the next grid location to fill. And it simply goes for X in range zero through nine, for Y in range zero through nine. I'm assuming that since zero is not a valid entry here, I could use zero to signify empty. OK? It's only one through nine, so zero can signify empty. And this just returns X and Y corresponding to the first empty location. So in this case it would just return (0,0). OK? And then if this were full then it would go-- obviously the X changes. And when X changes, you're going over to the right. And so you would get a (1,0) back. If this were filled, the next time around I'd get this grid location, et cetera. It doesn't matter. Just like I could go column by column or row by row, as long as I have a deterministic way of discovering the empty location-- and usually you want to have the same way of discovering the empty location. But even that is not a requirement as long as there's an empty location and your find next cell to fill finds that empty location and returns it to you, you're good, and the rest of our code is going to work. But no reason to get more complicated than what I have up there. So find next cell to fill makes sense? We good with that? All right.",
            "metrics": {
                "relativeDCReadability": 1.0191871879332195,
                "lexicalDiversity": 0.5040322580645161,
                "posComposition": {
                    "VB": 0.069,
                    "DT": 0.097,
                    "JJ": 0.085,
                    "NN": 0.141,
                    "IN": 0.113,
                    "TO": 0.04,
                    "CC": 0.052,
                    "PRP": 0.073,
                    "RB": 0.093,
                    "VBZ": 0.044,
                    "CD": 0.032,
                    "NNP": 0.02,
                    "VBP": 0.028,
                    "VBG": 0.024,
                    "MD": 0.028,
                    "NNPS": 0.004,
                    "VBD": 0.008,
                    ":": 0.008,
                    "NNS": 0.008,
                    "WRB": 0.004,
                    "VBN": 0.004,
                    "FW": 0.004,
                    "EX": 0.004,
                    "PRP$": 0.008,
                    "RBR": 0.004,
                    "WP": 0.004
                },
                "syllableRate": 2.725,
                "topicScores": [
                    [
                        "x",
                        0.2793286803267459
                    ],
                    [
                        "location",
                        0.3148724949881892
                    ],
                    [
                        "find",
                        0.3360609879849559
                    ],
                    [
                        "Y",
                        0.39722822728296653
                    ],
                    [
                        "cell",
                        0.42392241177064294
                    ],
                    [
                        "range",
                        0.5430389842903458
                    ],
                    [
                        "right",
                        0.5499496532770218
                    ],
                    [
                        "change",
                        0.5594624303812686
                    ],
                    [
                        "grid",
                        0.5638029767504923
                    ],
                    [
                        "way",
                        0.5761295255676506
                    ],
                    [
                        "good",
                        0.5768213694487213
                    ],
                    [
                        "row",
                        0.583357927140396
                    ],
                    [
                        "column",
                        0.5864600132556762
                    ],
                    [
                        "x change",
                        0.8540104307810766
                    ],
                    [
                        "0,0",
                        0.8960122969512497
                    ],
                    [
                        "cetera",
                        0.9058781166588179
                    ],
                    [
                        "entry",
                        0.907014522620941
                    ],
                    [
                        "valid",
                        0.9145698817806871
                    ],
                    [
                        "sense",
                        0.919661729902044
                    ],
                    [
                        "corresponding",
                        0.9256558310674586
                    ],
                    [
                        "case",
                        0.9279102320474641
                    ],
                    [
                        "time",
                        0.9349693824923798
                    ],
                    [
                        "deterministic",
                        0.9367442811940025
                    ],
                    [
                        "requirement",
                        0.9375041259991993
                    ],
                    [
                        "rest",
                        0.9375041259991993
                    ],
                    [
                        "code",
                        0.9375041259991993
                    ],
                    [
                        "reason",
                        0.9381959486276864
                    ],
                    [
                        "complicated",
                        0.9381959486276864
                    ],
                    [
                        "grid location",
                        2.3722311684704516
                    ],
                    [
                        "valid entry",
                        4.866071649885103
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "location",
                        0.3148724949881892
                    ],
                    [
                        "right",
                        0.5499496532770218
                    ],
                    [
                        "grid",
                        0.5638029767504923
                    ],
                    [
                        "way",
                        0.5761295255676506
                    ],
                    [
                        "row",
                        0.583357927140396
                    ],
                    [
                        "column",
                        0.5864600132556762
                    ],
                    [
                        "sense",
                        0.919661729902044
                    ],
                    [
                        "code",
                        0.9375041259991993
                    ]
                ]
            }
        },
        "auK3PSZoidc-1170": {
            "id": "auK3PSZoidc-1170",
            "heat": 0.1,
            "start": 1170.0,
            "text": " And generally with exhaustive search the key procedure is always do you have a valid solution or not? And you may not have a complete solution. Think of it as a partial configuration. So this is a partial configuration that is valid. It's not a complete solution to the Sudoku puzzle. It's a partial configuration that's valid in the sense that it satisfies all of the constraints. You know, if I put another eight in here it would not be a valid partial configuration. It would be partial, but not valid. Right? I need to grow this. I need to grow this into a solution. And when I say solution I mean all the constraints have to be satisfied. A configuration could be invalid or valid. A solution is always valid. All right? That's just terminology. And so I want to be able to look high up and be able to truncate the search and say, you know what, grid IJ equaling eight, because I put an eight in that sector which already had an eight in it, is something that should not be explored. And I don't have to worry about any of the branches that come here. Because immediately I've violated the constraint. So in general, I can always check whether partial configurations violate the three constraints I have or not.",
            "metrics": {
                "relativeDCReadability": 1.161973361189168,
                "lexicalDiversity": 0.43231441048034935,
                "posComposition": {
                    "CC": 0.048,
                    "RB": 0.083,
                    "IN": 0.087,
                    "JJ": 0.1,
                    "NN": 0.083,
                    "DT": 0.122,
                    "VBZ": 0.039,
                    "VBP": 0.066,
                    "PRP": 0.096,
                    "VB": 0.074,
                    "MD": 0.026,
                    "NNP": 0.026,
                    "WDT": 0.017,
                    "TO": 0.035,
                    "VBD": 0.017,
                    "NNS": 0.022,
                    "CD": 0.022,
                    "WRB": 0.004,
                    "PDT": 0.004,
                    "VBN": 0.013,
                    "POS": 0.004,
                    "WP": 0.004,
                    "VBG": 0.004
                },
                "syllableRate": 2.817,
                "topicScores": [
                    [
                        "valid",
                        0.2903826524603108
                    ],
                    [
                        "configuration",
                        0.29039422179432206
                    ],
                    [
                        "partial",
                        0.29616322146861473
                    ],
                    [
                        "solution",
                        0.31021405958048526
                    ],
                    [
                        "constraint",
                        0.3748370591839556
                    ],
                    [
                        "complete",
                        0.5439895824063856
                    ],
                    [
                        "search",
                        0.5782053796047272
                    ],
                    [
                        "able",
                        0.5791997431013518
                    ],
                    [
                        "sudoku",
                        0.6330696414944753
                    ],
                    [
                        "IJ",
                        0.6968471845186263
                    ],
                    [
                        "partial configuration",
                        0.8138784919631352
                    ],
                    [
                        "exhaustive",
                        0.8822140876419051
                    ],
                    [
                        "key",
                        0.8822140876419051
                    ],
                    [
                        "procedure",
                        0.8822140876419051
                    ],
                    [
                        "puzzle",
                        0.8997638055549891
                    ],
                    [
                        "satisfied",
                        0.9175907522661424
                    ],
                    [
                        "terminology",
                        0.9219869114200023
                    ],
                    [
                        "sense",
                        0.9257426861677334
                    ],
                    [
                        "grid",
                        0.9353627807819396
                    ],
                    [
                        "general",
                        0.9371929151248671
                    ],
                    [
                        "invalid",
                        0.9374216179065684
                    ],
                    [
                        "high",
                        0.9405342521215262
                    ],
                    [
                        "sector",
                        0.9405342521215262
                    ],
                    [
                        "branch",
                        0.9411452226358682
                    ],
                    [
                        "sudoku puzzle",
                        1.3234910628986856
                    ],
                    [
                        "grid IJ",
                        1.8719532764130642
                    ],
                    [
                        "complete solution",
                        1.9016661090607978
                    ],
                    [
                        "valid partial",
                        2.627172298769453
                    ],
                    [
                        "valid solution",
                        3.1436379768513865
                    ],
                    [
                        "key procedure",
                        3.510634424866372
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "solution",
                        0.31021405958048526
                    ],
                    [
                        "constraint",
                        0.3748370591839556
                    ],
                    [
                        "IJ",
                        0.6968471845186263
                    ],
                    [
                        "sense",
                        0.9257426861677334
                    ],
                    [
                        "grid",
                        0.9353627807819396
                    ],
                    [
                        "sector",
                        0.9405342521215262
                    ],
                    [
                        "sudoku puzzle",
                        1.3234910628986856
                    ],
                    [
                        "grid IJ",
                        1.8719532764130642
                    ]
                ]
            }
        },
        "auK3PSZoidc-1260": {
            "id": "auK3PSZoidc-1260",
            "heat": 0.1,
            "start": 1260.0,
            "text": " And that is what this piece of code does. And it's also straightforward. It's perhaps even more straightforward than diagonal checking in the case of eight queens. But all this does is use the construct that says I'm going to look at-- essentially this is something that is list comprehensions in Python. The for comes after this predicate here. But effectively what you're saying is for X in range nine, check that grid IX is not equal to E. OK, and you're just looking at E. So is valid, grid IJE takes the grid which looks like this one, let's say, and so it's got zeros in all of the empty places. And it's got a bunch of non-zero entries in all of the places that you see here. And in addition, you have perhaps zero, zero, and let's call it one. And so this is I, and this is J, and that is E. OK. And so let me write that out here, I, J, and E, where I is one-- zero, I'm sorry, I is zero, J is zero, and E is 1. So that would mean putting a one up here and that obviously is going to violate one of our constraints. But that's fine.",
            "metrics": {
                "relativeDCReadability": 1.0962591467834535,
                "lexicalDiversity": 0.46153846153846156,
                "posComposition": {
                    "CC": 0.077,
                    "DT": 0.104,
                    "VBZ": 0.118,
                    "WP": 0.009,
                    "NN": 0.072,
                    "IN": 0.1,
                    "PRP": 0.077,
                    "RB": 0.068,
                    "VBP": 0.032,
                    "RBR": 0.005,
                    "JJ": 0.054,
                    "CD": 0.05,
                    "NNS": 0.032,
                    "PDT": 0.005,
                    "VB": 0.041,
                    "WDT": 0.023,
                    "VBG": 0.023,
                    "TO": 0.014,
                    ":": 0.009,
                    "NNP": 0.063,
                    "POS": 0.005,
                    "VBD": 0.009,
                    "WRB": 0.005,
                    "MD": 0.005,
                    "PRP$": 0.005
                },
                "syllableRate": 2.317,
                "topicScores": [
                    [
                        "zero",
                        0.27435043913780205
                    ],
                    [
                        "E.",
                        0.2803224725261329
                    ],
                    [
                        "J",
                        0.29441401451387555
                    ],
                    [
                        "E. OK",
                        0.3045154184181559
                    ],
                    [
                        "grid",
                        0.4319908926176922
                    ],
                    [
                        "straightforward",
                        0.5174264946325332
                    ],
                    [
                        "place",
                        0.5361069332145614
                    ],
                    [
                        "Python",
                        0.5719134695074312
                    ],
                    [
                        "IJE",
                        0.6286039966262759
                    ],
                    [
                        "x",
                        0.6287214118514235
                    ],
                    [
                        "IX",
                        0.6287214118514235
                    ],
                    [
                        "code",
                        0.8363036789237288
                    ],
                    [
                        "piece",
                        0.8453755760705044
                    ],
                    [
                        "queen",
                        0.858510843786754
                    ],
                    [
                        "diagonal",
                        0.8822277183229087
                    ],
                    [
                        "checking",
                        0.8822277183229087
                    ],
                    [
                        "case",
                        0.8822277183229087
                    ],
                    [
                        "predicate",
                        0.8900781429522626
                    ],
                    [
                        "construct",
                        0.890614044362202
                    ],
                    [
                        "list",
                        0.890614044362202
                    ],
                    [
                        "comprehension",
                        0.890614044362202
                    ],
                    [
                        "range",
                        0.894775129504946
                    ],
                    [
                        "constraint",
                        0.8969764949535463
                    ],
                    [
                        "valid",
                        0.8984634901607701
                    ],
                    [
                        "fine",
                        0.8985492483790166
                    ],
                    [
                        "equal",
                        0.9009902275277528
                    ],
                    [
                        "non",
                        0.9014546830533267
                    ],
                    [
                        "entry",
                        0.9014546830533267
                    ],
                    [
                        "addition",
                        0.9039415586467755
                    ],
                    [
                        "bunch",
                        0.9073161203023435
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "zero",
                        0.27435043913780205
                    ],
                    [
                        "grid",
                        0.4319908926176922
                    ],
                    [
                        "code",
                        0.8363036789237288
                    ],
                    [
                        "queen",
                        0.858510843786754
                    ],
                    [
                        "constraint",
                        0.8969764949535463
                    ]
                ]
            }
        },
        "auK3PSZoidc-1350": {
            "id": "auK3PSZoidc-1350",
            "heat": 0.1,
            "start": 1350.0,
            "text": " We're going to check that. And it's essentially doing incremental checking just like we did. So it's not checking to see that all of the existing grid IJ values are conflicting or not. It's just saying I have an-- I'm going to be writing something into this grid, into an empty location. It happens to be zero, zero having the value one. And I'm going to check whether the introduction of a one into this square is going to cause problems or not. That's all that it's doing-- incremental, just like we had with eight queens. And that check is relatively easy to do, because I just need to go and I look at the row corresponding to I, which in this case is the top row. I look at the column corresponding to J, which is the leftmost column, and then I look at the sector corresponding to zero, zero, which is this top left sector. And I check to see for each of those three things, whether there's a problem or not. And the first two-- well actually, I have a problem with the row. And I would also have a problem with the sector. I wouldn't have a problem with the column. But one of them is bad enough. And so I'm going to get a false. So row OK is going to be false. And so I'm going to return false out here.",
            "metrics": {
                "relativeDCReadability": 0.9962888235898633,
                "lexicalDiversity": 0.4365079365079365,
                "posComposition": {
                    "PRP": 0.091,
                    "VBP": 0.048,
                    "VBG": 0.071,
                    "TO": 0.06,
                    "VB": 0.063,
                    "DT": 0.123,
                    "CC": 0.056,
                    "VBZ": 0.056,
                    "RB": 0.075,
                    "JJ": 0.052,
                    "NN": 0.103,
                    "IN": 0.095,
                    "VBD": 0.008,
                    "NNP": 0.012,
                    "NNS": 0.016,
                    ":": 0.012,
                    "CD": 0.036,
                    "WDT": 0.012,
                    "EX": 0.004,
                    "MD": 0.008
                },
                "syllableRate": 2.758,
                "topicScores": [
                    [
                        "problem",
                        0.30787281825087665
                    ],
                    [
                        "check",
                        0.32030199214902494
                    ],
                    [
                        "row",
                        0.36855343543791075
                    ],
                    [
                        "column",
                        0.43287179191798264
                    ],
                    [
                        "sector",
                        0.4341240033585852
                    ],
                    [
                        "false",
                        0.4355039856008491
                    ],
                    [
                        "incremental",
                        0.5372917969371864
                    ],
                    [
                        "grid",
                        0.537675441828539
                    ],
                    [
                        "value",
                        0.5418735695861302
                    ],
                    [
                        "corresponding",
                        0.5532363530430369
                    ],
                    [
                        "IJ",
                        0.5633200851838893
                    ],
                    [
                        "checking",
                        0.8647588222724338
                    ],
                    [
                        "location",
                        0.874752473084959
                    ],
                    [
                        "conflicting",
                        0.885988140568548
                    ],
                    [
                        "queen",
                        0.8945635510421742
                    ],
                    [
                        "an--",
                        0.8975511383881483
                    ],
                    [
                        "doing--",
                        0.9082247850669565
                    ],
                    [
                        "introduction",
                        0.9101895643517065
                    ],
                    [
                        "square",
                        0.9101895643517065
                    ],
                    [
                        "leftmost",
                        0.9163291378783832
                    ],
                    [
                        "easy",
                        0.9171834669519415
                    ],
                    [
                        "thing",
                        0.918190618677498
                    ],
                    [
                        "case",
                        0.9196724877764748
                    ],
                    [
                        "grid IJ",
                        0.9232943757835406
                    ],
                    [
                        "bad",
                        0.9235286167826194
                    ],
                    [
                        "two--",
                        0.9249984541632658
                    ],
                    [
                        "IJ value",
                        0.9372601036414578
                    ],
                    [
                        "incremental checking",
                        2.7938810803297915
                    ],
                    [
                        "row corresponding",
                        3.0060249618996164
                    ],
                    [
                        "sector corresponding",
                        3.18990263034047
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "row",
                        0.36855343543791075
                    ],
                    [
                        "column",
                        0.43287179191798264
                    ],
                    [
                        "sector",
                        0.4341240033585852
                    ],
                    [
                        "grid",
                        0.537675441828539
                    ],
                    [
                        "IJ",
                        0.5633200851838893
                    ],
                    [
                        "location",
                        0.874752473084959
                    ],
                    [
                        "queen",
                        0.8945635510421742
                    ],
                    [
                        "thing",
                        0.918190618677498
                    ],
                    [
                        "grid IJ",
                        0.9232943757835406
                    ]
                ]
            }
        },
        "auK3PSZoidc-1440": {
            "id": "auK3PSZoidc-1440",
            "heat": 0.1,
            "start": 1440.0,
            "text": " All right, that make sense? So those are the three things. And there's really not that much here beyond taking those constraints and codifying them. Right. Any questions? Yeah. Fadi. AUDIENCE: What is the all thing-- SRINI DEVADAS: Ah, the all is essentially a Python built in function that is going to essentially say that-- it's going to-- it's a conjunction that says I'm getting a bunch of Booleans that correspond to the generation of this list comprehension where E not equal to grid IX is going to give me true or false. And I need all of those things to be true. All right? AUDIENCE: Okay, it's always going to be a Boolean there and that depends on whether all of the elements of the list itself are-- SRINI DEVADAS: It's a conjunction. Yeah, that's right. So and, think of it as an and. Even if one of them is false, the and is false. In order for the and to be true, then all of them need to be true. All right? So it's just a convenient construct which is applicable in sort of-- the perfect application is what you see here. It's not the most sophisticated of applications, but it works very well in this case. Now for the sector, I can't actually do that. And so there's a little bit more work, because I can't-- this only works when-- and I could",
            "metrics": {
                "relativeDCReadability": 1.0144440055408845,
                "lexicalDiversity": 0.44313725490196076,
                "posComposition": {
                    "DT": 0.129,
                    "NN": 0.082,
                    "WDT": 0.024,
                    "VBP": 0.027,
                    "IN": 0.098,
                    "CD": 0.008,
                    "NNS": 0.024,
                    "CC": 0.047,
                    "EX": 0.012,
                    "VBZ": 0.082,
                    "RB": 0.086,
                    "VBG": 0.027,
                    "PRP": 0.075,
                    "NNP": 0.075,
                    "WP": 0.008,
                    "JJ": 0.059,
                    ":": 0.027,
                    "VBN": 0.004,
                    "TO": 0.035,
                    "VB": 0.035,
                    "NNPS": 0.004,
                    "WRB": 0.008,
                    "VBD": 0.004,
                    "RBS": 0.004,
                    "MD": 0.012,
                    "RBR": 0.004
                },
                "syllableRate": 2.817,
                "topicScores": [
                    [
                        "right",
                        0.29158321050072034
                    ],
                    [
                        "audience",
                        0.3194350181177149
                    ],
                    [
                        "true",
                        0.3525511178989626
                    ],
                    [
                        "false",
                        0.42468547765051695
                    ],
                    [
                        "work",
                        0.44309077814085795
                    ],
                    [
                        "conjunction",
                        0.5391933137113546
                    ],
                    [
                        "thing",
                        0.5397381758042034
                    ],
                    [
                        "list",
                        0.5540299241415767
                    ],
                    [
                        "application",
                        0.5637787560505705
                    ],
                    [
                        "devada",
                        0.6170719173137748
                    ],
                    [
                        "SRINI",
                        0.6378199877524191
                    ],
                    [
                        "SRINI devada",
                        0.6490243127592082
                    ],
                    [
                        "Python",
                        0.6538411623751594
                    ],
                    [
                        "Booleans",
                        0.6593715695491436
                    ],
                    [
                        "E",
                        0.6593715695491436
                    ],
                    [
                        "IX",
                        0.6593715695491436
                    ],
                    [
                        "sense",
                        0.745765700712672
                    ],
                    [
                        "question",
                        0.8587271525095698
                    ],
                    [
                        "constraint",
                        0.8697059676615096
                    ],
                    [
                        "to--",
                        0.8904925293966472
                    ],
                    [
                        "case",
                        0.9078956502598043
                    ],
                    [
                        "when--",
                        0.9090950310351547
                    ],
                    [
                        "function",
                        0.9100446743672678
                    ],
                    [
                        "that--",
                        0.9100446743672678
                    ],
                    [
                        "bunch",
                        0.9120325475873065
                    ],
                    [
                        "generation",
                        0.9120325475873065
                    ],
                    [
                        "comprehension",
                        0.9120325475873065
                    ],
                    [
                        "equal",
                        0.9120325475873065
                    ],
                    [
                        "order",
                        0.9176870091713547
                    ],
                    [
                        "element",
                        0.9177363556251209
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "right",
                        0.29158321050072034
                    ],
                    [
                        "audience",
                        0.3194350181177149
                    ],
                    [
                        "thing",
                        0.5397381758042034
                    ],
                    [
                        "sense",
                        0.745765700712672
                    ],
                    [
                        "constraint",
                        0.8697059676615096
                    ]
                ]
            }
        },
        "auK3PSZoidc-1530": {
            "id": "auK3PSZoidc-1530",
            "heat": 0.1,
            "start": 1530.0,
            "text": " put a list comprehension in here like this and generate all the Booleans. For the sector I end up having to do something a little bit different. I mean you could do things more convoluted and use all in here as well, but it's not worth it. OK, that make sense? Good. So here's the core routine that corresponds to the search. And ignore this global variable here. I'll explain that in a minute. That's going to be our metric. Backtracks is going to be our metric for computing performance. And it's going to be quite interesting. It's going to produce some interesting results for us when we run this on various different examples. But this core procedure looks a lot like the n-queens search in the sense that you have a for loop and a recursive call. And in this case the for loop is going to be something that ranges through the different values, that you find a location that you want to put something into, which is the next empty location in your current configuration. And then you need to go put in one through nine in there. And it's brutish. You're going to put in one and you're going to check conflicts. And then you'll put in two and you're going to check conflicts. If you put in a one and you don't get a conflict, then you get to recur. And you now move into something that",
            "metrics": {
                "relativeDCReadability": 0.9111825805133849,
                "lexicalDiversity": 0.4566929133858268,
                "posComposition": {
                    "VB": 0.087,
                    "DT": 0.098,
                    "NN": 0.11,
                    "IN": 0.114,
                    "RB": 0.055,
                    "CC": 0.059,
                    "PDT": 0.004,
                    "NNPS": 0.004,
                    "PRP": 0.091,
                    "VBP": 0.055,
                    "VBG": 0.043,
                    "TO": 0.051,
                    "JJ": 0.067,
                    "MD": 0.012,
                    "NNS": 0.024,
                    "RBR": 0.004,
                    "VBZ": 0.051,
                    "NNP": 0.012,
                    "WDT": 0.02,
                    "PRP$": 0.012,
                    "WRB": 0.004,
                    "CD": 0.02,
                    "EX": 0.004
                },
                "syllableRate": 2.833,
                "topicScores": [
                    [
                        "conflict",
                        0.4236290495844632
                    ],
                    [
                        "different",
                        0.43154773894048026
                    ],
                    [
                        "Booleans",
                        0.4795643526568968
                    ],
                    [
                        "metric",
                        0.5380872415834533
                    ],
                    [
                        "search",
                        0.5496254537907522
                    ],
                    [
                        "sense",
                        0.5528576917654641
                    ],
                    [
                        "interesting",
                        0.557490488567965
                    ],
                    [
                        "loop",
                        0.5618971023112761
                    ],
                    [
                        "core",
                        0.5634203564527579
                    ],
                    [
                        "location",
                        0.5727373758608735
                    ],
                    [
                        "list",
                        0.8513347603614717
                    ],
                    [
                        "comprehension",
                        0.8513347603614717
                    ],
                    [
                        "bit",
                        0.8647130055084182
                    ],
                    [
                        "sector",
                        0.8743651600672753
                    ],
                    [
                        "little",
                        0.8743651600672753
                    ],
                    [
                        "worth",
                        0.8781369300883922
                    ],
                    [
                        "thing",
                        0.8869565492806782
                    ],
                    [
                        "convoluted",
                        0.8869565492806782
                    ],
                    [
                        "minute",
                        0.8870103115615752
                    ],
                    [
                        "backtrack",
                        0.8921990696048144
                    ],
                    [
                        "performance",
                        0.8921990696048144
                    ],
                    [
                        "example",
                        0.8960472991508607
                    ],
                    [
                        "configuration",
                        0.8990465315727456
                    ],
                    [
                        "variable",
                        0.9010795877741216
                    ],
                    [
                        "brutish",
                        0.901469297972547
                    ],
                    [
                        "routine",
                        0.9050467832617964
                    ],
                    [
                        "global",
                        0.908411953732287
                    ],
                    [
                        "computing",
                        0.9084909080405916
                    ],
                    [
                        "queen",
                        0.913183195647218
                    ],
                    [
                        "recursive",
                        0.913183195647218
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "different",
                        0.43154773894048026
                    ],
                    [
                        "sense",
                        0.5528576917654641
                    ],
                    [
                        "location",
                        0.5727373758608735
                    ],
                    [
                        "sector",
                        0.8743651600672753
                    ],
                    [
                        "thing",
                        0.8869565492806782
                    ],
                    [
                        "backtrack",
                        0.8921990696048144
                    ],
                    [
                        "queen",
                        0.913183195647218
                    ]
                ]
            }
        },
        "auK3PSZoidc-1620": {
            "id": "auK3PSZoidc-1620",
            "heat": 0.1,
            "start": 1620.0,
            "text": " is another partial configuration, potentially, but obviously has one location filled from the caller configuration. And then you go and look for the next cell. So it's certainly possible that I'd go-- when I put in a one here that fails, but if I put in a two here, it's not going to fail. A two is not going to fail here because, if I just look at those constraints, a two OK. All right, so I'm going to put in a two here. And then I'm going to recur. And I'm going to go out here, and I'll try and put in a one here. And a one is going to fail because of this and that. A two is going to fail because of that. A three-- is a three going to fail? No, not immediately. So I could put in a three here. And then I recur and go to the next one, and so on and so forth, right? And for each of these things obviously I have to do a bunch of search underneath. And you know thank goodness for fast computers, right? Because otherwise, I mean God, I mean can you imagine the amount of paper we'd generate if you were doing this and putting two and three and I want a new sheet of paper for the four, et cetera, et cetera. I mean, we can count the number of backtracks. That's how many sheets of paper you'll need. OK. So what you see here, again ignore the backtracks, I'll get to that in just a second-- it's just",
            "metrics": {
                "relativeDCReadability": 0.8936598176724192,
                "lexicalDiversity": 0.43416370106761565,
                "posComposition": {
                    "VBZ": 0.032,
                    "DT": 0.096,
                    "JJ": 0.036,
                    "NN": 0.078,
                    "RB": 0.1,
                    "CC": 0.068,
                    "CD": 0.046,
                    "VBN": 0.004,
                    "IN": 0.121,
                    "PRP": 0.096,
                    "VBP": 0.064,
                    "MD": 0.028,
                    "VB": 0.064,
                    ":": 0.011,
                    "WRB": 0.007,
                    "NNS": 0.025,
                    "VBG": 0.036,
                    "TO": 0.039,
                    "NNP": 0.028,
                    "VBD": 0.007,
                    "RP": 0.004,
                    "WDT": 0.004,
                    "POS": 0.004,
                    "WP": 0.004
                },
                "syllableRate": 2.967,
                "topicScores": [
                    [
                        "ok",
                        0.37158966497816565
                    ],
                    [
                        "right",
                        0.4328678674718563
                    ],
                    [
                        "paper",
                        0.45228972908951126
                    ],
                    [
                        "configuration",
                        0.5293070588734607
                    ],
                    [
                        "cetera",
                        0.5607124032517055
                    ],
                    [
                        "sheet",
                        0.5728939930898266
                    ],
                    [
                        "backtrack",
                        0.5737402960374346
                    ],
                    [
                        "God",
                        0.6900637355345274
                    ],
                    [
                        "partial",
                        0.8729176180622622
                    ],
                    [
                        "caller",
                        0.8729176180622622
                    ],
                    [
                        "cell",
                        0.8752276346535849
                    ],
                    [
                        "location",
                        0.8817022456709763
                    ],
                    [
                        "possible",
                        0.9108099678410773
                    ],
                    [
                        "constraint",
                        0.9109469494634868
                    ],
                    [
                        "underneath",
                        0.9214065062174981
                    ],
                    [
                        "three--",
                        0.9283996974051233
                    ],
                    [
                        "search",
                        0.9331200815546075
                    ],
                    [
                        "fast",
                        0.9339938553395892
                    ],
                    [
                        "computer",
                        0.9339938553395892
                    ],
                    [
                        "thing",
                        0.9380385795405546
                    ],
                    [
                        "bunch",
                        0.9380385795405546
                    ],
                    [
                        "goodness",
                        0.9388523049905337
                    ],
                    [
                        "new",
                        0.939588460693591
                    ],
                    [
                        "number",
                        0.9402586802825038
                    ],
                    [
                        "second--",
                        0.9419587942170837
                    ],
                    [
                        "et cetera",
                        2.473337523972636
                    ],
                    [
                        "partial configuration",
                        2.735781380868698
                    ],
                    [
                        "caller configuration",
                        2.735781380868698
                    ],
                    [
                        "new sheet",
                        5.81017438939049
                    ],
                    [
                        "search underneath",
                        6.131798485786477
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "right",
                        0.4328678674718563
                    ],
                    [
                        "backtrack",
                        0.5737402960374346
                    ],
                    [
                        "location",
                        0.8817022456709763
                    ],
                    [
                        "constraint",
                        0.9109469494634868
                    ],
                    [
                        "thing",
                        0.9380385795405546
                    ],
                    [
                        "number",
                        0.9402586802825038
                    ]
                ]
            }
        },
        "auK3PSZoidc-1710": {
            "id": "auK3PSZoidc-1710",
            "heat": 0.1,
            "start": 1710.0,
            "text": " a way of counting the number of calls. And this thing here essentially says I'm going to be returning-- as long as I get through and find a solution I want to return true. So if solve Sudoku grid IJ is true, then I'm going return through. And then I'm going to pop up all the way to the top, assuming I got-- I go all the way down to the bottom and I get to the point where I have a solution that returns true, which is a completely full configuration that returns true. Right? But if not, then I need to go try the other combinations and I'm only going to make that recursive call if, obviously IJE, corresponding to this, is valid. And that checks the constraints. And the only other thing I have to worry about is essentially something that says reset your grid location and make sure that you're setting it back to zero after you're done. Right, and so I've just made a choice here, grid IJ equals E. If I look at this line of code here, this is resetting the grid IJ equals E and saying it's empty. Because if I've failed in all of these and I haven't return true in all of these, then obviously I want to change this. And you could argue that the next time around",
            "metrics": {
                "relativeDCReadability": 1.065745572410298,
                "lexicalDiversity": 0.4605809128630705,
                "posComposition": {
                    "DT": 0.108,
                    "NN": 0.091,
                    "IN": 0.104,
                    "VBG": 0.041,
                    "NNS": 0.021,
                    "CC": 0.054,
                    "RB": 0.095,
                    "VBZ": 0.046,
                    "PRP": 0.091,
                    "VBP": 0.075,
                    "TO": 0.05,
                    "VB": 0.054,
                    ":": 0.008,
                    "JJ": 0.071,
                    "VBN": 0.017,
                    "NNP": 0.037,
                    "RP": 0.004,
                    "PDT": 0.008,
                    "VBD": 0.004,
                    "WRB": 0.004,
                    "WDT": 0.008,
                    "PRP$": 0.004,
                    "MD": 0.004
                },
                "syllableRate": 2.608,
                "topicScores": [
                    [
                        "IJ",
                        0.29343964379893867
                    ],
                    [
                        "true",
                        0.30534752783330443
                    ],
                    [
                        "grid",
                        0.36019111821952393
                    ],
                    [
                        "way",
                        0.3892557108430382
                    ],
                    [
                        "grid IJ",
                        0.48198909718399424
                    ],
                    [
                        "solution",
                        0.5210195031464491
                    ],
                    [
                        "thing",
                        0.5439146528913876
                    ],
                    [
                        "sudoku",
                        0.5652076914274676
                    ],
                    [
                        "IJE",
                        0.614457899636508
                    ],
                    [
                        "E.",
                        0.6633242906881205
                    ],
                    [
                        "number",
                        0.7724178571553127
                    ],
                    [
                        "returning--",
                        0.8362808473078694
                    ],
                    [
                        "valid",
                        0.8529835165748095
                    ],
                    [
                        "constraint",
                        0.8699568147945966
                    ],
                    [
                        "point",
                        0.8838144629864016
                    ],
                    [
                        "configuration",
                        0.8838144629864016
                    ],
                    [
                        "combination",
                        0.8947594269521704
                    ],
                    [
                        "recursive",
                        0.8947594269521704
                    ],
                    [
                        "choice",
                        0.8959243228233894
                    ],
                    [
                        "code",
                        0.8959243228233894
                    ],
                    [
                        "sudoku grid",
                        0.8964701783260947
                    ],
                    [
                        "time",
                        0.9001417773877916
                    ],
                    [
                        "location",
                        0.9014398674844712
                    ],
                    [
                        "sure",
                        0.9014398674844712
                    ],
                    [
                        "line",
                        0.9039270771147021
                    ],
                    [
                        "sudoku grid IJ",
                        1.0686526772371132
                    ],
                    [
                        "grid location",
                        3.0635259949698828
                    ]
                ],
                "topTopicSimilarity": 0.37037037037037035,
                "sharedTopicScores": [
                    [
                        "IJ",
                        0.29343964379893867
                    ],
                    [
                        "grid",
                        0.36019111821952393
                    ],
                    [
                        "way",
                        0.3892557108430382
                    ],
                    [
                        "grid IJ",
                        0.48198909718399424
                    ],
                    [
                        "solution",
                        0.5210195031464491
                    ],
                    [
                        "thing",
                        0.5439146528913876
                    ],
                    [
                        "number",
                        0.7724178571553127
                    ],
                    [
                        "constraint",
                        0.8699568147945966
                    ],
                    [
                        "code",
                        0.8959243228233894
                    ],
                    [
                        "location",
                        0.9014398674844712
                    ]
                ]
            }
        },
        "auK3PSZoidc-1800": {
            "id": "auK3PSZoidc-1800",
            "heat": 0.1,
            "start": 1800.0,
            "text": " if I and J are exactly the same-- because I and J are set up here-- then I'm going to overwrite the E from a one to a two, et cetera, et cetera. And so that is, in fact, correct. But I do need to reset this outside of the loop, if not inside of the loop. So it's not like I can get away with this line of code. In general, if you ever backtrack, you have to go back and undo your decision. And you have to erase the tree. And that's essentially what that grid IJ equaling zero is doing. You just need to undo that decision. And you can do this a few different ways. But the biggest thing to remember when you do recursive search is to get your-- the undoing of your decision, which is what we call backtracking, to be correct. And if you ever leave a mess, then you'd have a problem. That's also true in the case of the N-queens problem. So I'm going to go ahead and-- and this is just a print routine. So this is not exactly the Sudoku that I have up there, the Sudoku puzzle that I have up there, but it's kind of roughly similar in complexity. And I could go ahead and run the Sudoku program. And for each of those different Sudoku problems,",
            "metrics": {
                "relativeDCReadability": 1.0398735244863375,
                "lexicalDiversity": 0.4066390041493776,
                "posComposition": {
                    "IN": 0.108,
                    "PRP": 0.083,
                    "CC": 0.066,
                    "NNP": 0.037,
                    "VBP": 0.058,
                    "RB": 0.1,
                    "DT": 0.12,
                    "JJ": 0.041,
                    ":": 0.017,
                    "VBN": 0.004,
                    "RP": 0.004,
                    "VBG": 0.021,
                    "TO": 0.041,
                    "VB": 0.066,
                    "NN": 0.12,
                    "CD": 0.008,
                    "VBZ": 0.041,
                    "MD": 0.017,
                    "PRP$": 0.012,
                    "WP": 0.008,
                    "NNS": 0.008,
                    "JJS": 0.004,
                    "WRB": 0.004,
                    "WDT": 0.008
                },
                "syllableRate": 2.65,
                "topicScores": [
                    [
                        "J",
                        0.23880878518196974
                    ],
                    [
                        "sudoku",
                        0.33097460919798377
                    ],
                    [
                        "problem",
                        0.4165710319936112
                    ],
                    [
                        "decision",
                        0.41806808586959254
                    ],
                    [
                        "cetera",
                        0.4275263479479282
                    ],
                    [
                        "loop",
                        0.5104891571810344
                    ],
                    [
                        "correct",
                        0.517016500341196
                    ],
                    [
                        "et cetera",
                        0.567069374660457
                    ],
                    [
                        "different",
                        0.570924072100747
                    ],
                    [
                        "IJ",
                        0.656041958319839
                    ],
                    [
                        "N",
                        0.675962881676903
                    ],
                    [
                        "same--",
                        0.8075248438558243
                    ],
                    [
                        "here--",
                        0.8075248438558243
                    ],
                    [
                        "fact",
                        0.8378934909705015
                    ],
                    [
                        "code",
                        0.864058794893069
                    ],
                    [
                        "tree",
                        0.8802778248919619
                    ],
                    [
                        "outside",
                        0.8847105346808175
                    ],
                    [
                        "general",
                        0.8850232697142827
                    ],
                    [
                        "way",
                        0.892546214423644
                    ],
                    [
                        "line",
                        0.8963879533011553
                    ],
                    [
                        "routine",
                        0.902705170227887
                    ],
                    [
                        "complexity",
                        0.9040565088865747
                    ],
                    [
                        "program",
                        0.9052714454321564
                    ],
                    [
                        "queen",
                        0.9088380888418288
                    ],
                    [
                        "grid",
                        0.9131167346022007
                    ],
                    [
                        "mess",
                        0.9153345032933872
                    ],
                    [
                        "print",
                        0.9197068879984157
                    ],
                    [
                        "big",
                        0.9208267544544737
                    ],
                    [
                        "thing",
                        0.9208267544544737
                    ],
                    [
                        "recursive",
                        0.9208267544544737
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "different",
                        0.570924072100747
                    ],
                    [
                        "IJ",
                        0.656041958319839
                    ],
                    [
                        "N",
                        0.675962881676903
                    ],
                    [
                        "code",
                        0.864058794893069
                    ],
                    [
                        "way",
                        0.892546214423644
                    ],
                    [
                        "queen",
                        0.9088380888418288
                    ],
                    [
                        "grid",
                        0.9131167346022007
                    ],
                    [
                        "thing",
                        0.9208267544544737
                    ]
                ]
            }
        },
        "auK3PSZoidc-1890": {
            "id": "auK3PSZoidc-1890",
            "heat": 0.1,
            "start": 1890.0,
            "text": " it's producing solved puzzles. So this is a solved puzzle. You can check this puzzle just real quick and you'll find that all of the constraints are satisfied. And I'm going to explain backtracks in a second. So true says that there's a solution. The number of backtracks was 579. For the second puzzle, which was a little bit harder, the number of backtracks was 6363. I'm sorry, this is just scrolling. And for the fourth one, it was 335,000-- I'm sorry, for the third one. And for the fourth one, was 9949. These last two puzzles, hard and diff, there was a Finnish guy called-- there is a Finnish guy called Arto Inkala, who designs puzzles. And he claimed that this hard puzzle in 2006 was the hardest puzzle ever designed in Sudoku. And then in 2010 he came up with this more difficult puzzle, according to him, that required a lot of look ahead from a standpoint of the human being. Like if we went back to what I said you can't quite do this implication. You have to kind of make a guess. And then you have to go further and further down. And I think the claim was that the hard puzzle required like five levels of look ahead, and then the difficult puzzle required six levels of look ahead. And obviously, given that look ahead, this puzzle has to have an initial configuration that's solvable. So it's not a trivial thing to create puzzles.",
            "metrics": {
                "relativeDCReadability": 0.997772901645526,
                "lexicalDiversity": 0.48846153846153845,
                "posComposition": {
                    "PRP": 0.065,
                    "VBZ": 0.038,
                    "VBG": 0.015,
                    "VBD": 0.054,
                    "NNS": 0.038,
                    "RB": 0.065,
                    "DT": 0.123,
                    "JJ": 0.096,
                    "NN": 0.108,
                    "MD": 0.012,
                    "VB": 0.038,
                    "CC": 0.046,
                    "IN": 0.108,
                    "VBP": 0.027,
                    "TO": 0.027,
                    "NNP": 0.015,
                    "EX": 0.012,
                    "CD": 0.046,
                    "WDT": 0.008,
                    ":": 0.008,
                    "VBN": 0.023,
                    "WP": 0.008,
                    "JJS": 0.004,
                    "RP": 0.004,
                    "RBR": 0.012
                },
                "syllableRate": 2.842,
                "topicScores": [
                    [
                        "puzzle",
                        0.23448639100843036
                    ],
                    [
                        "hard",
                        0.34155985067122624
                    ],
                    [
                        "look",
                        0.3653146189576258
                    ],
                    [
                        "finnish",
                        0.39470519750278876
                    ],
                    [
                        "backtrack",
                        0.43042007362928214
                    ],
                    [
                        "solved",
                        0.4784019353050324
                    ],
                    [
                        "number",
                        0.5306553401921928
                    ],
                    [
                        "fourth",
                        0.5396526425740845
                    ],
                    [
                        "sorry",
                        0.5493041015634971
                    ],
                    [
                        "second",
                        0.5502273898059121
                    ],
                    [
                        "difficult",
                        0.5691417107906149
                    ],
                    [
                        "guy",
                        0.5700606293614322
                    ],
                    [
                        "claim",
                        0.5731006989265908
                    ],
                    [
                        "level",
                        0.5753556715747282
                    ],
                    [
                        "Sudoku",
                        0.6482666674835863
                    ],
                    [
                        "Arto",
                        0.6663171312128356
                    ],
                    [
                        "Inkala",
                        0.6663171312128356
                    ],
                    [
                        "Arto Inkala",
                        0.7984916676723527
                    ],
                    [
                        "finnish guy",
                        0.8202797485223763
                    ],
                    [
                        "satisfied",
                        0.8692057466531904
                    ],
                    [
                        "solution",
                        0.8906298582156528
                    ],
                    [
                        "quick",
                        0.8956333647447314
                    ],
                    [
                        "constraint",
                        0.8956333647447314
                    ],
                    [
                        "true",
                        0.9064647477548372
                    ],
                    [
                        "bit",
                        0.91548004787826
                    ],
                    [
                        "implication",
                        0.9162222424302036
                    ],
                    [
                        "guess",
                        0.9174030190845626
                    ],
                    [
                        "solvable",
                        0.9202996783273905
                    ],
                    [
                        "little",
                        0.9215868178177499
                    ],
                    [
                        "human",
                        0.9275048669207201
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "hard",
                        0.34155985067122624
                    ],
                    [
                        "look",
                        0.3653146189576258
                    ],
                    [
                        "backtrack",
                        0.43042007362928214
                    ],
                    [
                        "number",
                        0.5306553401921928
                    ],
                    [
                        "Sudoku",
                        0.6482666674835863
                    ],
                    [
                        "solution",
                        0.8906298582156528
                    ],
                    [
                        "constraint",
                        0.8956333647447314
                    ],
                    [
                        "implication",
                        0.9162222424302036
                    ],
                    [
                        "guess",
                        0.9174030190845626
                    ]
                ]
            }
        },
        "auK3PSZoidc-1980": {
            "id": "auK3PSZoidc-1980",
            "heat": 0.1,
            "start": 1980.0,
            "text": " But now people are using computer programs and doing things like we're doing here to find difficult puzzles. And interestingly enough, the 2006 puzzle, at least for this naive computer program, takes 335,000 backtracks-- the one that was supposedly made more difficult in 2010, which now takes about 10,000 backtracks. So obviously there's a difference between the way this program behaves and how you or I would behave, or rather you would behave if you tried to solve this puzzle. So let me just explain backtracks, and then I'll stop to see if there's any questions about the code. So when you make recursive calls and you want to count the number of recursive procedure calls-- you want to do something inside each of the recursive procedures and you want to sort of cumulatively or collectively keep some information, one way of certainly doing it is to pass arguments. And then you have to return the argument, because when you pass an argument and you modify it it's not like that is going to be-- that modification, if it's just an integer, if it's not a mutable variable, it's not going to be seen by the caller procedure. And so when you do recursion and you want to do some counting,",
            "metrics": {
                "relativeDCReadability": 1.1357627818960903,
                "lexicalDiversity": 0.4594594594594595,
                "posComposition": {
                    "CC": 0.063,
                    "RB": 0.09,
                    "NNS": 0.054,
                    "VBP": 0.05,
                    "VBG": 0.027,
                    "NN": 0.104,
                    "IN": 0.09,
                    "PRP": 0.099,
                    "TO": 0.05,
                    "VB": 0.081,
                    "JJ": 0.032,
                    "DT": 0.095,
                    "CD": 0.023,
                    "JJS": 0.005,
                    "VBZ": 0.05,
                    ":": 0.014,
                    "WDT": 0.009,
                    "VBD": 0.009,
                    "VBN": 0.009,
                    "RBR": 0.005,
                    "EX": 0.009,
                    "WRB": 0.018,
                    "MD": 0.014,
                    "NNP": 0.005
                },
                "syllableRate": 2.65,
                "topicScores": [
                    [
                        "puzzle",
                        0.40297588365271425
                    ],
                    [
                        "program",
                        0.40838770073892094
                    ],
                    [
                        "procedure",
                        0.42048601488293263
                    ],
                    [
                        "argument",
                        0.4330255606919874
                    ],
                    [
                        "recursive",
                        0.4376296913070286
                    ],
                    [
                        "computer",
                        0.508939305711261
                    ],
                    [
                        "difficult",
                        0.5230654726544512
                    ],
                    [
                        "backtrack",
                        0.5249963537789237
                    ],
                    [
                        "way",
                        0.5463712961163705
                    ],
                    [
                        "people",
                        0.8416439621078722
                    ],
                    [
                        "thing",
                        0.8416439621078722
                    ],
                    [
                        "code",
                        0.8460713910142077
                    ],
                    [
                        "counting",
                        0.8647314467454947
                    ],
                    [
                        "naive",
                        0.8659392038578541
                    ],
                    [
                        "difference",
                        0.8792584472932716
                    ],
                    [
                        "information",
                        0.882545061955075
                    ],
                    [
                        "modification",
                        0.8875232624167823
                    ],
                    [
                        "integer",
                        0.8875232624167823
                    ],
                    [
                        "mutable",
                        0.8875232624167823
                    ],
                    [
                        "variable",
                        0.8875232624167823
                    ],
                    [
                        "caller",
                        0.8875232624167823
                    ],
                    [
                        "question",
                        0.8878293261562136
                    ],
                    [
                        "number",
                        0.8938867266258332
                    ],
                    [
                        "calls--",
                        0.8938867266258332
                    ],
                    [
                        "recursion",
                        0.9020135218940707
                    ],
                    [
                        "computer program",
                        1.2184995153473719
                    ],
                    [
                        "recursive procedure",
                        1.7595773856720358
                    ],
                    [
                        "difficult puzzle",
                        2.0135511181404357
                    ],
                    [
                        "naive computer",
                        2.316855325824576
                    ],
                    [
                        "caller procedure",
                        2.9429415269148396
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "backtrack",
                        0.5249963537789237
                    ],
                    [
                        "way",
                        0.5463712961163705
                    ],
                    [
                        "thing",
                        0.8416439621078722
                    ],
                    [
                        "code",
                        0.8460713910142077
                    ],
                    [
                        "number",
                        0.8938867266258332
                    ]
                ]
            }
        },
        "auK3PSZoidc-2070": {
            "id": "auK3PSZoidc-2070",
            "heat": 0.1,
            "start": 2070.0,
            "text": " the notion of global variables is a convenient construct to have. And global variables essentially say that there's exactly one memory location associated with this variable. And we're going to go ahead and, anytime we are mutating this variable and you're modifying it, you're going to see the effect of that in that memory location. So what you have up here is, I set backtracks to be zero. OK and that's my global variable. The fact that I put backtracks equals zero here doesn't make this a global variable just yet. The fact that I have global backtracks inside of solve Sudoku now says that there's a single copy of backtracks, and it doesn't matter whether I'm at the top level of recursion or the bottom level of recursion. It's just that memory location corresponding to backtracks-- the name backtracks, that is getting incremented. And this could be 10 levels deep. It could be 40 levels deep, given that I've called things 40 levels in. But it's just the one backtracks. So as you can see, what backtracks does is anytime you have a valid location and you've gone ahead and-- essentially you've failed. The reason it's out here is solve Sudoku did not return true. When solved Sudoku actually returns false, that's when you come out and you increment backtracks. So it meant that you had to do some undoing. When you set grid IJ to be zero, that's when you're",
            "metrics": {
                "relativeDCReadability": 1.2221626267168704,
                "lexicalDiversity": 0.5,
                "posComposition": {
                    "DT": 0.088,
                    "NN": 0.08,
                    "IN": 0.084,
                    "JJ": 0.073,
                    "NNS": 0.053,
                    "VBZ": 0.069,
                    "TO": 0.027,
                    "VB": 0.05,
                    "CC": 0.046,
                    "RB": 0.076,
                    "VBP": 0.069,
                    "EX": 0.008,
                    "CD": 0.031,
                    "VBN": 0.027,
                    "PRP": 0.099,
                    "VBG": 0.023,
                    "WP": 0.008,
                    "NNP": 0.019,
                    "PRP$": 0.004,
                    "VBD": 0.015,
                    ":": 0.008,
                    "MD": 0.011,
                    "RP": 0.008,
                    "WRB": 0.015,
                    "WDT": 0.008,
                    "POS": 0.004
                },
                "syllableRate": 3.192,
                "topicScores": [
                    [
                        "backtrack",
                        0.26635073573760065
                    ],
                    [
                        "variable",
                        0.2772149692131348
                    ],
                    [
                        "Sudoku",
                        0.30691110167972596
                    ],
                    [
                        "global",
                        0.3106403827034738
                    ],
                    [
                        "level",
                        0.3135528471097579
                    ],
                    [
                        "location",
                        0.35205543863887817
                    ],
                    [
                        "memory",
                        0.3998073470165835
                    ],
                    [
                        "solve",
                        0.42840914963610105
                    ],
                    [
                        "fact",
                        0.5126595117547099
                    ],
                    [
                        "recursion",
                        0.5366871135422884
                    ],
                    [
                        "deep",
                        0.5374035387620577
                    ],
                    [
                        "IJ",
                        0.6831184453768597
                    ],
                    [
                        "solve Sudoku",
                        0.6999606325493022
                    ],
                    [
                        "global variable",
                        0.7175569546855431
                    ],
                    [
                        "notion",
                        0.7798181456772892
                    ],
                    [
                        "convenient",
                        0.7916317822578174
                    ],
                    [
                        "construct",
                        0.7916317822578174
                    ],
                    [
                        "effect",
                        0.8741979603853759
                    ],
                    [
                        "true",
                        0.9018840268729577
                    ],
                    [
                        "undoing",
                        0.9044696687107201
                    ],
                    [
                        "single",
                        0.9049159755030604
                    ],
                    [
                        "copy",
                        0.9049159755030604
                    ],
                    [
                        "corresponding",
                        0.9082853120551622
                    ],
                    [
                        "thing",
                        0.9132846202380187
                    ],
                    [
                        "reason",
                        0.914240884627185
                    ],
                    [
                        "false",
                        0.9154470097515214
                    ],
                    [
                        "valid",
                        0.9168638636573823
                    ],
                    [
                        "grid",
                        0.9226706933154297
                    ],
                    [
                        "memory location",
                        0.9435970623196386
                    ],
                    [
                        "level deep",
                        1.4067867808528018
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "backtrack",
                        0.26635073573760065
                    ],
                    [
                        "Sudoku",
                        0.30691110167972596
                    ],
                    [
                        "location",
                        0.35205543863887817
                    ],
                    [
                        "IJ",
                        0.6831184453768597
                    ],
                    [
                        "thing",
                        0.9132846202380187
                    ],
                    [
                        "grid",
                        0.9226706933154297
                    ]
                ]
            }
        },
        "auK3PSZoidc-2160": {
            "id": "auK3PSZoidc-2160",
            "heat": 0.1,
            "start": 2160.0,
            "text": " undoing your guess, right? So backtracks makes sense from a standpoint of I need to backtrack and go in a different fork in the road. And so that's why I have backtracks plus equals one when I'm undoing my decision that I made. So this kind of gives you a sense for how many wrong guesses that this program did. And as you can imagine, the more the number of wrong guesses, the more the computation and the longer it takes. So it is definitely a proxy for performance. But it's a platform independent proxy that's more algorithm related as opposed to the speed of the computer. Because if this computer were twice as fast, I mean I'd just see things running faster even though the algorithm isn't any better. Right? That make sense? So it's a very simple use of global. You don't want to use global variables except in certain constrained settings. This is a fine use of global variables. Cool, good. So any questions about this code? So what I've done here is I just have the naive code. And I happen to have different numbers of backtracks because I have different inputs. Unlike the N-queens problem, which is kind of boring in some sense, because once you've solved it there's nothing left, in the case of Sudoku, I could change my input, my starting point, and give you different problems. And so the reason we had many different kinds of backtracks was simply because--",
            "metrics": {
                "relativeDCReadability": 1.0981949479116895,
                "lexicalDiversity": 0.4807692307692308,
                "posComposition": {
                    "VBG": 0.015,
                    "PRP$": 0.015,
                    "NN": 0.127,
                    "RB": 0.069,
                    "JJ": 0.085,
                    "VBZ": 0.05,
                    "IN": 0.135,
                    "DT": 0.112,
                    "PRP": 0.085,
                    "VBP": 0.042,
                    "TO": 0.015,
                    "VB": 0.035,
                    "CC": 0.035,
                    "WRB": 0.012,
                    "NNS": 0.058,
                    "CD": 0.004,
                    "VBD": 0.027,
                    "MD": 0.012,
                    "JJR": 0.019,
                    "WDT": 0.012,
                    "VBN": 0.015,
                    "NNP": 0.012,
                    "WP": 0.004,
                    "EX": 0.004,
                    ":": 0.004
                },
                "syllableRate": 3.017,
                "topicScores": [
                    [
                        "different",
                        0.34998473757522397
                    ],
                    [
                        "backtrack",
                        0.35237944687746625
                    ],
                    [
                        "sense",
                        0.3830437841527332
                    ],
                    [
                        "global",
                        0.4205569188872887
                    ],
                    [
                        "guess",
                        0.4242606720578319
                    ],
                    [
                        "use",
                        0.4438709526701315
                    ],
                    [
                        "kind",
                        0.4503417100788467
                    ],
                    [
                        "right",
                        0.49072222800011484
                    ],
                    [
                        "wrong",
                        0.5450368952301778
                    ],
                    [
                        "code",
                        0.548509917512327
                    ],
                    [
                        "computer",
                        0.5605200749526604
                    ],
                    [
                        "variable",
                        0.560975512229773
                    ],
                    [
                        "proxy",
                        0.5674628423459298
                    ],
                    [
                        "input",
                        0.5680358753060154
                    ],
                    [
                        "problem",
                        0.5682919842164046
                    ],
                    [
                        "number",
                        0.5691620627695689
                    ],
                    [
                        "algorithm",
                        0.5699286784918984
                    ],
                    [
                        "N",
                        0.6995006764555948
                    ],
                    [
                        "Sudoku",
                        0.6995006764555948
                    ],
                    [
                        "road",
                        0.8245747837584202
                    ],
                    [
                        "standpoint",
                        0.8667695570180124
                    ],
                    [
                        "fork",
                        0.8667695570180124
                    ],
                    [
                        "performance",
                        0.8816569843864723
                    ],
                    [
                        "decision",
                        0.8877242227837343
                    ],
                    [
                        "program",
                        0.8894388156184682
                    ],
                    [
                        "well",
                        0.8906057823155857
                    ],
                    [
                        "cool",
                        0.8927891462077429
                    ],
                    [
                        "good",
                        0.8927891462077429
                    ],
                    [
                        "setting",
                        0.900657124885284
                    ],
                    [
                        "computation",
                        0.9064415037758636
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "different",
                        0.34998473757522397
                    ],
                    [
                        "backtrack",
                        0.35237944687746625
                    ],
                    [
                        "sense",
                        0.3830437841527332
                    ],
                    [
                        "guess",
                        0.4242606720578319
                    ],
                    [
                        "kind",
                        0.4503417100788467
                    ],
                    [
                        "right",
                        0.49072222800011484
                    ],
                    [
                        "code",
                        0.548509917512327
                    ],
                    [
                        "number",
                        0.5691620627695689
                    ],
                    [
                        "N",
                        0.6995006764555948
                    ],
                    [
                        "Sudoku",
                        0.6995006764555948
                    ]
                ]
            }
        },
        "auK3PSZoidc-2250": {
            "id": "auK3PSZoidc-2250",
            "heat": 0.1,
            "start": 2250.0,
            "text": " numbers of backtracks was because we had four different inputs to the Sudoku puzzle. All right, so are we good here? People understand this code? You're going to have to modify it, right? Not necessarily this code, depending on the exercise you do, but this is certainly something that hopefully you feel comfortable with potentially modifying. All right so what I'm going to do now is first I'm going to go ahead and show you some code that corresponds to something that is the original code, except that I'm going to add some smarts to it. What I'm going to do is, at any given point of time, I'm going to try to do some implications without actually doing any guessing. So the way I'm going to integrate the human approach into this exhaustive search approach at top level, is I'm going to take my configuration, and before I do an arbitrary guess, before I call find next cell, or maybe I have a particular location here that I'm eventually going to guess. So I do know that. But before that, I'm going to try and see whether the current grid values imply anything or not by using the rules in exactly the same way or roughly, I should say, the same way that we did right when we began the lecture. All right? So we're going to try and use some implications and maybe imply the eight or imply something different associated with some other location.",
            "metrics": {
                "relativeDCReadability": 1.0569325604900415,
                "lexicalDiversity": 0.4689922480620155,
                "posComposition": {
                    "NNS": 0.035,
                    "IN": 0.093,
                    "VBD": 0.016,
                    "PRP": 0.097,
                    "CD": 0.008,
                    "JJ": 0.062,
                    "TO": 0.062,
                    "DT": 0.105,
                    "NNP": 0.016,
                    "VBP": 0.089,
                    "RB": 0.089,
                    "NNPS": 0.004,
                    "NN": 0.093,
                    "VBG": 0.062,
                    "VB": 0.078,
                    "CC": 0.043,
                    "VBZ": 0.019,
                    "WP": 0.008,
                    "WDT": 0.004,
                    "VBN": 0.008,
                    "PRP$": 0.004,
                    "MD": 0.004,
                    "WRB": 0.004
                },
                "syllableRate": 3.183,
                "topicScores": [
                    [
                        "right",
                        0.29542036308507746
                    ],
                    [
                        "code",
                        0.3556041618241191
                    ],
                    [
                        "sudoku",
                        0.39943778287827364
                    ],
                    [
                        "sudoku puzzle",
                        0.4029681319025309
                    ],
                    [
                        "way",
                        0.4263357868834435
                    ],
                    [
                        "guess",
                        0.5456409345145993
                    ],
                    [
                        "location",
                        0.546399897999475
                    ],
                    [
                        "different",
                        0.5472833772130572
                    ],
                    [
                        "implication",
                        0.5481092497780122
                    ],
                    [
                        "approach",
                        0.5600246755906154
                    ],
                    [
                        "number",
                        0.7190742770434497
                    ],
                    [
                        "backtrack",
                        0.7697565627190092
                    ],
                    [
                        "input",
                        0.7697565627190092
                    ],
                    [
                        "good",
                        0.8220963521004393
                    ],
                    [
                        "People",
                        0.823999353510485
                    ],
                    [
                        "modifying",
                        0.8515637400395643
                    ],
                    [
                        "guessing",
                        0.8696605536688764
                    ],
                    [
                        "lecture",
                        0.8791100397521932
                    ],
                    [
                        "exercise",
                        0.882257247737326
                    ],
                    [
                        "comfortable",
                        0.882257247737326
                    ],
                    [
                        "original",
                        0.8849444141155756
                    ],
                    [
                        "time",
                        0.8889345901969583
                    ],
                    [
                        "level",
                        0.8921728082965729
                    ],
                    [
                        "configuration",
                        0.8921728082965729
                    ],
                    [
                        "arbitrary",
                        0.8921728082965729
                    ],
                    [
                        "cell",
                        0.8921728082965729
                    ],
                    [
                        "smart",
                        0.8933312005730867
                    ],
                    [
                        "point",
                        0.8970643515366922
                    ],
                    [
                        "human",
                        0.9000921787124142
                    ],
                    [
                        "exhaustive",
                        0.9000921787124142
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "right",
                        0.29542036308507746
                    ],
                    [
                        "code",
                        0.3556041618241191
                    ],
                    [
                        "sudoku puzzle",
                        0.4029681319025309
                    ],
                    [
                        "way",
                        0.4263357868834435
                    ],
                    [
                        "guess",
                        0.5456409345145993
                    ],
                    [
                        "location",
                        0.546399897999475
                    ],
                    [
                        "different",
                        0.5472833772130572
                    ],
                    [
                        "implication",
                        0.5481092497780122
                    ],
                    [
                        "number",
                        0.7190742770434497
                    ],
                    [
                        "backtrack",
                        0.7697565627190092
                    ]
                ]
            }
        },
        "auK3PSZoidc-2340": {
            "id": "auK3PSZoidc-2340",
            "heat": 0.1,
            "start": 2340.0,
            "text": " So this is not a backtrack, in the sense that this is going to be-- I can take this to the bank assuming I haven't done any guessing up until this point, and assuming that the initial configuration that was given to me corresponds to a valid solution. But I'm actually going to do this at different points in the search. So it might be that I'm just going to arbitrarily choose a two here. And so I go through and I'm going to take this, for argument's sake, and I'm going to put a two down. And then I have not the initial puzzle that was given to me, but something that I've kind of hacked in the sense that I've stuck a two in there. And that may not correspond to the solution, because I just sort of put the two down there. But now given the two, I'm going to try and do some implications. And I'm going to try and see whether there's things that are valid or not. The important thing is that, because I put a two down in an arbitrary way without using implications, the two could have been incorrect. I mean that's exactly why we have all of these backtracks, correct? Because I've put down incorrect guesses and then I've had to backtrack. So once I put a two down and then I fill in a bunch of things with implications. You know, I may even put an eight up there. I may put a six out here, et cetera, et cetera. And I go deep in and then I realize, ooh, you know that two was a mistake.",
            "metrics": {
                "relativeDCReadability": 1.008650900297054,
                "lexicalDiversity": 0.410958904109589,
                "posComposition": {
                    "RB": 0.089,
                    "DT": 0.12,
                    "VBZ": 0.024,
                    "NN": 0.075,
                    "IN": 0.113,
                    "VBG": 0.038,
                    "TO": 0.045,
                    "VB": 0.055,
                    ":": 0.003,
                    "PRP": 0.099,
                    "MD": 0.021,
                    "VBP": 0.082,
                    "VBN": 0.034,
                    "RP": 0.01,
                    "CC": 0.058,
                    "JJ": 0.031,
                    "WDT": 0.01,
                    "VBD": 0.01,
                    "NNS": 0.027,
                    "CD": 0.038,
                    "POS": 0.003,
                    "EX": 0.007,
                    "WRB": 0.003,
                    "NNP": 0.003
                },
                "syllableRate": 3.158,
                "topicScores": [
                    [
                        "backtrack",
                        0.4157548154590808
                    ],
                    [
                        "implication",
                        0.41692931979540493
                    ],
                    [
                        "thing",
                        0.4244010245904763
                    ],
                    [
                        "point",
                        0.480365401179678
                    ],
                    [
                        "sense",
                        0.49671483511184167
                    ],
                    [
                        "initial",
                        0.5060029570532667
                    ],
                    [
                        "solution",
                        0.5124902500778004
                    ],
                    [
                        "valid",
                        0.5316486041521897
                    ],
                    [
                        "cetera",
                        0.5387967407739257
                    ],
                    [
                        "incorrect",
                        0.5468645685519506
                    ],
                    [
                        "be--",
                        0.78640788329555
                    ],
                    [
                        "bank",
                        0.78640788329555
                    ],
                    [
                        "guessing",
                        0.78640788329555
                    ],
                    [
                        "configuration",
                        0.78640788329555
                    ],
                    [
                        "search",
                        0.8188595079172517
                    ],
                    [
                        "different",
                        0.8471220625324943
                    ],
                    [
                        "argument",
                        0.8766995961459444
                    ],
                    [
                        "sake",
                        0.8766995961459444
                    ],
                    [
                        "puzzle",
                        0.8919148910524344
                    ],
                    [
                        "important",
                        0.9028359267687174
                    ],
                    [
                        "mistake",
                        0.9030301632352842
                    ],
                    [
                        "arbitrary",
                        0.9084387615570607
                    ],
                    [
                        "way",
                        0.9084387615570607
                    ],
                    [
                        "bunch",
                        0.914440265512522
                    ],
                    [
                        "initial configuration",
                        1.707794457185743
                    ],
                    [
                        "et cetera",
                        1.7597907435979119
                    ],
                    [
                        "different point",
                        1.8166302630699633
                    ],
                    [
                        "valid solution",
                        2.169173407437758
                    ],
                    [
                        "initial puzzle",
                        2.5126163128296946
                    ],
                    [
                        "important thing",
                        3.2795209272418964
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "backtrack",
                        0.4157548154590808
                    ],
                    [
                        "implication",
                        0.41692931979540493
                    ],
                    [
                        "thing",
                        0.4244010245904763
                    ],
                    [
                        "sense",
                        0.49671483511184167
                    ],
                    [
                        "solution",
                        0.5124902500778004
                    ],
                    [
                        "different",
                        0.8471220625324943
                    ],
                    [
                        "way",
                        0.9084387615570607
                    ]
                ]
            }
        },
        "auK3PSZoidc-2430": {
            "id": "auK3PSZoidc-2430",
            "heat": 0.1,
            "start": 2430.0,
            "text": " The two really shouldn't have been in there. Now I have to clean up everything. I have to clean up all of the guesses that came after two and all of the implications that came after two. All right? That's the biggest thing that I want you to take away from this integration of implications with exhaustive search. It's clean up your mess, clean up your bad guesses. The fact that-- you say, oh but the implication was something that was deterministic. It was exactly following these rules. No, no, no, no, no. It was deterministic. All of that is true. But you made a wrong guess. And therefore everything that you did from then on out is in question. And if you, in fact, find a contradiction, you've got to go all the way back and clean up everything. And then go back and erase everything that you had. And then go take this two and maybe turn it into a three or what have you. All right? So before I show you the code that does the implications-- and you can kind of imagine that there's many ways that we could do implications, we did that manually. I want to show you this part looks exactly the same as before, no change. Find next cell to grid is exactly the same. Is valid is exactly the same, right? There's a large make implications procedure and an undo implications that I'll get to in a second. But this part here looks almost exactly the same, except that I've replaced grid IJ equals E with make implications.",
            "metrics": {
                "relativeDCReadability": 0.9164601863840671,
                "lexicalDiversity": 0.4223826714801444,
                "posComposition": {
                    "DT": 0.13,
                    "CD": 0.018,
                    "RB": 0.069,
                    "MD": 0.014,
                    "VB": 0.054,
                    "VBN": 0.011,
                    "IN": 0.112,
                    "PRP": 0.087,
                    "VBP": 0.051,
                    "TO": 0.025,
                    "RP": 0.022,
                    "NN": 0.101,
                    "NNS": 0.04,
                    "WDT": 0.018,
                    "VBD": 0.036,
                    "CC": 0.051,
                    "VBZ": 0.043,
                    "JJS": 0.004,
                    "JJ": 0.065,
                    "PRP$": 0.007,
                    ":": 0.007,
                    "UH": 0.004,
                    "VBG": 0.004,
                    "NNP": 0.014,
                    "PDT": 0.004,
                    "WP": 0.004,
                    "EX": 0.007
                },
                "syllableRate": 3.058,
                "topicScores": [
                    [
                        "implication",
                        0.3009373517548578
                    ],
                    [
                        "clean",
                        0.32503449691345365
                    ],
                    [
                        "right",
                        0.40628507288295695
                    ],
                    [
                        "guess",
                        0.4407256915930204
                    ],
                    [
                        "deterministic",
                        0.5428696677705583
                    ],
                    [
                        "fact",
                        0.5673954652984484
                    ],
                    [
                        "way",
                        0.5820388603419318
                    ],
                    [
                        "grid",
                        0.5843290705024644
                    ],
                    [
                        "IJ",
                        0.7134219570483559
                    ],
                    [
                        "search",
                        0.9022685789007301
                    ],
                    [
                        "rule",
                        0.9147417986483284
                    ],
                    [
                        "exhaustive",
                        0.9160194472269338
                    ],
                    [
                        "true",
                        0.9196898146997933
                    ],
                    [
                        "mess",
                        0.9197079492398028
                    ],
                    [
                        "bad",
                        0.9197079492398028
                    ],
                    [
                        "change",
                        0.9206625685323759
                    ],
                    [
                        "big",
                        0.9218601790289022
                    ],
                    [
                        "thing",
                        0.9218601790289022
                    ],
                    [
                        "integration",
                        0.9218601790289022
                    ],
                    [
                        "question",
                        0.9220662441514466
                    ],
                    [
                        "that--",
                        0.928017119562645
                    ],
                    [
                        "second",
                        0.9286001759518163
                    ],
                    [
                        "wrong",
                        0.9322665593329059
                    ],
                    [
                        "contradiction",
                        0.934110028231553
                    ],
                    [
                        "valid",
                        0.9384448136264397
                    ],
                    [
                        "code",
                        0.9413642957371189
                    ],
                    [
                        "cell",
                        0.9423716346810612
                    ],
                    [
                        "large",
                        0.9432452786120162
                    ],
                    [
                        "procedure",
                        0.9432452786120162
                    ],
                    [
                        "undo",
                        0.9432452786120162
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "implication",
                        0.3009373517548578
                    ],
                    [
                        "right",
                        0.40628507288295695
                    ],
                    [
                        "guess",
                        0.4407256915930204
                    ],
                    [
                        "way",
                        0.5820388603419318
                    ],
                    [
                        "grid",
                        0.5843290705024644
                    ],
                    [
                        "IJ",
                        0.7134219570483559
                    ],
                    [
                        "thing",
                        0.9218601790289022
                    ],
                    [
                        "code",
                        0.9413642957371189
                    ]
                ]
            }
        },
        "auK3PSZoidc-2520": {
            "id": "auK3PSZoidc-2520",
            "heat": 0.1,
            "start": 2520.0,
            "text": " And this is something that not only is-- what make implications is going to do is it's going to set-- whatever I had up here, it's going to set two up here. And on top of that it's going to go use these things to go fill in a bunch of different values in here. So it's one extra step. This is the integration that I talked about. So the idea is that-- now you can do this for the original as well. But the point is, once you've made a guess, you always want to check to see whether that guess does certain implications or not. Right? I mean that's the whole purpose of this exercise. Even humans do this in the very difficult puzzles. They make a guess and then they see whether there's some implication or not. And maybe there's a contradiction and they have to go back and undo all of that damage they caused and change the guess. But in general, when you have a configuration and you add to it, it's possible suddenly that there will be other things that are implied by the one change that you made to it. So grid IJ equals E in the original code got replaced with this procedure that we'll talk about, which I don't want to spend a whole lot of time on, but it's essentially something in terms of details. But it's essentially something that puts in different values in the different locations. And grid IJ equal zero is replaced by undo implications, which is cleaning up all of the incorrect guesses",
            "metrics": {
                "relativeDCReadability": 0.9691966010398605,
                "lexicalDiversity": 0.4381625441696113,
                "posComposition": {
                    "CC": 0.053,
                    "DT": 0.11,
                    "VBZ": 0.074,
                    "NN": 0.092,
                    "IN": 0.127,
                    "RB": 0.074,
                    ":": 0.011,
                    "WP": 0.004,
                    "VBP": 0.042,
                    "NNS": 0.049,
                    "VBG": 0.018,
                    "TO": 0.039,
                    "VB": 0.049,
                    "PRP": 0.085,
                    "WDT": 0.018,
                    "VBD": 0.018,
                    "RP": 0.007,
                    "CD": 0.011,
                    "JJ": 0.067,
                    "MD": 0.011,
                    "VBN": 0.014,
                    "EX": 0.011,
                    "WRB": 0.004,
                    "NNP": 0.014
                },
                "syllableRate": 3.158,
                "topicScores": [
                    [
                        "guess",
                        0.31662583979780884
                    ],
                    [
                        "implication",
                        0.3593848222366654
                    ],
                    [
                        "IJ",
                        0.3959159338426915
                    ],
                    [
                        "different",
                        0.4159086156379652
                    ],
                    [
                        "grid",
                        0.5299570732114852
                    ],
                    [
                        "value",
                        0.5313740522955152
                    ],
                    [
                        "equal",
                        0.5414980291679027
                    ],
                    [
                        "original",
                        0.5417327453710461
                    ],
                    [
                        "thing",
                        0.5443408114394398
                    ],
                    [
                        "undo",
                        0.5501711114609039
                    ],
                    [
                        "change",
                        0.5527461391551678
                    ],
                    [
                        "grid IJ",
                        0.7032029592151076
                    ],
                    [
                        "step",
                        0.8370845540279035
                    ],
                    [
                        "bunch",
                        0.8534591134184377
                    ],
                    [
                        "extra",
                        0.8585692294449311
                    ],
                    [
                        "exercise",
                        0.8703766211999459
                    ],
                    [
                        "puzzle",
                        0.8735377539446036
                    ],
                    [
                        "integration",
                        0.8770978224538222
                    ],
                    [
                        "point",
                        0.8805906705573073
                    ],
                    [
                        "detail",
                        0.8823552814757042
                    ],
                    [
                        "idea",
                        0.8836588015612732
                    ],
                    [
                        "that--",
                        0.8836588015612732
                    ],
                    [
                        "location",
                        0.8839529270270807
                    ],
                    [
                        "certain",
                        0.888595756048646
                    ],
                    [
                        "human",
                        0.8908420044294376
                    ],
                    [
                        "difficult",
                        0.8908420044294376
                    ],
                    [
                        "purpose",
                        0.8956218108625204
                    ],
                    [
                        "general",
                        0.8970209116846466
                    ],
                    [
                        "time",
                        0.8985930637037717
                    ],
                    [
                        "incorrect",
                        0.9012559366403687
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "guess",
                        0.31662583979780884
                    ],
                    [
                        "implication",
                        0.3593848222366654
                    ],
                    [
                        "IJ",
                        0.3959159338426915
                    ],
                    [
                        "different",
                        0.4159086156379652
                    ],
                    [
                        "grid",
                        0.5299570732114852
                    ],
                    [
                        "thing",
                        0.5443408114394398
                    ],
                    [
                        "grid IJ",
                        0.7032029592151076
                    ],
                    [
                        "location",
                        0.8839529270270807
                    ]
                ]
            }
        },
        "auK3PSZoidc-2610": {
            "id": "auK3PSZoidc-2610",
            "heat": 0.1,
            "start": 2610.0,
            "text": " and incorrect implications. And the reason the implications are incorrect-- because it came from an incorrect guess. And so that's it. Undo implications is trivial. It just sets all of the implications, and I'll tell you what the data structure is in a second, but think of it as making everything zero, going back to a clean slate. I mean clean slate in the sense that all of the incorrect implications and guesses are cleaned up. So that's all there is over here. Make implications is-- you can do anything you want. You can do vertical scans. You can do horizontal scans. You can-- if you go look at Sudoku literature and you look at ways of playing Sudoku, there's books written on how you can become a better Sudoku puzzle solver. And you could take that, and you could code that in. And you could replace make implications with those fancy techniques that are up there, right? But we've established I'm lazy. And so I only write a certain amount of code, and then I get tired. And so I wrote about 20 lines of code corresponding to a fairly straightforward implication just to give you a sense of how this would work. But the most important thing in here is not the details of make implications. And I'll give you some sense of that before we're done. But it's really the structure that is the most important. The fact that I've done make implications here and undo implications here is the correctness requirement",
            "metrics": {
                "relativeDCReadability": 1.010257689308379,
                "lexicalDiversity": 0.44402985074626866,
                "posComposition": {
                    "CC": 0.067,
                    "JJ": 0.067,
                    "NNS": 0.067,
                    "DT": 0.104,
                    "NN": 0.097,
                    "VBP": 0.049,
                    ":": 0.011,
                    "IN": 0.108,
                    "PRP": 0.108,
                    "VBD": 0.007,
                    "RB": 0.067,
                    "VBZ": 0.045,
                    "NNP": 0.019,
                    "MD": 0.041,
                    "VB": 0.049,
                    "WP": 0.004,
                    "VBG": 0.015,
                    "CD": 0.007,
                    "TO": 0.011,
                    "VBN": 0.019,
                    "RP": 0.004,
                    "EX": 0.007,
                    "WRB": 0.007,
                    "JJR": 0.004,
                    "WDT": 0.007,
                    "RBS": 0.007
                },
                "syllableRate": 3.133,
                "topicScores": [
                    [
                        "implication",
                        0.24004682493360283
                    ],
                    [
                        "incorrect",
                        0.4081800048518833
                    ],
                    [
                        "Sudoku",
                        0.4188652306691383
                    ],
                    [
                        "clean",
                        0.432703830983911
                    ],
                    [
                        "sense",
                        0.44071026996531765
                    ],
                    [
                        "code",
                        0.4478058489163503
                    ],
                    [
                        "scan",
                        0.5286428011182118
                    ],
                    [
                        "guess",
                        0.5412486574813581
                    ],
                    [
                        "slate",
                        0.5417404944175969
                    ],
                    [
                        "important",
                        0.5566766137345258
                    ],
                    [
                        "structure",
                        0.5606549482491864
                    ],
                    [
                        "reason",
                        0.866174450288597
                    ],
                    [
                        "Undo",
                        0.8716248004184521
                    ],
                    [
                        "trivial",
                        0.8716248004184521
                    ],
                    [
                        "second",
                        0.8985008094761133
                    ],
                    [
                        "right",
                        0.8998945369953921
                    ],
                    [
                        "solver",
                        0.9052851211012973
                    ],
                    [
                        "data",
                        0.906004384908277
                    ],
                    [
                        "lazy",
                        0.9096292116033686
                    ],
                    [
                        "tired",
                        0.9107805449225055
                    ],
                    [
                        "vertical",
                        0.9141147879029977
                    ],
                    [
                        "requirement",
                        0.9151843288004917
                    ],
                    [
                        "horizontal",
                        0.916311835190729
                    ],
                    [
                        "is--",
                        0.9181023134472848
                    ],
                    [
                        "puzzle",
                        0.9197771036624938
                    ],
                    [
                        "literature",
                        0.9258376046811185
                    ],
                    [
                        "way",
                        0.9258376046811185
                    ],
                    [
                        "book",
                        0.9258376046811185
                    ],
                    [
                        "well",
                        0.9258376046811185
                    ],
                    [
                        "fact",
                        0.9282816619486822
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "implication",
                        0.24004682493360283
                    ],
                    [
                        "Sudoku",
                        0.4188652306691383
                    ],
                    [
                        "sense",
                        0.44071026996531765
                    ],
                    [
                        "code",
                        0.4478058489163503
                    ],
                    [
                        "guess",
                        0.5412486574813581
                    ],
                    [
                        "right",
                        0.8998945369953921
                    ],
                    [
                        "way",
                        0.9258376046811185
                    ]
                ]
            }
        },
        "auK3PSZoidc-2700": {
            "id": "auK3PSZoidc-2700",
            "heat": 0.1,
            "start": 2700.0,
            "text": " that is important to exhaustive search. So if I do this and I do kind of the implications that we had right at the beginning of lecture and I go ahead and run it, just take a look. I won't write this out, but remember what the backtracks are for these things, roughly speaking, for the original Sudoku. Oh, I'm sorry, I need to go to the shell. And it was 335,000-- what is it-- 579, 6363, 335,000, and 9949. So if I go off and I run Sudoku optimized, which is doing these implications like I describe, and I go ahead and run that. The first one goes from 579 to 33 backtracks. OK so that's pretty good. Because it's done a bunch of implications. It's still-- it's not super smart. I mean that is a simple enough puzzle that a human being would not backtrack. I mean a human being would not backtrack in that first puzzle, right? And you should check that. And-- oh, this thing finished in the middle. So it went to 33. Oh, only had three of them? What do I have here in Sudoku Opt? Oh I see. I only ran-- oh wow.",
            "metrics": {
                "relativeDCReadability": 1.0726960465321218,
                "lexicalDiversity": 0.46445497630331756,
                "posComposition": {
                    "DT": 0.104,
                    "VBZ": 0.043,
                    "JJ": 0.057,
                    "TO": 0.024,
                    "NN": 0.071,
                    "IN": 0.109,
                    "PRP": 0.118,
                    "VBP": 0.071,
                    "CC": 0.052,
                    "NNS": 0.028,
                    "VBD": 0.028,
                    "VBN": 0.014,
                    "RB": 0.062,
                    "VB": 0.043,
                    "MD": 0.019,
                    "RP": 0.005,
                    "WP": 0.014,
                    "VBG": 0.019,
                    "NNP": 0.038,
                    "CD": 0.043,
                    ":": 0.024,
                    "WDT": 0.005,
                    "UH": 0.009
                },
                "syllableRate": 2.2,
                "topicScores": [
                    [
                        "backtrack",
                        0.3800797918299558
                    ],
                    [
                        "Sudoku",
                        0.41232539649813227
                    ],
                    [
                        "implication",
                        0.4424068942488096
                    ],
                    [
                        "human",
                        0.5629768255981432
                    ],
                    [
                        "right",
                        0.5632907459466671
                    ],
                    [
                        "thing",
                        0.5701723050049101
                    ],
                    [
                        "puzzle",
                        0.5780721020432779
                    ],
                    [
                        "Opt",
                        0.6771752029281651
                    ],
                    [
                        "Sudoku Opt",
                        0.7938755740339627
                    ],
                    [
                        "search",
                        0.8430858674536701
                    ],
                    [
                        "look",
                        0.8671947965318092
                    ],
                    [
                        "exhaustive",
                        0.8677875697188718
                    ],
                    [
                        "important",
                        0.8781018823379385
                    ],
                    [
                        "shell",
                        0.8889062018650336
                    ],
                    [
                        "beginning",
                        0.8974849891367904
                    ],
                    [
                        "lecture",
                        0.8974849891367904
                    ],
                    [
                        "original",
                        0.8999304799465322
                    ],
                    [
                        "sorry",
                        0.9071888420628428
                    ],
                    [
                        "good",
                        0.9082289190364835
                    ],
                    [
                        "And--",
                        0.9096071684525057
                    ],
                    [
                        "still--",
                        0.9119967323648616
                    ],
                    [
                        "it--",
                        0.9123040614976479
                    ],
                    [
                        "smart",
                        0.913519179732196
                    ],
                    [
                        "middle",
                        0.9181131556249823
                    ],
                    [
                        "bunch",
                        0.931498213538865
                    ],
                    [
                        "simple",
                        0.9350950452643615
                    ],
                    [
                        "original Sudoku",
                        1.4279082987003668
                    ],
                    [
                        "exhaustive search",
                        2.726052233546743
                    ],
                    [
                        "simple enough puzzle",
                        55.705114286626284
                    ]
                ],
                "topTopicSimilarity": 0.20689655172413793,
                "sharedTopicScores": [
                    [
                        "backtrack",
                        0.3800797918299558
                    ],
                    [
                        "Sudoku",
                        0.41232539649813227
                    ],
                    [
                        "implication",
                        0.4424068942488096
                    ],
                    [
                        "right",
                        0.5632907459466671
                    ],
                    [
                        "thing",
                        0.5701723050049101
                    ],
                    [
                        "look",
                        0.8671947965318092
                    ]
                ]
            }
        },
        "auK3PSZoidc-2790": {
            "id": "auK3PSZoidc-2790",
            "heat": 0.1,
            "start": 2790.0,
            "text": " OK so I ran inp2, hard, and difficult. So it really went from 6363 to 33. It went from 335,000 to 24,000. And then it went to-- 7-- went from 9949 to 726. The details aren't-- the numbers aren't super important. Don't hang your hat on them. Obviously if I change the code those numbers change. But you can see that there are substantial gains to be had in terms of implications not making these dumb guesses that clearly are incorrect. And you can fill in-- if you take away some of these empty squares, then the depth of the recursion that you have to go through becomes substantially smaller. And that's why your backtracking is simpler. So I want to leave you with a couple of things. I want to give you some sense for what particular implication that-- a strategy that we used. And so I'll just put up make implications and give you some sense for how this works. So the basic idea is that what I'm doing here is I'm looking at a particular sector. And I've created a data structure that says the missing elements here-- if I put a two in here-- let's just say I go ahead and put a two in here. The missing elements here are-- the set is three, four, five, six, seven, and nine.",
            "metrics": {
                "relativeDCReadability": 1.0265430996857765,
                "lexicalDiversity": 0.4669421487603306,
                "posComposition": {
                    "IN": 0.112,
                    "RB": 0.103,
                    "PRP": 0.091,
                    "VBP": 0.074,
                    "JJ": 0.05,
                    "CC": 0.041,
                    "VBD": 0.021,
                    "CD": 0.062,
                    "TO": 0.033,
                    ":": 0.033,
                    "DT": 0.095,
                    "NNS": 0.05,
                    "VB": 0.054,
                    "PRP$": 0.008,
                    "NN": 0.062,
                    "MD": 0.012,
                    "EX": 0.004,
                    "VBN": 0.012,
                    "VBG": 0.017,
                    "JJR": 0.004,
                    "VBZ": 0.029,
                    "WRB": 0.008,
                    "WP": 0.008,
                    "WDT": 0.008,
                    "RP": 0.004,
                    "POS": 0.004
                },
                "syllableRate": 2.558,
                "topicScores": [
                    [
                        "implication",
                        0.4456448556471798
                    ],
                    [
                        "sense",
                        0.5415924567833008
                    ],
                    [
                        "number",
                        0.5469370811454745
                    ],
                    [
                        "element",
                        0.5540461207749792
                    ],
                    [
                        "particular",
                        0.5614232708955463
                    ],
                    [
                        "here--",
                        0.5725480695003263
                    ],
                    [
                        "difficult",
                        0.7081596860976542
                    ],
                    [
                        "hard",
                        0.7497320744480751
                    ],
                    [
                        "inp2",
                        0.7675920529079575
                    ],
                    [
                        "important",
                        0.8583486523806471
                    ],
                    [
                        "to--",
                        0.8719685204385598
                    ],
                    [
                        "incorrect",
                        0.8757389786405041
                    ],
                    [
                        "small",
                        0.8793096926645568
                    ],
                    [
                        "detail",
                        0.8809868332728009
                    ],
                    [
                        "simple",
                        0.8822824382572967
                    ],
                    [
                        "thing",
                        0.8848061564574784
                    ],
                    [
                        "sector",
                        0.8905666295657705
                    ],
                    [
                        "hat",
                        0.8963361970560512
                    ],
                    [
                        "square",
                        0.8989921672138904
                    ],
                    [
                        "code",
                        0.9007955796987877
                    ],
                    [
                        "substantial",
                        0.9042954820834365
                    ],
                    [
                        "gain",
                        0.9042954820834365
                    ],
                    [
                        "term",
                        0.9042954820834365
                    ],
                    [
                        "dumb",
                        0.9042954820834365
                    ],
                    [
                        "guess",
                        0.9042954820834365
                    ],
                    [
                        "in--",
                        0.9071326269869596
                    ],
                    [
                        "depth",
                        0.9071326269869596
                    ],
                    [
                        "recursion",
                        0.9071326269869596
                    ],
                    [
                        "backtracking",
                        0.9094906014212372
                    ],
                    [
                        "couple",
                        0.9114895279343301
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "implication",
                        0.4456448556471798
                    ],
                    [
                        "sense",
                        0.5415924567833008
                    ],
                    [
                        "number",
                        0.5469370811454745
                    ],
                    [
                        "hard",
                        0.7497320744480751
                    ],
                    [
                        "thing",
                        0.8848061564574784
                    ],
                    [
                        "sector",
                        0.8905666295657705
                    ],
                    [
                        "code",
                        0.9007955796987877
                    ],
                    [
                        "guess",
                        0.9042954820834365
                    ]
                ]
            }
        },
        "auK3PSZoidc-2880": {
            "id": "auK3PSZoidc-2880",
            "heat": 0.1,
            "start": 2880.0,
            "text": " So this could be three, four, five, six, seven, eight, nine. This could be three, four, five, six, seven, eight, nine. This is quite dumb right now. But each of these different squares could be three, four, five, six, seven, eight, nine. OK? Possibly, all right. And then I say-- so that's the first part of the code. And then I say I'm going to attach, essentially, a copy of the set to each of the missing squares. And then I'm going to go through and find the missing elements. So this thing here can't be a nine because I see a nine here. It can't be a three, right? And so I can take this thing here. And I take away the nine. And I take away the three. And I can do the same thing with that. Obviously I can also take away the-- the eight isn't there, but I could take away the seven, and I could away the three, the six, and the one. So I go ahead and I take away the six. And the three was already taken out. And I keep doing this. And I try and shrink the possibilities corresponding to this particular square that has the set of different possibilities. And if I ever-- so when can I make an implication? What is the condition that is going to let me make an implication when I take this set of numbers and I start shrinking them down using these rules that I have over on the right hand side there? What is an implication? What does that correspond to in relation to the size--",
            "metrics": {
                "relativeDCReadability": 0.8979653510302764,
                "lexicalDiversity": 0.45936395759717313,
                "posComposition": {
                    "RB": 0.099,
                    "DT": 0.155,
                    "MD": 0.039,
                    "VB": 0.053,
                    "CD": 0.117,
                    "VBZ": 0.028,
                    "JJ": 0.032,
                    "CC": 0.067,
                    "IN": 0.049,
                    "NNS": 0.025,
                    "NNP": 0.007,
                    "NN": 0.074,
                    "PRP": 0.085,
                    "VBP": 0.053,
                    ":": 0.014,
                    "VBG": 0.025,
                    "TO": 0.025,
                    "RP": 0.014,
                    "EX": 0.004,
                    "VBD": 0.004,
                    "VBN": 0.007,
                    "WDT": 0.007,
                    "WRB": 0.007,
                    "WP": 0.011
                },
                "syllableRate": 2.967,
                "topicScores": [
                    [
                        "right",
                        0.3802359930096333
                    ],
                    [
                        "implication",
                        0.44479705961957156
                    ],
                    [
                        "thing",
                        0.4500780617578157
                    ],
                    [
                        "square",
                        0.45316513676824144
                    ],
                    [
                        "set",
                        0.4553682072442061
                    ],
                    [
                        "ok",
                        0.5595566106525165
                    ],
                    [
                        "different",
                        0.5767362572928053
                    ],
                    [
                        "possibility",
                        0.5882033320671606
                    ],
                    [
                        "dumb",
                        0.9144620830236255
                    ],
                    [
                        "code",
                        0.9259976485041155
                    ],
                    [
                        "element",
                        0.9301057647958573
                    ],
                    [
                        "copy",
                        0.9366350708277881
                    ],
                    [
                        "size--",
                        0.9424141613595403
                    ],
                    [
                        "particular",
                        0.9508003654063234
                    ],
                    [
                        "condition",
                        0.9515527991992
                    ],
                    [
                        "number",
                        0.9515527991992
                    ],
                    [
                        "rule",
                        0.9515527991992
                    ],
                    [
                        "hand",
                        0.9515527991992
                    ],
                    [
                        "relation",
                        0.9522136002546568
                    ],
                    [
                        "different square",
                        4.830269545186703
                    ],
                    [
                        "right hand",
                        5.254203585337444
                    ],
                    [
                        "different possibility",
                        5.766006611179843
                    ],
                    [
                        "particular square",
                        6.232705701031856
                    ]
                ],
                "topTopicSimilarity": 0.30434782608695654,
                "sharedTopicScores": [
                    [
                        "right",
                        0.3802359930096333
                    ],
                    [
                        "implication",
                        0.44479705961957156
                    ],
                    [
                        "thing",
                        0.4500780617578157
                    ],
                    [
                        "set",
                        0.4553682072442061
                    ],
                    [
                        "different",
                        0.5767362572928053
                    ],
                    [
                        "code",
                        0.9259976485041155
                    ],
                    [
                        "number",
                        0.9515527991992
                    ]
                ]
            }
        },
        "auK3PSZoidc-2970": {
            "id": "auK3PSZoidc-2970",
            "heat": 0.1,
            "start": 2970.0,
            "text": " in relation to the set? Right, yeah, behind you, Ryan. AUDIENCE: So if you only have one element. SRINI DEVADAS: That's exactly right. If you have one element in the set, then that's an implication. If I have two elements in the set, it's not an implication, because I don't quite know what to do there. But if I had one element in the set, that's an implication. And that's it. That's-- you know this code is not complicated. Check if the vset is a singleton, which is a single element. And I'm going to go ahead and append to this implication, which is a very straightforward data structure that says this is the grid location I, grid location J, and this is the value that was implied by that. So not only do I have IJE, which is the original guess that I have, I also have kind of a bunch of other tuples corresponding to different coordinates, you know, KL coordinates and the value, call it V, associated with that. And these are all the different implications that I can collect together in this list. And I can just add those things into make implications. And then I keep going. And then if I ever realize I've made a bad guess, I have to undo everything by zeroing them all out, which is making them all empty. So one thing that this code does, and you can take a look at it. And I would encourage you to do the first exercise, which is taking these implications and making them a little more powerful by adding three or four lines of code to this code. And exactly what you have to do in this exercise, and I'll show you what the results should",
            "metrics": {
                "relativeDCReadability": 1.1205553570647682,
                "lexicalDiversity": 0.40522875816993464,
                "posComposition": {
                    "IN": 0.085,
                    "NN": 0.121,
                    "TO": 0.029,
                    "DT": 0.131,
                    "NNP": 0.036,
                    "PRP": 0.105,
                    "VBP": 0.065,
                    "RB": 0.075,
                    "CD": 0.023,
                    "POS": 0.003,
                    "VBZ": 0.052,
                    "NNS": 0.033,
                    "VB": 0.039,
                    "WP": 0.01,
                    "CC": 0.052,
                    "VBD": 0.01,
                    "WDT": 0.026,
                    ":": 0.003,
                    "VBN": 0.01,
                    "JJ": 0.036,
                    "VBG": 0.026,
                    "PDT": 0.003,
                    "MD": 0.02,
                    "RP": 0.003,
                    "RBR": 0.003
                },
                "syllableRate": 3.542,
                "topicScores": [
                    [
                        "implication",
                        0.2896896801885875
                    ],
                    [
                        "element",
                        0.298015826570479
                    ],
                    [
                        "set",
                        0.3431932498768009
                    ],
                    [
                        "code",
                        0.38284678070128053
                    ],
                    [
                        "Ryan",
                        0.4744253116102968
                    ],
                    [
                        "audience",
                        0.49751166221608
                    ],
                    [
                        "srini devada",
                        0.5193516423914505
                    ],
                    [
                        "right",
                        0.5250444074921912
                    ],
                    [
                        "location",
                        0.5530485726908967
                    ],
                    [
                        "grid",
                        0.5618933426007805
                    ],
                    [
                        "value",
                        0.5674390134178866
                    ],
                    [
                        "guess",
                        0.5689810676240998
                    ],
                    [
                        "different",
                        0.5734141503661155
                    ],
                    [
                        "exercise",
                        0.5739796433220193
                    ],
                    [
                        "coordinate",
                        0.5752575814937338
                    ],
                    [
                        "thing",
                        0.5784462444479207
                    ],
                    [
                        "J",
                        0.670570016775131
                    ],
                    [
                        "IJE",
                        0.6743442367393034
                    ],
                    [
                        "KL",
                        0.6743442367393034
                    ],
                    [
                        "relation",
                        0.8147964304454283
                    ],
                    [
                        "complicated",
                        0.9127104049595448
                    ],
                    [
                        "list",
                        0.9201941400236069
                    ],
                    [
                        "singleton",
                        0.9259196892513559
                    ],
                    [
                        "vset",
                        0.9307567956235706
                    ],
                    [
                        "straightforward",
                        0.9321318844859249
                    ],
                    [
                        "data",
                        0.9321318844859249
                    ],
                    [
                        "structure",
                        0.9321318844859249
                    ],
                    [
                        "bad",
                        0.9332526776682106
                    ],
                    [
                        "original",
                        0.9343898150512492
                    ],
                    [
                        "bunch",
                        0.9343898150512492
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "implication",
                        0.2896896801885875
                    ],
                    [
                        "set",
                        0.3431932498768009
                    ],
                    [
                        "code",
                        0.38284678070128053
                    ],
                    [
                        "audience",
                        0.49751166221608
                    ],
                    [
                        "right",
                        0.5250444074921912
                    ],
                    [
                        "location",
                        0.5530485726908967
                    ],
                    [
                        "grid",
                        0.5618933426007805
                    ],
                    [
                        "guess",
                        0.5689810676240998
                    ],
                    [
                        "different",
                        0.5734141503661155
                    ],
                    [
                        "thing",
                        0.5784462444479207
                    ]
                ]
            }
        },
        "auK3PSZoidc-3060": {
            "id": "auK3PSZoidc-3060",
            "heat": 0.1,
            "start": 3060.0,
            "text": " be in just a minute. But let me just spend 30 seconds explaining to you how you could do a little bit better than what this code does. So what I've described to you really is get this set, imply, get a singleton, et cetera. And then you can do this, obviously, for each of these sectors. And that's what this does. You had a for loop up there that does it for each of the sectors. Grab a sector and go ahead and do an implication for that sector. Now this code just runs through the sectors, you know, One, two, three, four, five, six, seven, eight, nine and then discovers the implications if they exist, adds them to the imply list, and then throws up its hands and says I'm tired, I'm done, I don't want to do any more. What could you do that's an improvement, given what we have described and what I've told you so far. What is an incremental improvement over going over these sectors once and doing these implications and storing them and moving on? What is an incremental improvement? Ganatra? AUDIENCE: Look, once we get all the singletons, we can set those as-- since those are determined, like, deterministic, I think that we could set those into the original grid and say that's our new base grid and run through it again. SRINI DEVADAS: Run through it again, exactly. You don't have to stop. There's no reason to stop if you're implying. Once you've put something in here and you've gone through one, two, three, four, five, six, seven, eight, nine, got the implications, you can put them into the grid and then start over again. One, two, three, four, that's what humans do.",
            "metrics": {
                "relativeDCReadability": 0.9276733784408244,
                "lexicalDiversity": 0.43973941368078173,
                "posComposition": {
                    "VB": 0.062,
                    "IN": 0.085,
                    "RB": 0.078,
                    "DT": 0.114,
                    "NN": 0.075,
                    "CC": 0.052,
                    "PRP": 0.101,
                    "VBP": 0.062,
                    "CD": 0.075,
                    "NNS": 0.033,
                    "VBG": 0.02,
                    "TO": 0.02,
                    "WRB": 0.003,
                    "MD": 0.02,
                    "JJ": 0.026,
                    "RBR": 0.003,
                    "WP": 0.029,
                    "VBZ": 0.055,
                    "VBN": 0.026,
                    "VBD": 0.007,
                    "RP": 0.007,
                    "PRP$": 0.007,
                    "JJR": 0.003,
                    "NNP": 0.023,
                    "PDT": 0.003,
                    ":": 0.003,
                    "WDT": 0.007,
                    "EX": 0.003
                },
                "syllableRate": 3.35,
                "topicScores": [
                    [
                        "sector",
                        0.28379219977111514
                    ],
                    [
                        "implication",
                        0.3666606725897539
                    ],
                    [
                        "improvement",
                        0.42126297006157454
                    ],
                    [
                        "imply",
                        0.4259292538134187
                    ],
                    [
                        "set",
                        0.434827454529487
                    ],
                    [
                        "grid",
                        0.43874832226604404
                    ],
                    [
                        "code",
                        0.5465143601486344
                    ],
                    [
                        "incremental",
                        0.5503626430878418
                    ],
                    [
                        "singleton",
                        0.5563721388967191
                    ],
                    [
                        "audience",
                        0.6405310517546438
                    ],
                    [
                        "srini",
                        0.6440880650952681
                    ],
                    [
                        "minute",
                        0.8604283355629218
                    ],
                    [
                        "cetera",
                        0.8896043922808459
                    ],
                    [
                        "second",
                        0.8955514274423766
                    ],
                    [
                        "little",
                        0.8955514274423766
                    ],
                    [
                        "bit",
                        0.8955514274423766
                    ],
                    [
                        "well",
                        0.8955514274423766
                    ],
                    [
                        "Ganatra",
                        0.9129519069691802
                    ],
                    [
                        "loop",
                        0.921523470981635
                    ],
                    [
                        "list",
                        0.9235996454211078
                    ],
                    [
                        "tired",
                        0.9235996454211078
                    ],
                    [
                        "hand",
                        0.9266442728038939
                    ],
                    [
                        "deterministic",
                        0.9281076824969076
                    ],
                    [
                        "as--",
                        0.9338185465322398
                    ],
                    [
                        "original",
                        0.9338185465322398
                    ],
                    [
                        "new",
                        0.9338185465322398
                    ],
                    [
                        "base",
                        0.9338185465322398
                    ],
                    [
                        "human",
                        0.9351260544476367
                    ],
                    [
                        "reason",
                        0.936395095404806
                    ],
                    [
                        "incremental improvement",
                        1.749388195750981
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "sector",
                        0.28379219977111514
                    ],
                    [
                        "implication",
                        0.3666606725897539
                    ],
                    [
                        "imply",
                        0.4259292538134187
                    ],
                    [
                        "set",
                        0.434827454529487
                    ],
                    [
                        "grid",
                        0.43874832226604404
                    ],
                    [
                        "code",
                        0.5465143601486344
                    ],
                    [
                        "audience",
                        0.6405310517546438
                    ]
                ]
            }
        },
        "auK3PSZoidc-3150": {
            "id": "auK3PSZoidc-3150",
            "heat": 0.1,
            "start": 3150.0,
            "text": " Right? When humans put something in, then they don't stop. They just keep going until they get to the end. Now of course all of these implications could be incorrect if that first guess was incorrect. There's no change there. But there's nothing that's stopping you from turning this little thing-- there's a loop here that simply corresponds to making a pass over the sectors, but you can put this whole thing into a loop. And you keep going through the loop until you basically have no change that happens in your grid. OK so that's four lines of code. And I'm not going to show you what those four lines of code look like, so close your eyes in case you-- And this is the solution to that code. And I'm going to go ahead and run it. And you saw what those numbers were with respect to the backtracks. But if you do those extra implications, the 33 went down to two for that example. So this is not optimal, because I wanted one. So if I wanted to be a human being that took this easy puzzle and just sort of went all the way without making any incorrect guesses, I would be doing implications. And that would go all the way. And I got close with two. And I didn't print out the intermediate ones, but the 24,000 went down to 11,000. And I forget what the last one was. It went down. So with four lines of code and with the optimized code that I'll put up you should be able to get those numbers in your first exercise.",
            "metrics": {
                "relativeDCReadability": 0.9162836762396338,
                "lexicalDiversity": 0.4370629370629371,
                "posComposition": {
                    "RB": 0.077,
                    "WRB": 0.003,
                    "NNS": 0.049,
                    "VBD": 0.049,
                    "NN": 0.101,
                    "IN": 0.108,
                    "PRP": 0.08,
                    "VBP": 0.028,
                    "VB": 0.049,
                    "VBG": 0.035,
                    "TO": 0.035,
                    "DT": 0.126,
                    "MD": 0.021,
                    "JJ": 0.056,
                    "EX": 0.01,
                    "VBZ": 0.031,
                    "CC": 0.056,
                    "WDT": 0.003,
                    ":": 0.007,
                    "PRP$": 0.01,
                    "NNPS": 0.003,
                    "CD": 0.031,
                    "WP": 0.01,
                    "NNP": 0.003,
                    "PDT": 0.007,
                    "RP": 0.007
                },
                "syllableRate": 2.975,
                "topicScores": [
                    [
                        "code",
                        0.3336799265870585
                    ],
                    [
                        "right",
                        0.3415346736788103
                    ],
                    [
                        "line",
                        0.4183477337620073
                    ],
                    [
                        "loop",
                        0.4313806025605362
                    ],
                    [
                        "incorrect",
                        0.4320043356546929
                    ],
                    [
                        "implication",
                        0.4391996210486545
                    ],
                    [
                        "change",
                        0.5450281393314522
                    ],
                    [
                        "way",
                        0.5511516588845482
                    ],
                    [
                        "human",
                        0.5603723660495439
                    ],
                    [
                        "guess",
                        0.562127353107684
                    ],
                    [
                        "close",
                        0.5670134081475475
                    ],
                    [
                        "number",
                        0.5678644835248198
                    ],
                    [
                        "end",
                        0.852897292200697
                    ],
                    [
                        "grid",
                        0.8881509905133912
                    ],
                    [
                        "course",
                        0.8940770564845851
                    ],
                    [
                        "you--",
                        0.8978285756000488
                    ],
                    [
                        "sector",
                        0.8999871196870876
                    ],
                    [
                        "backtrack",
                        0.9036547778133465
                    ],
                    [
                        "example",
                        0.9051363630044997
                    ],
                    [
                        "little",
                        0.9070996973183342
                    ],
                    [
                        "thing--",
                        0.9070996973183342
                    ],
                    [
                        "pass",
                        0.9070996973183342
                    ],
                    [
                        "case",
                        0.9127233508169197
                    ],
                    [
                        "exercise",
                        0.9128984339520677
                    ],
                    [
                        "eye",
                        0.9190116783891537
                    ],
                    [
                        "extra",
                        0.9190618324852349
                    ],
                    [
                        "optimal",
                        0.9202060730075108
                    ],
                    [
                        "solution",
                        0.9208186360009001
                    ],
                    [
                        "respect",
                        0.9237325501456023
                    ],
                    [
                        "intermediate",
                        0.9237890849234168
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "code",
                        0.3336799265870585
                    ],
                    [
                        "right",
                        0.3415346736788103
                    ],
                    [
                        "implication",
                        0.4391996210486545
                    ],
                    [
                        "way",
                        0.5511516588845482
                    ],
                    [
                        "guess",
                        0.562127353107684
                    ],
                    [
                        "number",
                        0.5678644835248198
                    ],
                    [
                        "grid",
                        0.8881509905133912
                    ],
                    [
                        "sector",
                        0.8999871196870876
                    ],
                    [
                        "backtrack",
                        0.9036547778133465
                    ],
                    [
                        "solution",
                        0.9208186360009001
                    ]
                ]
            }
        },
        "auK3PSZoidc-3240": {
            "id": "auK3PSZoidc-3240",
            "heat": 0.1,
            "start": 3240.0,
            "text": " Or you could solve diagonal Sudoku or even Sudoku. Or you could spend the rest of the day coding whatever you want, whatever. All right, see you next time.",
            "metrics": {
                "relativeDCReadability": 1.0980269331918122,
                "lexicalDiversity": 0.6206896551724138,
                "posComposition": {
                    "CC": 0.069,
                    "PRP": 0.138,
                    "MD": 0.069,
                    "VB": 0.069,
                    "JJ": 0.103,
                    "NNP": 0.103,
                    "RB": 0.034,
                    "DT": 0.103,
                    "NN": 0.138,
                    "IN": 0.034,
                    "VBG": 0.034,
                    "WDT": 0.069,
                    "VBP": 0.034
                },
                "syllableRate": 0.35,
                "topicScores": [
                    [
                        "Sudoku",
                        0.43518681246089963
                    ],
                    [
                        "time",
                        0.8068490259894924
                    ],
                    [
                        "diagonal",
                        0.8233493592339904
                    ],
                    [
                        "diagonal sudoku",
                        0.8289825231996656
                    ],
                    [
                        "rest",
                        0.87522885678349
                    ],
                    [
                        "day",
                        0.87522885678349
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "Sudoku",
                        0.43518681246089963
                    ]
                ]
            }
        }
    }
}