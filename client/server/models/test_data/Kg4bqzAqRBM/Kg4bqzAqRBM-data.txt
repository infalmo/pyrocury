{
    "metadata": {
        "id": "Kg4bqzAqRBM",
        "avgHeat": 0.39,
        "runtime": 3080.24,
        "dale-challReadabilityScore": 8.035776562022917,
        "lexicalDiversity": 0.47277227722772275,
        "posComposition": {
            "DT": 0.098,
            "JJ": 0.063,
            "NN": 0.128,
            "VBZ": 0.045,
            "VBN": 0.015,
            "IN": 0.115,
            "NNP": 0.024,
            "PRP$": 0.003,
            "MD": 0.017,
            "VB": 0.053,
            "VBP": 0.051,
            "TO": 0.03,
            "NNS": 0.043,
            "CC": 0.051,
            "POS": 0.003,
            "VBG": 0.023,
            "PRP": 0.082,
            "WRB": 0.007,
            "WDT": 0.009,
            "RB": 0.062,
            "JJS": 0.002,
            "CD": 0.033,
            "RP": 0.006,
            "EX": 0.003,
            "JJR": 0.003,
            "WP": 0.008,
            "RBR": 0.002,
            "VBD": 0.012,
            ":": 0.008,
            "RBS": 0.0,
            "PDT": 0.001,
            "UH": 0.0
        },
        "syllableRate": 3.152,
        "topicScores": [
            [
                "n",
                0.09010707992223378
            ],
            [
                "sort",
                0.10280847946393878
            ],
            [
                "L",
                0.10747628972902712
            ],
            [
                "theta",
                0.12832110480863276
            ],
            [
                "merge",
                0.13305037271025183
            ],
            [
                "PROFESSOR",
                0.13464749218156805
            ],
            [
                "look",
                0.14366309029431523
            ],
            [
                "algorithm",
                0.1440859409311005
            ],
            [
                "swap",
                0.14773593354107067
            ],
            [
                "array",
                0.16120948164006874
            ],
            [
                "c",
                0.16184687552875676
            ],
            [
                "square",
                0.16633596048016236
            ],
            [
                "audience",
                0.1669165983005562
            ],
            [
                "theta n",
                0.16824224936516793
            ],
            [
                "time",
                0.1690644396985745
            ],
            [
                "work",
                0.17563286221523844
            ],
            [
                "step",
                0.1794170635319809
            ],
            [
                "log",
                0.18254929564423733
            ],
            [
                "sorted",
                0.18352518241020613
            ],
            [
                "Creative Commons",
                0.18433885831470148
            ],
            [
                "L prime",
                0.1851652429191548
            ],
            [
                "right",
                0.1852475339500579
            ],
            [
                "number",
                0.18637638946499566
            ],
            [
                "insertion",
                0.18754060346472648
            ],
            [
                "constant",
                0.19128798175986375
            ],
            [
                "thing",
                0.19213644336828098
            ],
            [
                "element",
                0.19275258870468592
            ],
            [
                "recurrence",
                0.19396748884329512
            ],
            [
                "compare",
                0.19496175749559497
            ],
            [
                "complexity",
                0.19533994993415668
            ]
        ],
        "topicsList": [
            "n",
            "sort",
            "L",
            "theta",
            "merge",
            "PROFESSOR",
            "look",
            "algorithm",
            "swap",
            "array",
            "c",
            "square",
            "audience",
            "theta n",
            "time",
            "work",
            "step",
            "log",
            "sorted",
            "Creative Commons",
            "L prime",
            "right",
            "number",
            "insertion",
            "constant",
            "thing",
            "element",
            "recurrence",
            "compare",
            "complexity"
        ]
    },
    "chunks": {
        "Kg4bqzAqRBM-0": {
            "id": "Kg4bqzAqRBM-0",
            "heat": 0.1,
            "start": 0.0,
            "text": " The following content is provided under a Creative Commons license. Your support will help MIT OpenCourseWare continue to offer high quality educational resources for free. To make a donation or view additional materials from hundreds of MIT courses, visit MIT OpenCourseWare at ocw.mit.edu. PROFESSOR: So today's lecture is on sorting. We'll be talking about specific sorting algorithms today. I want to start by motivating why we're interested in sorting, which should be fairly easy. Then I want to discuss a particular sorting algorithm that's called insertion sort. That's probably the simplest sorting algorithm you can write, it's five lines of code. It's not the best sorting algorithm that's out there and so we'll try and improve it. We'll also talk about merge sort, which is a divide and conquer algorithm and that's going to motivate the last thing that I want to spend time on, which is recurrences and how you solve recurrences. Typically the recurrences that we'll be looking at in double o six are going to come from divide and conquer problems like merge sort but you'll see this over and over. So let's talk about why we're interested in sorting.",
            "metrics": {
                "relativeDCReadability": 1.0710502355977418,
                "lexicalDiversity": 0.5576923076923077,
                "posComposition": {
                    "DT": 0.053,
                    "JJ": 0.067,
                    "NN": 0.144,
                    "VBZ": 0.048,
                    "VBN": 0.01,
                    "IN": 0.106,
                    "NNP": 0.043,
                    "PRP$": 0.005,
                    "MD": 0.038,
                    "VB": 0.087,
                    "VBP": 0.043,
                    "TO": 0.034,
                    "NNS": 0.043,
                    "CC": 0.043,
                    "POS": 0.01,
                    "VBG": 0.048,
                    "PRP": 0.072,
                    "WRB": 0.014,
                    "WDT": 0.029,
                    "RB": 0.038,
                    "JJS": 0.01,
                    "CD": 0.01,
                    "RP": 0.005
                },
                "syllableRate": 2.783,
                "topicScores": [
                    [
                        "Creative Commons",
                        0.20388599255557927
                    ],
                    [
                        "sort",
                        0.2494755961289606
                    ],
                    [
                        "Creative Commons license",
                        0.25088576624221787
                    ],
                    [
                        "MIT",
                        0.2583135241284405
                    ],
                    [
                        "algorithm",
                        0.3246922025420107
                    ],
                    [
                        "recurrence",
                        0.43979476370058596
                    ],
                    [
                        "MIT OpenCourseWare",
                        0.44937202227122813
                    ],
                    [
                        "PROFESSOR",
                        0.49985316628087884
                    ],
                    [
                        "interested",
                        0.5212770652012629
                    ],
                    [
                        "today",
                        0.5269198343752495
                    ],
                    [
                        "merge",
                        0.537993641226106
                    ],
                    [
                        "divide",
                        0.5442791619548669
                    ],
                    [
                        "conquer",
                        0.5442791619548669
                    ],
                    [
                        "following",
                        0.755240909151697
                    ],
                    [
                        "content",
                        0.7720287719497118
                    ],
                    [
                        "MIT course",
                        0.7821090033798112
                    ],
                    [
                        "free",
                        0.7917313069149772
                    ],
                    [
                        "ocw.mit.edu",
                        0.8220652942604038
                    ],
                    [
                        "support",
                        0.822818345738249
                    ],
                    [
                        "high",
                        0.8359777603408076
                    ],
                    [
                        "quality",
                        0.8359777603408076
                    ],
                    [
                        "educational",
                        0.8359777603408076
                    ],
                    [
                        "resource",
                        0.8359777603408076
                    ],
                    [
                        "donation",
                        0.8609987482829234
                    ],
                    [
                        "additional",
                        0.8609987482829234
                    ],
                    [
                        "material",
                        0.8609987482829234
                    ],
                    [
                        "hundred",
                        0.8609987482829234
                    ],
                    [
                        "easy",
                        0.8635256594973979
                    ],
                    [
                        "code",
                        0.8719049117577
                    ],
                    [
                        "lecture",
                        0.883587123697341
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "Creative Commons",
                        0.20388599255557927
                    ],
                    [
                        "sort",
                        0.2494755961289606
                    ],
                    [
                        "algorithm",
                        0.3246922025420107
                    ],
                    [
                        "recurrence",
                        0.43979476370058596
                    ],
                    [
                        "PROFESSOR",
                        0.49985316628087884
                    ],
                    [
                        "merge",
                        0.537993641226106
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-90": {
            "id": "Kg4bqzAqRBM-90",
            "heat": 0.121,
            "start": 90.0,
            "text": " There's some fairly obvious applications like if you want to maintain a phone book, you've got a bunch of names and numbers corresponding to a telephone directory and you want to keep them in sorted order so it's easy to search, mp3 organizers, spreadsheets, et cetera. So there's lots of obvious applications. There's also some interesting problems that become easy once items are sorted. One example of that is finding a median. So let's say that you have a bunch of items in an array a zero through n and a zero through n contains n numbers and they're not sorted. When you sort, you turn this into b 0 through n, where if it's just numbers, then you may sort them in increasing order or decreasing order. Let's just call it increasing order for now. Or if they're records, and they're not numbers,",
            "metrics": {
                "relativeDCReadability": 1.013945771610098,
                "lexicalDiversity": 0.5290322580645161,
                "posComposition": {
                    "EX": 0.019,
                    "VBZ": 0.039,
                    "DT": 0.077,
                    "RB": 0.058,
                    "JJ": 0.058,
                    "NNS": 0.097,
                    "IN": 0.116,
                    "PRP": 0.097,
                    "VBP": 0.077,
                    "TO": 0.026,
                    "VB": 0.039,
                    "NN": 0.123,
                    "VBN": 0.026,
                    "CC": 0.045,
                    "VBG": 0.032,
                    "NNP": 0.019,
                    "WDT": 0.006,
                    "CD": 0.013,
                    "POS": 0.013,
                    "WRB": 0.013,
                    "MD": 0.006
                },
                "syllableRate": 1.825,
                "topicScores": [
                    [
                        "n",
                        0.38099769528103605
                    ],
                    [
                        "number",
                        0.38118971233207755
                    ],
                    [
                        "order",
                        0.3830426448691544
                    ],
                    [
                        "application",
                        0.4899061817288274
                    ],
                    [
                        "obvious",
                        0.49932008254948346
                    ],
                    [
                        "bunch",
                        0.5294175373681856
                    ],
                    [
                        "easy",
                        0.5375060636102521
                    ],
                    [
                        "item",
                        0.5599032219614096
                    ],
                    [
                        "cetera",
                        0.6946337957560157
                    ],
                    [
                        "mp3",
                        0.7558710876795279
                    ],
                    [
                        "organizer",
                        0.7558710876795279
                    ],
                    [
                        "spreadsheet",
                        0.7558710876795279
                    ],
                    [
                        "phone",
                        0.7804276368058808
                    ],
                    [
                        "book",
                        0.7804276368058808
                    ],
                    [
                        "name",
                        0.8017451099408026
                    ],
                    [
                        "telephone",
                        0.8017451099408026
                    ],
                    [
                        "directory",
                        0.8017451099408026
                    ],
                    [
                        "sorted",
                        0.8017451099408026
                    ],
                    [
                        "median",
                        0.8462740078643141
                    ],
                    [
                        "lot",
                        0.858881961552859
                    ],
                    [
                        "example",
                        0.879941165215662
                    ],
                    [
                        "interesting",
                        0.8809067457923712
                    ],
                    [
                        "problem",
                        0.8809067457923712
                    ],
                    [
                        "decreasing",
                        0.8944966557131266
                    ],
                    [
                        "array",
                        0.9006333390205673
                    ],
                    [
                        "record",
                        0.9025818297332915
                    ],
                    [
                        "obvious application",
                        1.0057716570528445
                    ],
                    [
                        "et cetera",
                        1.1055007591654111
                    ],
                    [
                        "mp3 organizer",
                        1.3328572036547233
                    ],
                    [
                        "phone book",
                        1.5579850202117378
                    ]
                ],
                "topTopicSimilarity": 0.13333333333333333,
                "sharedTopicScores": [
                    [
                        "n",
                        0.38099769528103605
                    ],
                    [
                        "number",
                        0.38118971233207755
                    ],
                    [
                        "sorted",
                        0.8017451099408026
                    ],
                    [
                        "array",
                        0.9006333390205673
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-180": {
            "id": "Kg4bqzAqRBM-180",
            "heat": 0.1,
            "start": 180.0,
            "text": " then you have to provide a comparison function to determine which record is smaller than another record. And that's another input that you have to have in order to do the sorting. So it doesn't really matter what the items are as long as you have the comparison function. Think of it as less than or equal to. And if you have that and it's straightforward, obviously, to check that 3 is less than 4, et cetera. But it may be a little more complicated for more sophisticated sorting applications. But the bottom line is that if you have your algorithm that takes a comparison function as an input, you're going to be able to, after a certain amount of time, get B 0 n. Now if you wanted to find the median of the set of numbers that were originally in the array A, what would you do once you have the sorted array B? AUDIENCE: Isn't there a more efficient algorithm for median? PROFESSOR: Absolutely. But this is sort of a side effect of having a sorted list. If you happen to have a sorted list, there's many ways that you could imagine building up a sorted list. One way is you have something that's completely unsorted and you run insertion sort or merge sort. Another way would be to maintain a sorted list as you're getting items put into the list. So if you happened to have a sorted list and you need to have this sorted list for some reason,",
            "metrics": {
                "relativeDCReadability": 0.926160238979801,
                "lexicalDiversity": 0.45038167938931295,
                "posComposition": {
                    "RB": 0.057,
                    "PRP": 0.076,
                    "VBP": 0.05,
                    "TO": 0.05,
                    "VB": 0.061,
                    "DT": 0.118,
                    "NN": 0.153,
                    "WDT": 0.015,
                    "VBZ": 0.046,
                    "JJR": 0.011,
                    "IN": 0.111,
                    "CC": 0.038,
                    "WP": 0.008,
                    "NNS": 0.019,
                    "NNP": 0.019,
                    "JJ": 0.073,
                    "CD": 0.015,
                    "MD": 0.015,
                    "RBR": 0.011,
                    "PRP$": 0.004,
                    "VBG": 0.015,
                    "VBD": 0.011,
                    "VBN": 0.011,
                    "EX": 0.008,
                    "RP": 0.004
                },
                "syllableRate": 3.108,
                "topicScores": [
                    [
                        "sorted",
                        0.2646920033637774
                    ],
                    [
                        "list",
                        0.26906455879750824
                    ],
                    [
                        "function",
                        0.3916890615064618
                    ],
                    [
                        "comparison",
                        0.39631312032373384
                    ],
                    [
                        "way",
                        0.4291361752494364
                    ],
                    [
                        "record",
                        0.4599273782771664
                    ],
                    [
                        "input",
                        0.5260440968773887
                    ],
                    [
                        "array",
                        0.5439484110736877
                    ],
                    [
                        "median",
                        0.5466169486974334
                    ],
                    [
                        "algorithm",
                        0.5553771238159786
                    ],
                    [
                        "item",
                        0.5575590383094298
                    ],
                    [
                        "PROFESSOR",
                        0.578360682737972
                    ],
                    [
                        "audience",
                        0.6049659989365256
                    ],
                    [
                        "b",
                        0.612082528643342
                    ],
                    [
                        "sorted list",
                        0.6359391416555049
                    ],
                    [
                        "small",
                        0.7801044915649925
                    ],
                    [
                        "sorting",
                        0.8014766496559824
                    ],
                    [
                        "comparison function",
                        0.8190038744955294
                    ],
                    [
                        "order",
                        0.8422510117666944
                    ],
                    [
                        "cetera",
                        0.8443831266831104
                    ],
                    [
                        "application",
                        0.8648428757989748
                    ],
                    [
                        "equal",
                        0.8700142590252022
                    ],
                    [
                        "n.",
                        0.8748826818124781
                    ],
                    [
                        "straightforward",
                        0.8791511486024735
                    ],
                    [
                        "able",
                        0.8904809723739274
                    ],
                    [
                        "time",
                        0.8904809723739274
                    ],
                    [
                        "reason",
                        0.8926658540835772
                    ],
                    [
                        "complicated",
                        0.8943186533265368
                    ],
                    [
                        "sophisticated",
                        0.8943186533265368
                    ],
                    [
                        "line",
                        0.8988550325084658
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "sorted",
                        0.2646920033637774
                    ],
                    [
                        "array",
                        0.5439484110736877
                    ],
                    [
                        "algorithm",
                        0.5553771238159786
                    ],
                    [
                        "PROFESSOR",
                        0.578360682737972
                    ],
                    [
                        "audience",
                        0.6049659989365256
                    ],
                    [
                        "time",
                        0.8904809723739274
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-270": {
            "id": "Kg4bqzAqRBM-270",
            "heat": 0.126,
            "start": 270.0,
            "text": " the point I'm making here is that finding the median is easy. And it's easy because all you have to do is look at-- depending on whether n is odd or even-- look at B of n over 2. That would give you the median because you'd have a bunch of numbers that are less than that and the equal set of numbers that are greater than that, which is the definition of median. So this is not necessarily the best way, as you pointed out, of finding the median. But it's constant time if you have a sorted list. That's the point I wanted to make. There are other things that you could do. And this came up in Erik's lecture, which is the notion of binary search-- finding an element in an array-- a specific element. You have a list of items-- again a 0 through n. And you're looking for a specific number or item. You could, obviously, scan the array, and that would take you linear time to find this item. If the array happened to be sorted, then you can find this in logarithmic time using what's called binary search.",
            "metrics": {
                "relativeDCReadability": 0.9146440589339933,
                "lexicalDiversity": 0.4567307692307692,
                "posComposition": {
                    "DT": 0.13,
                    "NN": 0.144,
                    "PRP": 0.072,
                    "VBP": 0.038,
                    "VBG": 0.034,
                    "RB": 0.034,
                    "VBZ": 0.053,
                    "IN": 0.13,
                    "JJ": 0.067,
                    "CC": 0.038,
                    "TO": 0.019,
                    "VB": 0.053,
                    ":": 0.024,
                    "NNP": 0.014,
                    "CD": 0.01,
                    "WDT": 0.029,
                    "MD": 0.029,
                    "NNS": 0.019,
                    "JJR": 0.01,
                    "JJS": 0.005,
                    "VBD": 0.019,
                    "EX": 0.005,
                    "RP": 0.005,
                    "POS": 0.005,
                    "VBN": 0.01,
                    "WP": 0.005
                },
                "syllableRate": 2.333,
                "topicScores": [
                    [
                        "median",
                        0.32623687746709007
                    ],
                    [
                        "point",
                        0.39446184019232317
                    ],
                    [
                        "number",
                        0.4149746302062644
                    ],
                    [
                        "time",
                        0.437853056185619
                    ],
                    [
                        "easy",
                        0.45801566764240753
                    ],
                    [
                        "B",
                        0.5161939207384721
                    ],
                    [
                        "item",
                        0.5203911341414652
                    ],
                    [
                        "list",
                        0.5285601932663122
                    ],
                    [
                        "specific",
                        0.540778457148752
                    ],
                    [
                        "array",
                        0.5456075170670746
                    ],
                    [
                        "element",
                        0.5500978544107191
                    ],
                    [
                        "binary",
                        0.5509558702822048
                    ],
                    [
                        "Erik",
                        0.6488725811624505
                    ],
                    [
                        "odd",
                        0.8346367503766989
                    ],
                    [
                        "bunch",
                        0.8598280039603099
                    ],
                    [
                        "equal",
                        0.8598280039603099
                    ],
                    [
                        "set",
                        0.8598280039603099
                    ],
                    [
                        "great",
                        0.8598280039603099
                    ],
                    [
                        "definition",
                        0.8598280039603099
                    ],
                    [
                        "good",
                        0.8635229350219346
                    ],
                    [
                        "way",
                        0.8635229350219346
                    ],
                    [
                        "n.",
                        0.872343768902248
                    ],
                    [
                        "sorted",
                        0.8730495293280724
                    ],
                    [
                        "search",
                        0.8803996861173482
                    ],
                    [
                        "constant",
                        0.8825806852886596
                    ],
                    [
                        "lecture",
                        0.8888687206263939
                    ],
                    [
                        "thing",
                        0.8936278858246389
                    ],
                    [
                        "notion",
                        0.897351846608023
                    ],
                    [
                        "linear",
                        0.9050130156340167
                    ],
                    [
                        "logarithmic",
                        0.9068481798353761
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "number",
                        0.4149746302062644
                    ],
                    [
                        "time",
                        0.437853056185619
                    ],
                    [
                        "array",
                        0.5456075170670746
                    ],
                    [
                        "element",
                        0.5500978544107191
                    ],
                    [
                        "sorted",
                        0.8730495293280724
                    ],
                    [
                        "constant",
                        0.8825806852886596
                    ],
                    [
                        "thing",
                        0.8936278858246389
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-360": {
            "id": "Kg4bqzAqRBM-360",
            "heat": 0.362,
            "start": 360.0,
            "text": " Let's say you're looking for a specific item. Let's call it k. Binary search, roughly speaking, would work like-- you go compare k to, again, B of n over 2, and decide, given that B is sorted, you get to look at 1/2 of the array. If B of n over 2 is not exactly k, then-- well, if it's exactly k you're done. Otherwise, you look at the left half. You do your divide and conquer paradigm. And you can do this in logarithmic time. So keep this in mind, because binary search is going to come up in today's lecture and again in other lectures. It's really a great paradigm of divide and conquer-- probably the simplest. And it, essentially, takes something that's linear-- a linear search-- and turns it into logarithmic search. So those are a couple of problems that become easy if you have a sorted list. And there's some not so obvious applications of sorting-- for example, data compression. If you wanted to compress a file, one of the things that you could do is to--",
            "metrics": {
                "relativeDCReadability": 1.012453337913428,
                "lexicalDiversity": 0.5380710659898477,
                "posComposition": {
                    "VB": 0.056,
                    "POS": 0.015,
                    "PRP": 0.076,
                    "VBP": 0.046,
                    "VBG": 0.02,
                    "IN": 0.132,
                    "DT": 0.076,
                    "JJ": 0.071,
                    "NN": 0.132,
                    "NNP": 0.03,
                    "RB": 0.071,
                    "MD": 0.015,
                    ":": 0.036,
                    "TO": 0.025,
                    "CD": 0.02,
                    "CC": 0.041,
                    "VBN": 0.02,
                    "VBZ": 0.056,
                    "PRP$": 0.005,
                    "RP": 0.005,
                    "NNS": 0.025,
                    "JJS": 0.005,
                    "WDT": 0.01,
                    "EX": 0.005,
                    "VBD": 0.005
                },
                "syllableRate": 2.275,
                "topicScores": [
                    [
                        "b",
                        0.2502716324541899
                    ],
                    [
                        "k",
                        0.4114934597033813
                    ],
                    [
                        "search",
                        0.42943411954390925
                    ],
                    [
                        "Binary",
                        0.5140504687677135
                    ],
                    [
                        "paradigm",
                        0.5468614016531169
                    ],
                    [
                        "divide",
                        0.5497056186187754
                    ],
                    [
                        "logarithmic",
                        0.550013517989461
                    ],
                    [
                        "lecture",
                        0.5572636023651567
                    ],
                    [
                        "item",
                        0.7337092922685737
                    ],
                    [
                        "specific",
                        0.7728097845160796
                    ],
                    [
                        "k. Binary",
                        0.7751956931654568
                    ],
                    [
                        "Binary search",
                        0.7905154919775622
                    ],
                    [
                        "array",
                        0.8057021568167072
                    ],
                    [
                        "then--",
                        0.8488316113398451
                    ],
                    [
                        "like--",
                        0.8494921228261377
                    ],
                    [
                        "half",
                        0.8503358056316229
                    ],
                    [
                        "time",
                        0.8679418810165068
                    ],
                    [
                        "compression",
                        0.8747210817658576
                    ],
                    [
                        "left",
                        0.8752238431945266
                    ],
                    [
                        "simple",
                        0.877784016400113
                    ],
                    [
                        "conquer",
                        0.8840433496136973
                    ],
                    [
                        "list",
                        0.8842340221401424
                    ],
                    [
                        "to--",
                        0.8888664397327476
                    ],
                    [
                        "mind",
                        0.8949693142410631
                    ],
                    [
                        "data",
                        0.8971372924142903
                    ],
                    [
                        "today",
                        0.9037946499477297
                    ],
                    [
                        "sorted",
                        0.904120640039662
                    ],
                    [
                        "example",
                        0.9062259356229913
                    ],
                    [
                        "great",
                        0.9071996462394205
                    ],
                    [
                        "file",
                        0.9080400471609329
                    ]
                ],
                "topTopicSimilarity": 0.1,
                "sharedTopicScores": [
                    [
                        "array",
                        0.8057021568167072
                    ],
                    [
                        "time",
                        0.8679418810165068
                    ],
                    [
                        "sorted",
                        0.904120640039662
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-450": {
            "id": "Kg4bqzAqRBM-450",
            "heat": 0.419,
            "start": 450.0,
            "text": " and it's a set of items-- you could sort the items. And that automatically finds duplicates. And you could say, if I have 100 items that are all identical, I'm going to compress the file by representing the item once and, then, having a number associated with the frequency of that item-- similar to what document distance does. Document distance can be viewed as a way of compressing your initial input. Obviously, you lose the works of Shakespeare or whatever it was. And it becomes a bunch of words and frequencies. But it is something that compresses the input and gives you a different representation. And so people use sorting as a subroutine in data compression. Computer graphics uses sorting. Most of the time, when you render scenes in computer graphics, you have many layers corresponding to the scenes. It turns out that, in computer graphics, most of the time you're actually rendering front to back because, when you have a big opaque object in front, you want to render that first, so you don't have to worry about everything that's occluded by this big opaque object. And that makes things more efficient. And so you keep things sorted front to back, most of the time, in computer graphics rendering.",
            "metrics": {
                "relativeDCReadability": 1.0668797089535738,
                "lexicalDiversity": 0.48847926267281105,
                "posComposition": {
                    "CC": 0.055,
                    "PRP": 0.083,
                    "VBZ": 0.051,
                    "DT": 0.101,
                    "NN": 0.138,
                    "IN": 0.106,
                    "NNS": 0.083,
                    ":": 0.009,
                    "MD": 0.014,
                    "VB": 0.041,
                    "RB": 0.046,
                    "VBP": 0.055,
                    "CD": 0.005,
                    "WDT": 0.014,
                    "JJ": 0.046,
                    "VBG": 0.041,
                    "TO": 0.032,
                    "VBN": 0.014,
                    "WP": 0.005,
                    "NNP": 0.014,
                    "PRP$": 0.005,
                    "VBD": 0.009,
                    "JJS": 0.009,
                    "WRB": 0.009,
                    "RP": 0.005,
                    "RBS": 0.005,
                    "RBR": 0.005
                },
                "syllableRate": 2.708,
                "topicScores": [
                    [
                        "computer",
                        0.347571323045178
                    ],
                    [
                        "graphic",
                        0.3634189279517707
                    ],
                    [
                        "time",
                        0.4300077544898402
                    ],
                    [
                        "item",
                        0.430058510532473
                    ],
                    [
                        "distance",
                        0.5393639426109647
                    ],
                    [
                        "document",
                        0.5405217872382735
                    ],
                    [
                        "frequency",
                        0.5549770838997472
                    ],
                    [
                        "input",
                        0.558571698942965
                    ],
                    [
                        "object",
                        0.5602221749421735
                    ],
                    [
                        "opaque",
                        0.5649631273678647
                    ],
                    [
                        "big",
                        0.5708647115910958
                    ],
                    [
                        "scene",
                        0.5742324955133904
                    ],
                    [
                        "thing",
                        0.5785624457221714
                    ],
                    [
                        "Shakespeare",
                        0.6504656329613849
                    ],
                    [
                        "duplicate",
                        0.8526891621407345
                    ],
                    [
                        "set",
                        0.8682848175113467
                    ],
                    [
                        "identical",
                        0.8907287564110347
                    ],
                    [
                        "representation",
                        0.8918837628692926
                    ],
                    [
                        "compression",
                        0.8950461471268402
                    ],
                    [
                        "initial",
                        0.8985793306458035
                    ],
                    [
                        "file",
                        0.9003207250231238
                    ],
                    [
                        "number",
                        0.9003207250231238
                    ],
                    [
                        "similar",
                        0.9003207250231238
                    ],
                    [
                        "efficient",
                        0.9035103380700203
                    ],
                    [
                        "rendering",
                        0.9049939109138205
                    ],
                    [
                        "way",
                        0.9075536891520994
                    ],
                    [
                        "different",
                        0.9115396098162246
                    ],
                    [
                        "work",
                        0.9126507364439681
                    ],
                    [
                        "datum",
                        0.9141823835917828
                    ],
                    [
                        "bunch",
                        0.9164737039961341
                    ]
                ],
                "topTopicSimilarity": 0.13333333333333333,
                "sharedTopicScores": [
                    [
                        "time",
                        0.4300077544898402
                    ],
                    [
                        "thing",
                        0.5785624457221714
                    ],
                    [
                        "number",
                        0.9003207250231238
                    ],
                    [
                        "work",
                        0.9126507364439681
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-540": {
            "id": "Kg4bqzAqRBM-540",
            "heat": 0.347,
            "start": 540.0,
            "text": " But some of the time, if you're worried about transparency, you have to render things back to front. So typically, you have sorted lists corresponding to the different objects in both orders-- both increasing order and decreasing order. And you're maintaining that. So sorting is a real important subroutine in pretty much any sophisticated application you look at. So it's worthwhile to look at the variety of sorting algorithms that are out there. And we're going to do some simple ones, today. But if you go and look at Wikipedia and do a Google search, there's all sorts of sorts like cocktail sort, and bitonic sort, and what have you. And there's reasons why each of these sorting algorithms exist. Because in specific cases, they end up winning on types of inputs or types of problems. So let's take a look at our first sorting algorithm. I'm not going to write code but it will be in the notes. And it is in your document distance Python files. But I'll just give you pseudocode here and walk through what insertion sort looks like because the purpose of describing this algorithm to you is to analyze its complexity. We need to do some counting here, with respect to this algorithm, to figure out how fast it's going to run in and what the worst case complexity is.",
            "metrics": {
                "relativeDCReadability": 0.9086543385137971,
                "lexicalDiversity": 0.459915611814346,
                "posComposition": {
                    "CC": 0.068,
                    "DT": 0.084,
                    "IN": 0.122,
                    "NN": 0.118,
                    "PRP": 0.076,
                    "VBP": 0.068,
                    "JJ": 0.051,
                    "TO": 0.051,
                    "VB": 0.059,
                    "NNS": 0.068,
                    "RB": 0.034,
                    "NNP": 0.03,
                    "VBN": 0.004,
                    "VBG": 0.055,
                    ":": 0.004,
                    "VBZ": 0.038,
                    "WDT": 0.004,
                    "EX": 0.008,
                    "WP": 0.013,
                    "WRB": 0.008,
                    "RP": 0.008,
                    "POS": 0.004,
                    "PRP$": 0.013,
                    "MD": 0.008,
                    "JJS": 0.004
                },
                "syllableRate": 2.858,
                "topicScores": [
                    [
                        "sort",
                        0.2634232948519957
                    ],
                    [
                        "algorithm",
                        0.33612329808321567
                    ],
                    [
                        "look",
                        0.3438460900247692
                    ],
                    [
                        "order",
                        0.5264865241585335
                    ],
                    [
                        "complexity",
                        0.5636314718413624
                    ],
                    [
                        "type",
                        0.5702977165525593
                    ],
                    [
                        "case",
                        0.5706535047802603
                    ],
                    [
                        "Google",
                        0.6457229918567511
                    ],
                    [
                        "Wikipedia",
                        0.659549629261433
                    ],
                    [
                        "Python",
                        0.6828302468763837
                    ],
                    [
                        "time",
                        0.7902491005023555
                    ],
                    [
                        "transparency",
                        0.7902491005023555
                    ],
                    [
                        "worried",
                        0.8067476652261136
                    ],
                    [
                        "thing",
                        0.8067476652261136
                    ],
                    [
                        "decreasing",
                        0.8500795575606119
                    ],
                    [
                        "list",
                        0.8626897026974517
                    ],
                    [
                        "different",
                        0.8626897026974517
                    ],
                    [
                        "object",
                        0.8626897026974517
                    ],
                    [
                        "today",
                        0.8643717677720193
                    ],
                    [
                        "problem",
                        0.8904443895207331
                    ],
                    [
                        "bitonic",
                        0.8944084963812973
                    ],
                    [
                        "code",
                        0.8954940265148875
                    ],
                    [
                        "important",
                        0.895923342227423
                    ],
                    [
                        "subroutine",
                        0.895923342227423
                    ],
                    [
                        "sophisticated",
                        0.895923342227423
                    ],
                    [
                        "application",
                        0.895923342227423
                    ],
                    [
                        "note",
                        0.8974922684752582
                    ],
                    [
                        "file",
                        0.8992379179962184
                    ],
                    [
                        "simple",
                        0.8998704463787741
                    ],
                    [
                        "one",
                        0.8998704463787741
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "sort",
                        0.2634232948519957
                    ],
                    [
                        "algorithm",
                        0.33612329808321567
                    ],
                    [
                        "look",
                        0.3438460900247692
                    ],
                    [
                        "complexity",
                        0.5636314718413624
                    ],
                    [
                        "time",
                        0.7902491005023555
                    ],
                    [
                        "thing",
                        0.8067476652261136
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-630": {
            "id": "Kg4bqzAqRBM-630",
            "heat": 0.382,
            "start": 630.0,
            "text": " So what is insertion sort? For i equals 1, 2, through n, given an input to be sorted, what we're going to do is we're going to insert A of i in the right position. And we're going to assume that we are sort of midway through the sorting process, where we have sorted A 0 through i minus 1. And we're going to expand this to this array to have i plus 1 elements. And A of i is going to get inserted into the correct position. And we're going to do this by pairwise swaps down to the correct position for the number that is initially in A of i. So let's go through an example of this. We're going to sort in increasing order. Just have six numbers. And initially, we have 5, 2, 4, 6, 1, 3. And we're going to take a look at this. And you start with the index 1, or the second element,",
            "metrics": {
                "relativeDCReadability": 1.057430202783921,
                "lexicalDiversity": 0.4378698224852071,
                "posComposition": {
                    "RB": 0.024,
                    "WP": 0.012,
                    "VBZ": 0.024,
                    "JJ": 0.041,
                    "NN": 0.13,
                    "IN": 0.112,
                    "NNS": 0.024,
                    "CD": 0.077,
                    "VBN": 0.024,
                    "DT": 0.095,
                    "TO": 0.071,
                    "VB": 0.065,
                    "PRP": 0.065,
                    "VBP": 0.071,
                    "VBG": 0.053,
                    "NNP": 0.03,
                    "CC": 0.059,
                    "WRB": 0.006,
                    "RP": 0.006,
                    "WDT": 0.006,
                    "POS": 0.006
                },
                "syllableRate": 1.858,
                "topicScores": [
                    [
                        "sort",
                        0.3089423102710823
                    ],
                    [
                        "position",
                        0.4076374082940249
                    ],
                    [
                        "element",
                        0.5379606762781508
                    ],
                    [
                        "correct",
                        0.5431007349262643
                    ],
                    [
                        "number",
                        0.5632348439074459
                    ],
                    [
                        "insertion",
                        0.7993833633809909
                    ],
                    [
                        "right",
                        0.8570795335198698
                    ],
                    [
                        "input",
                        0.8698209827231521
                    ],
                    [
                        "process",
                        0.8793461109907202
                    ],
                    [
                        "i.",
                        0.8824913561714957
                    ],
                    [
                        "midway",
                        0.8903564260042022
                    ],
                    [
                        "order",
                        0.8913848337383955
                    ],
                    [
                        "array",
                        0.9015256365513229
                    ],
                    [
                        "pairwise",
                        0.913720887313113
                    ],
                    [
                        "swap",
                        0.913720887313113
                    ],
                    [
                        "example",
                        0.9175012519443043
                    ],
                    [
                        "index",
                        0.9204249453077025
                    ],
                    [
                        "second",
                        0.9204249453077025
                    ],
                    [
                        "look",
                        0.9265412321429776
                    ],
                    [
                        "correct position",
                        1.4847500626592869
                    ],
                    [
                        "insertion sort",
                        2.260661415401789
                    ],
                    [
                        "right position",
                        2.3195611324833627
                    ],
                    [
                        "second element",
                        3.646797554842
                    ],
                    [
                        "pairwise swap",
                        5.056416485399889
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "sort",
                        0.3089423102710823
                    ],
                    [
                        "element",
                        0.5379606762781508
                    ],
                    [
                        "number",
                        0.5632348439074459
                    ],
                    [
                        "insertion",
                        0.7993833633809909
                    ],
                    [
                        "right",
                        0.8570795335198698
                    ],
                    [
                        "array",
                        0.9015256365513229
                    ],
                    [
                        "swap",
                        0.913720887313113
                    ],
                    [
                        "look",
                        0.9265412321429776
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-720": {
            "id": "Kg4bqzAqRBM-720",
            "heat": 0.117,
            "start": 720.0,
            "text": " because the very first element-- it's a single element and it's already sorted by definition. But you start from here. And this is what we call our key. And that's essentially a pointer to where we're at, right now. And the key keeps moving to the right as we go through the different steps of the algorithm. And so what you do is you look at this and you have-- this is A of i. That's your key. And you have A of 0 to 0, which is 5. And since we want to sort in increasing order, this is not sorted. And so we do a swap. So what this would do in this step is to do a swap. And we would go obtain 2, 5, 4, 6, 1, 3. So all that's happened here, in this step-- in the very first step where the key is in the second position-- is one swap happened. Now, your key is here, at item 4. Again, you need to put 4 into the right spot. And so you do pairwise swaps. And in this case, you have to do one swap. And you get 2, 4, 5. And you're done with this iteration. So what happens here is you have 2, 4, 5, 6, 1, 3. And now, the key is over here, at 6.",
            "metrics": {
                "relativeDCReadability": 0.859265044450624,
                "lexicalDiversity": 0.3983050847457627,
                "posComposition": {
                    "IN": 0.093,
                    "DT": 0.114,
                    "RB": 0.085,
                    "JJ": 0.034,
                    "NN": 0.102,
                    ":": 0.017,
                    "PRP": 0.081,
                    "VBZ": 0.072,
                    "CC": 0.068,
                    "VBN": 0.017,
                    "VBP": 0.068,
                    "WP": 0.017,
                    "PRP$": 0.013,
                    "TO": 0.03,
                    "WRB": 0.008,
                    "NNS": 0.013,
                    "VBG": 0.008,
                    "WDT": 0.008,
                    "CD": 0.097,
                    "VB": 0.034,
                    "MD": 0.008,
                    "PDT": 0.004,
                    "VBD": 0.004,
                    "NNP": 0.004
                },
                "syllableRate": 2.333,
                "topicScores": [
                    [
                        "key",
                        0.30953857511282695
                    ],
                    [
                        "swap",
                        0.32768952322588435
                    ],
                    [
                        "right",
                        0.445448726953864
                    ],
                    [
                        "step",
                        0.4549685540196636
                    ],
                    [
                        "definition",
                        0.8721793452125195
                    ],
                    [
                        "element--",
                        0.8953903811626324
                    ],
                    [
                        "single",
                        0.8953903811626324
                    ],
                    [
                        "algorithm",
                        0.9153613335647547
                    ],
                    [
                        "pointer",
                        0.9272551773119853
                    ],
                    [
                        "different",
                        0.9313481478117156
                    ],
                    [
                        "spot",
                        0.9335834025208739
                    ],
                    [
                        "order",
                        0.9361427684514181
                    ],
                    [
                        "iteration",
                        0.9363756405369902
                    ],
                    [
                        "i.",
                        0.9368087401058403
                    ],
                    [
                        "item",
                        0.9374641115616102
                    ],
                    [
                        "pairwise",
                        0.9432085284165315
                    ],
                    [
                        "case",
                        0.9438409866036942
                    ],
                    [
                        "second",
                        0.944808404708058
                    ],
                    [
                        "position--",
                        0.944808404708058
                    ],
                    [
                        "pairwise swap",
                        3.974111099497581
                    ],
                    [
                        "single element",
                        4.043473090808246
                    ],
                    [
                        "right spot",
                        4.942726721026382
                    ],
                    [
                        "different step",
                        5.556011687633531
                    ],
                    [
                        "second position--",
                        8.316445118233075
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "swap",
                        0.32768952322588435
                    ],
                    [
                        "right",
                        0.445448726953864
                    ],
                    [
                        "step",
                        0.4549685540196636
                    ],
                    [
                        "algorithm",
                        0.9153613335647547
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-810": {
            "id": "Kg4bqzAqRBM-810",
            "heat": 0.17,
            "start": 810.0,
            "text": " Now, at this point, things are kind of easy, in the sense that you look at it and you say, well, I know this part is already started. 6 is greater than 5. So you have to do nothing. So there's no swaps that happen in this step. So all that happens here is you're going to move the key to one step to the right. So you have 2, 4, 5, 6, 1, 3. And your key is now at 1. Here, you have to do more work. Now, you see one aspect of the complexity of this algorithm-- given that you're doing pairwise swaps-- the way this algorithm was defined, in pseudocode, out there, was I'm going to use pairwise swaps to find the correct position. So what you're going to do is you're going to have to swap first 1 and 6. And then you'll swap-- 1 is over here. So you'll swap this position and that position. And then you'll swap-- essentially, do 4 swaps to get to the point where you have 1, 2, 4, 5, 6, 3. So this is the result. 1, 2, 4, 5, 6, 3.",
            "metrics": {
                "relativeDCReadability": 1.0286733517066673,
                "lexicalDiversity": 0.46859903381642515,
                "posComposition": {
                    "RB": 0.072,
                    "IN": 0.087,
                    "DT": 0.082,
                    "NN": 0.121,
                    "NNS": 0.024,
                    "VBP": 0.077,
                    "PRP": 0.082,
                    "CC": 0.029,
                    "VBZ": 0.043,
                    "VBN": 0.014,
                    "CD": 0.13,
                    "JJR": 0.01,
                    "TO": 0.058,
                    "VB": 0.058,
                    "EX": 0.005,
                    "WDT": 0.005,
                    "PDT": 0.005,
                    "VBG": 0.024,
                    "NNP": 0.005,
                    "PRP$": 0.005,
                    ":": 0.019,
                    "VBD": 0.01,
                    "JJ": 0.01,
                    "WP": 0.005,
                    "MD": 0.014,
                    "WRB": 0.005
                },
                "syllableRate": 2.067,
                "topicScores": [
                    [
                        "swap",
                        0.3444185324805829
                    ],
                    [
                        "position",
                        0.4466841843433223
                    ],
                    [
                        "step",
                        0.5548106128048055
                    ],
                    [
                        "point",
                        0.5645138236214321
                    ],
                    [
                        "key",
                        0.5664196202720425
                    ],
                    [
                        "pairwise",
                        0.5804157821895137
                    ],
                    [
                        "thing",
                        0.8234895211392668
                    ],
                    [
                        "easy",
                        0.8234895211392668
                    ],
                    [
                        "sense",
                        0.8325304112940609
                    ],
                    [
                        "great",
                        0.9009188252513634
                    ],
                    [
                        "right",
                        0.9068821128368353
                    ],
                    [
                        "work",
                        0.9166822962381354
                    ],
                    [
                        "pseudocode",
                        0.9237354623338929
                    ],
                    [
                        "result",
                        0.9258220383853056
                    ],
                    [
                        "correct",
                        0.9282289567002752
                    ],
                    [
                        "aspect",
                        0.9323458241303343
                    ],
                    [
                        "complexity",
                        0.9323458241303343
                    ],
                    [
                        "algorithm--",
                        0.9323458241303343
                    ],
                    [
                        "way",
                        0.9323458241303343
                    ],
                    [
                        "pairwise swap",
                        4.525729035890999
                    ],
                    [
                        "correct position",
                        4.856528709261441
                    ]
                ],
                "topTopicSimilarity": 0.2857142857142857,
                "sharedTopicScores": [
                    [
                        "swap",
                        0.3444185324805829
                    ],
                    [
                        "step",
                        0.5548106128048055
                    ],
                    [
                        "thing",
                        0.8234895211392668
                    ],
                    [
                        "right",
                        0.9068821128368353
                    ],
                    [
                        "work",
                        0.9166822962381354
                    ],
                    [
                        "complexity",
                        0.9323458241303343
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-900": {
            "id": "Kg4bqzAqRBM-900",
            "heat": 0.185,
            "start": 900.0,
            "text": " And the important thing to understand, here, is that you've done four swaps to get 1 to the correct position. Now, you could imagine a different data structure where you move this over there and you shift them all to the right. But in fact, that shifting of these four elements is going to be computed in our model as four operations, or four steps, anyway. So there's no getting away from the fact that you have to do four things here. And the way the code that we have for insertion sort does this is by using pairwise swaps. So we're almost done. Now, we have the key at 3. And now, 3 needs to get put into the correct position. And so you've got to do a few swaps. This is the last step. And what happens here is 3 is going to get swapped with 6. And then 3 needs to get swapped with 5. And then 3 needs to get swapped with 4. And then, since 3 is greater than 2, you're done. So you have 1, 2, 3, 4, 5, 6. And that's it. So, analysis. How many steps do I have?",
            "metrics": {
                "relativeDCReadability": 0.9372453155290283,
                "lexicalDiversity": 0.45320197044334976,
                "posComposition": {
                    "CC": 0.059,
                    "DT": 0.089,
                    "JJ": 0.034,
                    "NN": 0.079,
                    "TO": 0.054,
                    "VB": 0.054,
                    "RB": 0.079,
                    "VBZ": 0.054,
                    "IN": 0.103,
                    "PRP": 0.069,
                    "VBP": 0.054,
                    "VBN": 0.044,
                    "CD": 0.108,
                    "NNS": 0.054,
                    "MD": 0.005,
                    "WRB": 0.005,
                    "VBG": 0.025,
                    "PRP$": 0.005,
                    "EX": 0.005,
                    "WP": 0.005,
                    "JJR": 0.005,
                    "VBD": 0.005,
                    "NNP": 0.005
                },
                "syllableRate": 2.067,
                "topicScores": [
                    [
                        "swap",
                        0.3116494467890453
                    ],
                    [
                        "step",
                        0.45317616945550115
                    ],
                    [
                        "position",
                        0.513544074495289
                    ],
                    [
                        "correct",
                        0.5413092978749776
                    ],
                    [
                        "thing",
                        0.5488499862908787
                    ],
                    [
                        "fact",
                        0.5507665679671895
                    ],
                    [
                        "important",
                        0.8428831649963525
                    ],
                    [
                        "right",
                        0.8592545609915895
                    ],
                    [
                        "different",
                        0.8897937659711622
                    ],
                    [
                        "data",
                        0.8897937659711622
                    ],
                    [
                        "structure",
                        0.8897937659711622
                    ],
                    [
                        "shifting",
                        0.8997764227361346
                    ],
                    [
                        "operation",
                        0.8997764227361346
                    ],
                    [
                        "element",
                        0.9075135521454264
                    ],
                    [
                        "model",
                        0.9075135521454264
                    ],
                    [
                        "pairwise",
                        0.9166730994280854
                    ],
                    [
                        "analysis",
                        0.9199846128486262
                    ],
                    [
                        "way",
                        0.9232171391715477
                    ],
                    [
                        "code",
                        0.9232171391715477
                    ],
                    [
                        "insertion",
                        0.9232171391715477
                    ],
                    [
                        "sort",
                        0.9232171391715477
                    ],
                    [
                        "key",
                        0.930741146096965
                    ],
                    [
                        "great",
                        0.9416834598498091
                    ],
                    [
                        "correct position",
                        1.4605324767314312
                    ],
                    [
                        "important thing",
                        2.7485427685202826
                    ],
                    [
                        "different data",
                        3.8015275609239154
                    ],
                    [
                        "data structure",
                        3.8015275609239154
                    ],
                    [
                        "pairwise swap",
                        4.050684097876586
                    ],
                    [
                        "insertion sort",
                        5.771850940718899
                    ],
                    [
                        "different data structure",
                        20.86773905145998
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "swap",
                        0.3116494467890453
                    ],
                    [
                        "step",
                        0.45317616945550115
                    ],
                    [
                        "thing",
                        0.5488499862908787
                    ],
                    [
                        "right",
                        0.8592545609915895
                    ],
                    [
                        "element",
                        0.9075135521454264
                    ],
                    [
                        "insertion",
                        0.9232171391715477
                    ],
                    [
                        "sort",
                        0.9232171391715477
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-990": {
            "id": "Kg4bqzAqRBM-990",
            "heat": 0.195,
            "start": 990.0,
            "text": " AUDIENCE: n squared? PROFESSOR: No, how many steps do I have? I guess that wasn't a good question. If I think of a step as being a movement of the key, how many steps do I have? I have theta n steps. And in this case, you can think of it as n minus 1 steps, since you started with 2. But let's just call it theta n steps, in terms of key positions. And you're right. It is n square because, at any given step, it's quite possible that I have to do theta n work. And one example is this one, right here, where I had to do four swaps. And in general, you can construct a scenario where, towards the end of the algorithm, you'd have to do theta n work. But if you had a list that was reverse sorted. You would, essentially, have to do, on an average n by two swaps as you go through each of the steps. And that's theta n. So each step is theta n swaps. And when I say swaps, I could also say each step is theta n compares and swaps.",
            "metrics": {
                "relativeDCReadability": 1.0244320014535504,
                "lexicalDiversity": 0.46733668341708545,
                "posComposition": {
                    "NNP": 0.015,
                    "NN": 0.095,
                    "VBD": 0.03,
                    "WRB": 0.025,
                    "JJ": 0.111,
                    "NNS": 0.07,
                    "VBP": 0.055,
                    "PRP": 0.111,
                    "DT": 0.09,
                    "RB": 0.04,
                    "IN": 0.116,
                    "VBG": 0.005,
                    "VBN": 0.015,
                    "CC": 0.045,
                    "MD": 0.025,
                    "VB": 0.065,
                    "CD": 0.025,
                    "VBZ": 0.035,
                    "TO": 0.02,
                    "WDT": 0.005
                },
                "syllableRate": 2.042,
                "topicScores": [
                    [
                        "n",
                        0.25538847362488465
                    ],
                    [
                        "step",
                        0.25755050252856976
                    ],
                    [
                        "theta",
                        0.2916895896224406
                    ],
                    [
                        "swap",
                        0.3547063930315977
                    ],
                    [
                        "AUDIENCE",
                        0.3828642514905539
                    ],
                    [
                        "PROFESSOR",
                        0.44832816999739755
                    ],
                    [
                        "work",
                        0.5377907334944017
                    ],
                    [
                        "square",
                        0.5468744421620408
                    ],
                    [
                        "key",
                        0.5628825603648001
                    ],
                    [
                        "right",
                        0.5677716263765731
                    ],
                    [
                        "question",
                        0.8934124310222191
                    ],
                    [
                        "good",
                        0.9110277106502653
                    ],
                    [
                        "position",
                        0.913761659488588
                    ],
                    [
                        "sorted",
                        0.9232380256003797
                    ],
                    [
                        "movement",
                        0.9243252719275041
                    ],
                    [
                        "case",
                        0.9255890295400275
                    ],
                    [
                        "term",
                        0.9282838653979648
                    ],
                    [
                        "general",
                        0.9351254542482874
                    ],
                    [
                        "scenario",
                        0.9351254542482874
                    ],
                    [
                        "algorithm",
                        0.9351254542482874
                    ],
                    [
                        "possible",
                        0.9379177512347301
                    ],
                    [
                        "example",
                        0.9393307358677571
                    ],
                    [
                        "end",
                        0.9405464324928199
                    ],
                    [
                        "list",
                        0.9416065969289347
                    ],
                    [
                        "average",
                        0.9425416726481556
                    ],
                    [
                        "compare",
                        0.9447986916528851
                    ],
                    [
                        "theta n",
                        1.4676001296184815
                    ],
                    [
                        "n step",
                        2.3336654540523543
                    ],
                    [
                        "n swap",
                        4.26544709985376
                    ],
                    [
                        "good question",
                        4.3741332283061585
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "n",
                        0.25538847362488465
                    ],
                    [
                        "step",
                        0.25755050252856976
                    ],
                    [
                        "theta",
                        0.2916895896224406
                    ],
                    [
                        "swap",
                        0.3547063930315977
                    ],
                    [
                        "PROFESSOR",
                        0.44832816999739755
                    ],
                    [
                        "work",
                        0.5377907334944017
                    ],
                    [
                        "square",
                        0.5468744421620408
                    ],
                    [
                        "right",
                        0.5677716263765731
                    ],
                    [
                        "sorted",
                        0.9232380256003797
                    ],
                    [
                        "algorithm",
                        0.9351254542482874
                    ],
                    [
                        "compare",
                        0.9447986916528851
                    ],
                    [
                        "theta n",
                        1.4676001296184815
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-1080": {
            "id": "Kg4bqzAqRBM-1080",
            "heat": 0.193,
            "start": 1080.0,
            "text": " And this is going to be important because I'm going to ask you an interesting question in a minute. But let me summarize. What I have here is a theta n squared algorithm. The reason this is a theta n squared algorithm is because I have theta n steps and each step is theta n. When I'm counting, what am I counting it terms of operations? The assumption here-- unspoken assumption-- has been that an operation is a compare and a swap and they're, essentially, equal in cost. And in most computers, that's true. You have a single instruction and, say, the x86 or the MIPS architecture that can do a compare, and the same thing for swapping registers. So perfectly reasonably assumption that compares and swaps for numbers have exactly the same cost. But if you had a record and you were comparing records, and the comparison function that you used for the records was in itself a method call or a subroutine, it's quite possible that all you're doing is swapping pointers or references to do the swap, but the comparison could be substantially more expensive. Most of the time-- and we'll differentiate if it becomes necessary-- we're going to be counting comparisons in the sorting algorithms that we'll be putting out.",
            "metrics": {
                "relativeDCReadability": 1.0239345555240584,
                "lexicalDiversity": 0.44052863436123346,
                "posComposition": {
                    "CC": 0.075,
                    "DT": 0.123,
                    "VBZ": 0.053,
                    "VBG": 0.048,
                    "TO": 0.018,
                    "VB": 0.048,
                    "JJ": 0.07,
                    "IN": 0.088,
                    "PRP": 0.088,
                    "VBP": 0.044,
                    "NN": 0.137,
                    "WP": 0.009,
                    "RB": 0.035,
                    "VBD": 0.022,
                    "VBN": 0.013,
                    "NNS": 0.053,
                    "WRB": 0.004,
                    ":": 0.018,
                    "JJS": 0.004,
                    "WDT": 0.013,
                    "NNP": 0.009,
                    "MD": 0.018,
                    "RBR": 0.004,
                    "RP": 0.004
                },
                "syllableRate": 2.833,
                "topicScores": [
                    [
                        "swap",
                        0.3190107131975813
                    ],
                    [
                        "theta",
                        0.3214222127145656
                    ],
                    [
                        "compare",
                        0.33642367660128897
                    ],
                    [
                        "n",
                        0.3775774078851417
                    ],
                    [
                        "algorithm",
                        0.39564415305911643
                    ],
                    [
                        "comparison",
                        0.4250018281967091
                    ],
                    [
                        "record",
                        0.4262113129426751
                    ],
                    [
                        "cost",
                        0.5009364179946402
                    ],
                    [
                        "operation",
                        0.5191661252499703
                    ],
                    [
                        "assumption",
                        0.5316130496750507
                    ],
                    [
                        "step",
                        0.5325044684798838
                    ],
                    [
                        "MIPS",
                        0.6383586216991857
                    ],
                    [
                        "theta n",
                        0.6457026435655256
                    ],
                    [
                        "minute",
                        0.7771063381617646
                    ],
                    [
                        "important",
                        0.8138979429658088
                    ],
                    [
                        "interesting",
                        0.8138979429658088
                    ],
                    [
                        "question",
                        0.8138979429658088
                    ],
                    [
                        "true",
                        0.8579261753942291
                    ],
                    [
                        "reason",
                        0.8582768537069091
                    ],
                    [
                        "register",
                        0.8619280490701527
                    ],
                    [
                        "expensive",
                        0.8680973611494881
                    ],
                    [
                        "equal",
                        0.8712771452243485
                    ],
                    [
                        "term",
                        0.8739231181700262
                    ],
                    [
                        "computer",
                        0.8756747178533575
                    ],
                    [
                        "here--",
                        0.8792167381678339
                    ],
                    [
                        "unspoken",
                        0.8792167381678339
                    ],
                    [
                        "instruction",
                        0.8792470238310304
                    ],
                    [
                        "x86",
                        0.8792470238310304
                    ],
                    [
                        "subroutine",
                        0.8847459675899493
                    ],
                    [
                        "single",
                        0.8867589280193604
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "swap",
                        0.3190107131975813
                    ],
                    [
                        "theta",
                        0.3214222127145656
                    ],
                    [
                        "compare",
                        0.33642367660128897
                    ],
                    [
                        "n",
                        0.3775774078851417
                    ],
                    [
                        "algorithm",
                        0.39564415305911643
                    ],
                    [
                        "step",
                        0.5325044684798838
                    ],
                    [
                        "theta n",
                        0.6457026435655256
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-1170": {
            "id": "Kg4bqzAqRBM-1170",
            "heat": 0.224,
            "start": 1170.0,
            "text": " And we'll be assuming that either comparison swaps are roughly the same or that compares are-- and we'll say which one, of course-- that compares are substantially more expensive than swaps. So if you had either of those cases for insertion sort, you have a theta n squared algorithm. You have theta n squared compares and theta n squared swaps. Now, here's a question. Let's say that compares are more expensive than swaps. And so, I'm concerned about the theta n squared comparison cost. I'm not as concerned, because of the constant factors involved, with the theta n squared swap cost. This is a question question. What's a simple fix-- change to this algorithm that would give me a better complexity in the case where compares are more expensive, or I'm only looking at the complexity of compares. So the theta whatever of compares. Anyone? Yeah, back there. AUDIENCE: [INAUDIBLE] PROFESSOR: You could compare with the middle. What did I call it?",
            "metrics": {
                "relativeDCReadability": 1.0465591502728968,
                "lexicalDiversity": 0.5202312138728323,
                "posComposition": {
                    "CC": 0.04,
                    "PRP": 0.069,
                    "MD": 0.023,
                    "VB": 0.035,
                    "VBG": 0.012,
                    "IN": 0.121,
                    "DT": 0.098,
                    "NN": 0.139,
                    "NNS": 0.075,
                    "VBP": 0.058,
                    "RB": 0.087,
                    "JJ": 0.052,
                    ":": 0.017,
                    "WDT": 0.012,
                    "CD": 0.006,
                    "RBR": 0.017,
                    "VBD": 0.035,
                    "VBN": 0.017,
                    "VBZ": 0.017,
                    "NNP": 0.035,
                    "POS": 0.006,
                    "WP": 0.012,
                    "TO": 0.006,
                    "JJR": 0.006,
                    "WRB": 0.006
                },
                "syllableRate": 2.067,
                "topicScores": [
                    [
                        "compare",
                        0.28995831352621954
                    ],
                    [
                        "theta",
                        0.3116492697485365
                    ],
                    [
                        "n",
                        0.3305323820236758
                    ],
                    [
                        "swap",
                        0.3313837666540874
                    ],
                    [
                        "expensive",
                        0.4295497271770656
                    ],
                    [
                        "question",
                        0.4342033209241466
                    ],
                    [
                        "cost",
                        0.5392898914411454
                    ],
                    [
                        "comparison",
                        0.5691865549988642
                    ],
                    [
                        "algorithm",
                        0.5736351900433277
                    ],
                    [
                        "concerned",
                        0.5801904029762677
                    ],
                    [
                        "case",
                        0.5820778406570806
                    ],
                    [
                        "complexity",
                        0.5920757982362193
                    ],
                    [
                        "audience",
                        0.6110600678105208
                    ],
                    [
                        "INAUDIBLE",
                        0.6575778478125985
                    ],
                    [
                        "PROFESSOR",
                        0.6921178375527807
                    ],
                    [
                        "are--",
                        0.7917935588478568
                    ],
                    [
                        "course--",
                        0.8802599887539615
                    ],
                    [
                        "insertion",
                        0.8993392717022789
                    ],
                    [
                        "sort",
                        0.8993392717022789
                    ],
                    [
                        "middle",
                        0.9207949793600778
                    ],
                    [
                        "factor",
                        0.9271817725184665
                    ],
                    [
                        "constant",
                        0.934532964462394
                    ],
                    [
                        "simple",
                        0.9381988800346125
                    ],
                    [
                        "change",
                        0.9381988800346125
                    ],
                    [
                        "well",
                        0.9381988800346125
                    ],
                    [
                        "theta n",
                        1.4804747696179246
                    ],
                    [
                        "swap cost",
                        2.7340599916655592
                    ],
                    [
                        "question question",
                        3.0671915599660435
                    ],
                    [
                        "comparison cost",
                        3.368862047563518
                    ],
                    [
                        "comparison swap",
                        3.401132291670972
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "compare",
                        0.28995831352621954
                    ],
                    [
                        "theta",
                        0.3116492697485365
                    ],
                    [
                        "n",
                        0.3305323820236758
                    ],
                    [
                        "swap",
                        0.3313837666540874
                    ],
                    [
                        "algorithm",
                        0.5736351900433277
                    ],
                    [
                        "complexity",
                        0.5920757982362193
                    ],
                    [
                        "audience",
                        0.6110600678105208
                    ],
                    [
                        "PROFESSOR",
                        0.6921178375527807
                    ],
                    [
                        "insertion",
                        0.8993392717022789
                    ],
                    [
                        "sort",
                        0.8993392717022789
                    ],
                    [
                        "constant",
                        0.934532964462394
                    ],
                    [
                        "theta n",
                        1.4804747696179246
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-1260": {
            "id": "Kg4bqzAqRBM-1260",
            "heat": 0.331,
            "start": 1260.0,
            "text": " I called it something. What you just said, I called it something. AUDIENCE: Binary search. PROFESSOR: Binary search. That's right. Two cushions for this one. So you pick them up after lecture. So you're exactly right. You got it right. I called it binary search, up here. And so you can take insertion sort and you can sort of trivially turn it into a theta n log n algorithm if we are talking about n being the number of compares. And all you have to do to do that is to say, you know what, I'm going to replace this with binary search. And you can do that-- and that was the key observation-- because A of 0 through i minus 1 is already sorted. And so you can do binary search on that part of the array. So let me just write that down. Do a binary search on A of 0 through i minus 1, which is already sorted. And essentially, you can think of it as theta log i time, and for each of those steps. And so then you get your theta n log n theta n log n in terms of compares.",
            "metrics": {
                "relativeDCReadability": 0.9190693342453538,
                "lexicalDiversity": 0.4306930693069307,
                "posComposition": {
                    "PRP": 0.124,
                    "VBD": 0.04,
                    "NN": 0.124,
                    "WP": 0.01,
                    "RB": 0.079,
                    "NNP": 0.04,
                    "WDT": 0.01,
                    "VBZ": 0.02,
                    "JJ": 0.059,
                    "CD": 0.03,
                    "NNS": 0.04,
                    "IN": 0.114,
                    "DT": 0.074,
                    "VBP": 0.04,
                    "RP": 0.01,
                    "CC": 0.045,
                    "MD": 0.025,
                    "VB": 0.059,
                    "VBG": 0.015,
                    "TO": 0.02,
                    ":": 0.01,
                    "VBN": 0.01,
                    "PRP$": 0.005
                },
                "syllableRate": 2.175,
                "topicScores": [
                    [
                        "binary",
                        0.29675661684910776
                    ],
                    [
                        "search",
                        0.29972979915741654
                    ],
                    [
                        "log",
                        0.38002398727063397
                    ],
                    [
                        "sort",
                        0.38017347559158066
                    ],
                    [
                        "theta",
                        0.3876074823783693
                    ],
                    [
                        "right",
                        0.42149836135036745
                    ],
                    [
                        "audience",
                        0.5266518338124624
                    ],
                    [
                        "compare",
                        0.5536789687525033
                    ],
                    [
                        "PROFESSOR",
                        0.562755779098591
                    ],
                    [
                        "binary search",
                        0.835165962967408
                    ],
                    [
                        "lecture",
                        0.9154787725730562
                    ],
                    [
                        "array",
                        0.9254697811713583
                    ],
                    [
                        "cushion",
                        0.92663231981824
                    ],
                    [
                        "step",
                        0.9275583314598249
                    ],
                    [
                        "insertion",
                        0.9338076790567456
                    ],
                    [
                        "time",
                        0.9388724846956042
                    ],
                    [
                        "algorithm",
                        0.9397611136298353
                    ],
                    [
                        "number",
                        0.9397611136298353
                    ],
                    [
                        "that--",
                        0.9412706055349261
                    ],
                    [
                        "key",
                        0.9412706055349261
                    ],
                    [
                        "observation--",
                        0.9412706055349261
                    ],
                    [
                        "term",
                        0.9440504858075951
                    ],
                    [
                        "log n",
                        1.8580331408611346
                    ],
                    [
                        "theta n",
                        2.5828990324345185
                    ],
                    [
                        "insertion sort",
                        4.691686923725527
                    ],
                    [
                        "key observation--",
                        7.77118757005233
                    ],
                    [
                        "n log n",
                        13.08368686688836
                    ],
                    [
                        "theta n log",
                        13.753360004132924
                    ],
                    [
                        "n theta n",
                        23.479788887625638
                    ],
                    [
                        "log n algorithm",
                        30.09983017782833
                    ]
                ],
                "topTopicSimilarity": 0.4666666666666667,
                "sharedTopicScores": [
                    [
                        "log",
                        0.38002398727063397
                    ],
                    [
                        "sort",
                        0.38017347559158066
                    ],
                    [
                        "theta",
                        0.3876074823783693
                    ],
                    [
                        "right",
                        0.42149836135036745
                    ],
                    [
                        "audience",
                        0.5266518338124624
                    ],
                    [
                        "compare",
                        0.5536789687525033
                    ],
                    [
                        "PROFESSOR",
                        0.562755779098591
                    ],
                    [
                        "array",
                        0.9254697811713583
                    ],
                    [
                        "step",
                        0.9275583314598249
                    ],
                    [
                        "insertion",
                        0.9338076790567456
                    ],
                    [
                        "time",
                        0.9388724846956042
                    ],
                    [
                        "algorithm",
                        0.9397611136298353
                    ],
                    [
                        "number",
                        0.9397611136298353
                    ],
                    [
                        "theta n",
                        2.5828990324345185
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-1350": {
            "id": "Kg4bqzAqRBM-1350",
            "heat": 0.296,
            "start": 1350.0,
            "text": " Does this help the swaps for an array data structure? No, because binary search will require insertion into A of 0 though i minus 1. So here's the problem. Why don't we have a full-fledged theta n log n algorithm, regardless of the cost of compares or swaps? We don't quite have that. We don't quite have that because we need to insert our A of i into the right position into A of 0 through i minus 1. You do that if you have an array structure, it might get into the middle. And you have to shift things over to the right. And when you shift things over to the right, in the worst case, you may be shifting a lot of things over to the right. And that gets back to worst case complexity of theta n. So a binary search in insertion sort gives you theta n log n for compares. But it's still theta n squared for swaps. So as you can see, there's many varieties of sorting algorithms. We just looked at a couple of them. And they were both insertion sort. The second one that I just put up is, I guess, technically called binary insertion sort because it does binary search. And the vanilla insertion sort is the one that you have the code for in the doc dis program, or at least one of the doc dis files. So let's move on and talk about a different algorithm.",
            "metrics": {
                "relativeDCReadability": 1.0479967864001158,
                "lexicalDiversity": 0.4645669291338583,
                "posComposition": {
                    "VBZ": 0.035,
                    "DT": 0.102,
                    "VB": 0.043,
                    "NNS": 0.047,
                    "IN": 0.154,
                    "NN": 0.181,
                    "NNP": 0.024,
                    "JJ": 0.067,
                    "MD": 0.016,
                    "CD": 0.02,
                    "VBP": 0.055,
                    "RB": 0.047,
                    "WRB": 0.008,
                    "PRP": 0.079,
                    "CC": 0.035,
                    "TO": 0.024,
                    "PRP$": 0.004,
                    "JJS": 0.008,
                    "VBG": 0.008,
                    "VBD": 0.02,
                    "EX": 0.004,
                    "WDT": 0.008,
                    "RP": 0.004,
                    "VBN": 0.004,
                    "POS": 0.004
                },
                "syllableRate": 2.8,
                "topicScores": [
                    [
                        "n",
                        0.3365622689458873
                    ],
                    [
                        "sort",
                        0.34793422244158195
                    ],
                    [
                        "insertion",
                        0.3498789313764821
                    ],
                    [
                        "right",
                        0.3595070651314683
                    ],
                    [
                        "theta",
                        0.3795522741339398
                    ],
                    [
                        "binary",
                        0.3877699898969227
                    ],
                    [
                        "thing",
                        0.43326611998159176
                    ],
                    [
                        "swap",
                        0.43658665853810424
                    ],
                    [
                        "search",
                        0.4414110565721776
                    ],
                    [
                        "algorithm",
                        0.44385593759727016
                    ],
                    [
                        "structure",
                        0.5335202893783041
                    ],
                    [
                        "array",
                        0.5359184408622752
                    ],
                    [
                        "log",
                        0.5499765143369606
                    ],
                    [
                        "compare",
                        0.5637191363500461
                    ],
                    [
                        "bad",
                        0.5644841012536564
                    ],
                    [
                        "case",
                        0.5652913192360908
                    ],
                    [
                        "dis",
                        0.5668660397959915
                    ],
                    [
                        "doc",
                        0.5762110117042939
                    ],
                    [
                        "data",
                        0.8075924674548851
                    ],
                    [
                        "problem",
                        0.8614670449269461
                    ],
                    [
                        "middle",
                        0.8949200029691746
                    ],
                    [
                        "cost",
                        0.9051440917962879
                    ],
                    [
                        "file",
                        0.9143646000416489
                    ],
                    [
                        "position",
                        0.9169325161315688
                    ],
                    [
                        "lot",
                        0.9257615347706664
                    ],
                    [
                        "complexity",
                        0.9276842141450257
                    ],
                    [
                        "second",
                        0.928638157176901
                    ],
                    [
                        "program",
                        0.9294880453403012
                    ],
                    [
                        "different",
                        0.93026200424376
                    ],
                    [
                        "variety",
                        0.9319369971125873
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "n",
                        0.3365622689458873
                    ],
                    [
                        "sort",
                        0.34793422244158195
                    ],
                    [
                        "insertion",
                        0.3498789313764821
                    ],
                    [
                        "right",
                        0.3595070651314683
                    ],
                    [
                        "theta",
                        0.3795522741339398
                    ],
                    [
                        "thing",
                        0.43326611998159176
                    ],
                    [
                        "swap",
                        0.43658665853810424
                    ],
                    [
                        "algorithm",
                        0.44385593759727016
                    ],
                    [
                        "array",
                        0.5359184408622752
                    ],
                    [
                        "log",
                        0.5499765143369606
                    ],
                    [
                        "compare",
                        0.5637191363500461
                    ],
                    [
                        "complexity",
                        0.9276842141450257
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-1440": {
            "id": "Kg4bqzAqRBM-1440",
            "heat": 0.236,
            "start": 1440.0,
            "text": " So what we'd like to do, now-- this class is about constant improvement. We're never happy. We always want to do a little bit better. And eventually, once we run out of room from an asymptotic standpoint, you take these other classes where you try and improve constant factors and get 10%, and 5%, and 1%, and so on, and so forth. But we'll stick to improving asymptotic complexity. And we're not quite happy with binary insertion sort because, in the case of numbers, our binary insertion sort has theta n squared complexity, if you look at swaps. So we'd like to go find an algorithm that is theta n log n. And I guess, eventually, we'll have to stop. But Erik will take care of that. There's a reason to stop. It's when you can prove that you can't do any better. And so we'll get to that, eventually. So merge sort is also something that you've probably seen. But there probably will be a couple of subtleties that come out as I describe this algorithm that, hopefully, will be interesting to those of you who already know merge sort. And for those of you who don't, it's a very pretty algorithm. It's a standard recursion algorithm-- recursive algorithm-- similar to a binary search.",
            "metrics": {
                "relativeDCReadability": 0.9431416037145951,
                "lexicalDiversity": 0.4870689655172414,
                "posComposition": {
                    "RB": 0.099,
                    "WP": 0.013,
                    "PRP": 0.095,
                    "MD": 0.043,
                    "VB": 0.082,
                    "TO": 0.039,
                    ":": 0.013,
                    "DT": 0.073,
                    "NN": 0.116,
                    "VBZ": 0.034,
                    "IN": 0.091,
                    "JJ": 0.082,
                    "VBP": 0.052,
                    "RBR": 0.004,
                    "CC": 0.06,
                    "NNS": 0.022,
                    "WRB": 0.009,
                    "CD": 0.013,
                    "VBG": 0.004,
                    "PRP$": 0.004,
                    "VBN": 0.013,
                    "WDT": 0.013,
                    "NNP": 0.009,
                    "EX": 0.009,
                    "JJR": 0.004,
                    "RP": 0.004
                },
                "syllableRate": 2.783,
                "topicScores": [
                    [
                        "sort",
                        0.37806216756702105
                    ],
                    [
                        "algorithm",
                        0.44185660541843713
                    ],
                    [
                        "binary",
                        0.4421282512362469
                    ],
                    [
                        "class",
                        0.5470883689552375
                    ],
                    [
                        "constant",
                        0.5470883689552375
                    ],
                    [
                        "happy",
                        0.5514726388176712
                    ],
                    [
                        "complexity",
                        0.5521434671999558
                    ],
                    [
                        "asymptotic",
                        0.5537496250993308
                    ],
                    [
                        "insertion",
                        0.5604477585562194
                    ],
                    [
                        "theta",
                        0.5625601627569544
                    ],
                    [
                        "merge",
                        0.5625684994330173
                    ],
                    [
                        "Erik",
                        0.6653712180937442
                    ],
                    [
                        "improvement",
                        0.8327104841383884
                    ],
                    [
                        "swap",
                        0.892300118356767
                    ],
                    [
                        "bit",
                        0.8928359837581492
                    ],
                    [
                        "n.",
                        0.8960651563494065
                    ],
                    [
                        "standpoint",
                        0.9005520673405023
                    ],
                    [
                        "little",
                        0.901418178948
                    ],
                    [
                        "room",
                        0.9085795954067243
                    ],
                    [
                        "factor",
                        0.9085795954067243
                    ],
                    [
                        "number",
                        0.9100807235656205
                    ],
                    [
                        "squared",
                        0.9100807235656205
                    ],
                    [
                        "recursive",
                        0.9121819406827524
                    ],
                    [
                        "search",
                        0.9131281024785721
                    ],
                    [
                        "case",
                        0.9174096302521637
                    ],
                    [
                        "care",
                        0.9247700844548576
                    ],
                    [
                        "reason",
                        0.9264588453823188
                    ],
                    [
                        "similar",
                        0.9277485610585137
                    ],
                    [
                        "couple",
                        0.9312977151229364
                    ],
                    [
                        "subtlety",
                        0.9312977151229364
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "sort",
                        0.37806216756702105
                    ],
                    [
                        "algorithm",
                        0.44185660541843713
                    ],
                    [
                        "constant",
                        0.5470883689552375
                    ],
                    [
                        "complexity",
                        0.5521434671999558
                    ],
                    [
                        "insertion",
                        0.5604477585562194
                    ],
                    [
                        "theta",
                        0.5625601627569544
                    ],
                    [
                        "merge",
                        0.5625684994330173
                    ],
                    [
                        "swap",
                        0.892300118356767
                    ],
                    [
                        "number",
                        0.9100807235656205
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-1530": {
            "id": "Kg4bqzAqRBM-1530",
            "heat": 0.135,
            "start": 1530.0,
            "text": " What we do, here, is we have an array, A. We split it into two parts, L and R. And essentially, we kind of do no work, really. In terms of the L and R in the sense that we just call, we keep splitting, splitting, splitting. And all the work is done down at the bottom in this routine called merge, where we are merging a pair of elements at the leaves. And then, we merge two pairs and get four elements. And then we merge four tuples of elements, et cetera, and go all the way up. So while I'm just saying L terms into L prime, out here, there's no real explicit code that you can see that turns L into L prime. It happens really later. There's no real sorting code, here. It happens in the merge routine. And you'll see that quite clearly when we run through an example. So you have L and R turn into L prime and R prime. And what we end up getting is a sorted array, A. And we have what's called a merge routine that takes L prime and R prime and merges them",
            "metrics": {
                "relativeDCReadability": 1.0502435432145758,
                "lexicalDiversity": 0.472636815920398,
                "posComposition": {
                    "WP": 0.015,
                    "PRP": 0.1,
                    "VBP": 0.055,
                    "RB": 0.075,
                    "VBZ": 0.055,
                    "DT": 0.08,
                    "NN": 0.119,
                    "VBD": 0.01,
                    "IN": 0.1,
                    "CD": 0.02,
                    "NNS": 0.045,
                    "NNP": 0.07,
                    "CC": 0.08,
                    "VB": 0.03,
                    "VBG": 0.025,
                    "PDT": 0.01,
                    "VBN": 0.02,
                    "WRB": 0.01,
                    "RP": 0.015,
                    "JJ": 0.045,
                    "EX": 0.01,
                    "MD": 0.01,
                    "WDT": 0.005
                },
                "syllableRate": 2.017,
                "topicScores": [
                    [
                        "L",
                        0.19873057318914109
                    ],
                    [
                        "r",
                        0.25561867223037205
                    ],
                    [
                        "merge",
                        0.29538930222629944
                    ],
                    [
                        "prime",
                        0.29616372643053823
                    ],
                    [
                        "L prime",
                        0.37262150416802003
                    ],
                    [
                        "splitting",
                        0.38682005039594786
                    ],
                    [
                        "A.",
                        0.4175683050844984
                    ],
                    [
                        "element",
                        0.4253499017499651
                    ],
                    [
                        "routine",
                        0.4430093998934461
                    ],
                    [
                        "work",
                        0.5300977547619553
                    ],
                    [
                        "pair",
                        0.5477376210453986
                    ],
                    [
                        "real",
                        0.5489857857410815
                    ],
                    [
                        "term",
                        0.5540168234780259
                    ],
                    [
                        "code",
                        0.5595412295329264
                    ],
                    [
                        "array",
                        0.560439870479725
                    ],
                    [
                        "r prime",
                        0.614689631215018
                    ],
                    [
                        "part",
                        0.8117820284882014
                    ],
                    [
                        "leave",
                        0.867014835893036
                    ],
                    [
                        "sense",
                        0.8764606706483561
                    ],
                    [
                        "et",
                        0.8980401325609287
                    ],
                    [
                        "cetera",
                        0.8980401325609287
                    ],
                    [
                        "way",
                        0.9062493176699039
                    ],
                    [
                        "example",
                        0.908098669918107
                    ],
                    [
                        "tuple",
                        0.9135347672908114
                    ],
                    [
                        "explicit",
                        0.9183317214741569
                    ],
                    [
                        "sorted",
                        0.9260350754319868
                    ],
                    [
                        "l term",
                        1.168670276438858
                    ],
                    [
                        "merge routine",
                        2.3058322028042264
                    ],
                    [
                        "real explicit",
                        3.9766229969763267
                    ],
                    [
                        "et cetera",
                        4.16731987652168
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "L",
                        0.19873057318914109
                    ],
                    [
                        "merge",
                        0.29538930222629944
                    ],
                    [
                        "L prime",
                        0.37262150416802003
                    ],
                    [
                        "element",
                        0.4253499017499651
                    ],
                    [
                        "work",
                        0.5300977547619553
                    ],
                    [
                        "array",
                        0.560439870479725
                    ],
                    [
                        "sorted",
                        0.9260350754319868
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-1620": {
            "id": "Kg4bqzAqRBM-1620",
            "heat": 0.1,
            "start": 1620.0,
            "text": " into the sorted array. So at the top level, what you see is split into two, and do a merge, and get to the sorted array. The input is of size n. You have two arrays of size n over 2. These are two sorted arrays of size n over 2. And then, finally, you have a sorted array of size n. So if you want to follow the recursive of execution of this in a small example, then you'll be able to see how this works. And we'll do a fairly straightforward example with 8 elements. So at the top level-- before we get there, merge is going to assume that you have two sorted arrays, and merge them together. That's the invariant in merge sort, or for the merge routine. It assumes the inputs are sorted-- L and R. Actually I should say, L prime and R prime. So let's say you have 20, 13, 7, and 2. You have 12, 11, 9, and 1.",
            "metrics": {
                "relativeDCReadability": 1.1110265730613,
                "lexicalDiversity": 0.5028901734104047,
                "posComposition": {
                    "IN": 0.11,
                    "DT": 0.098,
                    "JJ": 0.058,
                    "NN": 0.139,
                    "RB": 0.046,
                    "WP": 0.006,
                    "PRP": 0.075,
                    "VBP": 0.064,
                    "VBZ": 0.035,
                    "VBN": 0.017,
                    "CD": 0.087,
                    "CC": 0.058,
                    "VB": 0.064,
                    "TO": 0.023,
                    "NNS": 0.035,
                    "MD": 0.017,
                    "WRB": 0.006,
                    ":": 0.012,
                    "VBG": 0.006,
                    "RP": 0.006,
                    "NNP": 0.035,
                    "POS": 0.006
                },
                "syllableRate": 1.867,
                "topicScores": [
                    [
                        "array",
                        0.25794113732314494
                    ],
                    [
                        "sorted",
                        0.298832601212165
                    ],
                    [
                        "size",
                        0.33613377148249496
                    ],
                    [
                        "merge",
                        0.34722207412452466
                    ],
                    [
                        "L",
                        0.40873127089213385
                    ],
                    [
                        "sorted array",
                        0.4911035741545151
                    ],
                    [
                        "n.",
                        0.5259964164188025
                    ],
                    [
                        "input",
                        0.5455450211101031
                    ],
                    [
                        "example",
                        0.5623496550993529
                    ],
                    [
                        "prime",
                        0.5705297681064332
                    ],
                    [
                        "R.",
                        0.6386079738419076
                    ],
                    [
                        "level",
                        0.8591511320330902
                    ],
                    [
                        "element",
                        0.8926005812881515
                    ],
                    [
                        "routine",
                        0.899402653403089
                    ],
                    [
                        "small",
                        0.9062614347562884
                    ],
                    [
                        "recursive",
                        0.9138721741282182
                    ],
                    [
                        "execution",
                        0.9138721741282182
                    ],
                    [
                        "able",
                        0.9138721741282182
                    ],
                    [
                        "straightforward",
                        0.9176465074926626
                    ],
                    [
                        "invariant",
                        0.9229991527382752
                    ],
                    [
                        "size n.",
                        1.175198884693554
                    ],
                    [
                        "L prime",
                        1.4143302774040554
                    ],
                    [
                        "sorted-- L",
                        1.495189955117109
                    ],
                    [
                        "r prime",
                        1.542608857309065
                    ],
                    [
                        "merge routine",
                        4.188451965948834
                    ],
                    [
                        "small example",
                        4.201658964696214
                    ],
                    [
                        "straightforward example",
                        4.491524115029752
                    ],
                    [
                        "merge sort",
                        4.626507302768989
                    ]
                ],
                "topTopicSimilarity": 0.21428571428571427,
                "sharedTopicScores": [
                    [
                        "array",
                        0.25794113732314494
                    ],
                    [
                        "sorted",
                        0.298832601212165
                    ],
                    [
                        "merge",
                        0.34722207412452466
                    ],
                    [
                        "L",
                        0.40873127089213385
                    ],
                    [
                        "element",
                        0.8926005812881515
                    ],
                    [
                        "L prime",
                        1.4143302774040554
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-1710": {
            "id": "Kg4bqzAqRBM-1710",
            "heat": 0.156,
            "start": 1710.0,
            "text": " And this could be L prime. And this could be R prime. What you have is what we call a two finger algorithm. And so you've got two fingers and each of them point to something. And in this case, one of them is pointing to L. My left finger is pointing to L prime, or some element L prime. My right finger is pointing to some element in R prime. And I'm going to compare the two elements that my fingers are pointing to. And I'm going to choose, in this case, the smaller of those elements. And I'm going to put them into the sorted array. So start out here. Look at that and that. And I compared 2 and 1. And which is smaller? 1 is smaller. So I'm going to write 1 down. This is a two finger algo for merge. And I put 1 down. When I put 1 down, I had to cross out 1. So effectively, what happens is-- let me just circle that instead of crossing it out. And my finger moves up to 9. So now I'm pointing at 2 and 9. And I repeat this step. So now, in this case, 2 is smaller. So I'm going to go ahead and write 2 down. And I can cross out 2 and move my finger up to 7. And so that's it. I won't bore you with the rest of the steps. It's essentially walking up. You have a couple of pointers and you're walking up these two arrays. And you're writing down 1, 2, 7, 9, 11, 12, 13, 20.",
            "metrics": {
                "relativeDCReadability": 0.9360923057064772,
                "lexicalDiversity": 0.4558303886925795,
                "posComposition": {
                    "CC": 0.081,
                    "DT": 0.081,
                    "MD": 0.014,
                    "VB": 0.057,
                    "NNP": 0.032,
                    "JJ": 0.021,
                    "WP": 0.011,
                    "PRP": 0.095,
                    "VBP": 0.049,
                    "VBZ": 0.046,
                    "CD": 0.099,
                    "NN": 0.071,
                    "NNS": 0.028,
                    "RB": 0.057,
                    "VBN": 0.007,
                    "IN": 0.085,
                    "TO": 0.046,
                    "VBG": 0.049,
                    "VBD": 0.014,
                    "PRP$": 0.011,
                    "JJR": 0.014,
                    "RP": 0.021,
                    "WDT": 0.004,
                    "WRB": 0.004,
                    ":": 0.004
                },
                "syllableRate": 2.842,
                "topicScores": [
                    [
                        "finger",
                        0.2670668438246057
                    ],
                    [
                        "prime",
                        0.3181700122676167
                    ],
                    [
                        "L",
                        0.3614583196553408
                    ],
                    [
                        "small",
                        0.3729576368616568
                    ],
                    [
                        "element",
                        0.37790138813217594
                    ],
                    [
                        "case",
                        0.433412186507559
                    ],
                    [
                        "L prime",
                        0.562169507791482
                    ],
                    [
                        "array",
                        0.568378331121818
                    ],
                    [
                        "step",
                        0.5708996830731238
                    ],
                    [
                        "R",
                        0.6297197647999412
                    ],
                    [
                        "r prime",
                        0.8368087763149269
                    ],
                    [
                        "algorithm",
                        0.9061054326754724
                    ],
                    [
                        "right",
                        0.9297470968585961
                    ],
                    [
                        "left",
                        0.9303353979620089
                    ],
                    [
                        "sorted",
                        0.9360846385063158
                    ],
                    [
                        "merge",
                        0.9362957421112759
                    ],
                    [
                        "is--",
                        0.9478437415306534
                    ],
                    [
                        "rest",
                        0.9508248637457111
                    ],
                    [
                        "couple",
                        0.9513712758913373
                    ],
                    [
                        "pointer",
                        0.9513712758913373
                    ],
                    [
                        "element L",
                        1.010837973972578
                    ],
                    [
                        "element L prime",
                        3.1479515125534854
                    ],
                    [
                        "finger algorithm",
                        3.2935486752039584
                    ],
                    [
                        "right finger",
                        3.6971959999533177
                    ],
                    [
                        "left finger",
                        3.7082104590445297
                    ],
                    [
                        "sorted array",
                        5.380792468178895
                    ]
                ],
                "topTopicSimilarity": 0.34615384615384615,
                "sharedTopicScores": [
                    [
                        "L",
                        0.3614583196553408
                    ],
                    [
                        "element",
                        0.37790138813217594
                    ],
                    [
                        "L prime",
                        0.562169507791482
                    ],
                    [
                        "array",
                        0.568378331121818
                    ],
                    [
                        "step",
                        0.5708996830731238
                    ],
                    [
                        "algorithm",
                        0.9061054326754724
                    ],
                    [
                        "right",
                        0.9297470968585961
                    ],
                    [
                        "sorted",
                        0.9360846385063158
                    ],
                    [
                        "merge",
                        0.9362957421112759
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-1800": {
            "id": "Kg4bqzAqRBM-1800",
            "heat": 0.408,
            "start": 1800.0,
            "text": " And that's your merge routine. And all of the work, really, is done in the merge routine because, other than that, the body is simply a recursive call. You have to, obviously, split the array. But that's fairly straightforward. If you have an array, A 0 through n-- and depending on whether n is odd or even-- you could imagine that you set L to be A 0 n by 2 minus 1, and R similarly. And so you just split it halfway in the middle. I'll talk about that a little bit more. There's a subtlety associated with that that we'll get to in a few minutes. But to finish up in terms of the computation of merge sort. This is it. The merge routine is doing most, if not all, of the work. And this two finger algorithm is going to be able to take two sorted arrays and put them into a single sorted array by interspersing, or interleaving, these elements. And what's the complexity of merge if I have two arrays of size n over 2, here? What do I have? AUDIENCE: n. PROFESSOR: n. We'll give you a cushion, too. theta n complexity.",
            "metrics": {
                "relativeDCReadability": 1.0798831865249732,
                "lexicalDiversity": 0.45410628019323673,
                "posComposition": {
                    "CC": 0.058,
                    "DT": 0.13,
                    "VBZ": 0.048,
                    "PRP$": 0.005,
                    "NN": 0.145,
                    "IN": 0.135,
                    "RB": 0.058,
                    "VBN": 0.019,
                    "JJ": 0.048,
                    "PRP": 0.068,
                    "VBP": 0.029,
                    "TO": 0.029,
                    "VB": 0.058,
                    "CD": 0.039,
                    ":": 0.01,
                    "VBG": 0.024,
                    "MD": 0.019,
                    "NNS": 0.029,
                    "NNP": 0.014,
                    "RBR": 0.005,
                    "EX": 0.005,
                    "RP": 0.005,
                    "JJS": 0.005,
                    "JJR": 0.005,
                    "WP": 0.01
                },
                "syllableRate": 2.375,
                "topicScores": [
                    [
                        "merge",
                        0.34051248033479753
                    ],
                    [
                        "array",
                        0.3480851874638919
                    ],
                    [
                        "n",
                        0.3925050551140353
                    ],
                    [
                        "routine",
                        0.42262482936513485
                    ],
                    [
                        "work",
                        0.5403657608544801
                    ],
                    [
                        "complexity",
                        0.5753074672590955
                    ],
                    [
                        "sorted",
                        0.580551783057715
                    ],
                    [
                        "AUDIENCE",
                        0.6524115400784223
                    ],
                    [
                        "L",
                        0.6529519024338457
                    ],
                    [
                        "PROFESSOR",
                        0.6835696088774762
                    ],
                    [
                        "straightforward",
                        0.8831083128788971
                    ],
                    [
                        "body",
                        0.8850772470530376
                    ],
                    [
                        "recursive",
                        0.8850772470530376
                    ],
                    [
                        "middle",
                        0.8941118281580245
                    ],
                    [
                        "element",
                        0.8983218267540459
                    ],
                    [
                        "minute",
                        0.9008288205944547
                    ],
                    [
                        "theta",
                        0.9136915515457503
                    ],
                    [
                        "bit",
                        0.9164983178020449
                    ],
                    [
                        "odd",
                        0.9175527930321042
                    ],
                    [
                        "interleaving",
                        0.9179098987170179
                    ],
                    [
                        "little",
                        0.9240211565958648
                    ],
                    [
                        "subtlety",
                        0.9263211816295805
                    ],
                    [
                        "term",
                        0.9282304905350964
                    ],
                    [
                        "computation",
                        0.9282304905350964
                    ],
                    [
                        "cushion",
                        0.9288476247578971
                    ],
                    [
                        "finger",
                        0.93245348694212
                    ],
                    [
                        "algorithm",
                        0.93245348694212
                    ],
                    [
                        "able",
                        0.93245348694212
                    ],
                    [
                        "single",
                        0.93245348694212
                    ],
                    [
                        "size",
                        0.93352478722999
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "merge",
                        0.34051248033479753
                    ],
                    [
                        "array",
                        0.3480851874638919
                    ],
                    [
                        "n",
                        0.3925050551140353
                    ],
                    [
                        "work",
                        0.5403657608544801
                    ],
                    [
                        "complexity",
                        0.5753074672590955
                    ],
                    [
                        "sorted",
                        0.580551783057715
                    ],
                    [
                        "L",
                        0.6529519024338457
                    ],
                    [
                        "PROFESSOR",
                        0.6835696088774762
                    ],
                    [
                        "element",
                        0.8983218267540459
                    ],
                    [
                        "theta",
                        0.9136915515457503
                    ],
                    [
                        "algorithm",
                        0.93245348694212
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-1890": {
            "id": "Kg4bqzAqRBM-1890",
            "heat": 0.582,
            "start": 1890.0,
            "text": " So far so good. I know you know the answer as to what the complexity of merge sort is. But I'm guessing that most of you won't be able to prove it to me because I'm kind of a hard guy to prove something to. And I could always say, no, I don't believe you or I don't understand. The complexity-- and you've said this before, in class, and I think Erik's mentioned it-- the overall complexity of this algorithm is theta n log n And where does that come from? How do you prove that? And so what we'll do, now, is take a look at merge sort. And we'll look at the recursion tree. And we'll try and-- there are many ways of proving that merge sort is theta n log n. The way we're going to do this is what's called proof by picture. And it's not an established proof technique, but it's something that is very helpful to get an intuition behind the proof and why the result is true. And you can always take that and you can formalize it and make this something that everyone believes. And we'll also look at substitution, possibly in section tomorrow, for recurrence solving. So where we're right now is that we have a divide and conquer",
            "metrics": {
                "relativeDCReadability": 0.8785339839545756,
                "lexicalDiversity": 0.45147679324894513,
                "posComposition": {
                    "RB": 0.068,
                    "JJ": 0.051,
                    "PRP": 0.114,
                    "VBP": 0.051,
                    "DT": 0.08,
                    "NN": 0.165,
                    "IN": 0.093,
                    "TO": 0.03,
                    "WP": 0.013,
                    "VBZ": 0.055,
                    "CC": 0.076,
                    "VBG": 0.013,
                    "JJS": 0.004,
                    "MD": 0.034,
                    "VB": 0.08,
                    "UH": 0.004,
                    ":": 0.013,
                    "VBD": 0.008,
                    "NNP": 0.008,
                    "POS": 0.004,
                    "WRB": 0.013,
                    "EX": 0.004,
                    "NNS": 0.004,
                    "VBN": 0.008,
                    "WDT": 0.008
                },
                "syllableRate": 2.525,
                "topicScores": [
                    [
                        "sort",
                        0.39760149552065405
                    ],
                    [
                        "n",
                        0.39907914076735884
                    ],
                    [
                        "merge",
                        0.4097705733994064
                    ],
                    [
                        "look",
                        0.4240368004676021
                    ],
                    [
                        "proof",
                        0.4415726747414063
                    ],
                    [
                        "complexity",
                        0.5137335482273919
                    ],
                    [
                        "log",
                        0.5143509783888385
                    ],
                    [
                        "theta",
                        0.5258850326463776
                    ],
                    [
                        "way",
                        0.5528677029993941
                    ],
                    [
                        "Erik",
                        0.6280053233172674
                    ],
                    [
                        "good",
                        0.7155636254893643
                    ],
                    [
                        "answer",
                        0.8335338612573497
                    ],
                    [
                        "able",
                        0.8588647171220194
                    ],
                    [
                        "hard",
                        0.8588647171220194
                    ],
                    [
                        "guy",
                        0.8588647171220194
                    ],
                    [
                        "class",
                        0.8686984648268813
                    ],
                    [
                        "tree",
                        0.874592285813458
                    ],
                    [
                        "picture",
                        0.8795579685453592
                    ],
                    [
                        "true",
                        0.8815687277583718
                    ],
                    [
                        "solving",
                        0.8849320501140592
                    ],
                    [
                        "overall",
                        0.8880964643839281
                    ],
                    [
                        "algorithm",
                        0.8880964643839281
                    ],
                    [
                        "recursion",
                        0.8940512899574324
                    ],
                    [
                        "recurrence",
                        0.8945013606522864
                    ],
                    [
                        "technique",
                        0.9000689131828433
                    ],
                    [
                        "substitution",
                        0.9029646797410136
                    ],
                    [
                        "section",
                        0.9029646797410136
                    ],
                    [
                        "tomorrow",
                        0.9029646797410136
                    ],
                    [
                        "helpful",
                        0.9077857768263092
                    ],
                    [
                        "intuition",
                        0.9077857768263092
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "sort",
                        0.39760149552065405
                    ],
                    [
                        "n",
                        0.39907914076735884
                    ],
                    [
                        "merge",
                        0.4097705733994064
                    ],
                    [
                        "look",
                        0.4240368004676021
                    ],
                    [
                        "complexity",
                        0.5137335482273919
                    ],
                    [
                        "log",
                        0.5143509783888385
                    ],
                    [
                        "theta",
                        0.5258850326463776
                    ],
                    [
                        "algorithm",
                        0.8880964643839281
                    ],
                    [
                        "recurrence",
                        0.8945013606522864
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-1980": {
            "id": "Kg4bqzAqRBM-1980",
            "heat": 0.486,
            "start": 1980.0,
            "text": " algorithm that has a merge step that is theta n. And so, if I just look at this structure that I have here, I can write a recurrence for merge sort that looks like this. So when I say complexity, I can say T of n, which is the work done for n items, is going to be some constant time in order to divide the array. So this could be the part corresponding to dividing the array. And there's going to be two problems of size n over 2. And so I have 2 T of n over 2. And this is the recursive part. And I'm going to have c times n, which is the merge part. And that's some constant times n, which is what we have, here, with respect to the theta n complexity. So you have a recurrence like this and I know some of you have seen recurrences in 6.042. And you know how to solve this. What I'd like to do is show you this recursion tree expansion that, not only tells you how to solve this occurrence, but also gives you a means of solving recurrences where, instead of having c of n, you have something else out here. You have f of n, which is a different function from the linear function. And this recursion tree is, in my mind,",
            "metrics": {
                "relativeDCReadability": 1.067524582045894,
                "lexicalDiversity": 0.40772532188841204,
                "posComposition": {
                    "NN": 0.155,
                    "WDT": 0.03,
                    "VBZ": 0.064,
                    "DT": 0.112,
                    "JJ": 0.052,
                    "NNS": 0.034,
                    "CC": 0.043,
                    "RB": 0.047,
                    "IN": 0.107,
                    "PRP": 0.077,
                    "VBP": 0.052,
                    "MD": 0.017,
                    "VB": 0.052,
                    "NNP": 0.017,
                    "WRB": 0.017,
                    "VBN": 0.017,
                    "VBG": 0.03,
                    "TO": 0.039,
                    "EX": 0.004,
                    "CD": 0.021,
                    "WP": 0.009,
                    "PRP$": 0.004
                },
                "syllableRate": 2.442,
                "topicScores": [
                    [
                        "n",
                        0.25779910847116755
                    ],
                    [
                        "recurrence",
                        0.38528482196614183
                    ],
                    [
                        "time",
                        0.4279257160776636
                    ],
                    [
                        "merge",
                        0.43209759467149284
                    ],
                    [
                        "array",
                        0.48846801300813897
                    ],
                    [
                        "constant",
                        0.5457066663681053
                    ],
                    [
                        "complexity",
                        0.554423746893112
                    ],
                    [
                        "theta",
                        0.5603719277985095
                    ],
                    [
                        "tree",
                        0.5640054940336501
                    ],
                    [
                        "recursion",
                        0.5687351406399295
                    ],
                    [
                        "function",
                        0.5796416058889076
                    ],
                    [
                        "T",
                        0.5832217701354873
                    ],
                    [
                        "algorithm",
                        0.7782462004142614
                    ],
                    [
                        "step",
                        0.824723307493525
                    ],
                    [
                        "structure",
                        0.8762599406821855
                    ],
                    [
                        "sort",
                        0.8762599406821855
                    ],
                    [
                        "item",
                        0.8868989926263996
                    ],
                    [
                        "work",
                        0.8959012140772944
                    ],
                    [
                        "order",
                        0.8959012140772944
                    ],
                    [
                        "corresponding",
                        0.9065648610496242
                    ],
                    [
                        "problem",
                        0.9133883234926343
                    ],
                    [
                        "size",
                        0.9133883234926343
                    ],
                    [
                        "mind",
                        0.9147374902521785
                    ],
                    [
                        "recursive",
                        0.9148178947688738
                    ],
                    [
                        "respect",
                        0.9203384284280006
                    ],
                    [
                        "expansion",
                        0.9269294004324875
                    ],
                    [
                        "linear",
                        0.9280815563273354
                    ],
                    [
                        "mean",
                        0.9329861688749654
                    ],
                    [
                        "different",
                        0.9340496182672726
                    ],
                    [
                        "time n",
                        1.7315959700827124
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "n",
                        0.25779910847116755
                    ],
                    [
                        "recurrence",
                        0.38528482196614183
                    ],
                    [
                        "time",
                        0.4279257160776636
                    ],
                    [
                        "merge",
                        0.43209759467149284
                    ],
                    [
                        "array",
                        0.48846801300813897
                    ],
                    [
                        "constant",
                        0.5457066663681053
                    ],
                    [
                        "complexity",
                        0.554423746893112
                    ],
                    [
                        "theta",
                        0.5603719277985095
                    ],
                    [
                        "algorithm",
                        0.7782462004142614
                    ],
                    [
                        "step",
                        0.824723307493525
                    ],
                    [
                        "sort",
                        0.8762599406821855
                    ],
                    [
                        "work",
                        0.8959012140772944
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-2070": {
            "id": "Kg4bqzAqRBM-2070",
            "heat": 0.577,
            "start": 2070.0,
            "text": " the simplest way of arguing the theta n log n complexity of merge sort. So what I want to do is expand this recurrence out. And let's do that over here. So I have c of n on top. I'm going to ignore this constant factor because c of n dominates. So I'll just start with c of n. I want to break things up, as I do the recursion. So when I go c of n, at the top level-- that's the work I have to do at the merge, at the top level. And then when I go down to two smaller problems, each of them is size n over 2. So I do c times n divided by 2 [INAUDIBLE]. So this is just a constant c. I didn't want to write thetas up here. You could. And I'll say a little bit more about that later. But think of this cn as representing the theta n complexity. And c is this constant. So c times n, here. c times n over 2, here. And then when I keep going, I have c times n over 4,",
            "metrics": {
                "relativeDCReadability": 1.1670038250706867,
                "lexicalDiversity": 0.4619289340101523,
                "posComposition": {
                    "DT": 0.091,
                    "JJS": 0.005,
                    "NN": 0.127,
                    "IN": 0.137,
                    "VBG": 0.02,
                    "JJ": 0.076,
                    "WP": 0.005,
                    "PRP": 0.086,
                    "VBP": 0.056,
                    "TO": 0.03,
                    "VB": 0.061,
                    "VBZ": 0.025,
                    "RB": 0.102,
                    "CC": 0.03,
                    "NNS": 0.046,
                    "MD": 0.015,
                    "WRB": 0.015,
                    ":": 0.005,
                    "WDT": 0.005,
                    "CD": 0.025,
                    "JJR": 0.005,
                    "VBN": 0.01,
                    "NNP": 0.01,
                    "VBD": 0.005,
                    "RBR": 0.005
                },
                "syllableRate": 2.025,
                "topicScores": [
                    [
                        "n",
                        0.24336909251047456
                    ],
                    [
                        "c",
                        0.25418240686416915
                    ],
                    [
                        "time",
                        0.36546840274546905
                    ],
                    [
                        "theta",
                        0.4473514232298008
                    ],
                    [
                        "constant",
                        0.4482883823351834
                    ],
                    [
                        "merge",
                        0.5529634762421309
                    ],
                    [
                        "complexity",
                        0.557992585255679
                    ],
                    [
                        "INAUDIBLE",
                        0.6215068589913763
                    ],
                    [
                        "sort",
                        0.7860258825326193
                    ],
                    [
                        "simple",
                        0.8177685215703745
                    ],
                    [
                        "way",
                        0.8312260604503735
                    ],
                    [
                        "log",
                        0.8312260604503735
                    ],
                    [
                        "recurrence",
                        0.8710302887479022
                    ],
                    [
                        "dominate",
                        0.8916955981118774
                    ],
                    [
                        "recursion",
                        0.897568301745217
                    ],
                    [
                        "level",
                        0.9019804781405304
                    ],
                    [
                        "thing",
                        0.9145624394010697
                    ],
                    [
                        "factor",
                        0.9169329293423006
                    ],
                    [
                        "small",
                        0.9212452733754218
                    ],
                    [
                        "problem",
                        0.9212452733754218
                    ],
                    [
                        "work",
                        0.9250227199173903
                    ],
                    [
                        "size",
                        0.9277364637848354
                    ],
                    [
                        "little",
                        0.9346265961370567
                    ],
                    [
                        "bit",
                        0.9346265961370567
                    ],
                    [
                        "cn",
                        0.9357851148431475
                    ],
                    [
                        "simple way",
                        2.122565438628412
                    ],
                    [
                        "merge sort",
                        2.2143366014559036
                    ],
                    [
                        "theta n",
                        2.244782946070319
                    ],
                    [
                        "c time",
                        2.5277089038935023
                    ],
                    [
                        "n log",
                        2.6392621872596216
                    ]
                ],
                "topTopicSimilarity": 0.43333333333333335,
                "sharedTopicScores": [
                    [
                        "n",
                        0.24336909251047456
                    ],
                    [
                        "c",
                        0.25418240686416915
                    ],
                    [
                        "time",
                        0.36546840274546905
                    ],
                    [
                        "theta",
                        0.4473514232298008
                    ],
                    [
                        "constant",
                        0.4482883823351834
                    ],
                    [
                        "merge",
                        0.5529634762421309
                    ],
                    [
                        "complexity",
                        0.557992585255679
                    ],
                    [
                        "sort",
                        0.7860258825326193
                    ],
                    [
                        "log",
                        0.8312260604503735
                    ],
                    [
                        "recurrence",
                        0.8710302887479022
                    ],
                    [
                        "thing",
                        0.9145624394010697
                    ],
                    [
                        "work",
                        0.9250227199173903
                    ],
                    [
                        "theta n",
                        2.244782946070319
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-2160": {
            "id": "Kg4bqzAqRBM-2160",
            "heat": 0.338,
            "start": 2160.0,
            "text": " c times n over 4, et cetera, and so on, and so forth. And when I come down all the way here, n is eventually going to become 1-- or essentially a constant-- and I'm going to have a bunch of c's here. So here's another question, that I'd like you to answer. Someone tell me what the number of levels in this tree are, precisely, and the number of leaves in this tree are, precisely. AUDIENCE: The number of levels is log n plus 1. PROFESSOR: Log n plus 1. Log to the base 2 plus 1. And the number of leaves? You raised your hand back there, first. Number of leaves. AUDIENCE: I think n. PROFESSOR: Yeah, you're right. You think right. So 1 plus log n and n leaves. When n becomes 1, how many of them do you have? You're down to a single element, which is, by definition, sorted. And you have n leaves. So now let's add up the work. I really like this picture because it's just so intuitive in terms of getting us the result that we're looking for. So you add up the work in each of the levels of this tree.",
            "metrics": {
                "relativeDCReadability": 0.9443891125790628,
                "lexicalDiversity": 0.5141509433962265,
                "posComposition": {
                    "JJ": 0.071,
                    "NNS": 0.052,
                    "RB": 0.094,
                    "IN": 0.113,
                    "CD": 0.038,
                    "NN": 0.099,
                    "CC": 0.061,
                    "WRB": 0.014,
                    "PRP": 0.085,
                    "VBP": 0.066,
                    "PDT": 0.005,
                    "DT": 0.09,
                    "VBZ": 0.024,
                    "VBG": 0.019,
                    "TO": 0.024,
                    "VB": 0.033,
                    ":": 0.009,
                    "POS": 0.009,
                    "NNP": 0.042,
                    "MD": 0.005,
                    "WP": 0.005,
                    "VBD": 0.005,
                    "PRP$": 0.005,
                    "EX": 0.005,
                    "RP": 0.014,
                    "WDT": 0.005,
                    "VBN": 0.009
                },
                "syllableRate": 2.242,
                "topicScores": [
                    [
                        "n",
                        0.28425860504963046
                    ],
                    [
                        "number",
                        0.2999221008471068
                    ],
                    [
                        "leave",
                        0.3258417203474961
                    ],
                    [
                        "audience",
                        0.34669182425776657
                    ],
                    [
                        "PROFESSOR",
                        0.36762371692458623
                    ],
                    [
                        "log",
                        0.3919838273349134
                    ],
                    [
                        "tree",
                        0.4214948221565911
                    ],
                    [
                        "level",
                        0.440696262634056
                    ],
                    [
                        "right",
                        0.5465689726316658
                    ],
                    [
                        "work",
                        0.566868859322951
                    ],
                    [
                        "et",
                        0.8083187011189098
                    ],
                    [
                        "cetera",
                        0.8083187011189098
                    ],
                    [
                        "time",
                        0.8223224719861932
                    ],
                    [
                        "way",
                        0.8744575657564725
                    ],
                    [
                        "constant--",
                        0.8838970676987844
                    ],
                    [
                        "bunch",
                        0.8838970676987844
                    ],
                    [
                        "question",
                        0.8943504366699574
                    ],
                    [
                        "base",
                        0.9268552760027757
                    ],
                    [
                        "definition",
                        0.9289477058899002
                    ],
                    [
                        "hand",
                        0.9316539669386389
                    ],
                    [
                        "single",
                        0.9348489371920843
                    ],
                    [
                        "element",
                        0.9348489371920843
                    ],
                    [
                        "picture",
                        0.9420414860657101
                    ],
                    [
                        "intuitive",
                        0.9420414860657101
                    ],
                    [
                        "term",
                        0.9420414860657101
                    ],
                    [
                        "result",
                        0.9420414860657101
                    ],
                    [
                        "et cetera",
                        1.8849964475283216
                    ],
                    [
                        "c time",
                        2.0510201731006252
                    ],
                    [
                        "log n",
                        2.4061844219053428
                    ],
                    [
                        "single element",
                        6.932889995277796
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "n",
                        0.28425860504963046
                    ],
                    [
                        "number",
                        0.2999221008471068
                    ],
                    [
                        "audience",
                        0.34669182425776657
                    ],
                    [
                        "PROFESSOR",
                        0.36762371692458623
                    ],
                    [
                        "log",
                        0.3919838273349134
                    ],
                    [
                        "right",
                        0.5465689726316658
                    ],
                    [
                        "work",
                        0.566868859322951
                    ],
                    [
                        "time",
                        0.8223224719861932
                    ],
                    [
                        "element",
                        0.9348489371920843
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-2250": {
            "id": "Kg4bqzAqRBM-2250",
            "heat": 0.174,
            "start": 2250.0,
            "text": " So the top level is cn. The second level is cn because I added 1/2 and 1/2, cn, cn. Wow. What symmetry. So you're doing the same amount of work modulo the constant factors, here, with what's going on with the c1, which we've ignored, but roughly the same amount of work in each of the levels. And now, you know how many levels there are. It's 1 plus log n. So if you want to write an equation for T of n, it's 1 plus log n times c of n, which is theta of n log n. So I've mixed in constants c and thetas. For the purposes of this description, they're interchangeable. You will see recurrences that look like this, in class. And things like that. Don't get confused. It's just a constant multiplicative factor in front of the function that you have. And it's just a little easier, I think, to write down these constant factors and realize that the amount of work done",
            "metrics": {
                "relativeDCReadability": 1.082026736864152,
                "lexicalDiversity": 0.4943820224719101,
                "posComposition": {
                    "IN": 0.146,
                    "DT": 0.101,
                    "JJ": 0.096,
                    "NN": 0.118,
                    "VBZ": 0.045,
                    "VBN": 0.022,
                    "PRP": 0.079,
                    "VBD": 0.011,
                    "CD": 0.022,
                    "CC": 0.051,
                    "NNP": 0.017,
                    "WP": 0.011,
                    "RB": 0.045,
                    "VBP": 0.073,
                    "VBG": 0.011,
                    "NNS": 0.067,
                    "WDT": 0.017,
                    "WRB": 0.006,
                    "EX": 0.006,
                    "TO": 0.011,
                    "VB": 0.028,
                    "MD": 0.006,
                    "JJR": 0.006,
                    "RP": 0.006
                },
                "syllableRate": 1.917,
                "topicScores": [
                    [
                        "cn",
                        0.3410855900912052
                    ],
                    [
                        "level",
                        0.35664430037830214
                    ],
                    [
                        "constant",
                        0.38906412199011403
                    ],
                    [
                        "log",
                        0.4404197104131183
                    ],
                    [
                        "work",
                        0.4405987264244469
                    ],
                    [
                        "factor",
                        0.4519652826763061
                    ],
                    [
                        "n.",
                        0.5307549576750185
                    ],
                    [
                        "theta",
                        0.5707833671733582
                    ],
                    [
                        "T",
                        0.6786141592325127
                    ],
                    [
                        "symmetry",
                        0.8625697486604029
                    ],
                    [
                        "second",
                        0.8683590603439802
                    ],
                    [
                        "class",
                        0.896343534523926
                    ],
                    [
                        "interchangeable",
                        0.9056627023833066
                    ],
                    [
                        "c1",
                        0.9076081528755489
                    ],
                    [
                        "modulo",
                        0.9162849355191559
                    ],
                    [
                        "description",
                        0.9239562846445228
                    ],
                    [
                        "thing",
                        0.927130192398887
                    ],
                    [
                        "equation",
                        0.9271660524381408
                    ],
                    [
                        "time",
                        0.9271660524381408
                    ],
                    [
                        "little",
                        0.9305492249223316
                    ],
                    [
                        "easy",
                        0.9305492249223316
                    ],
                    [
                        "purpose",
                        0.9312141248893404
                    ],
                    [
                        "recurrence",
                        0.9327687465656831
                    ],
                    [
                        "multiplicative",
                        0.9363034280780347
                    ],
                    [
                        "function",
                        0.9363034280780347
                    ],
                    [
                        "second level",
                        2.559862072366646
                    ],
                    [
                        "constant factor",
                        2.809100742822281
                    ],
                    [
                        "log n",
                        4.1769968672652045
                    ],
                    [
                        "work modulo",
                        4.192861614964928
                    ],
                    [
                        "constant multiplicative",
                        5.486631316919489
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "constant",
                        0.38906412199011403
                    ],
                    [
                        "log",
                        0.4404197104131183
                    ],
                    [
                        "work",
                        0.4405987264244469
                    ],
                    [
                        "theta",
                        0.5707833671733582
                    ],
                    [
                        "thing",
                        0.927130192398887
                    ],
                    [
                        "time",
                        0.9271660524381408
                    ],
                    [
                        "recurrence",
                        0.9327687465656831
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-2340": {
            "id": "Kg4bqzAqRBM-2340",
            "heat": 0.1,
            "start": 2340.0,
            "text": " is the same in each of the leaves. And once you know the dimensions of this tree, in terms of levels and in terms of the number of leaves, you get your result. So we've looked at two algorithm, so far. And insertion sort, if you talk about numbers, is theta n squared for swaps. Merge sort is theta n log n. Here's another interesting question. What is one advantage of insertion sort over merge sort? AUDIENCE: [INAUDIBLE] PROFESSOR: What does that mean? AUDIENCE: You don't have to move elements outside of [INAUDIBLE]. PROFESSOR: That's exactly right. That's exactly right. So the two guys who answered the questions before with the levels, and you. Come to me after class. So that's a great answer. It's in-place sorting is something that has to do with auxiliary space. And so what you see, here-- and it was a bit hidden, here. But the fact of the matter is that you had L prime and R prime. And L prime and R prime are different from L and R, which were the initial halves of the inputs to the sorting",
            "metrics": {
                "relativeDCReadability": 0.9705843073495711,
                "lexicalDiversity": 0.48205128205128206,
                "posComposition": {
                    "VBZ": 0.067,
                    "DT": 0.103,
                    "JJ": 0.082,
                    "IN": 0.133,
                    "NNS": 0.077,
                    "CC": 0.056,
                    "RB": 0.067,
                    "PRP": 0.056,
                    "VBP": 0.041,
                    "NN": 0.113,
                    "PRP$": 0.005,
                    "VBN": 0.01,
                    "CD": 0.015,
                    "NNP": 0.072,
                    "WP": 0.021,
                    "VB": 0.021,
                    "TO": 0.021,
                    "POS": 0.005,
                    "VBD": 0.021,
                    "WDT": 0.01,
                    ":": 0.005
                },
                "syllableRate": 2.175,
                "topicScores": [
                    [
                        "audience",
                        0.313207995668141
                    ],
                    [
                        "sort",
                        0.3398313042106623
                    ],
                    [
                        "L",
                        0.34056353380530086
                    ],
                    [
                        "prime",
                        0.3775505742321887
                    ],
                    [
                        "INAUDIBLE",
                        0.3881699847322691
                    ],
                    [
                        "PROFESSOR",
                        0.3898259019649062
                    ],
                    [
                        "leave",
                        0.5128889334214228
                    ],
                    [
                        "right",
                        0.5239896586998969
                    ],
                    [
                        "term",
                        0.5299576675364088
                    ],
                    [
                        "theta",
                        0.5429580845799131
                    ],
                    [
                        "merge",
                        0.545331911405646
                    ],
                    [
                        "insertion",
                        0.5502751137967374
                    ],
                    [
                        "number",
                        0.5540063523592599
                    ],
                    [
                        "level",
                        0.5632339398652793
                    ],
                    [
                        "question",
                        0.5693557416293124
                    ],
                    [
                        "answer",
                        0.5741349103859353
                    ],
                    [
                        "r prime",
                        0.8541988449342602
                    ],
                    [
                        "result",
                        0.8552372836693214
                    ],
                    [
                        "swap",
                        0.878629944910363
                    ],
                    [
                        "tree",
                        0.8806641195950363
                    ],
                    [
                        "n.",
                        0.8851198462902785
                    ],
                    [
                        "dimension",
                        0.891031492286086
                    ],
                    [
                        "algorithm",
                        0.8927016835711773
                    ],
                    [
                        "here--",
                        0.9027953204029862
                    ],
                    [
                        "interesting",
                        0.9099658555331765
                    ],
                    [
                        "class",
                        0.910265832844783
                    ],
                    [
                        "space",
                        0.9121145424218217
                    ],
                    [
                        "sorting",
                        0.9150309808557873
                    ],
                    [
                        "advantage",
                        0.9209699733110042
                    ],
                    [
                        "great",
                        0.9276544687716854
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "audience",
                        0.313207995668141
                    ],
                    [
                        "sort",
                        0.3398313042106623
                    ],
                    [
                        "L",
                        0.34056353380530086
                    ],
                    [
                        "PROFESSOR",
                        0.3898259019649062
                    ],
                    [
                        "right",
                        0.5239896586998969
                    ],
                    [
                        "theta",
                        0.5429580845799131
                    ],
                    [
                        "merge",
                        0.545331911405646
                    ],
                    [
                        "insertion",
                        0.5502751137967374
                    ],
                    [
                        "number",
                        0.5540063523592599
                    ],
                    [
                        "swap",
                        0.878629944910363
                    ],
                    [
                        "algorithm",
                        0.8927016835711773
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-2430": {
            "id": "Kg4bqzAqRBM-2430",
            "heat": 0.135,
            "start": 2430.0,
            "text": " algorithm. And what I said here is, we're going to dump this into A. That's what this picture shows. This says sorted array, A. And so you had to make a copy of the array-- the two halves L and R-- in order to do the recursion, and then to take the results and put them into the sorted array, A. So you needed-- in merge sort-- you needed theta n auxiliary space. So merge sort, you need theta n extra space. And the definition of in-place sorting implies that you have theta 1-- constant-- auxiliary space. The auxiliary space for insertion sort is simply that temporary variable that you need when you swap two elements. So when you want to swap a couple of registers, you gotta store one of the values in a temporary location, override the other, et cetera. And that's the theta 1 auxiliary space for insertion sort. So there is an advantage of the version of insertion sort we've talked about, today, over merge sort. And if you have a billion elements, that's potentially something you don't want to store in memory. If you want to do something really fast and do everything in cache or main memory, and you want",
            "metrics": {
                "relativeDCReadability": 1.0679870457096492,
                "lexicalDiversity": 0.5205479452054794,
                "posComposition": {
                    "NN": 0.196,
                    "CC": 0.05,
                    "WP": 0.009,
                    "PRP": 0.078,
                    "VBD": 0.023,
                    "RB": 0.041,
                    "VBZ": 0.032,
                    "VBP": 0.055,
                    "VBG": 0.009,
                    "TO": 0.032,
                    "VB": 0.046,
                    "DT": 0.091,
                    "IN": 0.11,
                    "NNP": 0.037,
                    "POS": 0.005,
                    "JJ": 0.073,
                    ":": 0.027,
                    "CD": 0.027,
                    "NNS": 0.032,
                    "VBN": 0.009,
                    "WRB": 0.009,
                    "EX": 0.005,
                    "WDT": 0.005
                },
                "syllableRate": 2.6,
                "topicScores": [
                    [
                        "space",
                        0.3145862470793476
                    ],
                    [
                        "A.",
                        0.3203466441918816
                    ],
                    [
                        "sort",
                        0.3387337311227305
                    ],
                    [
                        "auxiliary",
                        0.35594436176959515
                    ],
                    [
                        "theta",
                        0.36462202661057813
                    ],
                    [
                        "insertion",
                        0.43135335964420696
                    ],
                    [
                        "merge",
                        0.4343599070259669
                    ],
                    [
                        "sorted",
                        0.5355519664086716
                    ],
                    [
                        "array",
                        0.5392997844287273
                    ],
                    [
                        "element",
                        0.5617250647375633
                    ],
                    [
                        "memory",
                        0.5647134197974649
                    ],
                    [
                        "temporary",
                        0.5696634118135953
                    ],
                    [
                        "L",
                        0.6393320022926028
                    ],
                    [
                        "r--",
                        0.6393320022926028
                    ],
                    [
                        "algorithm",
                        0.6661337210849801
                    ],
                    [
                        "picture",
                        0.8749444549522516
                    ],
                    [
                        "cetera",
                        0.8804373546303385
                    ],
                    [
                        "auxiliary space",
                        0.8827061863656691
                    ],
                    [
                        "constant--",
                        0.8873661150532547
                    ],
                    [
                        "recursion",
                        0.8955415319523816
                    ],
                    [
                        "copy",
                        0.9052332026511819
                    ],
                    [
                        "half",
                        0.9052332026511819
                    ],
                    [
                        "order",
                        0.9052332026511819
                    ],
                    [
                        "result",
                        0.9052332026511819
                    ],
                    [
                        "extra",
                        0.9054998969761339
                    ],
                    [
                        "today",
                        0.9082929605059096
                    ],
                    [
                        "place",
                        0.9088506262483254
                    ],
                    [
                        "sorting",
                        0.9088506262483254
                    ],
                    [
                        "register",
                        0.9138220432344617
                    ],
                    [
                        "location",
                        0.9138220432344617
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "sort",
                        0.3387337311227305
                    ],
                    [
                        "theta",
                        0.36462202661057813
                    ],
                    [
                        "insertion",
                        0.43135335964420696
                    ],
                    [
                        "merge",
                        0.4343599070259669
                    ],
                    [
                        "sorted",
                        0.5355519664086716
                    ],
                    [
                        "array",
                        0.5392997844287273
                    ],
                    [
                        "element",
                        0.5617250647375633
                    ],
                    [
                        "L",
                        0.6393320022926028
                    ],
                    [
                        "algorithm",
                        0.6661337210849801
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-2520": {
            "id": "Kg4bqzAqRBM-2520",
            "heat": 0.131,
            "start": 2520.0,
            "text": " to sort billions are maybe even trillions of items, this becomes an important consideration. I will say that you can reduce the constant factor of the theta n. So in the vanilla scheme, you could imagine that you have to have a copy of the array. So if you had n elements, you essentially have n extra items of storage. You can make that n over 2 with a simple coding trick by keeping 1/2 of A. You can throw away one of the L's or one of the R's. And you can get it down to n over 2. And that turns out-- it's a reasonable thing to do if you have a billion elements and you want to reduce your storage by a constant factor. So that's one coding trick. Now it turns out that you can actually go further. And there's a fairly sophisticated algorithm that's sort of beyond the scope of 6.006 that's an in-place merge sort. And this in-place merge sort is kind of impractical in the sense that it doesn't do very well in terms of the constant factors. So while it's in-place and it's still theta n log n. The problem is that the running time of an in-place merge sort is much worse than the regular merge sort that uses theta n auxiliary space. So people don't really use in-place merge sort. It's a great paper. It's a great thing to read.",
            "metrics": {
                "relativeDCReadability": 1.0752870739964242,
                "lexicalDiversity": 0.5039370078740157,
                "posComposition": {
                    "TO": 0.024,
                    "VB": 0.059,
                    "NNS": 0.035,
                    "VBP": 0.024,
                    "RB": 0.063,
                    "IN": 0.13,
                    "DT": 0.106,
                    "VBZ": 0.067,
                    "JJ": 0.087,
                    "NN": 0.154,
                    "PRP": 0.079,
                    "MD": 0.028,
                    "NNP": 0.02,
                    "VBD": 0.004,
                    "VBN": 0.004,
                    "CD": 0.031,
                    "VBG": 0.004,
                    "RP": 0.016,
                    "POS": 0.008,
                    "CC": 0.028,
                    ":": 0.004,
                    "PRP$": 0.004,
                    "RBR": 0.004,
                    "EX": 0.004,
                    "WDT": 0.012,
                    "JJR": 0.004
                },
                "syllableRate": 2.808,
                "topicScores": [
                    [
                        "sort",
                        0.2879199526879284
                    ],
                    [
                        "place",
                        0.2929395494024232
                    ],
                    [
                        "merge",
                        0.30918902757615124
                    ],
                    [
                        "n",
                        0.31993847896252847
                    ],
                    [
                        "factor",
                        0.41852755935045666
                    ],
                    [
                        "constant",
                        0.42661915274907386
                    ],
                    [
                        "theta",
                        0.44804701189999846
                    ],
                    [
                        "item",
                        0.5357280602084349
                    ],
                    [
                        "element",
                        0.5495662508363726
                    ],
                    [
                        "trick",
                        0.5513791604570544
                    ],
                    [
                        "billion",
                        0.5541376131491275
                    ],
                    [
                        "storage",
                        0.5571104584234688
                    ],
                    [
                        "great",
                        0.562244631466475
                    ],
                    [
                        "thing",
                        0.5636547645552807
                    ],
                    [
                        "a.",
                        0.6352270537047869
                    ],
                    [
                        "L",
                        0.6352270537047869
                    ],
                    [
                        "place merge",
                        0.6602410730467363
                    ],
                    [
                        "consideration",
                        0.7557336229122549
                    ],
                    [
                        "important",
                        0.7944369613117673
                    ],
                    [
                        "trillion",
                        0.8106850319744616
                    ],
                    [
                        "array",
                        0.8498260440733014
                    ],
                    [
                        "merge sort",
                        0.8624828813544587
                    ],
                    [
                        "vanilla",
                        0.8760656038844885
                    ],
                    [
                        "scheme",
                        0.8760656038844885
                    ],
                    [
                        "copy",
                        0.8867811153815804
                    ],
                    [
                        "extra",
                        0.8982729242565999
                    ],
                    [
                        "space",
                        0.9043790583331109
                    ],
                    [
                        "simple",
                        0.9056389078469225
                    ],
                    [
                        "paper",
                        0.9066871328505692
                    ],
                    [
                        "reasonable",
                        0.9177796071091343
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "sort",
                        0.2879199526879284
                    ],
                    [
                        "merge",
                        0.30918902757615124
                    ],
                    [
                        "n",
                        0.31993847896252847
                    ],
                    [
                        "constant",
                        0.42661915274907386
                    ],
                    [
                        "theta",
                        0.44804701189999846
                    ],
                    [
                        "element",
                        0.5495662508363726
                    ],
                    [
                        "thing",
                        0.5636547645552807
                    ],
                    [
                        "L",
                        0.6352270537047869
                    ],
                    [
                        "array",
                        0.8498260440733014
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-2610": {
            "id": "Kg4bqzAqRBM-2610",
            "heat": 0.134,
            "start": 2610.0,
            "text": " Its analysis is a bit sophisticated for double 0 6. So we wont go there. But it does exist. So you can take merge sort, and I just want to let you know that you can do things in-place. In terms of numbers, some experiments we ran a few years ago-- so these may not be completely valid because I'm going to actually give you numbers-- but merge sort in Python, if you write a little curve fit program to do this, is 2.2n log n microseconds for a given n. So this is the merge sort routine. And if you look at insertion sort, in Python, that's something like 0.2 n square microseconds. So you see the constant factors here. If you do insertion sort in C, which is a compiled language, then, it's much faster. It's about 20 times faster. It's 0.01 n squared microseconds. So a little bit of practice on the side.",
            "metrics": {
                "relativeDCReadability": 1.0412630496195152,
                "lexicalDiversity": 0.5214723926380368,
                "posComposition": {
                    "PRP$": 0.006,
                    "NN": 0.123,
                    "VBZ": 0.055,
                    "DT": 0.08,
                    "JJ": 0.08,
                    "IN": 0.135,
                    "CD": 0.037,
                    "PRP": 0.098,
                    "VBP": 0.049,
                    "VB": 0.067,
                    "RB": 0.055,
                    "CC": 0.025,
                    "MD": 0.018,
                    "TO": 0.018,
                    "NNS": 0.074,
                    "VBD": 0.012,
                    ":": 0.012,
                    "VBG": 0.006,
                    "NNP": 0.018,
                    "VBN": 0.006,
                    "WDT": 0.012,
                    "RBR": 0.012
                },
                "syllableRate": 1.783,
                "topicScores": [
                    [
                        "sort",
                        0.33901614416527026
                    ],
                    [
                        "Python",
                        0.39706530166203613
                    ],
                    [
                        "microsecond",
                        0.4263131497507488
                    ],
                    [
                        "merge",
                        0.44188835582092817
                    ],
                    [
                        "square",
                        0.5472468607369867
                    ],
                    [
                        "insertion",
                        0.5653077112756806
                    ],
                    [
                        "bit",
                        0.5681922810740168
                    ],
                    [
                        "little",
                        0.5722628687628843
                    ],
                    [
                        "C",
                        0.6869705750958569
                    ],
                    [
                        "place",
                        0.8506107000286692
                    ],
                    [
                        "analysis",
                        0.8527620889953773
                    ],
                    [
                        "sophisticated",
                        0.8673444330107888
                    ],
                    [
                        "double",
                        0.8673444330107888
                    ],
                    [
                        "n.",
                        0.8806775491317196
                    ],
                    [
                        "routine",
                        0.8847964380307246
                    ],
                    [
                        "thing",
                        0.8961050765009063
                    ],
                    [
                        "term",
                        0.9017650211300513
                    ],
                    [
                        "number",
                        0.9017650211300513
                    ],
                    [
                        "experiment",
                        0.9017650211300513
                    ],
                    [
                        "year",
                        0.9017650211300513
                    ],
                    [
                        "factor",
                        0.9142964041162366
                    ],
                    [
                        "valid",
                        0.915844019839716
                    ],
                    [
                        "curve",
                        0.915844019839716
                    ],
                    [
                        "fit",
                        0.915844019839716
                    ],
                    [
                        "program",
                        0.915844019839716
                    ],
                    [
                        "log",
                        0.915844019839716
                    ],
                    [
                        "compiled",
                        0.9161989726528428
                    ],
                    [
                        "language",
                        0.9161989726528428
                    ],
                    [
                        "time",
                        0.9178376424573298
                    ],
                    [
                        "constant",
                        0.923332341002219
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "sort",
                        0.33901614416527026
                    ],
                    [
                        "merge",
                        0.44188835582092817
                    ],
                    [
                        "square",
                        0.5472468607369867
                    ],
                    [
                        "insertion",
                        0.5653077112756806
                    ],
                    [
                        "thing",
                        0.8961050765009063
                    ],
                    [
                        "number",
                        0.9017650211300513
                    ],
                    [
                        "log",
                        0.915844019839716
                    ],
                    [
                        "time",
                        0.9178376424573298
                    ],
                    [
                        "constant",
                        0.923332341002219
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-2700": {
            "id": "Kg4bqzAqRBM-2700",
            "heat": 0.1,
            "start": 2700.0,
            "text": " We do ask you to write code. And this is important. The reason we're interested in algorithms is because people want to run them. And what you can see is that you can actually find an n-- so regardless of whether you're Python or C, this tells you that asymptotic complexity is pretty important because, once n gets beyond about 4,000, you're going to see that merge sort in Python beats insertion sort in C. So the constant factors get subsumed beyond certain values of n. So that's why asymptotic complexity is important. You do have a factor of 20, here, but that doesn't really help you in terms of keeping an n square algorithm competitive. It stays competitive for a little bit longer, but then falls behind. That's what I wanted to cover for sorting. So hopefully, you have a sense of what happens with these two sorting algorithms. We'll look at a very different sorting algorithm next time, using heaps, which is a different data structure. The last thing I want to do in the couple minutes I have left is give you a little more intuition as to recurrence solving based on this diagram that I wrote up there. And so we're going to use exactly this structure. And we're going to look at a couple of different recurrences that I won't really motivate in terms of having a specific algorithm, but I'll just write out the recurrence.",
            "metrics": {
                "relativeDCReadability": 1.008629707076994,
                "lexicalDiversity": 0.5019762845849802,
                "posComposition": {
                    "PRP": 0.091,
                    "VBP": 0.051,
                    "VB": 0.063,
                    "TO": 0.032,
                    "NN": 0.099,
                    "CC": 0.032,
                    "DT": 0.091,
                    "VBZ": 0.059,
                    "JJ": 0.079,
                    "IN": 0.134,
                    "NNS": 0.04,
                    "WP": 0.012,
                    "MD": 0.02,
                    "RB": 0.075,
                    ":": 0.004,
                    "NNP": 0.028,
                    "CD": 0.012,
                    "VBG": 0.04,
                    "VBN": 0.012,
                    "WRB": 0.004,
                    "RBR": 0.004,
                    "VBD": 0.008,
                    "WDT": 0.004,
                    "JJR": 0.004,
                    "RP": 0.004
                },
                "syllableRate": 3.083,
                "topicScores": [
                    [
                        "sort",
                        0.33953325428186476
                    ],
                    [
                        "algorithm",
                        0.3771355293686622
                    ],
                    [
                        "Python",
                        0.3866466507058633
                    ],
                    [
                        "important",
                        0.39499543571705376
                    ],
                    [
                        "recurrence",
                        0.45044840287981547
                    ],
                    [
                        "different",
                        0.450805502833438
                    ],
                    [
                        "structure",
                        0.5341033298951207
                    ],
                    [
                        "asymptotic",
                        0.5358023018894983
                    ],
                    [
                        "complexity",
                        0.5358023018894983
                    ],
                    [
                        "competitive",
                        0.552053562547315
                    ],
                    [
                        "term",
                        0.5526071972268852
                    ],
                    [
                        "factor",
                        0.5580776235243561
                    ],
                    [
                        "little",
                        0.5600780950310927
                    ],
                    [
                        "C.",
                        0.5625356311372387
                    ],
                    [
                        "couple",
                        0.570853457212422
                    ],
                    [
                        "code",
                        0.7330375160045002
                    ],
                    [
                        "n.",
                        0.8602217661629024
                    ],
                    [
                        "reason",
                        0.8625161876277857
                    ],
                    [
                        "interested",
                        0.8742350210794987
                    ],
                    [
                        "people",
                        0.8742350210794987
                    ],
                    [
                        "merge",
                        0.8868377650693019
                    ],
                    [
                        "insertion",
                        0.8868377650693019
                    ],
                    [
                        "constant",
                        0.8949349131454203
                    ],
                    [
                        "certain",
                        0.8949349131454203
                    ],
                    [
                        "value",
                        0.8949349131454203
                    ],
                    [
                        "heap",
                        0.8973904994478171
                    ],
                    [
                        "bit",
                        0.8994045994919592
                    ],
                    [
                        "square",
                        0.9049449707887957
                    ],
                    [
                        "time",
                        0.9069284512218007
                    ],
                    [
                        "data",
                        0.9069284512218007
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "sort",
                        0.33953325428186476
                    ],
                    [
                        "algorithm",
                        0.3771355293686622
                    ],
                    [
                        "recurrence",
                        0.45044840287981547
                    ],
                    [
                        "complexity",
                        0.5358023018894983
                    ],
                    [
                        "merge",
                        0.8868377650693019
                    ],
                    [
                        "insertion",
                        0.8868377650693019
                    ],
                    [
                        "constant",
                        0.8949349131454203
                    ],
                    [
                        "square",
                        0.9049449707887957
                    ],
                    [
                        "time",
                        0.9069284512218007
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-2790": {
            "id": "Kg4bqzAqRBM-2790",
            "heat": 0.1,
            "start": 2790.0,
            "text": " And we'll look at the recursion tree for that. And I'll try and tease out of you the complexity associated with these recurrences of the overall complexity. So let's take a look at T of n equals 2 T of n over 2 plus c n squared. Let me just call that c-- no need for the brackets. So constant c times n squared. So if you had a crummy merge routine, and it was taking n square, and you coded it up wrong. It's not a great motivation for this recurrence, but it's a way this recurrence could have come up. So what does this recursive tree look like? Well it looks kind of the same, obviously. You have c n square; you have c n square divided by 4; c n square divided by 4; c n square divided by 16, four times. Looking a little bit different from the other one. The levels and the leaves are exactly the same. Eventually n is going to go down to 1. So you will see c all the way here. And you're going to have n leaves. And you will have, as before, 1 plus log n levels.",
            "metrics": {
                "relativeDCReadability": 1.0209343100419326,
                "lexicalDiversity": 0.5145631067961165,
                "posComposition": {
                    "CC": 0.053,
                    "PRP": 0.078,
                    "MD": 0.024,
                    "VB": 0.053,
                    "IN": 0.097,
                    "DT": 0.107,
                    "NN": 0.136,
                    "VBN": 0.034,
                    "NNS": 0.053,
                    "JJ": 0.102,
                    "NNP": 0.039,
                    "POS": 0.005,
                    "CD": 0.044,
                    "VBD": 0.024,
                    "RB": 0.049,
                    ":": 0.005,
                    "VBG": 0.019,
                    "RP": 0.01,
                    "VBZ": 0.024,
                    "WP": 0.005,
                    "VBP": 0.019,
                    "TO": 0.015,
                    "PDT": 0.005
                },
                "syllableRate": 2.2,
                "topicScores": [
                    [
                        "n",
                        0.23269621201604204
                    ],
                    [
                        "square",
                        0.26308485389630243
                    ],
                    [
                        "c",
                        0.2887548396087686
                    ],
                    [
                        "look",
                        0.3479929708334379
                    ],
                    [
                        "T",
                        0.35095224895391575
                    ],
                    [
                        "recurrence",
                        0.4483306864463438
                    ],
                    [
                        "complexity",
                        0.5307910297674924
                    ],
                    [
                        "time",
                        0.5629302320545106
                    ],
                    [
                        "tree",
                        0.5667817497377168
                    ],
                    [
                        "level",
                        0.5721954500007636
                    ],
                    [
                        "leave",
                        0.5759852408573674
                    ],
                    [
                        "way",
                        0.5768392907232619
                    ],
                    [
                        "recursion",
                        0.8321017106241678
                    ],
                    [
                        "overall",
                        0.8712227560719475
                    ],
                    [
                        "bracket",
                        0.8824675872093969
                    ],
                    [
                        "wrong",
                        0.8967527224200822
                    ],
                    [
                        "constant",
                        0.9097068114193644
                    ],
                    [
                        "need",
                        0.910870410939704
                    ],
                    [
                        "merge",
                        0.9146963040287241
                    ],
                    [
                        "routine",
                        0.9146963040287241
                    ],
                    [
                        "crummy",
                        0.9220085037030905
                    ],
                    [
                        "great",
                        0.9254553672152513
                    ],
                    [
                        "motivation",
                        0.9254553672152513
                    ],
                    [
                        "recursive",
                        0.9281546679930828
                    ],
                    [
                        "little",
                        0.9336867528247321
                    ],
                    [
                        "bit",
                        0.9336867528247321
                    ],
                    [
                        "different",
                        0.9336867528247321
                    ],
                    [
                        "log",
                        0.9388950190581913
                    ],
                    [
                        "overall complexity",
                        2.7445562401080648
                    ],
                    [
                        "recursion tree",
                        2.9603978472208454
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "n",
                        0.23269621201604204
                    ],
                    [
                        "square",
                        0.26308485389630243
                    ],
                    [
                        "c",
                        0.2887548396087686
                    ],
                    [
                        "look",
                        0.3479929708334379
                    ],
                    [
                        "recurrence",
                        0.4483306864463438
                    ],
                    [
                        "complexity",
                        0.5307910297674924
                    ],
                    [
                        "time",
                        0.5629302320545106
                    ],
                    [
                        "constant",
                        0.9097068114193644
                    ],
                    [
                        "merge",
                        0.9146963040287241
                    ],
                    [
                        "log",
                        0.9388950190581913
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-2880": {
            "id": "Kg4bqzAqRBM-2880",
            "heat": 0.249,
            "start": 2880.0,
            "text": " Everything is the same. And this is why I like this recursive tree formulation so much because, now, all I have to do is add up the work associated with each of the levels to get the solution to the recurrence. Now, take a look at what happens, here. c n square; c n square divided by 2; c n square divided by 4. And this is n times c. So what does that add up to? AUDIENCE: [INAUDIBLE] PROFESSOR: Yeah, exactly. Exactly right. So if you look at what happens, here, this dominates. All of the other things are actually less than that. And you said bounded by two c n square because this part is bounded by c n square and I already have c n square up at the top. So this particular algorithm that corresponds to this crummy merge sort, or wherever this recurrence came from, is a theta n squared algorithm. And in this case, all of the work done is at the root-- at the top level of the recursion. Here, there was a roughly equal amount of work done in each of the different levels. Here, all of the work was done at the root. And so to close up shop, here, let me just give you real quick a recurrence where",
            "metrics": {
                "relativeDCReadability": 0.9864493176389166,
                "lexicalDiversity": 0.45454545454545453,
                "posComposition": {
                    "NN": 0.132,
                    "VBZ": 0.055,
                    "DT": 0.159,
                    "JJ": 0.077,
                    "CC": 0.032,
                    "WRB": 0.009,
                    "PRP": 0.032,
                    "VBP": 0.032,
                    "RB": 0.095,
                    "IN": 0.118,
                    "TO": 0.027,
                    "VB": 0.041,
                    "RP": 0.014,
                    "VBN": 0.041,
                    "NNS": 0.05,
                    "WP": 0.014,
                    "CD": 0.014,
                    "NNP": 0.018,
                    "JJR": 0.005,
                    "VBD": 0.023,
                    "WDT": 0.005,
                    ":": 0.005,
                    "EX": 0.005
                },
                "syllableRate": 2.442,
                "topicScores": [
                    [
                        "n",
                        0.27646312527263883
                    ],
                    [
                        "square",
                        0.2884334158393191
                    ],
                    [
                        "c",
                        0.30078471202180057
                    ],
                    [
                        "work",
                        0.3759911429452321
                    ],
                    [
                        "level",
                        0.44772147202598045
                    ],
                    [
                        "recurrence",
                        0.454354897509067
                    ],
                    [
                        "look",
                        0.562495029915947
                    ],
                    [
                        "audience",
                        0.5665779376245458
                    ],
                    [
                        "algorithm",
                        0.582287327934029
                    ],
                    [
                        "INAUDIBLE",
                        0.6150104885106618
                    ],
                    [
                        "PROFESSOR",
                        0.6150104885106618
                    ],
                    [
                        "recursive",
                        0.8819087831887439
                    ],
                    [
                        "tree",
                        0.8819087831887439
                    ],
                    [
                        "formulation",
                        0.8819087831887439
                    ],
                    [
                        "solution",
                        0.8819087831887439
                    ],
                    [
                        "right",
                        0.8979978084993019
                    ],
                    [
                        "time",
                        0.909396756028741
                    ],
                    [
                        "recursion",
                        0.9163857114679116
                    ],
                    [
                        "root",
                        0.9184301119291896
                    ],
                    [
                        "merge",
                        0.930938247154391
                    ],
                    [
                        "sort",
                        0.930938247154391
                    ],
                    [
                        "case",
                        0.9319270241728502
                    ],
                    [
                        "different",
                        0.9328152627613419
                    ],
                    [
                        "shop",
                        0.9343507788123849
                    ],
                    [
                        "thing",
                        0.9350828721745917
                    ],
                    [
                        "particular",
                        0.9372492344654665
                    ],
                    [
                        "crummy",
                        0.9372492344654665
                    ],
                    [
                        "theta",
                        0.9372492344654665
                    ],
                    [
                        "equal",
                        0.9389659705067843
                    ],
                    [
                        "quick",
                        0.9403698975742778
                    ]
                ],
                "topTopicSimilarity": 0.5,
                "sharedTopicScores": [
                    [
                        "n",
                        0.27646312527263883
                    ],
                    [
                        "square",
                        0.2884334158393191
                    ],
                    [
                        "c",
                        0.30078471202180057
                    ],
                    [
                        "work",
                        0.3759911429452321
                    ],
                    [
                        "recurrence",
                        0.454354897509067
                    ],
                    [
                        "look",
                        0.562495029915947
                    ],
                    [
                        "audience",
                        0.5665779376245458
                    ],
                    [
                        "algorithm",
                        0.582287327934029
                    ],
                    [
                        "PROFESSOR",
                        0.6150104885106618
                    ],
                    [
                        "right",
                        0.8979978084993019
                    ],
                    [
                        "time",
                        0.909396756028741
                    ],
                    [
                        "merge",
                        0.930938247154391
                    ],
                    [
                        "sort",
                        0.930938247154391
                    ],
                    [
                        "thing",
                        0.9350828721745917
                    ],
                    [
                        "theta",
                        0.9372492344654665
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-2970": {
            "id": "Kg4bqzAqRBM-2970",
            "heat": 0.378,
            "start": 2970.0,
            "text": " all of the work is done at the leaves, just for closure. So if I had, magically, a merge routine that actually happened in constant time, either through buggy analysis, or because of it was buggy, then what does the tree look like for that? And I can think of this as being theta 1. Or I can think of this as being just a constant c. I'll stick with that. So I have c, c, c. Woah, I tried to move that up. That doesn't work. So I have n leaves, as before. And so if I look at what I have, here, I have c at the top level. I have 2c, and so on and so forth. 4c. And then I go all the way down to nc. And so what happens here is this dominates. And so, in this recurrence, the whole thing runs in theta n. So the solution to that is theta n. And what you have here is all of the work being done at the leaves. We're not going to really cover this theorem that gives you a mechanical way of figuring this out because we think",
            "metrics": {
                "relativeDCReadability": 0.9399650327871194,
                "lexicalDiversity": 0.35353535353535354,
                "posComposition": {
                    "DT": 0.126,
                    "IN": 0.146,
                    "NN": 0.091,
                    "VBZ": 0.04,
                    "VBN": 0.02,
                    "NNS": 0.03,
                    "RB": 0.101,
                    "PRP": 0.086,
                    "VBD": 0.02,
                    "WDT": 0.01,
                    "JJ": 0.071,
                    "CC": 0.056,
                    "WP": 0.02,
                    "MD": 0.015,
                    "VB": 0.03,
                    "VBG": 0.025,
                    "CD": 0.015,
                    "NNP": 0.01,
                    "VBP": 0.051,
                    "TO": 0.02,
                    "RP": 0.01,
                    "PDT": 0.005
                },
                "syllableRate": 2.008,
                "topicScores": [
                    [
                        "work",
                        0.42103590086872333
                    ],
                    [
                        "leave",
                        0.42942710347585267
                    ],
                    [
                        "c",
                        0.43305527189765664
                    ],
                    [
                        "theta",
                        0.4359506110813928
                    ],
                    [
                        "buggy",
                        0.5345905160730846
                    ],
                    [
                        "n.",
                        0.5401845033188475
                    ],
                    [
                        "constant",
                        0.5466322605976218
                    ],
                    [
                        "way",
                        0.5800991028167916
                    ],
                    [
                        "Woah",
                        0.6068104911686562
                    ],
                    [
                        "closure",
                        0.7726462374729749
                    ],
                    [
                        "merge",
                        0.8632833803901875
                    ],
                    [
                        "time",
                        0.8632833803901875
                    ],
                    [
                        "analysis",
                        0.8632833803901875
                    ],
                    [
                        "4c",
                        0.8674154740261625
                    ],
                    [
                        "routine",
                        0.8743975108827224
                    ],
                    [
                        "tree",
                        0.8743975108827224
                    ],
                    [
                        "level",
                        0.8985667916789084
                    ],
                    [
                        "nc",
                        0.9061467668955775
                    ],
                    [
                        "recurrence",
                        0.9254523633609772
                    ],
                    [
                        "thing",
                        0.9319111906846574
                    ],
                    [
                        "solution",
                        0.9329904737986305
                    ],
                    [
                        "theorem",
                        0.9348156178617176
                    ],
                    [
                        "mechanical",
                        0.9348156178617176
                    ],
                    [
                        "c. Woah",
                        1.1350108273690174
                    ],
                    [
                        "theta n.",
                        1.8579211680980126
                    ],
                    [
                        "buggy analysis",
                        2.723911022661014
                    ],
                    [
                        "constant time",
                        2.967332967222882
                    ],
                    [
                        "merge routine",
                        3.079182462971204
                    ],
                    [
                        "mechanical way",
                        6.117564425811315
                    ]
                ],
                "topTopicSimilarity": 0.27586206896551724,
                "sharedTopicScores": [
                    [
                        "work",
                        0.42103590086872333
                    ],
                    [
                        "c",
                        0.43305527189765664
                    ],
                    [
                        "theta",
                        0.4359506110813928
                    ],
                    [
                        "constant",
                        0.5466322605976218
                    ],
                    [
                        "merge",
                        0.8632833803901875
                    ],
                    [
                        "time",
                        0.8632833803901875
                    ],
                    [
                        "recurrence",
                        0.9254523633609772
                    ],
                    [
                        "thing",
                        0.9319111906846574
                    ]
                ]
            }
        },
        "Kg4bqzAqRBM-3060": {
            "id": "Kg4bqzAqRBM-3060",
            "heat": 0.5,
            "start": 3060.0,
            "text": " the recursive tree is a better way of looking at. But you can see that, depending on what that function is, in terms of the work being done in the merge routine, you'd have different versions of recurrences. I'll stick around, and people who answered questions, please pick up you cushions. See you next time.",
            "metrics": {
                "relativeDCReadability": 0.7517687192916036,
                "lexicalDiversity": 0.5087719298245614,
                "posComposition": {
                    "DT": 0.088,
                    "JJ": 0.053,
                    "NN": 0.123,
                    "VBZ": 0.035,
                    "JJR": 0.018,
                    "IN": 0.14,
                    "VBG": 0.053,
                    "CC": 0.035,
                    "PRP": 0.088,
                    "MD": 0.053,
                    "VB": 0.088,
                    "WP": 0.035,
                    "NNS": 0.105,
                    "VBN": 0.018,
                    "RP": 0.035,
                    "VBD": 0.018,
                    "VBP": 0.018
                },
                "syllableRate": 0.633,
                "topicScores": [
                    [
                        "recurrence",
                        0.7885326995052035
                    ],
                    [
                        "recursive",
                        0.794716419991299
                    ],
                    [
                        "cushion",
                        0.819226187456501
                    ],
                    [
                        "tree",
                        0.8240763900967011
                    ],
                    [
                        "well",
                        0.8240763900967011
                    ],
                    [
                        "way",
                        0.8240763900967011
                    ],
                    [
                        "time",
                        0.8363091656678112
                    ],
                    [
                        "function",
                        0.8535088131875905
                    ],
                    [
                        "term",
                        0.8535088131875905
                    ],
                    [
                        "merge",
                        0.8535088131875905
                    ],
                    [
                        "routine",
                        0.8535088131875905
                    ],
                    [
                        "work",
                        0.8757745853033416
                    ],
                    [
                        "different",
                        0.8757745853033416
                    ],
                    [
                        "version",
                        0.8757745853033416
                    ],
                    [
                        "people",
                        0.8762513761833989
                    ],
                    [
                        "question",
                        0.8762513761833989
                    ],
                    [
                        "recursive tree",
                        1.8977699103469758
                    ],
                    [
                        "well way",
                        2.1162540063730946
                    ],
                    [
                        "merge routine",
                        2.68293324498492
                    ],
                    [
                        "different version",
                        3.291497831830986
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "recurrence",
                        0.7885326995052035
                    ],
                    [
                        "time",
                        0.8363091656678112
                    ],
                    [
                        "merge",
                        0.8535088131875905
                    ],
                    [
                        "work",
                        0.8757745853033416
                    ]
                ]
            }
        }
    }
}