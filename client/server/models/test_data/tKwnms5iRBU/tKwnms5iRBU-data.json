{
    "metadata": {
        "id": "tKwnms5iRBU",
        "avgHeat": 0.35,
        "runtime": 4929.429999999999,
        "dale-challReadabilityScore": 8.232423828122597,
        "lexicalDiversity": 0.49439762941013055,
        "posComposition": {
            "DT": 0.114,
            "JJ": 0.07,
            "NN": 0.146,
            "VBZ": 0.05,
            "VBN": 0.012,
            "IN": 0.105,
            "NNP": 0.043,
            "PRP$": 0.004,
            "MD": 0.017,
            "VB": 0.054,
            "VBP": 0.055,
            "TO": 0.03,
            "NNS": 0.027,
            "CC": 0.034,
            "VBD": 0.01,
            "POS": 0.004,
            "PRP": 0.078,
            "RB": 0.066,
            "CD": 0.015,
            "WP": 0.005,
            "VBG": 0.024,
            "WDT": 0.012,
            "RBS": 0.0,
            ":": 0.005,
            "JJS": 0.002,
            "WRB": 0.004,
            "PDT": 0.001,
            "UH": 0.0,
            "JJR": 0.004,
            "RP": 0.002,
            "EX": 0.004,
            "RBR": 0.002,
            "NNPS": 0.0,
            "FW": 0.0
        },
        "syllableRate": 2.975,
        "topicScores": [
            [
                "S",
                0.05100626322704914
            ],
            [
                "T",
                0.05722593061243812
            ],
            [
                "ok",
                0.06051023895422691
            ],
            [
                "edge",
                0.07357316347599885
            ],
            [
                "T star",
                0.07599691963601797
            ],
            [
                "minimum",
                0.077474316905507
            ],
            [
                "tree",
                0.07981960105804387
            ],
            [
                "weight",
                0.10803886295473394
            ],
            [
                "vertex",
                0.11526871577975042
            ],
            [
                "minimum spanning",
                0.12020306656746578
            ],
            [
                "T prime",
                0.12450851441361266
            ],
            [
                "spanning tree",
                0.12450893570374331
            ],
            [
                "Dijkstra",
                0.1245353860115137
            ],
            [
                "capital S",
                0.1297416733077586
            ],
            [
                "algorithm",
                0.13095429322171162
            ],
            [
                "minimum weight",
                0.13308731746553196
            ],
            [
                "minimum spanning tree",
                0.133256144404148
            ],
            [
                "cut",
                0.1336151843502217
            ],
            [
                "tree T",
                0.13722464776244123
            ],
            [
                "S. OK",
                0.14455363688940995
            ],
            [
                "weight edge",
                0.14588628959706454
            ],
            [
                "V",
                0.14852166877460157
            ],
            [
                "ERIK DEMAINE",
                0.14943223830921296
            ],
            [
                "graph",
                0.1501583612684851
            ],
            [
                "greedy",
                0.15171265945947168
            ],
            [
                "set",
                0.1564353400276083
            ],
            [
                "thing",
                0.15698853799551374
            ],
            [
                "minimum weight edge",
                0.15716098701544517
            ],
            [
                "like",
                0.16043510244018086
            ],
            [
                "find",
                0.1635192640571153
            ]
        ],
        "topicsList": [
            "S",
            "T",
            "ok",
            "edge",
            "T star",
            "minimum",
            "tree",
            "weight",
            "vertex",
            "minimum spanning",
            "T prime",
            "spanning tree",
            "Dijkstra",
            "capital S",
            "algorithm",
            "minimum weight",
            "minimum spanning tree",
            "cut",
            "tree T",
            "S. OK",
            "weight edge",
            "V",
            "ERIK DEMAINE",
            "graph",
            "greedy",
            "set",
            "thing",
            "minimum weight edge",
            "like",
            "find"
        ]
    },
    "chunks": {
        "tKwnms5iRBU-0": {
            "id": "tKwnms5iRBU-0",
            "heat": 0.1,
            "start": 0.0,
            "text": " The following content is provided under a Creative Commons license. Your support will help MIT OpenCourseWare continue to offer high quality educational resources for free. To make a donation or view additional materials from hundreds of MIT courses, visit MIT OpenCourseWare at ocw.mit.edu. ERIK DEMAINE: All right, let's get started. Today, we have another cool graph algorithm or problem. Actually, we'll have two algorithms. The problem is called minimum spanning tree. You can probably guess from the title what it's trying to do. We'll see two algorithms for doing it. Both of them are in the category of greedy algorithms, which is something we've seen a couple of times already in 6.046, starting with lecture 1. This is the definition of greedy algorithm from lecture 1, roughly. The idea is to always make greedy choices, meaning the choice is locally best. For right now, it seems like a good thing to do, but maybe in the future it will screw you over. And if you have a correct greedy algorithm, you prove that it won't screw you over. So it's sort of like Cookie Monster here, always locally seems like a good idea to eat another cookie, but maybe it'll bite you in the future. So today we will embrace our inner Cookie Monster and eat as many-- eat the largest cookie first, would be the standard algorithm for Cookie Monster. I don't know if you learned that in Sesame Street,",
            "metrics": {
                "relativeDCReadability": 1.020575567164531,
                "lexicalDiversity": 0.5697211155378487,
                "posComposition": {
                    "DT": 0.084,
                    "JJ": 0.06,
                    "NN": 0.151,
                    "VBZ": 0.04,
                    "VBN": 0.016,
                    "IN": 0.131,
                    "NNP": 0.072,
                    "PRP$": 0.008,
                    "MD": 0.036,
                    "VB": 0.068,
                    "VBP": 0.036,
                    "TO": 0.024,
                    "NNS": 0.028,
                    "CC": 0.024,
                    "VBD": 0.012,
                    "POS": 0.004,
                    "PRP": 0.084,
                    "RB": 0.068,
                    "CD": 0.02,
                    "WP": 0.004,
                    "VBG": 0.016,
                    "WDT": 0.004,
                    "RBS": 0.004,
                    ":": 0.004,
                    "JJS": 0.004
                },
                "syllableRate": 3.3,
                "topicScores": [
                    [
                        "Creative Commons",
                        0.21656859695992162
                    ],
                    [
                        "MIT",
                        0.264870272978438
                    ],
                    [
                        "algorithm",
                        0.2944432606145612
                    ],
                    [
                        "Creative Commons license",
                        0.2983964224357062
                    ],
                    [
                        "Monster",
                        0.32366687973666036
                    ],
                    [
                        "Cookie",
                        0.33236264600797355
                    ],
                    [
                        "greedy",
                        0.37324903409036686
                    ],
                    [
                        "Cookie Monster",
                        0.3776535539432034
                    ],
                    [
                        "ERIK DEMAINE",
                        0.43155913024794845
                    ],
                    [
                        "good",
                        0.4333068696445223
                    ],
                    [
                        "MIT OpenCourseWare",
                        0.5022541977057061
                    ],
                    [
                        "today",
                        0.5434736480872533
                    ],
                    [
                        "problem",
                        0.5499388514372605
                    ],
                    [
                        "future",
                        0.5521967922189547
                    ],
                    [
                        "lecture",
                        0.5537645656615232
                    ],
                    [
                        "idea",
                        0.5649068417598391
                    ],
                    [
                        "choice",
                        0.5751559555665868
                    ],
                    [
                        "Street",
                        0.6669903813355612
                    ],
                    [
                        "Sesame",
                        0.6929701620611964
                    ],
                    [
                        "following",
                        0.7927560781525047
                    ],
                    [
                        "content",
                        0.8076262267992761
                    ],
                    [
                        "free",
                        0.82494980648764
                    ],
                    [
                        "ocw.mit.edu",
                        0.8513539413283863
                    ],
                    [
                        "support",
                        0.8520053533310256
                    ],
                    [
                        "Sesame Street",
                        0.8594426222637345
                    ],
                    [
                        "high",
                        0.863357017212422
                    ],
                    [
                        "quality",
                        0.863357017212422
                    ],
                    [
                        "educational",
                        0.863357017212422
                    ],
                    [
                        "resource",
                        0.863357017212422
                    ],
                    [
                        "MIT course",
                        0.8639154207916292
                    ]
                ],
                "topTopicSimilarity": 0.1,
                "sharedTopicScores": [
                    [
                        "algorithm",
                        0.2944432606145612
                    ],
                    [
                        "greedy",
                        0.37324903409036686
                    ],
                    [
                        "ERIK DEMAINE",
                        0.43155913024794845
                    ]
                ]
            }
        },
        "tKwnms5iRBU-90": {
            "id": "tKwnms5iRBU-90",
            "heat": 0.1,
            "start": 90.0,
            "text": " but-- all right. So what's the problem? Minimum spanning tree. Can anyone tell me what a tree is? Formally, not the outside thing. In graph land. Acyclic graph, close. Connected acyclic graph, good. That's important. This is 604.2 stuff. OK, so how about a spanning tree? Sorry? AUDIENCE: It contains all the vertices. ERIK DEMAINE: It contains all the vertices. Yeah. So let me go over here. Spanning means it contains all the vertices, so implicit here, I guess, is subtree or subgraph. You're given a graph. You want a spanning tree of that graph. It's going to be a tree that lives inside the graph. So we're going to take some of the edges of G, make a tree out of them, make a connected acyclic graph. And that tree should hit all the vertices in G. So this is going to be a subset of the edges, or subgraph.",
            "metrics": {
                "relativeDCReadability": 1.0039005963691452,
                "lexicalDiversity": 0.5095541401273885,
                "posComposition": {
                    "CC": 0.025,
                    ":": 0.006,
                    "DT": 0.146,
                    "RB": 0.045,
                    "NNP": 0.089,
                    "WP": 0.013,
                    "VBZ": 0.089,
                    "NN": 0.134,
                    "VBG": 0.038,
                    "VB": 0.045,
                    "PRP": 0.07,
                    "JJ": 0.038,
                    "IN": 0.089,
                    "VBN": 0.019,
                    "VBD": 0.006,
                    "CD": 0.006,
                    "WRB": 0.006,
                    "PDT": 0.025,
                    "NNS": 0.038,
                    "VBP": 0.038,
                    "TO": 0.019,
                    "WDT": 0.006,
                    "MD": 0.006
                },
                "syllableRate": 1.767,
                "topicScores": [
                    [
                        "graph",
                        0.29282592455714396
                    ],
                    [
                        "tree",
                        0.2930779349736895
                    ],
                    [
                        "vertex",
                        0.3629534360461103
                    ],
                    [
                        "subgraph",
                        0.5462993668093831
                    ],
                    [
                        "acyclic",
                        0.5539059091613714
                    ],
                    [
                        "connected",
                        0.5627608059929503
                    ],
                    [
                        "edge",
                        0.5722098956628985
                    ],
                    [
                        "audience",
                        0.6134135315376982
                    ],
                    [
                        "ERIK",
                        0.6500234503773057
                    ],
                    [
                        "DEMAINE",
                        0.6500234503773057
                    ],
                    [
                        "G.",
                        0.6837422863168444
                    ],
                    [
                        "ERIK DEMAINE",
                        0.7316931471294792
                    ],
                    [
                        "problem",
                        0.8506200382563551
                    ],
                    [
                        "minimum",
                        0.8737447385748114
                    ],
                    [
                        "spanning",
                        0.8836566203879075
                    ],
                    [
                        "sorry",
                        0.8897375815489326
                    ],
                    [
                        "thing",
                        0.894515590382923
                    ],
                    [
                        "close",
                        0.8957982256120177
                    ],
                    [
                        "good",
                        0.8994547542820326
                    ],
                    [
                        "land",
                        0.9002524876950241
                    ],
                    [
                        "outside",
                        0.910492457725128
                    ],
                    [
                        "important",
                        0.9106816859188518
                    ],
                    [
                        "stuff",
                        0.9129581936191808
                    ],
                    [
                        "implicit",
                        0.930278210008932
                    ],
                    [
                        "subtree",
                        0.9358285766573639
                    ],
                    [
                        "subset",
                        0.9435984297218197
                    ],
                    [
                        "acyclic graph",
                        2.1270316424415525
                    ],
                    [
                        "connected acyclic",
                        2.2774520766821076
                    ],
                    [
                        "minimum spanning",
                        3.387703111851836
                    ],
                    [
                        "spanning tree",
                        3.4831142454826667
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "graph",
                        0.29282592455714396
                    ],
                    [
                        "tree",
                        0.2930779349736895
                    ],
                    [
                        "vertex",
                        0.3629534360461103
                    ],
                    [
                        "edge",
                        0.5722098956628985
                    ],
                    [
                        "ERIK DEMAINE",
                        0.7316931471294792
                    ],
                    [
                        "minimum",
                        0.8737447385748114
                    ],
                    [
                        "thing",
                        0.894515590382923
                    ],
                    [
                        "minimum spanning",
                        3.387703111851836
                    ],
                    [
                        "spanning tree",
                        3.4831142454826667
                    ]
                ]
            }
        },
        "tKwnms5iRBU-180": {
            "id": "tKwnms5iRBU-180",
            "heat": 0.19,
            "start": 180.0,
            "text": " Those edges should form a tree. And, I'll say, hit all vertices of G. OK, if I just said they should form a tree, then I could say, well, I'll take no edges, and here's a tree with one vertex. That's not very interesting. You want a vertex-- you want, basically, the vertex set of the tree to be the same as the vertex set of the graph. That's the spanning property. But you still want it to be a tree, so you want it to be connected and you want it to be acyclic. Now if G is disconnected, this is impossible. And for that, you could define a spanning forest to be like a maximal thing like this, but we'll focus on the case here as G is connected. That's the interesting case. And so we can get a spanning tree. All right? So what is this minimum spanning tree problem? Minimum spanning tree. We're given a weighted graph, just like last time, with shortest paths. We have an edge weight function W giving me a real number, say,",
            "metrics": {
                "relativeDCReadability": 0.8820689394519737,
                "lexicalDiversity": 0.4842105263157895,
                "posComposition": {
                    "DT": 0.142,
                    "NNS": 0.021,
                    "MD": 0.042,
                    "VB": 0.074,
                    "NN": 0.153,
                    "CC": 0.037,
                    "PRP": 0.1,
                    "IN": 0.084,
                    "NNP": 0.042,
                    "RB": 0.063,
                    "VBD": 0.005,
                    "VBZ": 0.042,
                    "CD": 0.005,
                    "WDT": 0.011,
                    "VBG": 0.021,
                    "VBP": 0.042,
                    ":": 0.005,
                    "TO": 0.026,
                    "JJ": 0.058,
                    "VBN": 0.021,
                    "WP": 0.005
                },
                "syllableRate": 2.042,
                "topicScores": [
                    [
                        "tree",
                        0.26652338592225633
                    ],
                    [
                        "vertex",
                        0.35483022243267603
                    ],
                    [
                        "G. OK",
                        0.3695100838563865
                    ],
                    [
                        "edge",
                        0.44316721554555716
                    ],
                    [
                        "set",
                        0.5360434696493019
                    ],
                    [
                        "interesting",
                        0.5545525210104433
                    ],
                    [
                        "spanning",
                        0.5562684849045537
                    ],
                    [
                        "case",
                        0.5589505242964624
                    ],
                    [
                        "graph",
                        0.5623685503509739
                    ],
                    [
                        "minimum",
                        0.5650925309108381
                    ],
                    [
                        "w",
                        0.6980537517511729
                    ],
                    [
                        "property",
                        0.8897884011930642
                    ],
                    [
                        "acyclic",
                        0.8957524304802291
                    ],
                    [
                        "impossible",
                        0.9002341303389801
                    ],
                    [
                        "problem",
                        0.9127135744184832
                    ],
                    [
                        "path",
                        0.9155590164968602
                    ],
                    [
                        "short",
                        0.9228035059767187
                    ],
                    [
                        "forest",
                        0.925473277473979
                    ],
                    [
                        "maximal",
                        0.925473277473979
                    ],
                    [
                        "thing",
                        0.925473277473979
                    ],
                    [
                        "weighted",
                        0.9291761361872174
                    ],
                    [
                        "time",
                        0.9291761361872174
                    ],
                    [
                        "real",
                        0.9301882499409901
                    ],
                    [
                        "number",
                        0.9301882499409901
                    ],
                    [
                        "function",
                        0.9357452834250003
                    ],
                    [
                        "spanning tree",
                        1.8421647666868546
                    ],
                    [
                        "vertex set",
                        2.333160182661304
                    ],
                    [
                        "tree problem",
                        3.368995001023474
                    ],
                    [
                        "interesting case",
                        3.5181620010883146
                    ],
                    [
                        "minimum spanning",
                        3.7542841836925764
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "tree",
                        0.26652338592225633
                    ],
                    [
                        "vertex",
                        0.35483022243267603
                    ],
                    [
                        "edge",
                        0.44316721554555716
                    ],
                    [
                        "set",
                        0.5360434696493019
                    ],
                    [
                        "graph",
                        0.5623685503509739
                    ],
                    [
                        "minimum",
                        0.5650925309108381
                    ],
                    [
                        "thing",
                        0.925473277473979
                    ],
                    [
                        "spanning tree",
                        1.8421647666868546
                    ],
                    [
                        "minimum spanning",
                        3.7542841836925764
                    ]
                ]
            }
        },
        "tKwnms5iRBU-270": {
            "id": "tKwnms5iRBU-270",
            "heat": 0.137,
            "start": 270.0,
            "text": " for every edge. And we want to find a spanning tree of minimum total weight. So I'm going to define the weight of a tree T to be the sum over all edges in T, because I'm viewing a spanning tree as a set of edges, of the weight of that edge. OK, so pretty much what you would expect. Minimum weight spanning tree. It's a relatively simple problem, but it's not so easy to find an algorithm. You need to prove a lot to make sure that you really find the right tree. I guess the really naive algorithm here would be to try all spanning trees, compute the weight of each spanning tree and return the minimum. That sounds reasonable. That's correct. But it's bad, because-- n to the fourth, that would be nice. It's larger than that.",
            "metrics": {
                "relativeDCReadability": 0.8819250689668006,
                "lexicalDiversity": 0.5202702702702703,
                "posComposition": {
                    "IN": 0.095,
                    "DT": 0.149,
                    "NN": 0.122,
                    "CC": 0.027,
                    "PRP": 0.074,
                    "VBP": 0.047,
                    "TO": 0.054,
                    "VB": 0.074,
                    "JJ": 0.108,
                    "VBG": 0.041,
                    "NNP": 0.027,
                    "NNS": 0.02,
                    "RB": 0.061,
                    "WP": 0.007,
                    "MD": 0.02,
                    "VBZ": 0.041,
                    "WDT": 0.014,
                    ":": 0.007,
                    "UH": 0.007,
                    "JJR": 0.007
                },
                "syllableRate": 1.625,
                "topicScores": [
                    [
                        "tree",
                        0.29956958981226367
                    ],
                    [
                        "weight",
                        0.334922946781072
                    ],
                    [
                        "edge",
                        0.37502485750258835
                    ],
                    [
                        "minimum",
                        0.4337480510241173
                    ],
                    [
                        "algorithm",
                        0.5667622982194019
                    ],
                    [
                        "T",
                        0.6116083412811818
                    ],
                    [
                        "total",
                        0.8809706361192049
                    ],
                    [
                        "reasonable",
                        0.8972602456146941
                    ],
                    [
                        "correct",
                        0.8994994352954441
                    ],
                    [
                        "nice",
                        0.9014295206788098
                    ],
                    [
                        "sum",
                        0.9034252582367399
                    ],
                    [
                        "spanning",
                        0.9034252582367399
                    ],
                    [
                        "set",
                        0.9034252582367399
                    ],
                    [
                        "simple",
                        0.9102047839324271
                    ],
                    [
                        "problem",
                        0.9102047839324271
                    ],
                    [
                        "right",
                        0.9134046438179145
                    ],
                    [
                        "easy",
                        0.9191203436383492
                    ],
                    [
                        "bad",
                        0.9215457179119664
                    ],
                    [
                        "because--",
                        0.9215457179119664
                    ],
                    [
                        "fourth",
                        0.9215457179119664
                    ],
                    [
                        "lot",
                        0.9220297123278913
                    ],
                    [
                        "sure",
                        0.9220297123278913
                    ],
                    [
                        "naive",
                        0.9243850889366709
                    ],
                    [
                        "large",
                        0.9306664745411093
                    ],
                    [
                        "tree t",
                        1.2935588834499472
                    ],
                    [
                        "minimum weight",
                        3.016810378163931
                    ],
                    [
                        "total weight",
                        3.2142882677616806
                    ],
                    [
                        "minimum total",
                        3.2415763126735606
                    ],
                    [
                        "spanning tree",
                        4.316779069797964
                    ],
                    [
                        "right tree",
                        4.582997958324291
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "tree",
                        0.29956958981226367
                    ],
                    [
                        "weight",
                        0.334922946781072
                    ],
                    [
                        "edge",
                        0.37502485750258835
                    ],
                    [
                        "minimum",
                        0.4337480510241173
                    ],
                    [
                        "algorithm",
                        0.5667622982194019
                    ],
                    [
                        "T",
                        0.6116083412811818
                    ],
                    [
                        "set",
                        0.9034252582367399
                    ],
                    [
                        "minimum weight",
                        3.016810378163931
                    ],
                    [
                        "spanning tree",
                        4.316779069797964
                    ]
                ]
            }
        },
        "tKwnms5iRBU-360": {
            "id": "tKwnms5iRBU-360",
            "heat": 0.183,
            "start": 360.0,
            "text": " Maybe not so obvious, but it can be exponential. Here's a graph where the number of spanning trees is exponential. This is a complete bipartite graph with two vertices on one side and n vertices on the other, and so you can-- let's say we put these two edges into the spanning tree. And now, for each of these vertices, we can choose whether it connects to the left vertex or the right vertix. It can only do one, but it could do either one independently. So maybe this guy chooses the left one, this one chooses the right one. This one chooses the left one, and so on. If I have n vertices down here, I have 2 to the n different spanning trees. So there can be an exponential number. So that algorithm is not so good. Exponential bad. Polynomial good. So today, we're going to get a polynomial algorithm. In fact, we will get an almost linear time algorithm as fast as Dijkstra's algorithm. But we can't use Dijkstra's algorithm, there's no shortest paths here. Plus, one of the algorithms will actually look pretty similar. Two lectures ago, the dynamic programming lecture, we saw an example where we tried to do greedy, and it gave the wrong answer, and so we fell back on dynamic programming.",
            "metrics": {
                "relativeDCReadability": 0.9572499790416799,
                "lexicalDiversity": 0.5154185022026432,
                "posComposition": {
                    "RB": 0.106,
                    "JJ": 0.106,
                    "CC": 0.044,
                    "PRP": 0.07,
                    "MD": 0.04,
                    "VB": 0.057,
                    "VBZ": 0.04,
                    "DT": 0.123,
                    "NN": 0.123,
                    "WRB": 0.009,
                    "IN": 0.07,
                    "VBG": 0.013,
                    "NNS": 0.04,
                    "CD": 0.057,
                    ":": 0.004,
                    "POS": 0.013,
                    "TO": 0.018,
                    "VBP": 0.013,
                    "RP": 0.004,
                    "EX": 0.009,
                    "NNP": 0.022,
                    "VBD": 0.018
                },
                "syllableRate": 2.767,
                "topicScores": [
                    [
                        "algorithm",
                        0.3227054511743867
                    ],
                    [
                        "vertex",
                        0.34190892572651593
                    ],
                    [
                        "exponential",
                        0.3565344603020956
                    ],
                    [
                        "Dijkstra",
                        0.4179582675331393
                    ],
                    [
                        "left",
                        0.42089916122411847
                    ],
                    [
                        "tree",
                        0.4273074825046341
                    ],
                    [
                        "good",
                        0.5451057066891308
                    ],
                    [
                        "graph",
                        0.5456115050549097
                    ],
                    [
                        "spanning",
                        0.5512266286110765
                    ],
                    [
                        "right",
                        0.5521815117694832
                    ],
                    [
                        "number",
                        0.5597282646623334
                    ],
                    [
                        "polynomial",
                        0.5640507758014448
                    ],
                    [
                        "programming",
                        0.571861705275065
                    ],
                    [
                        "dynamic",
                        0.5753471289743395
                    ],
                    [
                        "lecture",
                        0.5779245817700858
                    ],
                    [
                        "obvious",
                        0.8139884954029687
                    ],
                    [
                        "complete",
                        0.8974170501818188
                    ],
                    [
                        "bipartite",
                        0.8974170501818188
                    ],
                    [
                        "bad",
                        0.9045314958018541
                    ],
                    [
                        "edge",
                        0.9079413740224138
                    ],
                    [
                        "similar",
                        0.9190811155866989
                    ],
                    [
                        "guy",
                        0.9229650951823739
                    ],
                    [
                        "today",
                        0.9230865651985044
                    ],
                    [
                        "fact",
                        0.9241786012506253
                    ],
                    [
                        "different",
                        0.9279991770968598
                    ],
                    [
                        "path",
                        0.9313524088521108
                    ],
                    [
                        "greedy",
                        0.9329189543214224
                    ],
                    [
                        "wrong",
                        0.9329189543214224
                    ],
                    [
                        "answer",
                        0.9329189543214224
                    ],
                    [
                        "linear",
                        0.935984180494423
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "algorithm",
                        0.3227054511743867
                    ],
                    [
                        "vertex",
                        0.34190892572651593
                    ],
                    [
                        "Dijkstra",
                        0.4179582675331393
                    ],
                    [
                        "tree",
                        0.4273074825046341
                    ],
                    [
                        "graph",
                        0.5456115050549097
                    ],
                    [
                        "edge",
                        0.9079413740224138
                    ],
                    [
                        "greedy",
                        0.9329189543214224
                    ]
                ]
            }
        },
        "tKwnms5iRBU-450": {
            "id": "tKwnms5iRBU-450",
            "heat": 0.156,
            "start": 450.0,
            "text": " Today, we're going to try to do dynamic programming, it's going to fail, and we're going to fall back on greedy. It's like the reverse. But the way it's going to fail is we're going to get exponential time initially, and then greedy will let us get polynomial time. This is actually a bit unusual. I would say more typically, dynamic programming can solve anything, but, you know, with n to the seventh running time, something slow. And then you apply greedy, and you get down to like n or n log n running time. So that's more common. But today, we're going to go from exponential down to polynomial. And that's pretty nice. Cool. So let me tell you a little bit about greedy algorithm theory, so to speak. This is from the textbook. If your problem can be solved by greedy algorithm, usually you can prove two properties about that algorithm. One of them is called optimal substructure. And the other is called the greedy choice property. Optimal substructure should be familiar idea because it's essentially an encapsulation",
            "metrics": {
                "relativeDCReadability": 0.9783604374526662,
                "lexicalDiversity": 0.5526315789473685,
                "posComposition": {
                    "NN": 0.163,
                    "PRP": 0.089,
                    "VBP": 0.037,
                    "VBG": 0.042,
                    "TO": 0.058,
                    "VB": 0.095,
                    "JJ": 0.095,
                    "VBZ": 0.063,
                    "CC": 0.053,
                    "RB": 0.053,
                    "IN": 0.074,
                    "DT": 0.074,
                    "MD": 0.032,
                    "RBR": 0.005,
                    "NNS": 0.016,
                    "JJR": 0.005,
                    "NNP": 0.016,
                    "PRP$": 0.005,
                    "VBN": 0.016,
                    "CD": 0.011
                },
                "syllableRate": 2.417,
                "topicScores": [
                    [
                        "greedy",
                        0.3169460151652558
                    ],
                    [
                        "time",
                        0.355614218700506
                    ],
                    [
                        "today",
                        0.4014253338594277
                    ],
                    [
                        "algorithm",
                        0.43614485727265595
                    ],
                    [
                        "dynamic",
                        0.5231899404571431
                    ],
                    [
                        "programming",
                        0.5231899404571431
                    ],
                    [
                        "polynomial",
                        0.5465726954615154
                    ],
                    [
                        "bit",
                        0.556091794657167
                    ],
                    [
                        "optimal",
                        0.5565974723783405
                    ],
                    [
                        "substructure",
                        0.5565974723783405
                    ],
                    [
                        "exponential",
                        0.561296522848594
                    ],
                    [
                        "property",
                        0.5683217203451982
                    ],
                    [
                        "reverse",
                        0.8327975032967498
                    ],
                    [
                        "slow",
                        0.8700323772117383
                    ],
                    [
                        "unusual",
                        0.8721942084686463
                    ],
                    [
                        "way",
                        0.8889557708095506
                    ],
                    [
                        "common",
                        0.8923601474982625
                    ],
                    [
                        "nice",
                        0.8991757272738277
                    ],
                    [
                        "textbook",
                        0.9057213777907167
                    ],
                    [
                        "seventh",
                        0.9074891382884865
                    ],
                    [
                        "encapsulation",
                        0.9111939727232939
                    ],
                    [
                        "theory",
                        0.9192026663918208
                    ],
                    [
                        "choice",
                        0.9244800604917164
                    ],
                    [
                        "little",
                        0.9255641792452834
                    ],
                    [
                        "problem",
                        0.9283170500752275
                    ],
                    [
                        "familiar",
                        0.931363498818179
                    ],
                    [
                        "idea",
                        0.931363498818179
                    ],
                    [
                        "dynamic programming",
                        1.3889055355153097
                    ],
                    [
                        "greedy algorithm",
                        2.1875567678864822
                    ],
                    [
                        "optimal substructure",
                        2.2143304469201084
                    ]
                ],
                "topTopicSimilarity": 0.06666666666666667,
                "sharedTopicScores": [
                    [
                        "greedy",
                        0.3169460151652558
                    ],
                    [
                        "algorithm",
                        0.43614485727265595
                    ]
                ]
            }
        },
        "tKwnms5iRBU-540": {
            "id": "tKwnms5iRBU-540",
            "heat": 0.366,
            "start": 540.0,
            "text": " of dynamic programming. Greedy algorithms are, in some sense, a special form of dynamic programming. So this is saying something like, if you can solve subproblems optimally, smaller subproblems, or whatever, then you can solve your original problem. And this may happen recursively, whatever. That's essentially what makes a recurrence work for dynamic programming. And with dynamic programming, for this to be possible, we need to guess some feature of the solution. For example, in minimum spanning tree, maybe you guess one of the edges that's in the right answer. And then, once you do that, you can reduce it to some other subproblems. And if you can solve those subproblems, you combine them and get an optimal solution to your original thing. So this is a familiar property.",
            "metrics": {
                "relativeDCReadability": 1.0993191214617557,
                "lexicalDiversity": 0.4732824427480916,
                "posComposition": {
                    "IN": 0.137,
                    "JJ": 0.099,
                    "NN": 0.16,
                    "NNP": 0.008,
                    "VBP": 0.038,
                    "DT": 0.122,
                    "VBZ": 0.038,
                    "VBG": 0.008,
                    "PRP": 0.076,
                    "MD": 0.038,
                    "VB": 0.061,
                    "NNS": 0.031,
                    "RB": 0.053,
                    "JJR": 0.008,
                    "CC": 0.046,
                    "WDT": 0.015,
                    "PRP$": 0.015,
                    "WP": 0.008,
                    "TO": 0.031,
                    "CD": 0.008
                },
                "syllableRate": 1.758,
                "topicScores": [
                    [
                        "programming",
                        0.33399051938996405
                    ],
                    [
                        "dynamic",
                        0.33651559088415484
                    ],
                    [
                        "subproblem",
                        0.37293070521584265
                    ],
                    [
                        "original",
                        0.548353994340839
                    ],
                    [
                        "solution",
                        0.56082332197852
                    ],
                    [
                        "dynamic programming",
                        0.6622727333923113
                    ],
                    [
                        "greedy",
                        0.8470001984354232
                    ],
                    [
                        "algorithm",
                        0.8612344719408658
                    ],
                    [
                        "sense",
                        0.8736601077560677
                    ],
                    [
                        "special",
                        0.8736601077560677
                    ],
                    [
                        "small",
                        0.8749536423008689
                    ],
                    [
                        "form",
                        0.8845561943481384
                    ],
                    [
                        "answer",
                        0.8875087581991947
                    ],
                    [
                        "thing",
                        0.8935078006097067
                    ],
                    [
                        "property",
                        0.8958192780904901
                    ],
                    [
                        "example",
                        0.8984262831655281
                    ],
                    [
                        "possible",
                        0.9044951065547162
                    ],
                    [
                        "minimum",
                        0.9078778385120787
                    ],
                    [
                        "spanning",
                        0.9078778385120787
                    ],
                    [
                        "tree",
                        0.9078778385120787
                    ],
                    [
                        "right",
                        0.9078778385120787
                    ],
                    [
                        "recurrence",
                        0.9090303694926531
                    ],
                    [
                        "work",
                        0.9090303694926531
                    ],
                    [
                        "feature",
                        0.9129966825154711
                    ],
                    [
                        "familiar",
                        0.9148279637226834
                    ],
                    [
                        "edge",
                        0.9161062228386205
                    ],
                    [
                        "optimal",
                        0.9207164307793584
                    ],
                    [
                        "greedy algorithm",
                        2.6963898984180026
                    ],
                    [
                        "original problem",
                        2.985585550750196
                    ],
                    [
                        "small subproblem",
                        3.126065403813237
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "greedy",
                        0.8470001984354232
                    ],
                    [
                        "algorithm",
                        0.8612344719408658
                    ],
                    [
                        "thing",
                        0.8935078006097067
                    ],
                    [
                        "minimum",
                        0.9078778385120787
                    ],
                    [
                        "tree",
                        0.9078778385120787
                    ],
                    [
                        "edge",
                        0.9161062228386205
                    ]
                ]
            }
        },
        "tKwnms5iRBU-630": {
            "id": "tKwnms5iRBU-630",
            "heat": 0.201,
            "start": 630.0,
            "text": " I don't usually think of it this way for dynamic programming, but that is essentially what we're doing via guessing. But with greedy algorithms, we're not going to guess. We're just going to be greedy. Eat the largest cookie. And so that's the greedy choice property. This says that eating the largest cookie is actually a good thing to do. If we keep making locally optimal choices, will end up with a globally optimal solution. No tummy ache. This is something you wouldn't expect to be true in general, but it's going to be true for minimum spanning tree. And it's true for a handful of other problems. You'll see a bunch more in recitation tomorrow. This is sort of general theory, but I'm actually going to have a theorem like this for minimum spanning tree and a theorem like this for minimum spanning tree. This is the prototype, but most of today is all about minimum spanning tree.",
            "metrics": {
                "relativeDCReadability": 0.9376257197788694,
                "lexicalDiversity": 0.5029585798816568,
                "posComposition": {
                    "PRP": 0.065,
                    "VBP": 0.036,
                    "RB": 0.065,
                    "VB": 0.059,
                    "IN": 0.118,
                    "DT": 0.112,
                    "NN": 0.16,
                    "JJ": 0.118,
                    "CC": 0.047,
                    "VBZ": 0.059,
                    "WP": 0.006,
                    "VBG": 0.047,
                    "TO": 0.036,
                    "NNP": 0.012,
                    "JJS": 0.018,
                    "NNS": 0.012,
                    "MD": 0.018,
                    "RP": 0.006,
                    "RBR": 0.006
                },
                "syllableRate": 2.092,
                "topicScores": [
                    [
                        "tree",
                        0.346459946305354
                    ],
                    [
                        "minimum",
                        0.3536713212172589
                    ],
                    [
                        "spanning",
                        0.39982019481009534
                    ],
                    [
                        "greedy",
                        0.4051556356446957
                    ],
                    [
                        "true",
                        0.42775599516546836
                    ],
                    [
                        "large",
                        0.51187526551347
                    ],
                    [
                        "cookie",
                        0.5174536304741145
                    ],
                    [
                        "choice",
                        0.5433230154163383
                    ],
                    [
                        "theorem",
                        0.5516553386575294
                    ],
                    [
                        "general",
                        0.5549088991633517
                    ],
                    [
                        "optimal",
                        0.5553760566142502
                    ],
                    [
                        "dynamic",
                        0.7723250819747477
                    ],
                    [
                        "programming",
                        0.7723250819747477
                    ],
                    [
                        "way",
                        0.7882696623941641
                    ],
                    [
                        "algorithm",
                        0.8362085857038639
                    ],
                    [
                        "property",
                        0.861566738728611
                    ],
                    [
                        "solution",
                        0.8743094429643334
                    ],
                    [
                        "ache",
                        0.8786178549207018
                    ],
                    [
                        "problem",
                        0.8850296182883015
                    ],
                    [
                        "tomorrow",
                        0.8875019500892147
                    ],
                    [
                        "tummy",
                        0.8891406200046994
                    ],
                    [
                        "good",
                        0.8987930258242082
                    ],
                    [
                        "thing",
                        0.8987930258242082
                    ],
                    [
                        "spanning tree",
                        0.9016390388252228
                    ],
                    [
                        "recitation",
                        0.9059912468709328
                    ],
                    [
                        "theory",
                        0.9078094367195944
                    ],
                    [
                        "prototype",
                        0.909397127291535
                    ],
                    [
                        "handful",
                        0.9116663949639123
                    ],
                    [
                        "bunch",
                        0.913621832240891
                    ],
                    [
                        "today",
                        0.916776655682832
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "tree",
                        0.346459946305354
                    ],
                    [
                        "minimum",
                        0.3536713212172589
                    ],
                    [
                        "greedy",
                        0.4051556356446957
                    ],
                    [
                        "algorithm",
                        0.8362085857038639
                    ],
                    [
                        "thing",
                        0.8987930258242082
                    ],
                    [
                        "spanning tree",
                        0.9016390388252228
                    ]
                ]
            }
        },
        "tKwnms5iRBU-720": {
            "id": "tKwnms5iRBU-720",
            "heat": 0.168,
            "start": 720.0,
            "text": " And for minimum spanning tree, neither of these is very obvious. So I'm just going to show you these theorems. They're fairly easy to prove, in fact, but finding them is probably the tricky part. Actually, I guess optimal substructure is probably the least intuitive or the least obvious greedy choice. You're probably already thinking, what are good greedy choices? Minimum weight edge seems like a good starting point, which we will get to. But there's even a stronger version of that, which we will prove. And first, optimal substructure. So here, I'm going to think like a dynamic program. Let's suppose that we know an edge that's in our solution. Suppose we know an edge that lives in a minimum spanning tree. We could guess that. We're not going to, but we could. Either way, let's just suppose than an edge e-- I should mention, I guess I didn't say, this graph is undirected. A minimum spanning tree doesn't quite make sense with directed graphs. There are other versions of the problem but here, the graph is undirected. So probably, I should write this as a unordered set, u, v. And there are possibly many minimum spanning trees.",
            "metrics": {
                "relativeDCReadability": 1.001707344511843,
                "lexicalDiversity": 0.5497630331753555,
                "posComposition": {
                    "CC": 0.038,
                    "IN": 0.076,
                    "JJ": 0.109,
                    "NN": 0.161,
                    "DT": 0.085,
                    "VBZ": 0.047,
                    "RB": 0.085,
                    "PRP": 0.085,
                    "VBP": 0.052,
                    "VBG": 0.024,
                    "TO": 0.024,
                    "VB": 0.057,
                    "NNS": 0.019,
                    "NNP": 0.024,
                    "JJS": 0.009,
                    "WP": 0.005,
                    "WDT": 0.019,
                    "MD": 0.028,
                    "EX": 0.014,
                    "JJR": 0.005,
                    "POS": 0.009,
                    "PRP$": 0.005,
                    ":": 0.005,
                    "VBD": 0.005,
                    "VBN": 0.009
                },
                "syllableRate": 2.492,
                "topicScores": [
                    [
                        "minimum",
                        0.3333883812363139
                    ],
                    [
                        "tree",
                        0.36300881211045766
                    ],
                    [
                        "edge",
                        0.3822913937521128
                    ],
                    [
                        "graph",
                        0.43846623192629913
                    ],
                    [
                        "choice",
                        0.5184593867125721
                    ],
                    [
                        "undirected",
                        0.5361013579909703
                    ],
                    [
                        "obvious",
                        0.5363270405811656
                    ],
                    [
                        "spanning",
                        0.5419467122848288
                    ],
                    [
                        "greedy",
                        0.5436974106446657
                    ],
                    [
                        "substructure",
                        0.5471415516620514
                    ],
                    [
                        "optimal",
                        0.5528231221626438
                    ],
                    [
                        "good",
                        0.5678918353027503
                    ],
                    [
                        "version",
                        0.5738018361497584
                    ],
                    [
                        "theorem",
                        0.8477125837982262
                    ],
                    [
                        "fact",
                        0.8817765779482694
                    ],
                    [
                        "tricky",
                        0.8911364699496737
                    ],
                    [
                        "easy",
                        0.8994660678872562
                    ],
                    [
                        "program",
                        0.9088179286520918
                    ],
                    [
                        "intuitive",
                        0.9098013048272889
                    ],
                    [
                        "solution",
                        0.9111373037901658
                    ],
                    [
                        "weight",
                        0.9143506981658535
                    ],
                    [
                        "starting",
                        0.9143506981658535
                    ],
                    [
                        "point",
                        0.9143506981658535
                    ],
                    [
                        "dynamic",
                        0.9234312161878425
                    ],
                    [
                        "strong",
                        0.9245467152030474
                    ],
                    [
                        "way",
                        0.9246658948513113
                    ],
                    [
                        "unordered",
                        0.9335785208174145
                    ],
                    [
                        "set",
                        0.9335785208174145
                    ],
                    [
                        "sense",
                        0.937316656470813
                    ],
                    [
                        "problem",
                        0.9381392375415042
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "minimum",
                        0.3333883812363139
                    ],
                    [
                        "tree",
                        0.36300881211045766
                    ],
                    [
                        "edge",
                        0.3822913937521128
                    ],
                    [
                        "graph",
                        0.43846623192629913
                    ],
                    [
                        "greedy",
                        0.5436974106446657
                    ],
                    [
                        "weight",
                        0.9143506981658535
                    ],
                    [
                        "set",
                        0.9335785208174145
                    ]
                ]
            }
        },
        "tKwnms5iRBU-810": {
            "id": "tKwnms5iRBU-810",
            "heat": 0.1,
            "start": 810.0,
            "text": " There could be many solutions with the same weight. For example, if all of these edges have weight 1, all of these trees are actually minimum. If all the edges have weight 1, every spanning tree is minimum, because every spanning tree has exactly n minus 1 edges. But let's suppose we know an edge that's guaranteed to be in some minimum spanning tree, at least one. What I would like to do is take this, so let me draw a picture. I have a graph. We've identified some edge in the graph, e, that lives in some minimum spanning tree. I'm going to draw some kind of tree structure here. OK. The wiggly lines are the tree. There are some other edges in here, which I don't want to draw too many of them because it's ugly. Those are other edges in the graph. Who knows where they are? They could be all sorts of things. OK? But I've highlighted the graph in a particular way. Because the minimum spanning tree is a tree, if I delete e from the tree, then I get two components. Every edge I remove-- I'm minimally connected. So if I delete an edge, I disconnect into two parts,",
            "metrics": {
                "relativeDCReadability": 0.9799263219275486,
                "lexicalDiversity": 0.49065420560747663,
                "posComposition": {
                    "EX": 0.009,
                    "MD": 0.014,
                    "VB": 0.051,
                    "JJ": 0.07,
                    "NNS": 0.056,
                    "IN": 0.112,
                    "DT": 0.136,
                    "NN": 0.131,
                    "VBP": 0.089,
                    "VBN": 0.033,
                    "CD": 0.028,
                    "RB": 0.056,
                    "PDT": 0.005,
                    "VBZ": 0.042,
                    "CC": 0.014,
                    "POS": 0.005,
                    "PRP": 0.084,
                    "WDT": 0.014,
                    "TO": 0.019,
                    "JJS": 0.005,
                    "WP": 0.005,
                    "VBG": 0.005,
                    "NNP": 0.009,
                    "WRB": 0.005,
                    ":": 0.005
                },
                "syllableRate": 2.408,
                "topicScores": [
                    [
                        "tree",
                        0.25813570845594924
                    ],
                    [
                        "edge",
                        0.2720445755119296
                    ],
                    [
                        "minimum",
                        0.3285032684937738
                    ],
                    [
                        "ok",
                        0.3338816166499827
                    ],
                    [
                        "graph",
                        0.3795076474171043
                    ],
                    [
                        "weight",
                        0.3874367128290568
                    ],
                    [
                        "solution",
                        0.8469128285667659
                    ],
                    [
                        "example",
                        0.8731129378177073
                    ],
                    [
                        "picture",
                        0.9024217774292833
                    ],
                    [
                        "ugly",
                        0.9214011422841158
                    ],
                    [
                        "thing",
                        0.9254857318996828
                    ],
                    [
                        "way",
                        0.9274993992125864
                    ],
                    [
                        "component",
                        0.92836180325709
                    ],
                    [
                        "structure",
                        0.929277042462073
                    ],
                    [
                        "part",
                        0.9305283829073985
                    ],
                    [
                        "wiggly",
                        0.9332162383134712
                    ],
                    [
                        "kind",
                        0.9351528302262324
                    ],
                    [
                        "line",
                        0.9387863091590383
                    ],
                    [
                        "particular",
                        0.9398604784587735
                    ],
                    [
                        "sort",
                        0.9433494472211083
                    ],
                    [
                        "tree structure",
                        4.8770646333426555
                    ],
                    [
                        "particular way",
                        6.795449227923348
                    ],
                    [
                        "wiggly line",
                        7.070414561617161
                    ]
                ],
                "topTopicSimilarity": 0.30434782608695654,
                "sharedTopicScores": [
                    [
                        "tree",
                        0.25813570845594924
                    ],
                    [
                        "edge",
                        0.2720445755119296
                    ],
                    [
                        "minimum",
                        0.3285032684937738
                    ],
                    [
                        "ok",
                        0.3338816166499827
                    ],
                    [
                        "graph",
                        0.3795076474171043
                    ],
                    [
                        "weight",
                        0.3874367128290568
                    ],
                    [
                        "thing",
                        0.9254857318996828
                    ]
                ]
            }
        },
        "tKwnms5iRBU-900": {
            "id": "tKwnms5iRBU-900",
            "heat": 0.1,
            "start": 900.0,
            "text": " so I've drawn that as the left circle and the right circle. It's just a general way to think about a tree. Now there are other unused edges in this picture, who knows where they live? OK? What I would like to do is somehow simplify this graph and get a smaller problem, say a graph with fewer edges. Any suggestions on how to do that? I don't actually know where all these white edges are, but what I'd like to do is-- I'm supposing I know where e is, and that's an edge in my minimum spanning tree. So how could I get rid of it? Yeah. AUDIENCE: Find the minimum weight spanning tree of the two edges. ERIK DEMAINE: I'd like to divide and conquer. Maybe find the minimum weight over here, minimum weight over here. Of course, I don't know which nodes are in what side. So that's a little trickier. But what do I do but E itself? Let's start with that. Yeah. AUDIENCE: You remove it? ERIK DEMAINE: You could remove it. That's a good idea. Doesn't work, but worth a Frisbee nonetheless. If I delete this edge, one problem is maybe none of these red edges exist and then my graph is disconnected. Well, maybe that's actually a good case. That probably would be a good case. Then I know how to divide and conquer.",
            "metrics": {
                "relativeDCReadability": 0.960142857284285,
                "lexicalDiversity": 0.49795918367346936,
                "posComposition": {
                    "RB": 0.073,
                    "PRP": 0.082,
                    "VBP": 0.065,
                    "VBN": 0.008,
                    "IN": 0.078,
                    "DT": 0.106,
                    "JJ": 0.069,
                    "NN": 0.106,
                    "CC": 0.041,
                    "VBZ": 0.045,
                    "TO": 0.024,
                    "VB": 0.09,
                    "EX": 0.004,
                    "NNS": 0.029,
                    "WP": 0.02,
                    "WRB": 0.024,
                    "MD": 0.024,
                    "JJR": 0.008,
                    "PDT": 0.004,
                    ":": 0.004,
                    "VBG": 0.008,
                    "PRP$": 0.008,
                    "NNP": 0.057,
                    "CD": 0.008,
                    "WDT": 0.008,
                    "POS": 0.004
                },
                "syllableRate": 2.683,
                "topicScores": [
                    [
                        "edge",
                        0.29917778651617466
                    ],
                    [
                        "ERIK DEMAINE",
                        0.33723419481993056
                    ],
                    [
                        "audience",
                        0.3389860045612031
                    ],
                    [
                        "minimum",
                        0.37421994108850076
                    ],
                    [
                        "weight",
                        0.43061241506664333
                    ],
                    [
                        "good",
                        0.43374991610119173
                    ],
                    [
                        "tree",
                        0.4355973758670322
                    ],
                    [
                        "graph",
                        0.4567125223982821
                    ],
                    [
                        "circle",
                        0.4757205156045173
                    ],
                    [
                        "case",
                        0.5448643262440103
                    ],
                    [
                        "problem",
                        0.5727525015607859
                    ],
                    [
                        "Frisbee",
                        0.7057564675441934
                    ],
                    [
                        "right",
                        0.8130738721761476
                    ],
                    [
                        "left",
                        0.8251666970707703
                    ],
                    [
                        "general",
                        0.8765924682633703
                    ],
                    [
                        "way",
                        0.8765924682633703
                    ],
                    [
                        "picture",
                        0.8883420014694527
                    ],
                    [
                        "unused",
                        0.8961872127554724
                    ],
                    [
                        "small",
                        0.9069670869021297
                    ],
                    [
                        "few",
                        0.9069670869021297
                    ],
                    [
                        "suggestion",
                        0.9120933439108617
                    ],
                    [
                        "spanning",
                        0.9159384595983509
                    ],
                    [
                        "tricky",
                        0.9189078510366552
                    ],
                    [
                        "white",
                        0.9220149296265566
                    ],
                    [
                        "is--",
                        0.9220149296265566
                    ],
                    [
                        "idea",
                        0.9252248933354716
                    ],
                    [
                        "little",
                        0.9309659248669292
                    ],
                    [
                        "node",
                        0.9351833182129249
                    ],
                    [
                        "worth",
                        0.9368250234473523
                    ],
                    [
                        "red",
                        0.9418533871292764
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "edge",
                        0.29917778651617466
                    ],
                    [
                        "ERIK DEMAINE",
                        0.33723419481993056
                    ],
                    [
                        "minimum",
                        0.37421994108850076
                    ],
                    [
                        "weight",
                        0.43061241506664333
                    ],
                    [
                        "tree",
                        0.4355973758670322
                    ],
                    [
                        "graph",
                        0.4567125223982821
                    ]
                ]
            }
        },
        "tKwnms5iRBU-990": {
            "id": "tKwnms5iRBU-990",
            "heat": 0.209,
            "start": 990.0,
            "text": " I just look at the connected components. In general, if I delete the edge, and I have these red edges, then I maybe find a minimum spanning tree on what remains. Maybe I'll end up including one of these edges. Maybe this edge ends up in the spanning tree, and then I can't put E in. So it's a little awkward. Yeah? AUDIENCE: Can you merge the two nodes into one? Merge the two nodes into one. Yes. Purple Frisbee. Impressive. This is what we call contracting the edge. It just means merge the endpoints. Merge u and v. So I will draw a new version of the graph. So this was u and v before. You've got to put the label inside. And now we have a new vertex here, which is uv. Or you can think it as the set u, v. We won't really need to keep track of names. And whatever edges you had over here, you're going to have over here. OK? Just collapse u and v. The edge e disappears. And one other thing can happen.",
            "metrics": {
                "relativeDCReadability": 0.9796755598337155,
                "lexicalDiversity": 0.5,
                "posComposition": {
                    "PRP": 0.096,
                    "RB": 0.074,
                    "VBP": 0.053,
                    "IN": 0.09,
                    "DT": 0.106,
                    "JJ": 0.074,
                    "NNS": 0.048,
                    "NN": 0.112,
                    "CC": 0.043,
                    "WP": 0.011,
                    "VBZ": 0.032,
                    "MD": 0.032,
                    "VB": 0.053,
                    "RP": 0.016,
                    "VBG": 0.016,
                    "CD": 0.032,
                    "NNP": 0.064,
                    "UH": 0.005,
                    "VBD": 0.011,
                    "VBN": 0.005,
                    "TO": 0.016,
                    "WDT": 0.011
                },
                "syllableRate": 1.983,
                "topicScores": [
                    [
                        "edge",
                        0.291338389482295
                    ],
                    [
                        "merge",
                        0.3665686582471954
                    ],
                    [
                        "u",
                        0.3743236746404908
                    ],
                    [
                        "node",
                        0.5334262942533488
                    ],
                    [
                        "tree",
                        0.535817900415818
                    ],
                    [
                        "new",
                        0.5696414711838613
                    ],
                    [
                        "audience",
                        0.5967171986385343
                    ],
                    [
                        "Frisbee",
                        0.6208459579556561
                    ],
                    [
                        "component",
                        0.7681279066809427
                    ],
                    [
                        "connected",
                        0.7976697047143749
                    ],
                    [
                        "general",
                        0.844942358963527
                    ],
                    [
                        "red",
                        0.8557697918175313
                    ],
                    [
                        "minimum",
                        0.865557208331488
                    ],
                    [
                        "spanning",
                        0.865557208331488
                    ],
                    [
                        "impressive",
                        0.8753068321891397
                    ],
                    [
                        "awkward",
                        0.8813016670918883
                    ],
                    [
                        "Purple",
                        0.8932481153723913
                    ],
                    [
                        "little",
                        0.8983329471908017
                    ],
                    [
                        "endpoint",
                        0.9074239750612354
                    ],
                    [
                        "graph",
                        0.9101278906350292
                    ],
                    [
                        "uv",
                        0.9132555628099273
                    ],
                    [
                        "name",
                        0.9141212124342047
                    ],
                    [
                        "label",
                        0.9252699281585135
                    ],
                    [
                        "vertex",
                        0.9260865045488682
                    ],
                    [
                        "set",
                        0.9268343684920475
                    ],
                    [
                        "version",
                        0.9289627477131782
                    ],
                    [
                        "track",
                        0.9321815347043162
                    ],
                    [
                        "thing",
                        0.934479893967184
                    ],
                    [
                        "Purple Frisbee",
                        1.2450190530762486
                    ],
                    [
                        "connected component",
                        1.582060200279284
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "edge",
                        0.291338389482295
                    ],
                    [
                        "tree",
                        0.535817900415818
                    ],
                    [
                        "minimum",
                        0.865557208331488
                    ],
                    [
                        "graph",
                        0.9101278906350292
                    ],
                    [
                        "vertex",
                        0.9260865045488682
                    ],
                    [
                        "set",
                        0.9268343684920475
                    ],
                    [
                        "thing",
                        0.934479893967184
                    ]
                ]
            }
        },
        "tKwnms5iRBU-1080": {
            "id": "tKwnms5iRBU-1080",
            "heat": 0.187,
            "start": 1080.0,
            "text": " Let me-- go over here. We could end up with duplicate edges by this process. So for example, suppose we have u and v, and they have a common neighbor. Might have many common neighbors, who knows. Add some other edges, uncommon neighbors. When I merge, I'd like to just have a single edge to that vertex and a single edge to that vertex. And what I'm going to do is, if I have some weights on these edges, let's say a and b, and c and d, I'm just going to take the minimum. Because what I'm about to do is compute a minimum spanning tree in this graph. And if I take the minimum spanning tree here, and I had multiple edges-- one weight a, one weight b-- do you think I would choose the larger weight edge? It does-- they're exactly the same edge, but one is higher weight. There's no point in keeping the higher weight one, so I'm just going to throw away the higher weight one. Take them in. So this is a particular form of edge contraction and graphs. And I claim it's a good thing to do, in the sense",
            "metrics": {
                "relativeDCReadability": 0.9803704501060878,
                "lexicalDiversity": 0.4786729857819905,
                "posComposition": {
                    "VB": 0.066,
                    "PRP": 0.1,
                    ":": 0.019,
                    "IN": 0.071,
                    "RB": 0.033,
                    "MD": 0.014,
                    "RP": 0.009,
                    "NN": 0.152,
                    "NNS": 0.038,
                    "DT": 0.114,
                    "VBP": 0.066,
                    "JJ": 0.066,
                    "CC": 0.057,
                    "NNP": 0.019,
                    "WP": 0.014,
                    "VBZ": 0.038,
                    "WRB": 0.005,
                    "TO": 0.038,
                    "VBG": 0.019,
                    "VBD": 0.014,
                    "CD": 0.024,
                    "JJR": 0.019,
                    "EX": 0.005
                },
                "syllableRate": 2.2,
                "topicScores": [
                    [
                        "edge",
                        0.28582886282064607
                    ],
                    [
                        "weight",
                        0.2955757082377142
                    ],
                    [
                        "neighbor",
                        0.4127783118391234
                    ],
                    [
                        "minimum",
                        0.4324919683607689
                    ],
                    [
                        "high",
                        0.4391399542460374
                    ],
                    [
                        "common",
                        0.5211685007832322
                    ],
                    [
                        "graph",
                        0.5467339027987282
                    ],
                    [
                        "vertex",
                        0.5513329944950807
                    ],
                    [
                        "single",
                        0.5545491454996769
                    ],
                    [
                        "tree",
                        0.5643006310540629
                    ],
                    [
                        "me--",
                        0.8067561629567718
                    ],
                    [
                        "process",
                        0.8341618309126809
                    ],
                    [
                        "duplicate",
                        0.8744018860869368
                    ],
                    [
                        "example",
                        0.8842059057406715
                    ],
                    [
                        "uncommon",
                        0.8935929562438221
                    ],
                    [
                        "sense",
                        0.9095836767005462
                    ],
                    [
                        "does--",
                        0.9204659969988741
                    ],
                    [
                        "spanning",
                        0.9257363123306044
                    ],
                    [
                        "multiple",
                        0.9257363123306044
                    ],
                    [
                        "b--",
                        0.9257363123306044
                    ],
                    [
                        "large",
                        0.9257363123306044
                    ],
                    [
                        "point",
                        0.9292884508499729
                    ],
                    [
                        "particular",
                        0.9319137184714563
                    ],
                    [
                        "form",
                        0.9319137184714563
                    ],
                    [
                        "contraction",
                        0.9319137184714563
                    ],
                    [
                        "good",
                        0.9329929643982241
                    ],
                    [
                        "thing",
                        0.9329929643982241
                    ],
                    [
                        "common neighbor",
                        1.3527307576895768
                    ],
                    [
                        "high weight",
                        1.7603428332865427
                    ],
                    [
                        "single edge",
                        2.4674607618923696
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "edge",
                        0.28582886282064607
                    ],
                    [
                        "weight",
                        0.2955757082377142
                    ],
                    [
                        "minimum",
                        0.4324919683607689
                    ],
                    [
                        "graph",
                        0.5467339027987282
                    ],
                    [
                        "vertex",
                        0.5513329944950807
                    ],
                    [
                        "tree",
                        0.5643006310540629
                    ],
                    [
                        "thing",
                        0.9329929643982241
                    ]
                ]
            }
        },
        "tKwnms5iRBU-1170": {
            "id": "tKwnms5iRBU-1170",
            "heat": 0.1,
            "start": 1170.0,
            "text": " that if I can find a minimum spanning tree in this new graph-- this is usually called a G slash e, slash instead of negative, to remove e. I'm contracting e. So this is G slash e. This is G. If I can find a minimum spanning tree in G slash e, I claim I can find one in the original graph G just by adding the edge e. So I'm going to say if G prime is a minimum spanning tree, of G slash e, then T prime union e is a minimum spanning tree of G. So overall, you can think of this as a recurrence in a dynamic program, and let me write down that dynamic program. It won't be very good dynamic program, but it's a starting point. This is conceptually what we want to do. We're trying to guess an edge e that's",
            "metrics": {
                "relativeDCReadability": 1.3644725357608174,
                "lexicalDiversity": 0.535483870967742,
                "posComposition": {
                    "IN": 0.103,
                    "PRP": 0.077,
                    "MD": 0.032,
                    "VB": 0.071,
                    "DT": 0.116,
                    "JJ": 0.097,
                    "NN": 0.206,
                    ":": 0.006,
                    "VBZ": 0.052,
                    "RB": 0.045,
                    "VBN": 0.006,
                    "NNP": 0.065,
                    "TO": 0.026,
                    "VBP": 0.032,
                    "VBG": 0.026,
                    "CD": 0.006,
                    "CC": 0.013,
                    "RP": 0.006,
                    "WP": 0.006,
                    "WDT": 0.006
                },
                "syllableRate": 1.683,
                "topicScores": [
                    [
                        "g",
                        0.2279979837012442
                    ],
                    [
                        "slash",
                        0.30745552831897166
                    ],
                    [
                        "minimum",
                        0.3215233111896251
                    ],
                    [
                        "e",
                        0.327344724673116
                    ],
                    [
                        "tree",
                        0.3438936414812767
                    ],
                    [
                        "spanning",
                        0.3620497535439337
                    ],
                    [
                        "dynamic",
                        0.42232942625745423
                    ],
                    [
                        "program",
                        0.42232942625745423
                    ],
                    [
                        "edge",
                        0.5503328033918508
                    ],
                    [
                        "prime",
                        0.5690445005254084
                    ],
                    [
                        "minimum spanning",
                        0.5883273178586972
                    ],
                    [
                        "T",
                        0.6364546002970719
                    ],
                    [
                        "spanning tree",
                        0.685370019726871
                    ],
                    [
                        "negative",
                        0.833712302164061
                    ],
                    [
                        "new",
                        0.8489623635669679
                    ],
                    [
                        "graph--",
                        0.8489623635669679
                    ],
                    [
                        "point",
                        0.866612863234259
                    ],
                    [
                        "g slash",
                        0.8811324003331293
                    ],
                    [
                        "original",
                        0.8850758673091262
                    ],
                    [
                        "starting",
                        0.8929909403991223
                    ],
                    [
                        "union",
                        0.8990802409065505
                    ],
                    [
                        "recurrence",
                        0.8990802409065505
                    ],
                    [
                        "good",
                        0.9034342981552551
                    ],
                    [
                        "graph g",
                        1.0904488482240626
                    ],
                    [
                        "dynamic program",
                        1.2448875144130052
                    ],
                    [
                        "T prime",
                        1.3475690448184212
                    ],
                    [
                        "G prime",
                        1.4294465605861657
                    ],
                    [
                        "minimum spanning tree",
                        1.454245635876614
                    ],
                    [
                        "edge e.",
                        2.4714111642812
                    ],
                    [
                        "new graph--",
                        2.5808551053935695
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "minimum",
                        0.3215233111896251
                    ],
                    [
                        "tree",
                        0.3438936414812767
                    ],
                    [
                        "edge",
                        0.5503328033918508
                    ],
                    [
                        "minimum spanning",
                        0.5883273178586972
                    ],
                    [
                        "T",
                        0.6364546002970719
                    ],
                    [
                        "spanning tree",
                        0.685370019726871
                    ],
                    [
                        "T prime",
                        1.3475690448184212
                    ],
                    [
                        "minimum spanning tree",
                        1.454245635876614
                    ]
                ]
            }
        },
        "tKwnms5iRBU-1260": {
            "id": "tKwnms5iRBU-1260",
            "heat": 0.175,
            "start": 1260.0,
            "text": " in a minimum spanning tree. Then we're going to contract that edge. Then we're going to recurse, find the minimum spanning tree on what remains, and then we find the minimum spanning tree. Then we want to decontract the edge, put it back, put the graph back the way it was. And then add e to the minimum spanning tree. And what this lemma tells us, is that this is a correct algorithm. If you're lucky-- and we're going to force luckiness by trying all edges-- but if we start with an edge that is guaranteed to be in some minimum spanning tree, call it a safe edge, and we contract, and we find a minimum spanning tree on what remains, then we can put e back in at the end, and we'll get a minimum spanning tree of the original graph. So this gives us correctness of this algorithm. Now, this algorithm's bad, again, from a complexity standpoint. The running time is going to be exponential. The number of sub problems we might have to consider here is all subsets of edges. There's no particular way-- because at every step, we're guessing an arbitrary edge in the graph, there's no structure. Like, we can't say well, it's the first k edges, or some substring of edges. It's just going to be some subset of edges.",
            "metrics": {
                "relativeDCReadability": 0.9208967396771134,
                "lexicalDiversity": 0.5062240663900415,
                "posComposition": {
                    "IN": 0.095,
                    "DT": 0.137,
                    "JJ": 0.079,
                    "NN": 0.178,
                    "RB": 0.062,
                    "PRP": 0.087,
                    "VBP": 0.037,
                    "VBG": 0.029,
                    "TO": 0.037,
                    "VB": 0.058,
                    "WP": 0.012,
                    "VBZ": 0.054,
                    "CC": 0.037,
                    "VBD": 0.012,
                    "RP": 0.004,
                    ":": 0.012,
                    "NNS": 0.029,
                    "WDT": 0.004,
                    "VBN": 0.004,
                    "MD": 0.017,
                    "POS": 0.004,
                    "EX": 0.008
                },
                "syllableRate": 2.733,
                "topicScores": [
                    [
                        "tree",
                        0.2513483302170595
                    ],
                    [
                        "minimum",
                        0.2532213371919641
                    ],
                    [
                        "edge",
                        0.26776850710576566
                    ],
                    [
                        "spanning",
                        0.3196814329923985
                    ],
                    [
                        "algorithm",
                        0.4294134760528852
                    ],
                    [
                        "graph",
                        0.4325562452880489
                    ],
                    [
                        "spanning tree",
                        0.5474901680365478
                    ],
                    [
                        "minimum spanning",
                        0.5568449798950035
                    ],
                    [
                        "subset",
                        0.5599572813909109
                    ],
                    [
                        "way",
                        0.9069010201800101
                    ],
                    [
                        "standpoint",
                        0.9069462922239655
                    ],
                    [
                        "exponential",
                        0.9093085248372639
                    ],
                    [
                        "correct",
                        0.9118870193103279
                    ],
                    [
                        "structure",
                        0.9145424061579555
                    ],
                    [
                        "safe",
                        0.9157403261022599
                    ],
                    [
                        "end",
                        0.9157403261022599
                    ],
                    [
                        "original",
                        0.9157403261022599
                    ],
                    [
                        "lemma",
                        0.9184907607290725
                    ],
                    [
                        "bad",
                        0.9212062272837213
                    ],
                    [
                        "complexity",
                        0.9212062272837213
                    ],
                    [
                        "luckiness",
                        0.9220799534297438
                    ],
                    [
                        "correctness",
                        0.9248915601116143
                    ],
                    [
                        "number",
                        0.9249574815938219
                    ],
                    [
                        "particular",
                        0.9264386358881642
                    ],
                    [
                        "step",
                        0.9277310380626754
                    ],
                    [
                        "time",
                        0.9290563747917661
                    ],
                    [
                        "problem",
                        0.9306561320385462
                    ],
                    [
                        "arbitrary",
                        0.9332342706726316
                    ],
                    [
                        "substring",
                        0.9342940601875841
                    ],
                    [
                        "minimum spanning tree",
                        1.1893149875088236
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "tree",
                        0.2513483302170595
                    ],
                    [
                        "minimum",
                        0.2532213371919641
                    ],
                    [
                        "edge",
                        0.26776850710576566
                    ],
                    [
                        "algorithm",
                        0.4294134760528852
                    ],
                    [
                        "graph",
                        0.4325562452880489
                    ],
                    [
                        "spanning tree",
                        0.5474901680365478
                    ],
                    [
                        "minimum spanning",
                        0.5568449798950035
                    ],
                    [
                        "minimum spanning tree",
                        1.1893149875088236
                    ]
                ]
            }
        },
        "tKwnms5iRBU-1350": {
            "id": "tKwnms5iRBU-1350",
            "heat": 0.102,
            "start": 1350.0,
            "text": " There's exponentially many subsets, 2 to the e, so this is exponential. But we're going to make a polynomial by removing the guessing. This is actually a really good prototype for a greedy algorithm. If instead of guessing, trying all edges, if we could find a good edge to choose that's guaranteed to be in a minimum spanning tree, then we could actually follow this procedure, and this would be like an iterative algorithm. If you-- you don't guess-- you correctly choose a good-- you take the biggest cookie, you contract it, and then you repeat that process over and over, that would be a prototype for a greedy algorithm and that's what's going to work. There's different ways to choose this greedy edge, and we're going to get two different algorithms accordingly. But that's where we're going. First, I should prove this claim, cause, you know, where did edge contraction come from? Why does it work? It's not too hard to prove. Let's do it. Question? Oh. All right. I should be able to do this without looking. So-- Proof of optimal substructure. So we're given a lot. We're told that e belongs to a minimize spanning tree.",
            "metrics": {
                "relativeDCReadability": 0.9081397757503284,
                "lexicalDiversity": 0.5207373271889401,
                "posComposition": {
                    "EX": 0.009,
                    "VBZ": 0.046,
                    "RB": 0.06,
                    "JJ": 0.065,
                    "NNS": 0.023,
                    "CD": 0.009,
                    "TO": 0.046,
                    "DT": 0.12,
                    "NN": 0.12,
                    "IN": 0.083,
                    "CC": 0.032,
                    "PRP": 0.092,
                    "VBP": 0.041,
                    "VBG": 0.037,
                    "VB": 0.088,
                    "MD": 0.028,
                    "VBN": 0.014,
                    ":": 0.018,
                    "JJS": 0.005,
                    "WP": 0.005,
                    "WRB": 0.014,
                    "NNP": 0.028,
                    "VBD": 0.014,
                    "POS": 0.005
                },
                "syllableRate": 2.575,
                "topicScores": [
                    [
                        "algorithm",
                        0.3489622709302993
                    ],
                    [
                        "edge",
                        0.37443770076584665
                    ],
                    [
                        "greedy",
                        0.40514447501432366
                    ],
                    [
                        "prototype",
                        0.528326466022516
                    ],
                    [
                        "good",
                        0.532906265719197
                    ],
                    [
                        "tree",
                        0.5529819860152955
                    ],
                    [
                        "different",
                        0.561642008792165
                    ],
                    [
                        "Proof",
                        0.680779585221437
                    ],
                    [
                        "exponential",
                        0.7513172075835397
                    ],
                    [
                        "subset",
                        0.7837395586093923
                    ],
                    [
                        "guessing",
                        0.8197193730239641
                    ],
                    [
                        "polynomial",
                        0.8558832403330722
                    ],
                    [
                        "question",
                        0.8656507049922598
                    ],
                    [
                        "spanning",
                        0.8819790659763127
                    ],
                    [
                        "procedure",
                        0.8819790659763127
                    ],
                    [
                        "iterative",
                        0.8819790659763127
                    ],
                    [
                        "you--",
                        0.8903808980257756
                    ],
                    [
                        "big",
                        0.8903808980257756
                    ],
                    [
                        "cookie",
                        0.8903808980257756
                    ],
                    [
                        "minimum",
                        0.890555273902717
                    ],
                    [
                        "cause",
                        0.8963002966712353
                    ],
                    [
                        "process",
                        0.8984168905234664
                    ],
                    [
                        "substructure",
                        0.9035375421907997
                    ],
                    [
                        "way",
                        0.9039643903186219
                    ],
                    [
                        "claim",
                        0.9042772297913381
                    ],
                    [
                        "lot",
                        0.9046556754120663
                    ],
                    [
                        "contraction",
                        0.9113958806721907
                    ],
                    [
                        "hard",
                        0.9162412695219412
                    ],
                    [
                        "optimal",
                        0.9182727760369059
                    ],
                    [
                        "able",
                        0.9234476774444471
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "algorithm",
                        0.3489622709302993
                    ],
                    [
                        "edge",
                        0.37443770076584665
                    ],
                    [
                        "greedy",
                        0.40514447501432366
                    ],
                    [
                        "tree",
                        0.5529819860152955
                    ],
                    [
                        "minimum",
                        0.890555273902717
                    ]
                ]
            }
        },
        "tKwnms5iRBU-1440": {
            "id": "tKwnms5iRBU-1440",
            "heat": 0.278,
            "start": 1440.0,
            "text": " Let's give that spanning tree a name. Say we have a minimum spanning tree T star, which contains e. So we're assuming that exists, then we contract e. And then we're given T prime, which is a minimum spanning tree of G slash e. And then we want to analyze this thing. So I want to claim that this thing is a minimum spanning tree, in other words, that the weight of that spanning tree is equal to the weight of this spanning tree, because this one is minimum. This is a minimum spanning of G. And this is also supposed to be a minimum spanning tree of G. OK. Sounds easy, right? I'm going to cheat, sorry. I see. Right. Duh. Easy, once you know how. So what we're going to do is think about contracting e. OK, we already know we're supposed to be thinking about contracting e in the graph. Let's look at how it changes that given minimum spanning tree. So we have T star, minimum spanning tree of the whole graph, and then I'm going to contract e. What I mean is, if that edge happens to be in the spanning tree-- it is, actually.",
            "metrics": {
                "relativeDCReadability": 1.0501745343087752,
                "lexicalDiversity": 0.5119617224880383,
                "posComposition": {
                    "VB": 0.057,
                    "POS": 0.01,
                    "IN": 0.105,
                    "VBG": 0.048,
                    "DT": 0.091,
                    "NN": 0.163,
                    "NNP": 0.057,
                    "PRP": 0.081,
                    "VBP": 0.067,
                    "JJ": 0.077,
                    "WDT": 0.01,
                    "VBZ": 0.062,
                    "NNS": 0.01,
                    "RB": 0.053,
                    "CC": 0.019,
                    "VBN": 0.019,
                    "TO": 0.043,
                    "CD": 0.005,
                    "WRB": 0.01,
                    "WP": 0.01,
                    ":": 0.005
                },
                "syllableRate": 2.283,
                "topicScores": [
                    [
                        "minimum",
                        0.24494000769637256
                    ],
                    [
                        "tree",
                        0.2515778379917999
                    ],
                    [
                        "e.",
                        0.32908139871584924
                    ],
                    [
                        "T",
                        0.34400244869376273
                    ],
                    [
                        "spanning",
                        0.35401099043355794
                    ],
                    [
                        "G.",
                        0.3783109390613018
                    ],
                    [
                        "OK",
                        0.40579224123108465
                    ],
                    [
                        "right",
                        0.5288733471611267
                    ],
                    [
                        "thing",
                        0.5501454217153302
                    ],
                    [
                        "weight",
                        0.5624184355988289
                    ],
                    [
                        "graph",
                        0.5640795439219427
                    ],
                    [
                        "star",
                        0.5676695130466918
                    ],
                    [
                        "G. OK",
                        0.6277302462178143
                    ],
                    [
                        "minimum spanning",
                        0.759779615407681
                    ],
                    [
                        "tree T",
                        0.8370950036062622
                    ],
                    [
                        "prime",
                        0.9012969138458338
                    ],
                    [
                        "sorry",
                        0.9027454123803816
                    ],
                    [
                        "Easy",
                        0.9097368798535771
                    ],
                    [
                        "word",
                        0.9135177728334479
                    ],
                    [
                        "equal",
                        0.9200100162630177
                    ],
                    [
                        "edge",
                        0.9387395652927075
                    ],
                    [
                        "T star",
                        0.9629525586061575
                    ],
                    [
                        "T prime",
                        0.9662396680887572
                    ],
                    [
                        "spanning tree",
                        1.0972130931160384
                    ],
                    [
                        "e. OK",
                        1.208076449387342
                    ],
                    [
                        "minimum spanning tree",
                        2.8772394698899433
                    ],
                    [
                        "tree T star",
                        3.3660997846418583
                    ]
                ],
                "topTopicSimilarity": 0.48148148148148145,
                "sharedTopicScores": [
                    [
                        "minimum",
                        0.24494000769637256
                    ],
                    [
                        "tree",
                        0.2515778379917999
                    ],
                    [
                        "T",
                        0.34400244869376273
                    ],
                    [
                        "thing",
                        0.5501454217153302
                    ],
                    [
                        "weight",
                        0.5624184355988289
                    ],
                    [
                        "graph",
                        0.5640795439219427
                    ],
                    [
                        "minimum spanning",
                        0.759779615407681
                    ],
                    [
                        "tree T",
                        0.8370950036062622
                    ],
                    [
                        "edge",
                        0.9387395652927075
                    ],
                    [
                        "T star",
                        0.9629525586061575
                    ],
                    [
                        "T prime",
                        0.9662396680887572
                    ],
                    [
                        "spanning tree",
                        1.0972130931160384
                    ],
                    [
                        "minimum spanning tree",
                        2.8772394698899433
                    ]
                ]
            }
        },
        "tKwnms5iRBU-1530": {
            "id": "tKwnms5iRBU-1530",
            "heat": 0.294,
            "start": 1530.0,
            "text": " We assumed that e is in there. So I'm basically removing, I'm just deleting that edge, maybe I should call it minus e. Then that should be a spanning tree of G slash e. So when I contract the edge in the graph, if I throw away the edge from this spanning tree, I should still have a spanning tree, and I don't know whether it's minimum. Probably, it is, but we won't prove that right now. I claim it's still a spanning tree. What would that take? It still hits all the vertices, because if I removed the edge, things would not be connected together. But this edge was in the spanning tree, and then I fused those two vertices together, so whatever spanning-- I mean, whatever was connected before is still connected. Contraction generally preserves connectivity. If these things were already connected directly by an edge when I contract, I still have a connected structure, so I'm still hitting all the vertices. And also, the number of edges is still exactly right. Before, I had n minus 1 edges. Afterwards, I'll still have n minus 1 edges, because I removed one edge and I removed one vertex, in terms of the count. So that proves that it's still a spanning tree, using properties of trees.",
            "metrics": {
                "relativeDCReadability": 1.0442649707171026,
                "lexicalDiversity": 0.5242290748898678,
                "posComposition": {
                    "PRP": 0.119,
                    "VBD": 0.04,
                    "IN": 0.101,
                    "NN": 0.123,
                    "VBZ": 0.048,
                    "EX": 0.004,
                    "NNP": 0.022,
                    "VBP": 0.04,
                    "RB": 0.132,
                    "VBG": 0.031,
                    "MD": 0.031,
                    "VB": 0.035,
                    "DT": 0.093,
                    "JJ": 0.022,
                    "WRB": 0.009,
                    "CC": 0.031,
                    "WP": 0.004,
                    "PDT": 0.009,
                    "NNS": 0.048,
                    "VBN": 0.022,
                    "CD": 0.022,
                    ":": 0.004,
                    "WDT": 0.009
                },
                "syllableRate": 2.608,
                "topicScores": [
                    [
                        "edge",
                        0.25512687702427544
                    ],
                    [
                        "tree",
                        0.27017701776170006
                    ],
                    [
                        "vertex",
                        0.3701016545678908
                    ],
                    [
                        "e.",
                        0.5336104293677413
                    ],
                    [
                        "right",
                        0.5559683300551362
                    ],
                    [
                        "thing",
                        0.5664697264567735
                    ],
                    [
                        "minimum",
                        0.8696589060897091
                    ],
                    [
                        "graph",
                        0.8874255127475654
                    ],
                    [
                        "Contraction",
                        0.9076648744616355
                    ],
                    [
                        "connectivity",
                        0.9076648744616355
                    ],
                    [
                        "count",
                        0.9152078135882002
                    ],
                    [
                        "connected",
                        0.9227654721501751
                    ],
                    [
                        "structure",
                        0.9227654721501751
                    ],
                    [
                        "spanning--",
                        0.9239614302683036
                    ],
                    [
                        "number",
                        0.9244955585448813
                    ],
                    [
                        "term",
                        0.9272848454430447
                    ],
                    [
                        "property",
                        0.9284318295119318
                    ],
                    [
                        "connected structure",
                        5.733830638328855
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "edge",
                        0.25512687702427544
                    ],
                    [
                        "tree",
                        0.27017701776170006
                    ],
                    [
                        "vertex",
                        0.3701016545678908
                    ],
                    [
                        "thing",
                        0.5664697264567735
                    ],
                    [
                        "minimum",
                        0.8696589060897091
                    ],
                    [
                        "graph",
                        0.8874255127475654
                    ]
                ]
            }
        },
        "tKwnms5iRBU-1620": {
            "id": "tKwnms5iRBU-1620",
            "heat": 0.465,
            "start": 1620.0,
            "text": " Cool. So that means the minimum spanning tree, this thing, T prime, the minimum spanning tree of G slash e, has a smaller weight than this one. Because this is a spanning tree, the minimum is smaller than all spanning trees. So we know the weight of T prime is less than or equal to the weight of T star minus e. Cool. And now we want to know about this thing, the weight of T prime plus e. Well, that's just the weight of T prime plus the weight of e, because the weight of a tree is just the sum of the weights of the edges. So this is less than or equal to w of T star minus e plus e, which is just the weight of T star. So we proved that the weight of our proposed spanning tree is less than or equal to the weight of the minimum spanning tree in G, and therefore, T prime union e actually is a minimum spanning tree. OK? This is really easy. It actually implies that all of these inequalities",
            "metrics": {
                "relativeDCReadability": 1.2093034692460098,
                "lexicalDiversity": 0.47282608695652173,
                "posComposition": {
                    "NNP": 0.087,
                    "WDT": 0.016,
                    "VBZ": 0.076,
                    "DT": 0.158,
                    "JJ": 0.076,
                    "NN": 0.201,
                    "IN": 0.152,
                    "JJR": 0.016,
                    "VBG": 0.011,
                    "RP": 0.005,
                    "NNS": 0.022,
                    "PRP": 0.022,
                    "VBP": 0.011,
                    "RBR": 0.011,
                    "CC": 0.043,
                    "TO": 0.022,
                    "RB": 0.043,
                    "VB": 0.011,
                    "VBD": 0.005,
                    "PRP$": 0.005,
                    "VBN": 0.005
                },
                "syllableRate": 1.933,
                "topicScores": [
                    [
                        "T",
                        0.1818804086260337
                    ],
                    [
                        "weight",
                        0.23077977036769956
                    ],
                    [
                        "tree",
                        0.2681690473877406
                    ],
                    [
                        "Cool",
                        0.2851007178644877
                    ],
                    [
                        "prime",
                        0.3166960683266493
                    ],
                    [
                        "minimum",
                        0.3185044181662541
                    ],
                    [
                        "T prime",
                        0.3591120427362823
                    ],
                    [
                        "T star",
                        0.3671728953716814
                    ],
                    [
                        "equal",
                        0.40261439207229255
                    ],
                    [
                        "spanning",
                        0.44606297089313196
                    ],
                    [
                        "thing",
                        0.5275684181733734
                    ],
                    [
                        "small",
                        0.536299873314526
                    ],
                    [
                        "e.",
                        0.5520218062446419
                    ],
                    [
                        "G",
                        0.6442933704464039
                    ],
                    [
                        "e. Cool",
                        0.6538761879736347
                    ],
                    [
                        "edge",
                        0.8858949304272918
                    ],
                    [
                        "easy",
                        0.9032392799802723
                    ],
                    [
                        "inequality",
                        0.9077602653609379
                    ],
                    [
                        "sum",
                        0.9123510827069242
                    ],
                    [
                        "union",
                        0.9208485746139066
                    ],
                    [
                        "spanning tree",
                        1.569319257109273
                    ],
                    [
                        "minimum spanning",
                        1.7455152093634603
                    ],
                    [
                        "small weight",
                        2.3698270456847825
                    ],
                    [
                        "T prime union",
                        3.012013663668282
                    ],
                    [
                        "union e",
                        4.726521909222512
                    ],
                    [
                        "minimum spanning tree",
                        7.034033613976434
                    ],
                    [
                        "prime union e",
                        17.60200483434948
                    ]
                ],
                "topTopicSimilarity": 0.4074074074074074,
                "sharedTopicScores": [
                    [
                        "T",
                        0.1818804086260337
                    ],
                    [
                        "weight",
                        0.23077977036769956
                    ],
                    [
                        "tree",
                        0.2681690473877406
                    ],
                    [
                        "minimum",
                        0.3185044181662541
                    ],
                    [
                        "T prime",
                        0.3591120427362823
                    ],
                    [
                        "T star",
                        0.3671728953716814
                    ],
                    [
                        "thing",
                        0.5275684181733734
                    ],
                    [
                        "edge",
                        0.8858949304272918
                    ],
                    [
                        "spanning tree",
                        1.569319257109273
                    ],
                    [
                        "minimum spanning",
                        1.7455152093634603
                    ],
                    [
                        "minimum spanning tree",
                        7.034033613976434
                    ]
                ]
            }
        },
        "tKwnms5iRBU-1710": {
            "id": "tKwnms5iRBU-1710",
            "heat": 0.392,
            "start": 1710.0,
            "text": " have to be equalities, because we started with something minimum. Clear? That's the easier half. The More interesting property is going to be this greedy choice property. This is sort of where the action is for greedy algorithms, and this is usually the heart of proving greedy algorithms are correct. We don't yet have a greedy algorithm, but we're thinking about it. We need some way to intelligently choose an edge e, and I'm going to give you a whole bunch of ways to intelligently choose an edge e. So here's a really powerful lemma, and we're going to make it even stronger in a moment.",
            "metrics": {
                "relativeDCReadability": 0.8923341959916533,
                "lexicalDiversity": 0.5,
                "posComposition": {
                    "VB": 0.071,
                    "TO": 0.054,
                    "NNS": 0.036,
                    "IN": 0.071,
                    "PRP": 0.08,
                    "VBD": 0.009,
                    "NN": 0.17,
                    "JJ": 0.054,
                    "NNP": 0.027,
                    "VBZ": 0.054,
                    "DT": 0.125,
                    "JJR": 0.009,
                    "PDT": 0.009,
                    "RBR": 0.018,
                    "VBG": 0.045,
                    "WRB": 0.009,
                    "CC": 0.036,
                    "RB": 0.071,
                    "VBP": 0.054
                },
                "syllableRate": 1.4,
                "topicScores": [
                    [
                        "greedy",
                        0.36385090796443903
                    ],
                    [
                        "algorithm",
                        0.423492875061026
                    ],
                    [
                        "edge",
                        0.5223751139446473
                    ],
                    [
                        "property",
                        0.5430651009195308
                    ],
                    [
                        "way",
                        0.5473606231625971
                    ],
                    [
                        "Clear",
                        0.7276315521997184
                    ],
                    [
                        "minimum",
                        0.774503239139696
                    ],
                    [
                        "e.",
                        0.797403323607768
                    ],
                    [
                        "equality",
                        0.8152125051491514
                    ],
                    [
                        "half",
                        0.8247448882485959
                    ],
                    [
                        "correct",
                        0.8448119952109749
                    ],
                    [
                        "easy",
                        0.8580463720570949
                    ],
                    [
                        "moment",
                        0.8635089478139817
                    ],
                    [
                        "choice",
                        0.8678967678662409
                    ],
                    [
                        "interesting",
                        0.8804613125592137
                    ],
                    [
                        "action",
                        0.8868658962819089
                    ],
                    [
                        "heart",
                        0.8868658962819089
                    ],
                    [
                        "powerful",
                        0.8904232295563813
                    ],
                    [
                        "lemma",
                        0.8904232295563813
                    ],
                    [
                        "bunch",
                        0.8954675099516151
                    ],
                    [
                        "strong",
                        0.9010894221695873
                    ],
                    [
                        "greedy algorithm",
                        1.2578631599725938
                    ],
                    [
                        "edge e.",
                        1.9429601500908211
                    ],
                    [
                        "easy half",
                        2.420784073064832
                    ],
                    [
                        "greedy choice",
                        2.7485492105289824
                    ],
                    [
                        "choice property",
                        2.9530624795360656
                    ],
                    [
                        "interesting property",
                        3.12960946344747
                    ],
                    [
                        "powerful lemma",
                        3.82750195578533
                    ],
                    [
                        "greedy choice property",
                        11.5180060958681
                    ]
                ],
                "topTopicSimilarity": 0.13793103448275862,
                "sharedTopicScores": [
                    [
                        "greedy",
                        0.36385090796443903
                    ],
                    [
                        "algorithm",
                        0.423492875061026
                    ],
                    [
                        "edge",
                        0.5223751139446473
                    ],
                    [
                        "minimum",
                        0.774503239139696
                    ]
                ]
            }
        },
        "tKwnms5iRBU-1800": {
            "id": "tKwnms5iRBU-1800",
            "heat": 0.3,
            "start": 1800.0,
            "text": " So I'm going to introduce the notion of a cut, that's going to be a similar picture to what I had before. I'm going to look at some set of vertices. S here is a subset of the vertices, and that leaves in the graph, everything else. This would be V minus S. OK, so there's some vertices over here, some vertices over here, there's some edges that are purely inside one side of the cut. And then what I'm interested in are the edges that cross the cut. OK, whatever they look like, these edges. If an edge has one vertex in V and one vertex not in V, I call that edge a crossing edge. OK, so let's suppose that e is a least-weight edge crossing the cut. So let's say, let me be specific, if e is uv, then I want one of the endpoints, let's u, to be in S, and I want the other one to be not in S,",
            "metrics": {
                "relativeDCReadability": 0.9706648259685837,
                "lexicalDiversity": 0.45977011494252873,
                "posComposition": {
                    "RB": 0.057,
                    "PRP": 0.052,
                    "VBP": 0.069,
                    "VBG": 0.023,
                    "TO": 0.034,
                    "VB": 0.057,
                    "DT": 0.132,
                    "NN": 0.121,
                    "IN": 0.126,
                    "WDT": 0.023,
                    "VBZ": 0.046,
                    "JJ": 0.046,
                    "WP": 0.011,
                    "VBD": 0.006,
                    "NNS": 0.046,
                    "NNP": 0.057,
                    "CC": 0.029,
                    "MD": 0.006,
                    "EX": 0.011,
                    "CD": 0.029,
                    "POS": 0.017
                },
                "syllableRate": 1.842,
                "topicScores": [
                    [
                        "edge",
                        0.29055874660141107
                    ],
                    [
                        "S",
                        0.29153269344401744
                    ],
                    [
                        "vertex",
                        0.2951979547364728
                    ],
                    [
                        "cut",
                        0.32865654238307135
                    ],
                    [
                        "V",
                        0.3842100774545254
                    ],
                    [
                        "S. OK",
                        0.5334461652614904
                    ],
                    [
                        "notion",
                        0.8012323865179185
                    ],
                    [
                        "similar",
                        0.8012323865179185
                    ],
                    [
                        "picture",
                        0.8012323865179185
                    ],
                    [
                        "set",
                        0.8584909235257252
                    ],
                    [
                        "graph",
                        0.8708976377059438
                    ],
                    [
                        "subset",
                        0.8805682518197404
                    ],
                    [
                        "interested",
                        0.9003445702656077
                    ],
                    [
                        "crossing",
                        0.9023314830120513
                    ],
                    [
                        "weight",
                        0.905782866697212
                    ],
                    [
                        "specific",
                        0.9085803759286819
                    ],
                    [
                        "uv",
                        0.9085803759286819
                    ],
                    [
                        "endpoint",
                        0.9085803759286819
                    ],
                    [
                        "similar picture",
                        1.7930880683407069
                    ],
                    [
                        "crossing edge",
                        3.6847385113949036
                    ],
                    [
                        "weight edge",
                        3.7517090271249858
                    ]
                ],
                "topTopicSimilarity": 0.47619047619047616,
                "sharedTopicScores": [
                    [
                        "edge",
                        0.29055874660141107
                    ],
                    [
                        "S",
                        0.29153269344401744
                    ],
                    [
                        "vertex",
                        0.2951979547364728
                    ],
                    [
                        "cut",
                        0.32865654238307135
                    ],
                    [
                        "V",
                        0.3842100774545254
                    ],
                    [
                        "S. OK",
                        0.5334461652614904
                    ],
                    [
                        "set",
                        0.8584909235257252
                    ],
                    [
                        "graph",
                        0.8708976377059438
                    ],
                    [
                        "weight",
                        0.905782866697212
                    ],
                    [
                        "weight edge",
                        3.7517090271249858
                    ]
                ]
            }
        },
        "tKwnms5iRBU-1890": {
            "id": "tKwnms5iRBU-1890",
            "heat": 0.115,
            "start": 1890.0,
            "text": " so it's in capital V minus S. And that would be a crossing edge, and among all the crossing edges, I want to take one of minimum weight. There might be many, but pick any one. Then I claim that edge is in a minimum spanning tree. This is our golden ticket, right? If we can guarantee an edge is in the minimum spanning tree, then we plug that in here. Instead of guessing, we'll just take that edge-- we know it's in a minimum spanning tree-- and then we'll contract it and repeat this process. So the tricky part-- I mean, it is true that the minimum weight edge is in a minimum spanning tree, I'll give that away. But the question is, what you do then? And I guess you contract and repeat but, that will be Kruskal's algorithm. But this is, in some sense, a more general tool that will let us identify edges that are guaranteed to be in the minimum spanning tree, even after we've already identified some edges as being in the minimum spanning tree, so it's a little more powerful. Let's prove this claim. This is where things get particularly cool.",
            "metrics": {
                "relativeDCReadability": 0.906569780964334,
                "lexicalDiversity": 0.48095238095238096,
                "posComposition": {
                    "IN": 0.1,
                    "PRP": 0.09,
                    "VBZ": 0.052,
                    "NN": 0.157,
                    "NNP": 0.019,
                    "CC": 0.052,
                    "DT": 0.124,
                    "MD": 0.038,
                    "VB": 0.057,
                    "PDT": 0.005,
                    "NNS": 0.019,
                    "VBP": 0.048,
                    "TO": 0.01,
                    "CD": 0.01,
                    "JJ": 0.076,
                    "EX": 0.005,
                    "RB": 0.062,
                    "PRP$": 0.005,
                    "VBG": 0.01,
                    ":": 0.014,
                    "WP": 0.005,
                    "POS": 0.01,
                    "RBR": 0.01,
                    "WDT": 0.01,
                    "VBN": 0.01,
                    "WRB": 0.005
                },
                "syllableRate": 2.367,
                "topicScores": [
                    [
                        "minimum",
                        0.24484384000989823
                    ],
                    [
                        "edge",
                        0.28683387625151985
                    ],
                    [
                        "tree",
                        0.31347073636744127
                    ],
                    [
                        "S.",
                        0.3865226683956375
                    ],
                    [
                        "V",
                        0.42639849577240485
                    ],
                    [
                        "crossing",
                        0.512512354665962
                    ],
                    [
                        "capital V",
                        0.5287489542885649
                    ],
                    [
                        "weight",
                        0.5422670222438064
                    ],
                    [
                        "claim",
                        0.5606309210226208
                    ],
                    [
                        "contract",
                        0.5637775025480338
                    ],
                    [
                        "Kruskal",
                        0.6833325364935129
                    ],
                    [
                        "right",
                        0.8678855550168018
                    ],
                    [
                        "spanning",
                        0.8901492830626303
                    ],
                    [
                        "process",
                        0.894355151281696
                    ],
                    [
                        "golden",
                        0.8980367237565454
                    ],
                    [
                        "ticket",
                        0.8980367237565454
                    ],
                    [
                        "algorithm",
                        0.9040990907434973
                    ],
                    [
                        "powerful",
                        0.9057440457821663
                    ],
                    [
                        "cool",
                        0.9084920798649654
                    ],
                    [
                        "question",
                        0.9159215663675329
                    ],
                    [
                        "tricky",
                        0.9204714188815886
                    ],
                    [
                        "part--",
                        0.9204714188815886
                    ],
                    [
                        "true",
                        0.9204714188815886
                    ],
                    [
                        "sense",
                        0.9208070414280028
                    ],
                    [
                        "general",
                        0.927052259772237
                    ],
                    [
                        "tool",
                        0.927052259772237
                    ],
                    [
                        "thing",
                        0.9292275946144303
                    ],
                    [
                        "minimum weight",
                        1.264143332767351
                    ],
                    [
                        "crossing edge",
                        1.4651583034093736
                    ],
                    [
                        "minimum spanning",
                        2.234962929219802
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "minimum",
                        0.24484384000989823
                    ],
                    [
                        "edge",
                        0.28683387625151985
                    ],
                    [
                        "tree",
                        0.31347073636744127
                    ],
                    [
                        "V",
                        0.42639849577240485
                    ],
                    [
                        "weight",
                        0.5422670222438064
                    ],
                    [
                        "algorithm",
                        0.9040990907434973
                    ],
                    [
                        "thing",
                        0.9292275946144303
                    ],
                    [
                        "minimum weight",
                        1.264143332767351
                    ],
                    [
                        "minimum spanning",
                        2.234962929219802
                    ]
                ]
            }
        },
        "tKwnms5iRBU-1980": {
            "id": "tKwnms5iRBU-1980",
            "heat": 0.207,
            "start": 1980.0,
            "text": " And this is where we're going to use something called a c and paste argument. And if you are ever trying to prove a greedy algorithm correct, the first thing that should come to your mind is cut and paste. This is almost universally how you prove greedy algorithms to be correct, which is, suppose you have some optimal solution which doesn't have the property you want, like that it includes e here. And then you modify it, usually by cutting out one part of the solution and pasting in a different part, like e, and prove that you still have an optimal solution, and therefore, there is an optimal solution. There is an MST that has the property you want. OK, so we're going to do that by starting from an arbitrary minimum spanning tree. So let T star be a minimum spanning tree of G, and if the edge e is in there, we're done. So presumably, e is not in that minimum spanning tree. We're going to modify T star to include e. So again, let me draw the cut. There's S and V minus S. We have some edge e",
            "metrics": {
                "relativeDCReadability": 1.0134027101541083,
                "lexicalDiversity": 0.47,
                "posComposition": {
                    "CC": 0.055,
                    "DT": 0.1,
                    "VBZ": 0.06,
                    "WRB": 0.01,
                    "PRP": 0.075,
                    "VBP": 0.065,
                    "VBG": 0.035,
                    "TO": 0.035,
                    "VB": 0.065,
                    "NN": 0.165,
                    "VBN": 0.015,
                    "IN": 0.075,
                    "RB": 0.075,
                    "JJ": 0.065,
                    "WDT": 0.02,
                    "MD": 0.005,
                    "PRP$": 0.005,
                    "RP": 0.005,
                    "CD": 0.005,
                    "EX": 0.02,
                    "NNS": 0.01,
                    "NNP": 0.035
                },
                "syllableRate": 2.292,
                "topicScores": [
                    [
                        "e",
                        0.3264836624727103
                    ],
                    [
                        "solution",
                        0.35626307392138934
                    ],
                    [
                        "optimal",
                        0.4029494678188155
                    ],
                    [
                        "T",
                        0.4048426690448281
                    ],
                    [
                        "tree",
                        0.4089458882522399
                    ],
                    [
                        "minimum",
                        0.42868113584891593
                    ],
                    [
                        "cut",
                        0.4330852798186268
                    ],
                    [
                        "property",
                        0.5121435713646583
                    ],
                    [
                        "greedy",
                        0.5231496794334856
                    ],
                    [
                        "algorithm",
                        0.5266431325274405
                    ],
                    [
                        "correct",
                        0.5299799895425871
                    ],
                    [
                        "edge",
                        0.5518207217320336
                    ],
                    [
                        "star",
                        0.5568891243660223
                    ],
                    [
                        "mst",
                        0.6378276558106907
                    ],
                    [
                        "G",
                        0.6454411108833402
                    ],
                    [
                        "V",
                        0.6771586573096304
                    ],
                    [
                        "S.",
                        0.6771586573096304
                    ],
                    [
                        "argument",
                        0.8119870238999823
                    ],
                    [
                        "T star",
                        0.8240341834909509
                    ],
                    [
                        "thing",
                        0.8755763907127121
                    ],
                    [
                        "mind",
                        0.8755763907127121
                    ],
                    [
                        "different",
                        0.8870931708170435
                    ],
                    [
                        "pasting",
                        0.8960817476749028
                    ],
                    [
                        "spanning",
                        0.8977649999938878
                    ],
                    [
                        "arbitrary",
                        0.905994018245577
                    ],
                    [
                        "optimal solution",
                        0.999940723845416
                    ],
                    [
                        "greedy algorithm",
                        1.4183309937642812
                    ],
                    [
                        "edge e",
                        1.7783920499592665
                    ],
                    [
                        "algorithm correct",
                        2.3462134683462517
                    ],
                    [
                        "spanning tree",
                        2.7632836016976854
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "T",
                        0.4048426690448281
                    ],
                    [
                        "tree",
                        0.4089458882522399
                    ],
                    [
                        "minimum",
                        0.42868113584891593
                    ],
                    [
                        "cut",
                        0.4330852798186268
                    ],
                    [
                        "greedy",
                        0.5231496794334856
                    ],
                    [
                        "algorithm",
                        0.5266431325274405
                    ],
                    [
                        "edge",
                        0.5518207217320336
                    ],
                    [
                        "V",
                        0.6771586573096304
                    ],
                    [
                        "T star",
                        0.8240341834909509
                    ],
                    [
                        "thing",
                        0.8755763907127121
                    ],
                    [
                        "spanning tree",
                        2.7632836016976854
                    ]
                ]
            }
        },
        "tKwnms5iRBU-2070": {
            "id": "tKwnms5iRBU-2070",
            "heat": 0.303,
            "start": 2070.0,
            "text": " which crosses the cut, goes from u to v, that's not in the minimum spanning tree. Let's say in blue, I draw the minimum spanning tree. So you know, the minimum spanning tree connects everything together here. I claim it's got to have some edges that cross the cut, because if it has no edges that cross the cut, it doesn't connect vertices over here with vertices over here. So it may not use e, but some of the edges must cross the cut. So here's a possible minimum spanning tree. It happens to have sort of two components over here in S, maybe. Who knows? But there's got to be at least one edge the crosses over. In fact, the minimum spanning tree, T star, has to connect vertex u to vertex v, somehow. It doesn't use e, but there's got to be-- it's a tree, so in fact, there has to be a unique path from u to v in the minimum spanning tree. And now u is in S, v is not in S. So if you look at that path, for a while, you might stay in S, but eventually you have to leave S, which means there has to be an edge like this one, which",
            "metrics": {
                "relativeDCReadability": 0.9191087873674921,
                "lexicalDiversity": 0.45701357466063347,
                "posComposition": {
                    "WDT": 0.023,
                    "VBZ": 0.086,
                    "DT": 0.1,
                    "NN": 0.14,
                    "IN": 0.122,
                    "JJ": 0.068,
                    "TO": 0.05,
                    "VB": 0.077,
                    "RB": 0.072,
                    "NNP": 0.041,
                    "POS": 0.005,
                    "PRP": 0.059,
                    "VBP": 0.032,
                    "NNS": 0.036,
                    "VBD": 0.014,
                    "MD": 0.014,
                    "CC": 0.023,
                    "CD": 0.014,
                    "WP": 0.005,
                    "EX": 0.014,
                    "JJS": 0.005,
                    ":": 0.005
                },
                "syllableRate": 2.283,
                "topicScores": [
                    [
                        "tree",
                        0.26383774053187575
                    ],
                    [
                        "S",
                        0.2645982074122445
                    ],
                    [
                        "minimum",
                        0.26583531319776316
                    ],
                    [
                        "cut",
                        0.33713072890540047
                    ],
                    [
                        "edge",
                        0.33980711840465083
                    ],
                    [
                        "v",
                        0.37007380319900307
                    ],
                    [
                        "vertex",
                        0.3773663056689386
                    ],
                    [
                        "spanning",
                        0.3860642608501514
                    ],
                    [
                        "fact",
                        0.5558944532594606
                    ],
                    [
                        "path",
                        0.5721480092905646
                    ],
                    [
                        "minimum spanning",
                        0.6798990719248545
                    ],
                    [
                        "spanning tree",
                        0.7858426507512277
                    ],
                    [
                        "blue",
                        0.8881948310131598
                    ],
                    [
                        "star",
                        0.9194086368759492
                    ],
                    [
                        "possible",
                        0.9214633651581982
                    ],
                    [
                        "crosse",
                        0.9233141517496574
                    ],
                    [
                        "component",
                        0.9242953936884474
                    ],
                    [
                        "unique",
                        0.931489393773557
                    ],
                    [
                        "t star",
                        1.4992792478127888
                    ],
                    [
                        "minimum spanning tree",
                        1.7004778788698198
                    ],
                    [
                        "possible minimum",
                        2.2018714268662403
                    ],
                    [
                        "vertex v",
                        3.0472767638111393
                    ],
                    [
                        "unique path",
                        5.439376071645093
                    ]
                ],
                "topTopicSimilarity": 0.391304347826087,
                "sharedTopicScores": [
                    [
                        "tree",
                        0.26383774053187575
                    ],
                    [
                        "S",
                        0.2645982074122445
                    ],
                    [
                        "minimum",
                        0.26583531319776316
                    ],
                    [
                        "cut",
                        0.33713072890540047
                    ],
                    [
                        "edge",
                        0.33980711840465083
                    ],
                    [
                        "vertex",
                        0.3773663056689386
                    ],
                    [
                        "minimum spanning",
                        0.6798990719248545
                    ],
                    [
                        "spanning tree",
                        0.7858426507512277
                    ],
                    [
                        "minimum spanning tree",
                        1.7004778788698198
                    ]
                ]
            }
        },
        "tKwnms5iRBU-2160": {
            "id": "tKwnms5iRBU-2160",
            "heat": 0.556,
            "start": 2160.0,
            "text": " I'll call it e prime, which transitions from S to V minus S. So there must be an edge e prime in the minimum spanning tree that crosses the cut, because u and v are connected by a path and that path starts in S, ends not in S, so it's got to transition at least once. It might transition many times, but there has to be at least one such edge. And now what I'm going to do is cut and paste. I'm going to remove e prime and add an e instead. So I'm going to look at T star minus e prime plus e. I claim that is a minimum spanning tree. First I want to claim, this is maybe the more annoying part, that it is a spanning tree. This is more of a graph theory thing. I guess one comforting thing is that you've preserved the number of edges, so it should still be if you get one property, you get the other, because I remove one edge, add in one edge,",
            "metrics": {
                "relativeDCReadability": 1.0084832553882535,
                "lexicalDiversity": 0.4918032786885246,
                "posComposition": {
                    "PRP": 0.087,
                    "MD": 0.022,
                    "VB": 0.06,
                    "JJ": 0.071,
                    "WDT": 0.011,
                    "NNS": 0.027,
                    "IN": 0.115,
                    "NNP": 0.049,
                    "TO": 0.038,
                    "EX": 0.005,
                    "DT": 0.077,
                    "NN": 0.148,
                    "VBZ": 0.055,
                    "CC": 0.038,
                    "VBP": 0.06,
                    "VBN": 0.016,
                    "RB": 0.033,
                    "VBD": 0.005,
                    "JJS": 0.011,
                    "CD": 0.027,
                    "WP": 0.005,
                    "VBG": 0.027,
                    "RBR": 0.005,
                    "JJR": 0.005
                },
                "syllableRate": 1.85,
                "topicScores": [
                    [
                        "S",
                        0.24119141890722498
                    ],
                    [
                        "e",
                        0.323482140590101
                    ],
                    [
                        "edge",
                        0.334247529905907
                    ],
                    [
                        "prime",
                        0.356687810990289
                    ],
                    [
                        "tree",
                        0.40676203039408076
                    ],
                    [
                        "transition",
                        0.4091631755163167
                    ],
                    [
                        "V",
                        0.43083386921363076
                    ],
                    [
                        "spanning",
                        0.5181039710607688
                    ],
                    [
                        "minimum",
                        0.5274297281227841
                    ],
                    [
                        "cut",
                        0.5314203983471603
                    ],
                    [
                        "path",
                        0.5355090899852131
                    ],
                    [
                        "thing",
                        0.5533885589333661
                    ],
                    [
                        "T",
                        0.6435735802467427
                    ],
                    [
                        "time",
                        0.860515152084893
                    ],
                    [
                        "annoying",
                        0.8941697349081854
                    ],
                    [
                        "theory",
                        0.8978768940204187
                    ],
                    [
                        "star",
                        0.8991406456878355
                    ],
                    [
                        "property",
                        0.9008834612458289
                    ],
                    [
                        "graph",
                        0.9069069692828438
                    ],
                    [
                        "number",
                        0.9096744298819283
                    ],
                    [
                        "e prime",
                        1.1262002052254154
                    ],
                    [
                        "spanning tree",
                        1.2697239448543367
                    ],
                    [
                        "T star",
                        1.3733979935345566
                    ],
                    [
                        "minimum spanning",
                        1.3813919420022895
                    ],
                    [
                        "edge e",
                        2.603369394444762
                    ],
                    [
                        "theory thing",
                        3.7065008716850345
                    ],
                    [
                        "minimum spanning tree",
                        4.2796338531187885
                    ],
                    [
                        "graph theory",
                        4.384763213829045
                    ],
                    [
                        "edge e prime",
                        9.048922234432526
                    ],
                    [
                        "graph theory thing",
                        22.919271546700546
                    ]
                ],
                "topTopicSimilarity": 0.43333333333333335,
                "sharedTopicScores": [
                    [
                        "S",
                        0.24119141890722498
                    ],
                    [
                        "edge",
                        0.334247529905907
                    ],
                    [
                        "tree",
                        0.40676203039408076
                    ],
                    [
                        "V",
                        0.43083386921363076
                    ],
                    [
                        "minimum",
                        0.5274297281227841
                    ],
                    [
                        "cut",
                        0.5314203983471603
                    ],
                    [
                        "thing",
                        0.5533885589333661
                    ],
                    [
                        "T",
                        0.6435735802467427
                    ],
                    [
                        "graph",
                        0.9069069692828438
                    ],
                    [
                        "spanning tree",
                        1.2697239448543367
                    ],
                    [
                        "T star",
                        1.3733979935345566
                    ],
                    [
                        "minimum spanning",
                        1.3813919420022895
                    ],
                    [
                        "minimum spanning tree",
                        4.2796338531187885
                    ]
                ]
            }
        },
        "tKwnms5iRBU-2250": {
            "id": "tKwnms5iRBU-2250",
            "heat": 0.403,
            "start": 2250.0,
            "text": " I'm still going to have n minus 1 edges. The worry, I guess, is that things become disconnected when you do that, but that's essentially not going to happen because if I think of removing e prime, again, that disconnects the tree into two parts. And I know, by this path, that one part contains this vertex, another part contains this vertex, and I know that this vertex is connected to u and this vertex is connected to v. Maybe I should call this u prime and v prime. I know u and u prime are connected by a path. I know v and v prime are connected by a path. But I know that by deleting e prime, u prime and v prime are not connected to each other. Therefore, u and v are not connected to each other, after removing e prime. So when I add in e, I newly connect u and v again, and so everything's connected back together. I have exactly the right number of edges. Therefore, I'm a spanning tree. So that's the graph three theory part. Now the interesting part from a greedy algorithm is to prove to this is minimum, that the weight is not too big. So let's do that over here. So I have the weight of T star minus e plus-- minus e",
            "metrics": {
                "relativeDCReadability": 1.1460738985762609,
                "lexicalDiversity": 0.5064935064935064,
                "posComposition": {
                    "PRP": 0.065,
                    "VBP": 0.087,
                    "RB": 0.082,
                    "VBG": 0.022,
                    "TO": 0.035,
                    "VB": 0.03,
                    "JJ": 0.104,
                    "CC": 0.065,
                    "CD": 0.017,
                    "VBZ": 0.052,
                    "DT": 0.108,
                    "NN": 0.147,
                    "IN": 0.091,
                    "NNS": 0.017,
                    "VBN": 0.035,
                    "WRB": 0.009,
                    "WDT": 0.004,
                    "MD": 0.004,
                    "NNP": 0.013,
                    "POS": 0.009,
                    ":": 0.004
                },
                "syllableRate": 2.567,
                "topicScores": [
                    [
                        "prime",
                        0.24773691247486232
                    ],
                    [
                        "u",
                        0.2906922735881096
                    ],
                    [
                        "v",
                        0.30187315025582534
                    ],
                    [
                        "vertex",
                        0.3601165985544601
                    ],
                    [
                        "path",
                        0.41241627647975637
                    ],
                    [
                        "edge",
                        0.5412583661245737
                    ],
                    [
                        "tree",
                        0.5672419546830402
                    ],
                    [
                        "weight",
                        0.5799565979707125
                    ],
                    [
                        "T",
                        0.7038128433995297
                    ],
                    [
                        "worry",
                        0.8663227500348236
                    ],
                    [
                        "thing",
                        0.8868989692017375
                    ],
                    [
                        "disconnected",
                        0.8868989692017375
                    ],
                    [
                        "big",
                        0.919993171381216
                    ],
                    [
                        "theory",
                        0.9323462784372915
                    ],
                    [
                        "minimum",
                        0.9335423344765161
                    ],
                    [
                        "right",
                        0.9352499125509796
                    ],
                    [
                        "number",
                        0.9352499125509796
                    ],
                    [
                        "graph",
                        0.9379840861030624
                    ],
                    [
                        "interesting",
                        0.9390869826778949
                    ],
                    [
                        "greedy",
                        0.9390869826778949
                    ],
                    [
                        "algorithm",
                        0.9390869826778949
                    ],
                    [
                        "star",
                        0.9409263052383529
                    ],
                    [
                        "plus--",
                        0.9409263052383529
                    ],
                    [
                        "v prime",
                        1.1525288692562556
                    ],
                    [
                        "e prime",
                        1.3470487159941016
                    ],
                    [
                        "T star",
                        1.9606472396014523
                    ],
                    [
                        "e plus--",
                        5.018079294535379
                    ],
                    [
                        "right number",
                        6.980361857014243
                    ],
                    [
                        "greedy algorithm",
                        7.4662793916471895
                    ]
                ],
                "topTopicSimilarity": 0.3793103448275862,
                "sharedTopicScores": [
                    [
                        "vertex",
                        0.3601165985544601
                    ],
                    [
                        "edge",
                        0.5412583661245737
                    ],
                    [
                        "tree",
                        0.5672419546830402
                    ],
                    [
                        "weight",
                        0.5799565979707125
                    ],
                    [
                        "T",
                        0.7038128433995297
                    ],
                    [
                        "thing",
                        0.8868989692017375
                    ],
                    [
                        "minimum",
                        0.9335423344765161
                    ],
                    [
                        "graph",
                        0.9379840861030624
                    ],
                    [
                        "greedy",
                        0.9390869826778949
                    ],
                    [
                        "algorithm",
                        0.9390869826778949
                    ],
                    [
                        "T star",
                        1.9606472396014523
                    ]
                ]
            }
        },
        "tKwnms5iRBU-2340": {
            "id": "tKwnms5iRBU-2340",
            "heat": 0.386,
            "start": 2340.0,
            "text": " prime plus e. By linearity, this is just the weight of T star minus the weight e prime plus the weight of e. And now we're going to use this property, we haven't that yet, e is a least-weight edge crossing the cut. So e prime crosses the cut, so does e, but e is the smallest possible weight you could have crossing the cut. That means that-- I'll put that over here-- the weight of e is less than or equal to the weight of e prime, because e prime is a particular edge crossing the cut, e was the smallest weight of them. So that tells us something about this. Signs are so difficult. I think that means that this is negative or zero. So this should be less than or equal to w of T star, and that's what I want, because that says the weight of this spanning tree is less than or equal to the optimum weight, the minimum weight. So that means, actually, this must be minimum. So what I've done is I've constructed a new minimum spanning tree. It's just as good as T star, but now it includes my edge e, and that's what I wanted to prove. There is a minimum spanning tree that contains e, provided e is the minimum weight edge crossing a cut.",
            "metrics": {
                "relativeDCReadability": 1.1020138957804824,
                "lexicalDiversity": 0.48936170212765956,
                "posComposition": {
                    "JJ": 0.098,
                    "CC": 0.051,
                    "IN": 0.094,
                    "NN": 0.157,
                    "DT": 0.14,
                    "VBZ": 0.089,
                    "RB": 0.051,
                    "NNP": 0.026,
                    "VBD": 0.017,
                    "PRP": 0.055,
                    "VBP": 0.034,
                    "VBG": 0.026,
                    "TO": 0.021,
                    "VB": 0.034,
                    "VBN": 0.026,
                    "JJS": 0.009,
                    "MD": 0.017,
                    ":": 0.009,
                    "RBR": 0.009,
                    "NNS": 0.004,
                    "CD": 0.004,
                    "JJR": 0.004,
                    "WP": 0.013,
                    "PRP$": 0.004,
                    "EX": 0.004,
                    "WDT": 0.004
                },
                "syllableRate": 2.458,
                "topicScores": [
                    [
                        "weight",
                        0.23242946445500268
                    ],
                    [
                        "T",
                        0.29594880477988644
                    ],
                    [
                        "cut",
                        0.3065092242362526
                    ],
                    [
                        "prime",
                        0.32718998339367206
                    ],
                    [
                        "minimum",
                        0.3286255948807628
                    ],
                    [
                        "edge",
                        0.3736104396718503
                    ],
                    [
                        "equal",
                        0.4229160761272115
                    ],
                    [
                        "star",
                        0.4336967073893722
                    ],
                    [
                        "tree",
                        0.4441351813262292
                    ],
                    [
                        "T star",
                        0.5275550999627863
                    ],
                    [
                        "e.",
                        0.5398394154754127
                    ],
                    [
                        "small",
                        0.5436657175093471
                    ],
                    [
                        "spanning",
                        0.5641031224159115
                    ],
                    [
                        "linearity",
                        0.8719072107988343
                    ],
                    [
                        "property",
                        0.8921543598721142
                    ],
                    [
                        "that--",
                        0.894186031077669
                    ],
                    [
                        "sign",
                        0.9076500206066835
                    ],
                    [
                        "difficult",
                        0.9076500206066835
                    ],
                    [
                        "possible",
                        0.9103538153651562
                    ],
                    [
                        "here--",
                        0.9215509046228663
                    ],
                    [
                        "particular",
                        0.9215509046228663
                    ],
                    [
                        "optimum",
                        0.9261333809947766
                    ],
                    [
                        "negative",
                        0.9299265607426213
                    ],
                    [
                        "new",
                        0.9346209819860208
                    ],
                    [
                        "good",
                        0.9357795933473291
                    ],
                    [
                        "e prime",
                        1.407827088313472
                    ],
                    [
                        "minimum weight",
                        1.71135106942937
                    ],
                    [
                        "weight edge",
                        1.8542803382224018
                    ],
                    [
                        "minimum spanning",
                        1.9925808390998412
                    ],
                    [
                        "spanning tree",
                        2.434615938701092
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "weight",
                        0.23242946445500268
                    ],
                    [
                        "T",
                        0.29594880477988644
                    ],
                    [
                        "cut",
                        0.3065092242362526
                    ],
                    [
                        "minimum",
                        0.3286255948807628
                    ],
                    [
                        "edge",
                        0.3736104396718503
                    ],
                    [
                        "tree",
                        0.4441351813262292
                    ],
                    [
                        "T star",
                        0.5275550999627863
                    ],
                    [
                        "minimum weight",
                        1.71135106942937
                    ],
                    [
                        "weight edge",
                        1.8542803382224018
                    ],
                    [
                        "minimum spanning",
                        1.9925808390998412
                    ],
                    [
                        "spanning tree",
                        2.434615938701092
                    ]
                ]
            }
        },
        "tKwnms5iRBU-2430": {
            "id": "tKwnms5iRBU-2430",
            "heat": 0.178,
            "start": 2430.0,
            "text": " So that proves this greedy choice property. And I'm going to observe one extra feature of this proof, which is that-- so we cut and paste, in the sense that we removed one thing, which was e prime, and we added a different thing, e. And a useful feature is that the things that we change only are edges that cross the cut. So we only, let's say, modified edges that cross the cut. I'm going to use that later. We removed one edge that crossed the cut, and we put in the one that we wanted. OK so far? There's a bunch of lemmas. Now we actually get to do algorithms using these lemmas. We'll start with maybe the less obvious algorithm, but it's nice because it's very much like Dijkstra. It follows very closely to the Dijkstra model. And then we'll get to the one that we've all been thinking about, which was choose a minimum weight edge, contract, and repeat. That doesn't-- well, that does work, but the obvious way is,",
            "metrics": {
                "relativeDCReadability": 0.8364770178388322,
                "lexicalDiversity": 0.5,
                "posComposition": {
                    "RB": 0.081,
                    "IN": 0.086,
                    "VBZ": 0.054,
                    "DT": 0.102,
                    "JJ": 0.059,
                    "NN": 0.134,
                    "CC": 0.048,
                    "PRP": 0.091,
                    "VBP": 0.048,
                    "VBG": 0.022,
                    "TO": 0.027,
                    "VB": 0.048,
                    "CD": 0.016,
                    "WDT": 0.048,
                    ":": 0.011,
                    "VBD": 0.043,
                    "NNS": 0.016,
                    "NNP": 0.022,
                    "POS": 0.005,
                    "VBN": 0.011,
                    "EX": 0.005,
                    "RP": 0.005,
                    "MD": 0.011,
                    "RBR": 0.005
                },
                "syllableRate": 2.008,
                "topicScores": [
                    [
                        "cut",
                        0.3223719826165622
                    ],
                    [
                        "edge",
                        0.3603775460010021
                    ],
                    [
                        "Dijkstra",
                        0.40436265748843353
                    ],
                    [
                        "thing",
                        0.41780466921187276
                    ],
                    [
                        "lemma",
                        0.5301219222586325
                    ],
                    [
                        "feature",
                        0.5340599598853406
                    ],
                    [
                        "obvious",
                        0.5588461632341358
                    ],
                    [
                        "algorithm",
                        0.5631717214433328
                    ],
                    [
                        "property",
                        0.744470580972231
                    ],
                    [
                        "choice",
                        0.7824594485493455
                    ],
                    [
                        "e.",
                        0.7963792879335484
                    ],
                    [
                        "greedy",
                        0.7986112480576989
                    ],
                    [
                        "proof",
                        0.8440734448916999
                    ],
                    [
                        "prime",
                        0.8440734448916999
                    ],
                    [
                        "different",
                        0.8440734448916999
                    ],
                    [
                        "extra",
                        0.8564896091637205
                    ],
                    [
                        "that--",
                        0.8564896091637205
                    ],
                    [
                        "sense",
                        0.8564896091637205
                    ],
                    [
                        "useful",
                        0.878835102020681
                    ],
                    [
                        "model",
                        0.8922075147997396
                    ],
                    [
                        "contract",
                        0.9040589132559257
                    ],
                    [
                        "doesn't--",
                        0.9057044855682477
                    ],
                    [
                        "bunch",
                        0.9117927525543651
                    ],
                    [
                        "weight",
                        0.912595565763803
                    ],
                    [
                        "way",
                        0.9141086290519864
                    ],
                    [
                        "nice",
                        0.9166184237233364
                    ],
                    [
                        "minimum",
                        0.9200721046579745
                    ],
                    [
                        "Dijkstra model",
                        1.3354417548233024
                    ],
                    [
                        "choice property",
                        1.3953130827397107
                    ],
                    [
                        "greedy choice",
                        1.6658201213442942
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "cut",
                        0.3223719826165622
                    ],
                    [
                        "edge",
                        0.3603775460010021
                    ],
                    [
                        "Dijkstra",
                        0.40436265748843353
                    ],
                    [
                        "thing",
                        0.41780466921187276
                    ],
                    [
                        "algorithm",
                        0.5631717214433328
                    ],
                    [
                        "greedy",
                        0.7986112480576989
                    ],
                    [
                        "weight",
                        0.912595565763803
                    ],
                    [
                        "minimum",
                        0.9200721046579745
                    ]
                ]
            }
        },
        "tKwnms5iRBU-2520": {
            "id": "tKwnms5iRBU-2520",
            "heat": 0.23,
            "start": 2520.0,
            "text": " maybe, slow. We want to do it in near linear time. Let's start with the Dijkstra-like algorithm. This is Prim's algorithm. Maybe I'll start by writing down the algorithm. It's a little long. In general, the idea-- we want to apply this greedy choice property. To apply the greedy choice property, you need to choose a cut. With Prim, we're going to start out with an obvious cut, which is a single vertex. If we have a single vertex S, and we say that is our set capital S, then you know, there's some images coming out of it. There's basically S versus everyone else. That's a cut. And so I could take the minimum weight edge coming out of that cut and put that in my minimum spanning tree. So when I do that, I put it in my minimum spanning tree because I know it's in some minimum spanning tree. Now, I'm going to make capital S grow a little bit to include that vertex, and repeat.",
            "metrics": {
                "relativeDCReadability": 0.952231442911576,
                "lexicalDiversity": 0.5055555555555555,
                "posComposition": {
                    "RB": 0.044,
                    "JJ": 0.089,
                    "PRP": 0.1,
                    "VBP": 0.056,
                    "TO": 0.039,
                    "VB": 0.056,
                    "IN": 0.111,
                    "NN": 0.161,
                    "NNP": 0.044,
                    "POS": 0.011,
                    "DT": 0.111,
                    "VBZ": 0.044,
                    "MD": 0.011,
                    "VBG": 0.028,
                    "RP": 0.011,
                    ":": 0.006,
                    "WDT": 0.006,
                    "CC": 0.022,
                    "PRP$": 0.017,
                    "EX": 0.011,
                    "NNS": 0.006,
                    "VBD": 0.011,
                    "WRB": 0.006
                },
                "syllableRate": 2.058,
                "topicScores": [
                    [
                        "S",
                        0.33212586524391524
                    ],
                    [
                        "minimum",
                        0.3771863894163079
                    ],
                    [
                        "cut",
                        0.3807346042103278
                    ],
                    [
                        "algorithm",
                        0.3944939863711194
                    ],
                    [
                        "Prim",
                        0.39615294848913474
                    ],
                    [
                        "spanning",
                        0.427358868977287
                    ],
                    [
                        "tree",
                        0.427358868977287
                    ],
                    [
                        "vertex",
                        0.43448950323544505
                    ],
                    [
                        "property",
                        0.5381404052899468
                    ],
                    [
                        "choice",
                        0.5418034387656588
                    ],
                    [
                        "greedy",
                        0.5485381569055372
                    ],
                    [
                        "single",
                        0.5551925829239927
                    ],
                    [
                        "little",
                        0.5656477062058516
                    ],
                    [
                        "capital",
                        0.5673576837236632
                    ],
                    [
                        "Dijkstra",
                        0.5714160835188847
                    ],
                    [
                        "slow",
                        0.7482260589525251
                    ],
                    [
                        "time",
                        0.8337287953347003
                    ],
                    [
                        "linear",
                        0.8609267888538586
                    ],
                    [
                        "like",
                        0.8716282336634744
                    ],
                    [
                        "long",
                        0.8882360720523612
                    ],
                    [
                        "general",
                        0.9029040258275128
                    ],
                    [
                        "idea--",
                        0.9115333824490772
                    ],
                    [
                        "obvious",
                        0.9172475254954351
                    ],
                    [
                        "image",
                        0.9263152292063884
                    ],
                    [
                        "weight",
                        0.9306425010194974
                    ],
                    [
                        "edge",
                        0.9306425010194974
                    ],
                    [
                        "bit",
                        0.9327185433764074
                    ],
                    [
                        "capital S",
                        0.9359052964773192
                    ],
                    [
                        "spanning tree",
                        1.3555795846055894
                    ],
                    [
                        "vertex S",
                        1.3653008966112006
                    ]
                ],
                "topTopicSimilarity": 0.43333333333333335,
                "sharedTopicScores": [
                    [
                        "S",
                        0.33212586524391524
                    ],
                    [
                        "minimum",
                        0.3771863894163079
                    ],
                    [
                        "cut",
                        0.3807346042103278
                    ],
                    [
                        "algorithm",
                        0.3944939863711194
                    ],
                    [
                        "tree",
                        0.427358868977287
                    ],
                    [
                        "vertex",
                        0.43448950323544505
                    ],
                    [
                        "greedy",
                        0.5485381569055372
                    ],
                    [
                        "Dijkstra",
                        0.5714160835188847
                    ],
                    [
                        "like",
                        0.8716282336634744
                    ],
                    [
                        "weight",
                        0.9306425010194974
                    ],
                    [
                        "edge",
                        0.9306425010194974
                    ],
                    [
                        "capital S",
                        0.9359052964773192
                    ],
                    [
                        "spanning tree",
                        1.3555795846055894
                    ]
                ]
            }
        },
        "tKwnms5iRBU-2610": {
            "id": "tKwnms5iRBU-2610",
            "heat": 0.526,
            "start": 2610.0,
            "text": " That's actually also a very natural algorithm. Start with a tiny s and just keep growing it one by one. At each stage use this lemma to guarantee the edge I'm adding is still in the minimum spanning tree. So to make that work out, we're always going to need to choose the minimum weight edge that's coming out of the cut. And we'll do that using a priority queue, just like we do in Dijkstra. So for every vertex that's in V minus S, we're going to have that vertex in the priority queue. And the question is, what is the key value of that node stored in the priority queue? So the invariant I'm going to have is that the key of v is the minimum of the weights of the edges that cross the cut into v. So for vertex v, I want to look at the-- I'm not going to compute this every time, I'm only going to maintain it. I want the minimum weight of an edge that starts in S and goes to v, which is not in S because v in Q-- Q only stores vertices that are not in S-- I want the key value to be that minimum weight so if I choose",
            "metrics": {
                "relativeDCReadability": 1.0345603693926926,
                "lexicalDiversity": 0.4533333333333333,
                "posComposition": {
                    "DT": 0.133,
                    "VBZ": 0.049,
                    "RB": 0.062,
                    "JJ": 0.036,
                    "NNS": 0.027,
                    "VBP": 0.062,
                    "IN": 0.147,
                    "NN": 0.151,
                    "CC": 0.022,
                    "VB": 0.058,
                    "VBG": 0.04,
                    "PRP": 0.062,
                    "CD": 0.009,
                    "TO": 0.049,
                    "WDT": 0.027,
                    "MD": 0.004,
                    "NNP": 0.04,
                    "WP": 0.004,
                    "VBN": 0.004,
                    ":": 0.013
                },
                "syllableRate": 2.442,
                "topicScores": [
                    [
                        "minimum",
                        0.31630145686496625
                    ],
                    [
                        "S",
                        0.31631829904015596
                    ],
                    [
                        "edge",
                        0.3526791938854642
                    ],
                    [
                        "weight",
                        0.3574788034091511
                    ],
                    [
                        "vertex",
                        0.3656040787040938
                    ],
                    [
                        "priority",
                        0.3843106214828534
                    ],
                    [
                        "queue",
                        0.38779484928422986
                    ],
                    [
                        "key",
                        0.41591953139217674
                    ],
                    [
                        "cut",
                        0.5289066510544512
                    ],
                    [
                        "value",
                        0.5413137991948522
                    ],
                    [
                        "Dijkstra",
                        0.5879101713963271
                    ],
                    [
                        "Q--",
                        0.62951331023602
                    ],
                    [
                        "V",
                        0.6399497600517363
                    ],
                    [
                        "Q-- Q",
                        0.665112105212034
                    ],
                    [
                        "priority queue",
                        0.7380365989954627
                    ],
                    [
                        "algorithm",
                        0.7930441701007891
                    ],
                    [
                        "natural",
                        0.8225899168536193
                    ],
                    [
                        "tree",
                        0.8400081748369127
                    ],
                    [
                        "tiny",
                        0.860314859540962
                    ],
                    [
                        "spanning",
                        0.8639989870044151
                    ],
                    [
                        "work",
                        0.8734972192446288
                    ],
                    [
                        "stage",
                        0.8741116584523062
                    ],
                    [
                        "lemma",
                        0.8741116584523062
                    ],
                    [
                        "question",
                        0.8892676998701486
                    ],
                    [
                        "time",
                        0.8951840179356763
                    ],
                    [
                        "node",
                        0.8977238744017735
                    ],
                    [
                        "invariant",
                        0.9007344485658774
                    ],
                    [
                        "minimum weight",
                        1.0560013317777084
                    ],
                    [
                        "key value",
                        1.5727017886573391
                    ],
                    [
                        "natural algorithm",
                        1.8764573473071855
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "minimum",
                        0.31630145686496625
                    ],
                    [
                        "S",
                        0.31631829904015596
                    ],
                    [
                        "edge",
                        0.3526791938854642
                    ],
                    [
                        "weight",
                        0.3574788034091511
                    ],
                    [
                        "vertex",
                        0.3656040787040938
                    ],
                    [
                        "cut",
                        0.5289066510544512
                    ],
                    [
                        "Dijkstra",
                        0.5879101713963271
                    ],
                    [
                        "V",
                        0.6399497600517363
                    ],
                    [
                        "algorithm",
                        0.7930441701007891
                    ],
                    [
                        "tree",
                        0.8400081748369127
                    ],
                    [
                        "minimum weight",
                        1.0560013317777084
                    ]
                ]
            }
        },
        "tKwnms5iRBU-2700": {
            "id": "tKwnms5iRBU-2700",
            "heat": 0.342,
            "start": 2700.0,
            "text": " the overall minimum vertex, that gives me the edge of minimum weight that crosses the cut. OK? I've sort of divided this minimum vertex by vertex. For every vertex over here, I'm going to say, what's the minimum incoming weight from somebody over here? What's the minimum incoming weight from someone over here to there? To here? Take the minimum of those things. And of course, the min of all those will be the min of all those edges. OK, that's how I'm dividing things up. And this will be easier to maintain, but let me first initialize everything. OK, I guess we're going to actually initialize with S being the empty set, so Q will store everybody, except I'm going to get things started by setting for particular vertex little s. I'm going to set its key to zero. It doesn't matter who little s is. That's just your start vertex. Just pick one vertex and set its key to zero. That will force it to be chosen first because for everyone else, for v not equal to S,",
            "metrics": {
                "relativeDCReadability": 0.9430212464511288,
                "lexicalDiversity": 0.4973821989528796,
                "posComposition": {
                    "DT": 0.094,
                    "JJ": 0.079,
                    "NN": 0.152,
                    "WDT": 0.016,
                    "VBZ": 0.042,
                    "PRP": 0.058,
                    "IN": 0.105,
                    "NNP": 0.026,
                    "VBP": 0.042,
                    "VBN": 0.016,
                    "RB": 0.063,
                    "VBG": 0.037,
                    "TO": 0.058,
                    "VB": 0.099,
                    "WP": 0.016,
                    "NNS": 0.021,
                    "CC": 0.021,
                    "MD": 0.021,
                    "PDT": 0.005,
                    "WRB": 0.005,
                    "JJR": 0.005,
                    "PRP$": 0.016,
                    "CD": 0.005
                },
                "syllableRate": 2.267,
                "topicScores": [
                    [
                        "minimum",
                        0.30084121688369236
                    ],
                    [
                        "vertex",
                        0.3036173565923759
                    ],
                    [
                        "set",
                        0.3931894635057162
                    ],
                    [
                        "weight",
                        0.41824928452989235
                    ],
                    [
                        "S",
                        0.4294356873267053
                    ],
                    [
                        "thing",
                        0.44979556530200493
                    ],
                    [
                        "incoming",
                        0.5277732195323513
                    ],
                    [
                        "key",
                        0.5528474095007939
                    ],
                    [
                        "edge",
                        0.5555262560910774
                    ],
                    [
                        "little",
                        0.5772722573737213
                    ],
                    [
                        "start",
                        0.577752975899878
                    ],
                    [
                        "Q",
                        0.6790926566822393
                    ],
                    [
                        "cut",
                        0.774137844373976
                    ],
                    [
                        "overall",
                        0.8106556944242487
                    ],
                    [
                        "course",
                        0.9177651821835608
                    ],
                    [
                        "easy",
                        0.9293330821841845
                    ],
                    [
                        "particular",
                        0.9309270636662808
                    ],
                    [
                        "equal",
                        0.9363372981534146
                    ],
                    [
                        "incoming weight",
                        1.4702901660432843
                    ],
                    [
                        "minimum incoming",
                        1.518612688350319
                    ],
                    [
                        "minimum vertex",
                        2.10364197439041
                    ],
                    [
                        "overall minimum",
                        2.1711191321107908
                    ],
                    [
                        "minimum weight",
                        2.4069226681484346
                    ],
                    [
                        "little s.",
                        4.873486780726208
                    ],
                    [
                        "vertex little",
                        5.001988343041529
                    ],
                    [
                        "start vertex",
                        5.027093374387437
                    ],
                    [
                        "minimum incoming weight",
                        5.384387898034085
                    ],
                    [
                        "particular vertex",
                        5.5762148971360626
                    ],
                    [
                        "overall minimum vertex",
                        11.355247574175655
                    ],
                    [
                        "particular vertex little",
                        41.786775526476575
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "minimum",
                        0.30084121688369236
                    ],
                    [
                        "vertex",
                        0.3036173565923759
                    ],
                    [
                        "set",
                        0.3931894635057162
                    ],
                    [
                        "weight",
                        0.41824928452989235
                    ],
                    [
                        "S",
                        0.4294356873267053
                    ],
                    [
                        "thing",
                        0.44979556530200493
                    ],
                    [
                        "edge",
                        0.5555262560910774
                    ],
                    [
                        "cut",
                        0.774137844373976
                    ],
                    [
                        "minimum weight",
                        2.4069226681484346
                    ]
                ]
            }
        },
        "tKwnms5iRBU-2790": {
            "id": "tKwnms5iRBU-2790",
            "heat": 0.367,
            "start": 2790.0,
            "text": " I'm going to set the key to infinity, because we haven't yet seen any edges that go in there, but we'll change that in a moment. OK, so that was the initialization, now we're going to do a loop. We're going to keep going until the Q is empty, because when the Q is empty, that means S is everybody, and at that point, we'll have a spanning tree on the whole graph, and it better be minimum. OK, and we're going to do that by extracting the minimum from our priority Q. When we remove Q-- we remove vertex u from the queue Q, this means that we're adding u to S. OK, by taking it out of Q, that means it enters S, by the invariant at the top. So now we need to update this invariant, that all the key values are correct. As soon as we move a vertex into S, now there are new edges we have to consider from S to not S,",
            "metrics": {
                "relativeDCReadability": 0.9617143525956027,
                "lexicalDiversity": 0.42134831460674155,
                "posComposition": {
                    "PRP": 0.09,
                    "VBP": 0.079,
                    "VBG": 0.045,
                    "TO": 0.051,
                    "VB": 0.056,
                    "DT": 0.112,
                    "NN": 0.09,
                    "IN": 0.124,
                    "RB": 0.051,
                    "VBN": 0.006,
                    "NNS": 0.017,
                    "WDT": 0.017,
                    "CC": 0.022,
                    "MD": 0.011,
                    "NNP": 0.079,
                    "VBD": 0.006,
                    "VBZ": 0.039,
                    "JJ": 0.067,
                    "WRB": 0.011,
                    "JJR": 0.006,
                    "PRP$": 0.006,
                    ":": 0.006,
                    "PDT": 0.006,
                    "EX": 0.006
                },
                "syllableRate": 1.975,
                "topicScores": [
                    [
                        "Q",
                        0.23749247008867957
                    ],
                    [
                        "S",
                        0.2407020644163024
                    ],
                    [
                        "minimum",
                        0.5278115348451794
                    ],
                    [
                        "key",
                        0.5309383311732258
                    ],
                    [
                        "edge",
                        0.5425108370408772
                    ],
                    [
                        "invariant",
                        0.5438669643959024
                    ],
                    [
                        "vertex",
                        0.550635101596952
                    ],
                    [
                        "S. OK",
                        0.6148998581487645
                    ],
                    [
                        "moment",
                        0.7967161889834132
                    ],
                    [
                        "infinity",
                        0.8258528228043037
                    ],
                    [
                        "loop",
                        0.8264832562864364
                    ],
                    [
                        "initialization",
                        0.8521451614543997
                    ],
                    [
                        "point",
                        0.8666237877931952
                    ],
                    [
                        "graph",
                        0.8666237877931952
                    ],
                    [
                        "correct",
                        0.8670806443166407
                    ],
                    [
                        "priority",
                        0.8759650219494205
                    ],
                    [
                        "tree",
                        0.8765691685010156
                    ],
                    [
                        "queue",
                        0.8825783783438311
                    ],
                    [
                        "value",
                        0.8961270122468903
                    ],
                    [
                        "new",
                        0.899773294381294
                    ],
                    [
                        "queue Q",
                        0.9481382533843765
                    ],
                    [
                        "key value",
                        3.0668000245216853
                    ],
                    [
                        "new edge",
                        3.418492472270613
                    ],
                    [
                        "vertex u",
                        3.445498767523421
                    ]
                ],
                "topTopicSimilarity": 0.2916666666666667,
                "sharedTopicScores": [
                    [
                        "S",
                        0.2407020644163024
                    ],
                    [
                        "minimum",
                        0.5278115348451794
                    ],
                    [
                        "edge",
                        0.5425108370408772
                    ],
                    [
                        "vertex",
                        0.550635101596952
                    ],
                    [
                        "S. OK",
                        0.6148998581487645
                    ],
                    [
                        "graph",
                        0.8666237877931952
                    ],
                    [
                        "tree",
                        0.8765691685010156
                    ]
                ]
            }
        },
        "tKwnms5iRBU-2880": {
            "id": "tKwnms5iRBU-2880",
            "heat": 0.597,
            "start": 2880.0,
            "text": " and we do that just by looking at all of the neighbors of u. I haven't written this in a long time, but this is how it's usually written in Dijkstra, except in Dijkstra, these are the outgoing edges from u and v are the neighbors. Here, it's an undirected graph, so these are all of the neighbors v of u. This as an adjacency list. OK, so we're looking at u, which has just been added to S, and we're looking at the edges. We want to look at the edge as they go to V minus S, only those ones. And then for those vertices v, we need to update their keys, because it used to just count all of these edges that went from the rest of S to v. And now we have a new edge uv that v needs to consider, because u just got added to S. So the first thing I'm going say is if v in in Q. So we're just going to store a Boolean for every vertex about whether it's in the queue, and so when I extract it from the queue, I just set that Boolean to false. Being in the queue is the same as being not in S, this is what Q represents. So Q is over here, kind of. So if we're in the queue, same as saying v is not in S,",
            "metrics": {
                "relativeDCReadability": 0.9891672001718417,
                "lexicalDiversity": 0.37398373983739835,
                "posComposition": {
                    "CC": 0.028,
                    "PRP": 0.073,
                    "VBP": 0.065,
                    "DT": 0.13,
                    "RB": 0.073,
                    "IN": 0.171,
                    "VBG": 0.028,
                    "NNS": 0.041,
                    "NN": 0.093,
                    "VBN": 0.02,
                    "JJ": 0.037,
                    "VBZ": 0.053,
                    "WRB": 0.008,
                    "NNP": 0.073,
                    "WDT": 0.012,
                    "TO": 0.041,
                    "VB": 0.028,
                    "PRP$": 0.004,
                    "VBD": 0.016,
                    "WP": 0.004
                },
                "syllableRate": 2.508,
                "topicScores": [
                    [
                        "S",
                        0.21758590778784256
                    ],
                    [
                        "Dijkstra",
                        0.23306011107102037
                    ],
                    [
                        "v",
                        0.30334046853505636
                    ],
                    [
                        "edge",
                        0.3086881613566037
                    ],
                    [
                        "neighbor",
                        0.343463857688085
                    ],
                    [
                        "queue",
                        0.3532344479186946
                    ],
                    [
                        "Q",
                        0.39217733553368916
                    ],
                    [
                        "Boolean",
                        0.4020490290601833
                    ],
                    [
                        "u.",
                        0.48525730988168064
                    ],
                    [
                        "vertex",
                        0.539961950439766
                    ],
                    [
                        "long",
                        0.7769415681183265
                    ],
                    [
                        "time",
                        0.7769415681183265
                    ],
                    [
                        "outgoing",
                        0.7902400218224247
                    ],
                    [
                        "list",
                        0.8160731329485225
                    ],
                    [
                        "undirected",
                        0.839798418119651
                    ],
                    [
                        "graph",
                        0.839798418119651
                    ],
                    [
                        "adjacency",
                        0.839798418119651
                    ],
                    [
                        "one",
                        0.8587420735737461
                    ],
                    [
                        "false",
                        0.8848573451362726
                    ],
                    [
                        "key",
                        0.8864494248902051
                    ],
                    [
                        "rest",
                        0.8941089751942748
                    ],
                    [
                        "new",
                        0.8998655112357912
                    ],
                    [
                        "thing",
                        0.9041892993527332
                    ],
                    [
                        "long time",
                        1.5229474704212425
                    ],
                    [
                        "outgoing edge",
                        1.7068720814830944
                    ],
                    [
                        "adjacency list",
                        2.1780023873463197
                    ],
                    [
                        "undirected graph",
                        2.3928367121935885
                    ],
                    [
                        "new edge",
                        2.5466686999111614
                    ],
                    [
                        "vertex v",
                        2.6873489541853655
                    ]
                ],
                "topTopicSimilarity": 0.20689655172413793,
                "sharedTopicScores": [
                    [
                        "S",
                        0.21758590778784256
                    ],
                    [
                        "Dijkstra",
                        0.23306011107102037
                    ],
                    [
                        "edge",
                        0.3086881613566037
                    ],
                    [
                        "vertex",
                        0.539961950439766
                    ],
                    [
                        "graph",
                        0.839798418119651
                    ],
                    [
                        "thing",
                        0.9041892993527332
                    ]
                ]
            }
        },
        "tKwnms5iRBU-2970": {
            "id": "tKwnms5iRBU-2970",
            "heat": 0.852,
            "start": 2970.0,
            "text": " then we're going to do a check which lets us compute the minimum. This is going to look a lot like a relaxation. Sorry. A couple things going on because I want to compute not just the value of the minimum spanning tree, I actually want to find the minimum spanning tree, so I'm going to store parent pointers. But this is just basically taking a min. I say, if the weight of this edge is smaller than what's currently in the key, then update the key, because the key is supposed to be the min. OK, that's all we need to do to maintain this invariant, this for loop. After the for loop, this property will be restored, v dot key will be that minimum. And furthermore, we kept track of where the minimums came from, so when you end up extracting a vertex, you've already figured out which edge you added to put that into the set. So in fact, u already had a parent, this would be u dot parent, and we want to add that edge into the minimum spanning tree",
            "metrics": {
                "relativeDCReadability": 0.936795791982292,
                "lexicalDiversity": 0.47368421052631576,
                "posComposition": {
                    "RB": 0.053,
                    "PRP": 0.063,
                    "VBP": 0.053,
                    "VBG": 0.032,
                    "TO": 0.053,
                    "VB": 0.079,
                    "DT": 0.153,
                    "NN": 0.174,
                    "WDT": 0.016,
                    "VBZ": 0.037,
                    "IN": 0.105,
                    "NNP": 0.021,
                    "JJ": 0.047,
                    "NNS": 0.016,
                    "CC": 0.016,
                    "JJR": 0.005,
                    "WP": 0.005,
                    "VBN": 0.016,
                    "MD": 0.016,
                    "VBD": 0.021,
                    "WRB": 0.011,
                    "RP": 0.011
                },
                "syllableRate": 2.133,
                "topicScores": [
                    [
                        "minimum",
                        0.2927436963966226
                    ],
                    [
                        "key",
                        0.3730299430199143
                    ],
                    [
                        "tree",
                        0.41018238050569183
                    ],
                    [
                        "parent",
                        0.44105669370917244
                    ],
                    [
                        "edge",
                        0.4460496026037941
                    ],
                    [
                        "loop",
                        0.5352066486505378
                    ],
                    [
                        "dot",
                        0.5546602909858709
                    ],
                    [
                        "check",
                        0.7920310077933347
                    ],
                    [
                        "relaxation",
                        0.8080994375843878
                    ],
                    [
                        "lot",
                        0.8514487309386194
                    ],
                    [
                        "pointer",
                        0.8522833530253736
                    ],
                    [
                        "couple",
                        0.8768944145318026
                    ],
                    [
                        "set",
                        0.8829039887790949
                    ],
                    [
                        "thing",
                        0.8870468345226565
                    ],
                    [
                        "value",
                        0.8870468345226565
                    ],
                    [
                        "invariant",
                        0.8964068129613336
                    ],
                    [
                        "property",
                        0.9000443687290398
                    ],
                    [
                        "weight",
                        0.9008379398371358
                    ],
                    [
                        "small",
                        0.9008379398371358
                    ],
                    [
                        "vertex",
                        0.9029940183429103
                    ],
                    [
                        "fact",
                        0.9054461221065849
                    ],
                    [
                        "spanning",
                        0.9054461221065849
                    ],
                    [
                        "track",
                        0.9112119626703419
                    ],
                    [
                        "spanning tree",
                        2.8879658015566085
                    ],
                    [
                        "minimum spanning",
                        2.908199940372111
                    ],
                    [
                        "parent pointer",
                        3.029180218871761
                    ],
                    [
                        "dot key",
                        3.1919050548049093
                    ],
                    [
                        "dot parent",
                        3.4539418840257454
                    ],
                    [
                        "couple thing",
                        3.501390325499923
                    ],
                    [
                        "v dot",
                        3.7902629111152892
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "minimum",
                        0.2927436963966226
                    ],
                    [
                        "tree",
                        0.41018238050569183
                    ],
                    [
                        "edge",
                        0.4460496026037941
                    ],
                    [
                        "set",
                        0.8829039887790949
                    ],
                    [
                        "thing",
                        0.8870468345226565
                    ],
                    [
                        "weight",
                        0.9008379398371358
                    ],
                    [
                        "vertex",
                        0.9029940183429103
                    ],
                    [
                        "spanning tree",
                        2.8879658015566085
                    ],
                    [
                        "minimum spanning",
                        2.908199940372111
                    ]
                ]
            }
        },
        "tKwnms5iRBU-3060": {
            "id": "tKwnms5iRBU-3060",
            "heat": 0.674,
            "start": 3060.0,
            "text": " when we add u to S. Overall, let me write why this is happening. At the end of the algorithm, for every vertex v, we want the v dot parent. And that will be our minimum spanning tree. Those are the edges that form the minimum spanning tree. Let's prove that this works. Actually, let's do an example. We've done enough proofs for a while. Let's do it over here. I need a little break. Examples are fun, though easy to make mistakes, so correct me if you see me making a mistake. And let me draw a graph.",
            "metrics": {
                "relativeDCReadability": 0.8059375137191231,
                "lexicalDiversity": 0.5242718446601942,
                "posComposition": {
                    "WRB": 0.019,
                    "PRP": 0.097,
                    "VBP": 0.078,
                    "JJ": 0.087,
                    "TO": 0.019,
                    "NNP": 0.049,
                    "VB": 0.097,
                    "DT": 0.146,
                    "VBZ": 0.019,
                    "VBG": 0.019,
                    "IN": 0.087,
                    "NN": 0.146,
                    "CC": 0.019,
                    "MD": 0.01,
                    "PRP$": 0.01,
                    "NNS": 0.029,
                    "WDT": 0.01,
                    "POS": 0.029,
                    "VBN": 0.01,
                    "RB": 0.019
                },
                "syllableRate": 1.142,
                "topicScores": [
                    [
                        "S. Overall",
                        0.23412358323659663
                    ],
                    [
                        "tree",
                        0.46762223656477553
                    ],
                    [
                        "spanning",
                        0.5156732157957112
                    ],
                    [
                        "minimum",
                        0.5387393349945476
                    ],
                    [
                        "example",
                        0.552414308700662
                    ],
                    [
                        "mistake",
                        0.5615645986431309
                    ],
                    [
                        "parent",
                        0.8151907622839215
                    ],
                    [
                        "algorithm",
                        0.8520991516613556
                    ],
                    [
                        "vertex",
                        0.8520991516613556
                    ],
                    [
                        "dot",
                        0.8520991516613556
                    ],
                    [
                        "end",
                        0.8667368921948737
                    ],
                    [
                        "break",
                        0.8876154849864069
                    ],
                    [
                        "graph",
                        0.8927798113391331
                    ],
                    [
                        "edge",
                        0.8991055399478822
                    ],
                    [
                        "little",
                        0.9116278732058873
                    ],
                    [
                        "fun",
                        0.9138825453829399
                    ],
                    [
                        "easy",
                        0.9138825453829399
                    ],
                    [
                        "proof",
                        0.9154369432619779
                    ],
                    [
                        "spanning tree",
                        0.9694802701515718
                    ],
                    [
                        "minimum spanning",
                        1.4575283500478782
                    ],
                    [
                        "dot parent",
                        2.2746446818088795
                    ],
                    [
                        "vertex v",
                        2.759501966069134
                    ],
                    [
                        "v dot",
                        2.759501966069134
                    ],
                    [
                        "minimum spanning tree",
                        3.3308448422214383
                    ],
                    [
                        "little break",
                        4.240403972505197
                    ]
                ],
                "topTopicSimilarity": 0.36,
                "sharedTopicScores": [
                    [
                        "tree",
                        0.46762223656477553
                    ],
                    [
                        "minimum",
                        0.5387393349945476
                    ],
                    [
                        "algorithm",
                        0.8520991516613556
                    ],
                    [
                        "vertex",
                        0.8520991516613556
                    ],
                    [
                        "graph",
                        0.8927798113391331
                    ],
                    [
                        "edge",
                        0.8991055399478822
                    ],
                    [
                        "spanning tree",
                        0.9694802701515718
                    ],
                    [
                        "minimum spanning",
                        1.4575283500478782
                    ],
                    [
                        "minimum spanning tree",
                        3.3308448422214383
                    ]
                ]
            }
        },
        "tKwnms5iRBU-3150": {
            "id": "tKwnms5iRBU-3150",
            "heat": 0.164,
            "start": 3150.0,
            "text": " OK, weights. 14, 3, 8, 5, 6, 12, 7, 9, 15. 10. OK. Colors. So I want to start at this vertex just because I know it does an interesting thing, or it's a nice example. Here's my weighted undirected graph. I want to compute minimum spanning tree. I'm going to start with a capital S being-- well actually, I start with capital S being nothing, and all of the weights-- all of the key values are initially infinity. So I'm going to write the key values in blue. So initially everything is infinity for every vertex, except for S the value is zero. So all of these things are in my priority queue, and so when I extract from the queue, I of course get S. OK, that's the point of that set up.",
            "metrics": {
                "relativeDCReadability": 1.1346440083005973,
                "lexicalDiversity": 0.5211267605633803,
                "posComposition": {
                    "JJ": 0.063,
                    "NNS": 0.042,
                    "CD": 0.077,
                    "RB": 0.056,
                    "PRP": 0.07,
                    "VBP": 0.07,
                    "TO": 0.028,
                    "VB": 0.028,
                    "IN": 0.113,
                    "DT": 0.113,
                    "NN": 0.134,
                    "VBZ": 0.035,
                    "CC": 0.021,
                    "POS": 0.007,
                    "PRP$": 0.014,
                    "VBG": 0.035,
                    "NNP": 0.049,
                    ":": 0.014,
                    "WRB": 0.007,
                    "WDT": 0.007,
                    "VBD": 0.007,
                    "RP": 0.007
                },
                "syllableRate": 1.658,
                "topicScores": [
                    [
                        "ok",
                        0.269688928380661
                    ],
                    [
                        "S",
                        0.4240260180293338
                    ],
                    [
                        "value",
                        0.43142287398404533
                    ],
                    [
                        "weight",
                        0.5332664572684418
                    ],
                    [
                        "infinity",
                        0.5542199450573514
                    ],
                    [
                        "key",
                        0.5561236338877492
                    ],
                    [
                        "capital",
                        0.5618715554817918
                    ],
                    [
                        "vertex",
                        0.5632548386081007
                    ],
                    [
                        "thing",
                        0.5641373228883116
                    ],
                    [
                        "queue",
                        0.5719153107649976
                    ],
                    [
                        "color",
                        0.8294026692261692
                    ],
                    [
                        "S. OK",
                        0.8442921126035526
                    ],
                    [
                        "example",
                        0.8794693116170206
                    ],
                    [
                        "graph",
                        0.8845608226961689
                    ],
                    [
                        "tree",
                        0.8885626266836364
                    ],
                    [
                        "being--",
                        0.8918103698273979
                    ],
                    [
                        "blue",
                        0.8968043427279236
                    ],
                    [
                        "interesting",
                        0.8991287413011846
                    ],
                    [
                        "nice",
                        0.8991287413011846
                    ],
                    [
                        "undirected",
                        0.9034809306960327
                    ],
                    [
                        "minimum",
                        0.9144599762370252
                    ],
                    [
                        "priority",
                        0.9170582222688379
                    ],
                    [
                        "course",
                        0.9238660007918033
                    ],
                    [
                        "point",
                        0.9238660007918033
                    ],
                    [
                        "capital s",
                        1.4040255494982108
                    ],
                    [
                        "s being--",
                        1.408829780780536
                    ],
                    [
                        "key value",
                        2.0039003944910916
                    ],
                    [
                        "nice example",
                        3.7791126435139035
                    ],
                    [
                        "undirected graph",
                        3.97967881085105
                    ],
                    [
                        "interesting thing",
                        4.100579022292506
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.269688928380661
                    ],
                    [
                        "S",
                        0.4240260180293338
                    ],
                    [
                        "weight",
                        0.5332664572684418
                    ],
                    [
                        "vertex",
                        0.5632548386081007
                    ],
                    [
                        "thing",
                        0.5641373228883116
                    ],
                    [
                        "S. OK",
                        0.8442921126035526
                    ],
                    [
                        "graph",
                        0.8845608226961689
                    ],
                    [
                        "tree",
                        0.8885626266836364
                    ],
                    [
                        "minimum",
                        0.9144599762370252
                    ]
                ]
            }
        },
        "tKwnms5iRBU-3240": {
            "id": "tKwnms5iRBU-3240",
            "heat": 0.371,
            "start": 3240.0,
            "text": " So that's when I draw the red circle containing little s. The red circle here is supposed to be capital S. So at this point, I've added capital S-- little s to capital S, and then I look at all of the neighbors v of S. And I make sure that they are outside of S. In this case, they all are. All three neighbors, these three guys, are not in S. And then I look at the weights of the edges. Here I have a weight 7 edge. That's smaller than infinity, so I'm going to cross out infinity and write 7. And 15 is smaller than infinity, so I'm going to cross out infinity and write 15. And 10, surprise, is smaller than infinity. So I'm going to cross out infinity rate 10. So now I've updated the key values for those three nodes. I should mention in the priority queue, to do that, that is a decrease-key operation. This thing here is a decrease-key. You need to update the priority queue to say, hey look, the key of this node changed. And so you're going to have to move it around in the heap, or whatever. Just like Dijkstra, same thing happens. OK, so I've decreased the key of those three nodes. Now I do another iteration. I look at all of the key values stored. The smallest one is 7, because this node's no longer in there. So I'm going to add this node to capital S.",
            "metrics": {
                "relativeDCReadability": 0.9842358223585439,
                "lexicalDiversity": 0.467680608365019,
                "posComposition": {
                    "IN": 0.11,
                    "DT": 0.125,
                    "VBZ": 0.034,
                    "WRB": 0.004,
                    "PRP": 0.076,
                    "VBP": 0.076,
                    "JJ": 0.046,
                    "NN": 0.125,
                    "VBG": 0.023,
                    "PDT": 0.004,
                    "RB": 0.042,
                    "VBN": 0.015,
                    "TO": 0.046,
                    "VB": 0.053,
                    "NNP": 0.046,
                    ":": 0.004,
                    "CC": 0.034,
                    "NNS": 0.034,
                    "CD": 0.042,
                    "WDT": 0.011,
                    "JJR": 0.011,
                    "RP": 0.011,
                    "MD": 0.004,
                    "VBD": 0.008,
                    "JJS": 0.004,
                    "POS": 0.004,
                    "RBR": 0.004,
                    "EX": 0.004
                },
                "syllableRate": 2.883,
                "topicScores": [
                    [
                        "S.",
                        0.22836021310636417
                    ],
                    [
                        "infinity",
                        0.2965035765344756
                    ],
                    [
                        "key",
                        0.308762532804844
                    ],
                    [
                        "node",
                        0.3454719510668888
                    ],
                    [
                        "small",
                        0.3732773652454765
                    ],
                    [
                        "capital",
                        0.38034431713999567
                    ],
                    [
                        "decrease",
                        0.4396571112239766
                    ],
                    [
                        "red",
                        0.5056109952169634
                    ],
                    [
                        "circle",
                        0.5145777388215319
                    ],
                    [
                        "little",
                        0.5408855628296139
                    ],
                    [
                        "edge",
                        0.5478260796320346
                    ],
                    [
                        "neighbor",
                        0.5625755601204468
                    ],
                    [
                        "queue",
                        0.5633993774030317
                    ],
                    [
                        "priority",
                        0.5705539332731306
                    ],
                    [
                        "value",
                        0.5728584058076958
                    ],
                    [
                        "weight",
                        0.575970891450335
                    ],
                    [
                        "thing",
                        0.5765228917406569
                    ],
                    [
                        "capital S.",
                        0.6871186765227063
                    ],
                    [
                        "Dijkstra",
                        0.696906367075012
                    ],
                    [
                        "point",
                        0.9001363381806369
                    ],
                    [
                        "case",
                        0.9104095323376424
                    ],
                    [
                        "operation",
                        0.9157947439485505
                    ],
                    [
                        "guy",
                        0.9169779355323839
                    ],
                    [
                        "sure",
                        0.917401154132486
                    ],
                    [
                        "surprise",
                        0.9256367049686048
                    ],
                    [
                        "iteration",
                        0.929009192805656
                    ],
                    [
                        "rate",
                        0.9333352200731094
                    ],
                    [
                        "heap",
                        0.9385692792828986
                    ],
                    [
                        "S-- little",
                        1.0057313037829227
                    ],
                    [
                        "red circle",
                        1.1904091087197697
                    ]
                ],
                "topTopicSimilarity": 0.13333333333333333,
                "sharedTopicScores": [
                    [
                        "edge",
                        0.5478260796320346
                    ],
                    [
                        "weight",
                        0.575970891450335
                    ],
                    [
                        "thing",
                        0.5765228917406569
                    ],
                    [
                        "Dijkstra",
                        0.696906367075012
                    ]
                ]
            }
        },
        "tKwnms5iRBU-3330": {
            "id": "tKwnms5iRBU-3330",
            "heat": 0.487,
            "start": 3330.0,
            "text": " So capital S is going to grow to include that node. I've extracted it from the queue. And now I look at all the neighbors of that node. So, for example, here's a neighbor. 9 is less than infinity, so I write 9. Here's a neighbor. 12 is less than infinity, so I write 12. 5 is less than infinity, so I write 5. Here's a neighbor, but s is in big S, so we're not going to touch that edge. I'm not going to touch s. OK? I will end up looking at every edge twice, so no big deal. Right now, who's smallest? 5, I think. It's the smallest blue key. So we're going to add 5 to the set. Sorry, add this vertex to the set S, and then look at all of the outgoing edges from here. So 6 is actually less than 12, so this edge is better than that one was. Then, what's that, an 8? 8 Is less than 10. 14 is definitely less than infinity. And we look at this edge, but that edge stays inside the red set, so we forget about it. Next smallest value is 6. So 6, we add this guy in. We look at the edges from that vertex,",
            "metrics": {
                "relativeDCReadability": 0.9328339571014697,
                "lexicalDiversity": 0.47297297297297297,
                "posComposition": {
                    "RB": 0.09,
                    "JJ": 0.036,
                    "NNP": 0.032,
                    "VBZ": 0.068,
                    "VBG": 0.023,
                    "TO": 0.032,
                    "VB": 0.036,
                    "IN": 0.144,
                    "PRP": 0.077,
                    "VBP": 0.063,
                    "VBN": 0.005,
                    "DT": 0.099,
                    "NN": 0.108,
                    "CC": 0.023,
                    "PDT": 0.005,
                    "NNS": 0.018,
                    "CD": 0.077,
                    "JJR": 0.027,
                    "MD": 0.005,
                    "RP": 0.005,
                    "WP": 0.009,
                    "JJS": 0.014,
                    "RBR": 0.005,
                    "VBD": 0.005
                },
                "syllableRate": 2.283,
                "topicScores": [
                    [
                        "edge",
                        0.29928947974751996
                    ],
                    [
                        "S",
                        0.3168483961186815
                    ],
                    [
                        "infinity",
                        0.3357109123763176
                    ],
                    [
                        "neighbor",
                        0.35986726518784184
                    ],
                    [
                        "set",
                        0.4398284422583112
                    ],
                    [
                        "small",
                        0.45099572424429024
                    ],
                    [
                        "node",
                        0.49493185993093364
                    ],
                    [
                        "big",
                        0.5738364908886502
                    ],
                    [
                        "vertex",
                        0.5810530299026465
                    ],
                    [
                        "OK",
                        0.6423749938623345
                    ],
                    [
                        "capital",
                        0.8343168062626564
                    ],
                    [
                        "queue",
                        0.8651301916933433
                    ],
                    [
                        "example",
                        0.9053901768259731
                    ],
                    [
                        "deal",
                        0.9237150166537895
                    ],
                    [
                        "key",
                        0.9276887967889207
                    ],
                    [
                        "blue",
                        0.9381083671861474
                    ],
                    [
                        "red",
                        0.9417936455435483
                    ],
                    [
                        "guy",
                        0.9428642337964127
                    ],
                    [
                        "outgoing",
                        0.9440906789748797
                    ],
                    [
                        "well",
                        0.9447674800966275
                    ],
                    [
                        "value",
                        0.9464665079476273
                    ],
                    [
                        "capital S",
                        1.1218082765974786
                    ],
                    [
                        "set S",
                        1.25955890231523
                    ],
                    [
                        "big S",
                        1.3604565276105514
                    ],
                    [
                        "s. OK",
                        1.4964683741461362
                    ],
                    [
                        "red set",
                        4.8293831911105265
                    ],
                    [
                        "big deal",
                        5.2549811661642485
                    ],
                    [
                        "small blue",
                        5.500501918208183
                    ],
                    [
                        "outgoing edge",
                        5.564661646922605
                    ],
                    [
                        "small value",
                        5.8354894226358605
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "edge",
                        0.29928947974751996
                    ],
                    [
                        "S",
                        0.3168483961186815
                    ],
                    [
                        "set",
                        0.4398284422583112
                    ],
                    [
                        "vertex",
                        0.5810530299026465
                    ],
                    [
                        "capital S",
                        1.1218082765974786
                    ]
                ]
            }
        },
        "tKwnms5iRBU-3420": {
            "id": "tKwnms5iRBU-3420",
            "heat": 0.508,
            "start": 3420.0,
            "text": " but actually nothing happens because all those vertices are inside capital S, so we don't care about those edges. Next one is 8, so we'll add in this vertex. And there's only one edge that leaves the cut, so that's 3, and 3 is indeed better than 14. So never mind. Stop. So good, now I think the smallest key is 3. Notice smallest key is smaller than anything we've seen before, other than 0, but that's OK. I'll just add it in, and there's no edges leaving the cut from there. And then over here, we have 9 and 15. So first we'll add 9. There's no edges there. Then we add 15. OK, now s is everything. We're done. Q is empty. Where's the minimal spanning tree? I forgot to draw it. Luckily, all of the edges here have different numbers as labels. So when I have a 3 here, what I mean is, include 3 in the minimum spanning tree, the edge that was labeled 3. OK, so this will be a minimum spanning tree edge. 5 will be a minimum spanning tree edge. These are actually the parent pointers. 6 will be a minimum spanning tree edge. 7, 9, 15, and 8.",
            "metrics": {
                "relativeDCReadability": 1.0125803767269184,
                "lexicalDiversity": 0.5,
                "posComposition": {
                    "CC": 0.037,
                    "RB": 0.083,
                    "NN": 0.106,
                    "NNS": 0.041,
                    "IN": 0.092,
                    "DT": 0.106,
                    "VBP": 0.06,
                    "JJ": 0.06,
                    "NNP": 0.037,
                    "PRP": 0.064,
                    "VB": 0.041,
                    "CD": 0.096,
                    "VBZ": 0.06,
                    "MD": 0.028,
                    "EX": 0.014,
                    "WDT": 0.009,
                    "JJR": 0.009,
                    "JJS": 0.009,
                    "VBN": 0.014,
                    "VBG": 0.005,
                    "NNPS": 0.005,
                    "POS": 0.005,
                    "VBD": 0.009,
                    "TO": 0.005,
                    "WRB": 0.005,
                    "WP": 0.005
                },
                "syllableRate": 2.367,
                "topicScores": [
                    [
                        "edge",
                        0.2583521940856026
                    ],
                    [
                        "ok",
                        0.30135490708145424
                    ],
                    [
                        "tree",
                        0.32016121558764565
                    ],
                    [
                        "minimum",
                        0.3646479073004527
                    ],
                    [
                        "small",
                        0.44597430003853245
                    ],
                    [
                        "S",
                        0.512546426009273
                    ],
                    [
                        "vertex",
                        0.540651307751905
                    ],
                    [
                        "cut",
                        0.5583303113551896
                    ],
                    [
                        "key",
                        0.5649538256350956
                    ],
                    [
                        "label",
                        0.5775203080468194
                    ],
                    [
                        "q",
                        0.6656054867762303
                    ],
                    [
                        "capital S",
                        0.8306160956406211
                    ],
                    [
                        "well",
                        0.9189593446387303
                    ],
                    [
                        "notice",
                        0.9201411092866614
                    ],
                    [
                        "good",
                        0.9227243467479358
                    ],
                    [
                        "pointer",
                        0.9364563197510516
                    ],
                    [
                        "spanning",
                        0.9415196897914636
                    ],
                    [
                        "parent",
                        0.9447259463498217
                    ],
                    [
                        "minimal",
                        0.9452663362942484
                    ],
                    [
                        "different",
                        0.9464363943916303
                    ],
                    [
                        "number",
                        0.9464363943916303
                    ],
                    [
                        "tree edge",
                        1.2257629515151198
                    ],
                    [
                        "small key",
                        2.503005198389371
                    ],
                    [
                        "spanning tree",
                        3.529111755416035
                    ],
                    [
                        "notice small",
                        4.577822666817946
                    ],
                    [
                        "parent pointer",
                        7.672619423110714
                    ],
                    [
                        "minimal spanning",
                        8.089823907907132
                    ],
                    [
                        "different number",
                        8.591576167908523
                    ],
                    [
                        "notice small key",
                        27.759289701945352
                    ],
                    [
                        "minimal spanning tree",
                        34.0765684522697
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "edge",
                        0.2583521940856026
                    ],
                    [
                        "ok",
                        0.30135490708145424
                    ],
                    [
                        "tree",
                        0.32016121558764565
                    ],
                    [
                        "minimum",
                        0.3646479073004527
                    ],
                    [
                        "S",
                        0.512546426009273
                    ],
                    [
                        "vertex",
                        0.540651307751905
                    ],
                    [
                        "cut",
                        0.5583303113551896
                    ],
                    [
                        "capital S",
                        0.8306160956406211
                    ],
                    [
                        "spanning tree",
                        3.529111755416035
                    ]
                ]
            }
        },
        "tKwnms5iRBU-3510": {
            "id": "tKwnms5iRBU-3510",
            "heat": 0.546,
            "start": 3510.0,
            "text": " Every vertex except the starting one will have a parent, which means we'll have exactly n minus 1 edges, that's a good sign. And in fact, this will be a minimum spanning tree. That's the claim, because every time we grew the circle to include a bigger thing, we were guaranteed that this edge was in the minimum spanning tree by applying this property with that cut. Let me just write that down. OK, to prove correctness, you need to prove an invariant that this key, the key of every vertex, always remains this minimum. So this is an invariant. You should prove that by induction. I won't prove it here. But we have another invariant, a more interesting one from an MST perspective, you know, it's just a sort of algorithm implementation detail, that the tree T sub S, within S is always contained in a minimum spanning tree of G. So over here,",
            "metrics": {
                "relativeDCReadability": 0.9909690306593882,
                "lexicalDiversity": 0.49375,
                "posComposition": {
                    "DT": 0.175,
                    "NN": 0.188,
                    "IN": 0.113,
                    "VBG": 0.013,
                    "CD": 0.019,
                    "MD": 0.031,
                    "VB": 0.062,
                    "WDT": 0.019,
                    "VBZ": 0.05,
                    "PRP": 0.069,
                    "RB": 0.062,
                    "JJ": 0.05,
                    "CC": 0.019,
                    "NNS": 0.006,
                    "VBD": 0.019,
                    "TO": 0.019,
                    "JJR": 0.013,
                    "VBN": 0.013,
                    "NNP": 0.044,
                    "VBP": 0.019
                },
                "syllableRate": 1.925,
                "topicScores": [
                    [
                        "minimum",
                        0.3315484395912419
                    ],
                    [
                        "tree",
                        0.3586564084657399
                    ],
                    [
                        "spanning",
                        0.3889370383341633
                    ],
                    [
                        "S",
                        0.40799524938231413
                    ],
                    [
                        "invariant",
                        0.42232219895883677
                    ],
                    [
                        "vertex",
                        0.50604850289129
                    ],
                    [
                        "edge",
                        0.5081798332520643
                    ],
                    [
                        "key",
                        0.5493155847855206
                    ],
                    [
                        "MST",
                        0.6523744118644628
                    ],
                    [
                        "G.",
                        0.6656380545376446
                    ],
                    [
                        "sign",
                        0.7250370302614311
                    ],
                    [
                        "minimum spanning",
                        0.7463608556020936
                    ],
                    [
                        "parent",
                        0.7650030576538318
                    ],
                    [
                        "good",
                        0.7650030576538318
                    ],
                    [
                        "cut",
                        0.8282669143056347
                    ],
                    [
                        "fact",
                        0.8304901345212777
                    ],
                    [
                        "claim",
                        0.8562042478236775
                    ],
                    [
                        "big",
                        0.8562042478236775
                    ],
                    [
                        "thing",
                        0.8562042478236775
                    ],
                    [
                        "time",
                        0.8678057397573392
                    ],
                    [
                        "circle",
                        0.8678057397573392
                    ],
                    [
                        "property",
                        0.8678057397573392
                    ],
                    [
                        "induction",
                        0.8685133752139984
                    ],
                    [
                        "correctness",
                        0.8794626768752513
                    ],
                    [
                        "perspective",
                        0.8976718151415841
                    ],
                    [
                        "implementation",
                        0.8976718151415841
                    ],
                    [
                        "detail",
                        0.8976718151415841
                    ],
                    [
                        "sub",
                        0.8976718151415841
                    ],
                    [
                        "interesting",
                        0.9062938459176506
                    ],
                    [
                        "sort",
                        0.9062938459176506
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "minimum",
                        0.3315484395912419
                    ],
                    [
                        "tree",
                        0.3586564084657399
                    ],
                    [
                        "S",
                        0.40799524938231413
                    ],
                    [
                        "vertex",
                        0.50604850289129
                    ],
                    [
                        "edge",
                        0.5081798332520643
                    ],
                    [
                        "minimum spanning",
                        0.7463608556020936
                    ],
                    [
                        "cut",
                        0.8282669143056347
                    ],
                    [
                        "thing",
                        0.8562042478236775
                    ]
                ]
            }
        },
        "tKwnms5iRBU-3600": {
            "id": "tKwnms5iRBU-3600",
            "heat": 0.565,
            "start": 3600.0,
            "text": " we have this way of computing minimum spanning tree for all vertices v, but what I'd like to do is just look at v that's currently in S. By the end, that will be the whole thing, but if I look at v in S, and I always look at the edge from v to v dot parent, that gives me this tree TS. I claim it will be contained in a minimum spanning tree of the entire graph, proof by induction. So by induction, let's assume-- induction hypothesis will be that, let's say there is a minimum spanning tree T star, which contains T sub S, and then what the algorithm does, is it repeatedly grows S by adding this vertex u to S. So let's suppose that it adds u to S. So I'm actually going to look at the edge that it adds. So we have S and V minus S, and we do this thing, like we just saw, of growing by one.",
            "metrics": {
                "relativeDCReadability": 1.2560449058335412,
                "lexicalDiversity": 0.45977011494252873,
                "posComposition": {
                    "PRP": 0.08,
                    "VBP": 0.046,
                    "DT": 0.075,
                    "NN": 0.172,
                    "IN": 0.126,
                    "VBG": 0.023,
                    "JJ": 0.046,
                    "NNS": 0.006,
                    "CC": 0.04,
                    "WP": 0.011,
                    "MD": 0.023,
                    "VB": 0.063,
                    "TO": 0.029,
                    "VBZ": 0.057,
                    "RB": 0.052,
                    "WDT": 0.023,
                    "NNP": 0.08,
                    "VBN": 0.006,
                    "POS": 0.017,
                    ":": 0.006,
                    "EX": 0.006,
                    "VBD": 0.006,
                    "CD": 0.006
                },
                "syllableRate": 1.842,
                "topicScores": [
                    [
                        "S",
                        0.21472791496191337
                    ],
                    [
                        "v",
                        0.30789904188267764
                    ],
                    [
                        "tree",
                        0.32891055338559383
                    ],
                    [
                        "T",
                        0.359305972344821
                    ],
                    [
                        "minimum",
                        0.3620209709486659
                    ],
                    [
                        "TS",
                        0.37220900243483923
                    ],
                    [
                        "tree TS",
                        0.3971524480757715
                    ],
                    [
                        "induction",
                        0.39977018383672913
                    ],
                    [
                        "edge",
                        0.48889597704010457
                    ],
                    [
                        "vertex",
                        0.49491515405138514
                    ],
                    [
                        "thing",
                        0.506620548963212
                    ],
                    [
                        "end",
                        0.7363532857840454
                    ],
                    [
                        "dot",
                        0.7363532857840454
                    ],
                    [
                        "parent",
                        0.7363532857840454
                    ],
                    [
                        "way",
                        0.7557810570386482
                    ],
                    [
                        "spanning",
                        0.7557810570386482
                    ],
                    [
                        "entire",
                        0.8078185675507353
                    ],
                    [
                        "graph",
                        0.8078185675507353
                    ],
                    [
                        "proof",
                        0.8078185675507353
                    ],
                    [
                        "star",
                        0.8362939507587743
                    ],
                    [
                        "sub",
                        0.8362939507587743
                    ],
                    [
                        "algorithm",
                        0.8362939507587743
                    ],
                    [
                        "assume--",
                        0.8498588364299315
                    ],
                    [
                        "hypothesis",
                        0.8498588364299315
                    ],
                    [
                        "sub S",
                        0.8663552908179618
                    ],
                    [
                        "T star",
                        0.9093374361794677
                    ],
                    [
                        "T sub",
                        0.9093374361794677
                    ],
                    [
                        "T sub S",
                        0.9713473083491638
                    ],
                    [
                        "dot parent",
                        1.1844370986179888
                    ],
                    [
                        "minimum spanning",
                        1.2085643824744083
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "S",
                        0.21472791496191337
                    ],
                    [
                        "tree",
                        0.32891055338559383
                    ],
                    [
                        "T",
                        0.359305972344821
                    ],
                    [
                        "minimum",
                        0.3620209709486659
                    ],
                    [
                        "edge",
                        0.48889597704010457
                    ],
                    [
                        "vertex",
                        0.49491515405138514
                    ],
                    [
                        "thing",
                        0.506620548963212
                    ],
                    [
                        "graph",
                        0.8078185675507353
                    ],
                    [
                        "algorithm",
                        0.8362939507587743
                    ],
                    [
                        "T star",
                        0.9093374361794677
                    ],
                    [
                        "minimum spanning",
                        1.2085643824744083
                    ]
                ]
            }
        },
        "tKwnms5iRBU-3690": {
            "id": "tKwnms5iRBU-3690",
            "heat": 0.53,
            "start": 3690.0,
            "text": " We add one new vertex over here to S, and that vertex has a parent edge, has a parent pointer. So this edge, I'm going to call e. So we're adding some vertex u that we extract at the minimum, and we also added an edge e to this TS, because we grew S by 1. OK, when I do that, all I do is say, look, greedy choice property guarantees there's a minimum spanning tree that contains e. Because we extracted the min from the queue, and the key values are this, as I was arguing before, that is the minimum overall edge that crosses the cut. e is a minimum weight edge that crosses the cut, and so by greedy choice property, there is some minimum spanning tree that contains e. But actually, I need that the minimum spanning tree not only contains e, but also contains all the other spanning tree edges that we had already said were in T star. OK, so here's where I'm going to use the stronger property. I can modify T star to include e and T sub S.",
            "metrics": {
                "relativeDCReadability": 1.2551729047852895,
                "lexicalDiversity": 0.4791666666666667,
                "posComposition": {
                    "PRP": 0.073,
                    "VBP": 0.052,
                    "CD": 0.01,
                    "JJ": 0.083,
                    "NN": 0.177,
                    "IN": 0.089,
                    "RB": 0.057,
                    "TO": 0.026,
                    "NNP": 0.042,
                    "CC": 0.036,
                    "DT": 0.12,
                    "VBZ": 0.073,
                    "VBG": 0.026,
                    "VB": 0.026,
                    "VBD": 0.036,
                    "WRB": 0.01,
                    "NNS": 0.016,
                    "EX": 0.01,
                    "WDT": 0.021,
                    "PDT": 0.005,
                    "JJR": 0.005,
                    "MD": 0.005
                },
                "syllableRate": 2.192,
                "topicScores": [
                    [
                        "minimum",
                        0.2827356577255641
                    ],
                    [
                        "edge",
                        0.29138484158568556
                    ],
                    [
                        "T",
                        0.31081752931144185
                    ],
                    [
                        "S",
                        0.3136617066039077
                    ],
                    [
                        "tree",
                        0.3452700275015692
                    ],
                    [
                        "e.",
                        0.39120024433820183
                    ],
                    [
                        "property",
                        0.3968741853098007
                    ],
                    [
                        "vertex",
                        0.40739079200304357
                    ],
                    [
                        "parent",
                        0.4480260388272476
                    ],
                    [
                        "cut",
                        0.503241565120888
                    ],
                    [
                        "choice",
                        0.5089628974527703
                    ],
                    [
                        "spanning",
                        0.5156283678037941
                    ],
                    [
                        "greedy",
                        0.5193870867424473
                    ],
                    [
                        "star",
                        0.5357124383904384
                    ],
                    [
                        "TS",
                        0.5557595867182789
                    ],
                    [
                        "T star",
                        0.7052775589633414
                    ],
                    [
                        "pointer",
                        0.7342705715632981
                    ],
                    [
                        "new",
                        0.7851480085581082
                    ],
                    [
                        "queue",
                        0.8733304529149375
                    ],
                    [
                        "guarantee",
                        0.8828433480319545
                    ],
                    [
                        "key",
                        0.8828433480319545
                    ],
                    [
                        "value",
                        0.8828433480319545
                    ],
                    [
                        "overall",
                        0.8828433480319545
                    ],
                    [
                        "weight",
                        0.8911912430132994
                    ],
                    [
                        "strong",
                        0.893339033322396
                    ],
                    [
                        "sub",
                        0.8970719417431228
                    ],
                    [
                        "parent pointer",
                        1.0894659843772525
                    ],
                    [
                        "choice property",
                        1.1231466694468795
                    ],
                    [
                        "minimum spanning",
                        1.1649780103893006
                    ],
                    [
                        "spanning tree",
                        1.1988292659623925
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "minimum",
                        0.2827356577255641
                    ],
                    [
                        "edge",
                        0.29138484158568556
                    ],
                    [
                        "T",
                        0.31081752931144185
                    ],
                    [
                        "S",
                        0.3136617066039077
                    ],
                    [
                        "tree",
                        0.3452700275015692
                    ],
                    [
                        "vertex",
                        0.40739079200304357
                    ],
                    [
                        "cut",
                        0.503241565120888
                    ],
                    [
                        "greedy",
                        0.5193870867424473
                    ],
                    [
                        "T star",
                        0.7052775589633414
                    ],
                    [
                        "weight",
                        0.8911912430132994
                    ],
                    [
                        "minimum spanning",
                        1.1649780103893006
                    ],
                    [
                        "spanning tree",
                        1.1988292659623925
                    ]
                ]
            }
        },
        "tKwnms5iRBU-3780": {
            "id": "tKwnms5iRBU-3780",
            "heat": 0.246,
            "start": 3780.0,
            "text": " So we already assumed that T star includes T sub S. I just don't want to break that. And if you remember the proof of this greedy choice property, we said, well all we need to do is remove one edge that crosses the cut and replace it with e. So here what I'm saying is there's some edge, yeah, maybe there's some edge over here in T star that we had to remove, and then we put e in. And then we get a minimum spanning tree again, T star prime. OK, this edge that I remove cannot be one of the TS edges because the TS edges are all inside S. So because I'm only removing an edge that crosses the cut, I'm not disturbing TS. TS will remain inside T star, but then I get the new property that e is inside T star, and so I prove this invariant holds. OK? I keep changing T star, but I always preserve the property that all of the spanning tree edges that are inside S are contained in some minimum spanning tree of G. Maybe I'll add in some for emphasis. Cool? So that's how we use the greedy choice property to get correctness of Prim's algorithm. What's the running time of Prim's algorithm?",
            "metrics": {
                "relativeDCReadability": 1.0816457789259557,
                "lexicalDiversity": 0.4824561403508772,
                "posComposition": {
                    "IN": 0.105,
                    "PRP": 0.083,
                    "RB": 0.088,
                    "VBD": 0.013,
                    "NNP": 0.101,
                    "NN": 0.149,
                    "VBZ": 0.048,
                    "VBP": 0.075,
                    "VB": 0.044,
                    "TO": 0.018,
                    "DT": 0.101,
                    "CC": 0.031,
                    "CD": 0.009,
                    "WDT": 0.018,
                    "NNS": 0.018,
                    "WP": 0.009,
                    "VBG": 0.022,
                    "EX": 0.009,
                    "JJ": 0.031,
                    "MD": 0.013,
                    "VBN": 0.004,
                    "WRB": 0.004,
                    "POS": 0.009
                },
                "syllableRate": 2.508,
                "topicScores": [
                    [
                        "T",
                        0.22831038439195223
                    ],
                    [
                        "edge",
                        0.27703812919195214
                    ],
                    [
                        "star",
                        0.30129578760771314
                    ],
                    [
                        "TS",
                        0.3133562538919675
                    ],
                    [
                        "S.",
                        0.3551879601888209
                    ],
                    [
                        "property",
                        0.37460314734914113
                    ],
                    [
                        "T star",
                        0.38560926369306625
                    ],
                    [
                        "Prim",
                        0.4065546162178961
                    ],
                    [
                        "tree",
                        0.44343621757424123
                    ],
                    [
                        "algorithm",
                        0.5171081630147009
                    ],
                    [
                        "cut",
                        0.5369415604930867
                    ],
                    [
                        "choice",
                        0.5472967527573845
                    ],
                    [
                        "greedy",
                        0.5545651964289108
                    ],
                    [
                        "minimum",
                        0.5614866468401419
                    ],
                    [
                        "G.",
                        0.6387325144792311
                    ],
                    [
                        "t sub",
                        0.7285426852435999
                    ],
                    [
                        "sub S.",
                        0.7353584643943885
                    ],
                    [
                        "t sub S.",
                        0.7554176791612524
                    ],
                    [
                        "e.",
                        0.8477384537185382
                    ],
                    [
                        "cool",
                        0.8569937929501807
                    ],
                    [
                        "proof",
                        0.8851378090016799
                    ],
                    [
                        "hold",
                        0.8880773797715797
                    ],
                    [
                        "emphasis",
                        0.8963507975686693
                    ],
                    [
                        "spanning",
                        0.9042397544456806
                    ],
                    [
                        "invariant",
                        0.9083541303369781
                    ],
                    [
                        "new",
                        0.9165438828063287
                    ],
                    [
                        "correctness",
                        0.9257393683292464
                    ],
                    [
                        "time",
                        0.9269088086986198
                    ],
                    [
                        "TS edge",
                        1.2240643154393696
                    ],
                    [
                        "choice property",
                        1.9390999299983185
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "T",
                        0.22831038439195223
                    ],
                    [
                        "edge",
                        0.27703812919195214
                    ],
                    [
                        "T star",
                        0.38560926369306625
                    ],
                    [
                        "tree",
                        0.44343621757424123
                    ],
                    [
                        "algorithm",
                        0.5171081630147009
                    ],
                    [
                        "cut",
                        0.5369415604930867
                    ],
                    [
                        "greedy",
                        0.5545651964289108
                    ],
                    [
                        "minimum",
                        0.5614866468401419
                    ]
                ]
            }
        },
        "tKwnms5iRBU-3870": {
            "id": "tKwnms5iRBU-3870",
            "heat": 0.263,
            "start": 3870.0,
            "text": " Same as Dijkstra, good answer. I guess it depends what priority queue you use, but whatever priority queue you use, it's the same as Dijkstra. And so in particular, if we use Fibonacci heaps, which, again, we're not covering, we get V log V plus E. In general, for every edge, we have to do a decrease-key. Actually, for every edge we do two decrease-key operations, potentially, if you think about it. But this for loop over the adjacency, the cost of this stuff is constant. The cost of this is the degree of the vertex u. And so we're basically doing the sum of the degrees of the vertices, which is the number of edges times 2. That's the handshaking lemma. So for every edge, we're potentially doing one decrease-key operation, and with Fibonacci heaps, that's constant time. But we're also doing V extract mins those cost log V time, cause the size of the queue is at most V, and so that is actually the right running time. Just like Dijkstra, so easy formula to remember.",
            "metrics": {
                "relativeDCReadability": 1.0133424157216118,
                "lexicalDiversity": 0.5027027027027027,
                "posComposition": {
                    "NN": 0.178,
                    "IN": 0.119,
                    "NNP": 0.076,
                    "JJ": 0.059,
                    "PRP": 0.081,
                    "VBP": 0.07,
                    "VBZ": 0.049,
                    "WP": 0.005,
                    "CC": 0.043,
                    "WDT": 0.022,
                    "DT": 0.13,
                    "RB": 0.059,
                    "NNS": 0.038,
                    "VBG": 0.022,
                    "TO": 0.011,
                    "VB": 0.016,
                    "CD": 0.016,
                    "JJS": 0.005
                },
                "syllableRate": 2.292,
                "topicScores": [
                    [
                        "Dijkstra",
                        0.2584767577346375
                    ],
                    [
                        "v",
                        0.31608721967002185
                    ],
                    [
                        "edge",
                        0.33451788364445667
                    ],
                    [
                        "Fibonacci",
                        0.3569592608112112
                    ],
                    [
                        "key",
                        0.3608723203226232
                    ],
                    [
                        "decrease",
                        0.38518193046948557
                    ],
                    [
                        "cost",
                        0.40963645776291757
                    ],
                    [
                        "queue",
                        0.41747135137665037
                    ],
                    [
                        "time",
                        0.43030659670244104
                    ],
                    [
                        "priority",
                        0.5095017146628736
                    ],
                    [
                        "operation",
                        0.5194034386365205
                    ],
                    [
                        "vertex",
                        0.525925231140329
                    ],
                    [
                        "degree",
                        0.5289872008622739
                    ],
                    [
                        "constant",
                        0.5309471585319286
                    ],
                    [
                        "heap",
                        0.5326217046912041
                    ],
                    [
                        "log",
                        0.5516382660764488
                    ],
                    [
                        "E.",
                        0.560647506044739
                    ],
                    [
                        "Fibonacci heap",
                        0.5768508773340377
                    ],
                    [
                        "answer",
                        0.7341346077025696
                    ],
                    [
                        "good",
                        0.7653908144178679
                    ],
                    [
                        "particular",
                        0.8658455307942899
                    ],
                    [
                        "general",
                        0.8658455307942899
                    ],
                    [
                        "u.",
                        0.8776304279009148
                    ],
                    [
                        "lemma",
                        0.8868446258768321
                    ],
                    [
                        "adjacency",
                        0.8877489657702345
                    ],
                    [
                        "loop",
                        0.8950534179075508
                    ],
                    [
                        "stuff",
                        0.8950534179075508
                    ],
                    [
                        "sum",
                        0.905053382879388
                    ],
                    [
                        "number",
                        0.905053382879388
                    ],
                    [
                        "easy",
                        0.9092953980923285
                    ]
                ],
                "topTopicSimilarity": 0.1,
                "sharedTopicScores": [
                    [
                        "Dijkstra",
                        0.2584767577346375
                    ],
                    [
                        "edge",
                        0.33451788364445667
                    ],
                    [
                        "vertex",
                        0.525925231140329
                    ]
                ]
            }
        },
        "tKwnms5iRBU-3960": {
            "id": "tKwnms5iRBU-3960",
            "heat": 0.281,
            "start": 3960.0,
            "text": " All right, let's do one more algorithm, Kruskal's algorithm. Kruskal's algorithm is a little bit weirder from the S perspective, I guess. We'll see what cuts we're using in a moment, but it's based around this idea of, well, the globally minimum weight edge is the minimum weight edge for all cuts that cross it, or for all cuts that it crosses. The globally minimum weight edge is going to be a valid choice, and so, by this theorem, you pick some S that partitions the endpoints of e, therefore e is in a minimum spanning tree. So let's choose that one first, and then repeat. Conceptually, what we want to do is that DP idea of contract the vertex, sorry, contract the edge and then find the minimum weight edge that remains. But the way I'm going to phrase it doesn't explicitly contract,",
            "metrics": {
                "relativeDCReadability": 1.0584969647885416,
                "lexicalDiversity": 0.5359477124183006,
                "posComposition": {
                    "DT": 0.124,
                    "JJ": 0.052,
                    "NN": 0.216,
                    "POS": 0.026,
                    "VB": 0.052,
                    "CD": 0.013,
                    "JJR": 0.007,
                    "NNP": 0.046,
                    "VBZ": 0.072,
                    "IN": 0.092,
                    "PRP": 0.065,
                    "VBP": 0.039,
                    "MD": 0.007,
                    "WP": 0.013,
                    "VBG": 0.02,
                    "CC": 0.039,
                    "VBN": 0.007,
                    "RB": 0.059,
                    "NNS": 0.02,
                    "WDT": 0.013,
                    "TO": 0.02
                },
                "syllableRate": 1.775,
                "topicScores": [
                    [
                        "minimum",
                        0.29656710987725254
                    ],
                    [
                        "Kruskal",
                        0.31607371054267874
                    ],
                    [
                        "edge",
                        0.31610586993561046
                    ],
                    [
                        "weight",
                        0.31758660765563423
                    ],
                    [
                        "algorithm",
                        0.3579526206361067
                    ],
                    [
                        "cut",
                        0.41675606093025724
                    ],
                    [
                        "contract",
                        0.4238796145457215
                    ],
                    [
                        "S",
                        0.5058504218050162
                    ],
                    [
                        "idea",
                        0.5231018366507938
                    ],
                    [
                        "minimum weight",
                        0.5600950418732249
                    ],
                    [
                        "dp",
                        0.631937177006056
                    ],
                    [
                        "weight edge",
                        0.6529404249186952
                    ],
                    [
                        "S perspective",
                        0.7133557898148095
                    ],
                    [
                        "little",
                        0.8362139901192994
                    ],
                    [
                        "bit",
                        0.8362139901192994
                    ],
                    [
                        "weird",
                        0.8362139901192994
                    ],
                    [
                        "tree",
                        0.8391655208009611
                    ],
                    [
                        "moment",
                        0.8497055986231745
                    ],
                    [
                        "valid",
                        0.8643850994489953
                    ],
                    [
                        "choice",
                        0.8643850994489953
                    ],
                    [
                        "theorem",
                        0.8643850994489953
                    ],
                    [
                        "spanning",
                        0.8643850994489953
                    ],
                    [
                        "sorry",
                        0.8699214226710985
                    ],
                    [
                        "endpoint",
                        0.8749265923432777
                    ],
                    [
                        "vertex",
                        0.8805705793518026
                    ],
                    [
                        "way",
                        0.894713443840163
                    ],
                    [
                        "dp idea",
                        1.100562709667336
                    ],
                    [
                        "minimum weight edge",
                        1.535385144542713
                    ],
                    [
                        "minimum spanning",
                        1.964284465166757
                    ],
                    [
                        "little bit",
                        2.3250632058833265
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "minimum",
                        0.29656710987725254
                    ],
                    [
                        "edge",
                        0.31610586993561046
                    ],
                    [
                        "weight",
                        0.31758660765563423
                    ],
                    [
                        "algorithm",
                        0.3579526206361067
                    ],
                    [
                        "cut",
                        0.41675606093025724
                    ],
                    [
                        "S",
                        0.5058504218050162
                    ],
                    [
                        "minimum weight",
                        0.5600950418732249
                    ],
                    [
                        "weight edge",
                        0.6529404249186952
                    ],
                    [
                        "tree",
                        0.8391655208009611
                    ],
                    [
                        "vertex",
                        0.8805705793518026
                    ],
                    [
                        "minimum weight edge",
                        1.535385144542713
                    ],
                    [
                        "minimum spanning",
                        1.964284465166757
                    ]
                ]
            }
        },
        "tKwnms5iRBU-4050": {
            "id": "tKwnms5iRBU-4050",
            "heat": 0.258,
            "start": 4050.0,
            "text": " although implicitly, it's doing that. And there's a catch. The catch is suppose I've picked some edges out to be in my minimum spanning tree. Suppose this was the minimum weight and this was the next minimum, next minimum, next minimum, next minimum. Suppose that the next lar-- at this point, after contracting those edges, the minimum weight edge is this one. Do I want to put this edge in my minimum spanning tree? No. That would add a cycle. Cycles are bad. This is the tricky part of this algorithm. I have to keep track of whether I should actually add an edge, in other words, whether this vertex and this vertex have already been connected to each other. And it turns out you've already seen a data structure to do that. This is what I call union-find and the textbook calls it disjoint-set data structure. So it's in recitation. Recitation 3. So I want to maintain for my MST so far, so I'm adding edges one at a time. And I have some tree-- well, it's actually a forest, but I'm still going to call it T, and I'm going to maintain it in a union-find structure,",
            "metrics": {
                "relativeDCReadability": 1.001707344511843,
                "lexicalDiversity": 0.4857142857142857,
                "posComposition": {
                    "IN": 0.086,
                    "RB": 0.038,
                    "PRP": 0.086,
                    "VBZ": 0.048,
                    "VBG": 0.024,
                    "DT": 0.138,
                    "CC": 0.038,
                    "EX": 0.005,
                    "NN": 0.129,
                    "JJ": 0.105,
                    "VBP": 0.067,
                    "VBN": 0.019,
                    "NNS": 0.024,
                    "RP": 0.01,
                    "TO": 0.038,
                    "VB": 0.043,
                    "PRP$": 0.014,
                    "NNP": 0.043,
                    "VBD": 0.01,
                    ":": 0.01,
                    "CD": 0.014,
                    "MD": 0.01,
                    "WP": 0.005
                },
                "syllableRate": 2.417,
                "topicScores": [
                    [
                        "minimum",
                        0.2515408981344154
                    ],
                    [
                        "edge",
                        0.32486127797606185
                    ],
                    [
                        "structure",
                        0.44873727847175415
                    ],
                    [
                        "tree",
                        0.5112499048582132
                    ],
                    [
                        "spanning",
                        0.5294692239389321
                    ],
                    [
                        "catch",
                        0.5437520155602965
                    ],
                    [
                        "weight",
                        0.555781474039045
                    ],
                    [
                        "cycle",
                        0.5611740050146213
                    ],
                    [
                        "recitation",
                        0.5632260203049243
                    ],
                    [
                        "find",
                        0.5636408870466203
                    ],
                    [
                        "union",
                        0.5685889589375172
                    ],
                    [
                        "vertex",
                        0.5812081544749684
                    ],
                    [
                        "mst",
                        0.7077526828242666
                    ],
                    [
                        "bad",
                        0.9108917385695258
                    ],
                    [
                        "algorithm",
                        0.9128626853207479
                    ],
                    [
                        "point",
                        0.9148597217069088
                    ],
                    [
                        "time",
                        0.9205142751911813
                    ],
                    [
                        "lar--",
                        0.9218325698600354
                    ],
                    [
                        "datum",
                        0.9248035016477454
                    ],
                    [
                        "word",
                        0.9289586512646139
                    ],
                    [
                        "disjoint",
                        0.9313143741462435
                    ],
                    [
                        "tricky",
                        0.9335352638204741
                    ],
                    [
                        "forest",
                        0.9347096238048854
                    ],
                    [
                        "track",
                        0.9348590372480713
                    ],
                    [
                        "data",
                        0.9360137187444709
                    ],
                    [
                        "textbook",
                        0.9370323661797146
                    ],
                    [
                        "minimum spanning",
                        1.2760117918411344
                    ],
                    [
                        "spanning tree",
                        1.3407549755806565
                    ],
                    [
                        "minimum weight",
                        1.489085537201369
                    ],
                    [
                        "minimum spanning tree",
                        3.8366936350315406
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "minimum",
                        0.2515408981344154
                    ],
                    [
                        "edge",
                        0.32486127797606185
                    ],
                    [
                        "tree",
                        0.5112499048582132
                    ],
                    [
                        "weight",
                        0.555781474039045
                    ],
                    [
                        "find",
                        0.5636408870466203
                    ],
                    [
                        "vertex",
                        0.5812081544749684
                    ],
                    [
                        "algorithm",
                        0.9128626853207479
                    ],
                    [
                        "minimum spanning",
                        1.2760117918411344
                    ],
                    [
                        "spanning tree",
                        1.3407549755806565
                    ],
                    [
                        "minimum weight",
                        1.489085537201369
                    ],
                    [
                        "minimum spanning tree",
                        3.8366936350315406
                    ]
                ]
            }
        },
        "tKwnms5iRBU-4140": {
            "id": "tKwnms5iRBU-4140",
            "heat": 0.32,
            "start": 4140.0,
            "text": " disjoint-set set data structure. Remember, this had three operations, make set, union, and find set. Tell me given an item which set does it belong to? We're going to use that, the sets are going to be the connected components. So after I've added these edges, these guys, these vertices here, will form one connected component, and, you know, everybody else will just be in its own separate component. So to get started, I'm not going to have any edges in my tree, and so every vertex is in its own connected component. So I represent that by calling make-set v for all vertices. So every vertex lives in its own singleton set. OK, now I'd like to do the minimum weight edge, and then the next minimum weight edge, and the next minimum weight edge. That's also known as sorting, so I'm going to sort E by weight, increasing weight, so I get to start with the minimum weight edge.",
            "metrics": {
                "relativeDCReadability": 0.9537215183534762,
                "lexicalDiversity": 0.5269461077844312,
                "posComposition": {
                    "NN": 0.15,
                    "VBN": 0.048,
                    "NNS": 0.054,
                    "NNP": 0.03,
                    "DT": 0.096,
                    "VBD": 0.012,
                    "CD": 0.012,
                    "VBP": 0.054,
                    "CC": 0.03,
                    "VB": 0.072,
                    "PRP": 0.06,
                    "WDT": 0.006,
                    "VBZ": 0.024,
                    "TO": 0.048,
                    "VBG": 0.042,
                    "IN": 0.084,
                    "JJ": 0.072,
                    "RB": 0.066,
                    "MD": 0.018,
                    "PRP$": 0.024
                },
                "syllableRate": 1.992,
                "topicScores": [
                    [
                        "set",
                        0.2687633902969871
                    ],
                    [
                        "edge",
                        0.2933965670747385
                    ],
                    [
                        "weight",
                        0.2951301866339374
                    ],
                    [
                        "minimum",
                        0.3521328323148239
                    ],
                    [
                        "component",
                        0.35686308269282996
                    ],
                    [
                        "vertex",
                        0.35956932399143576
                    ],
                    [
                        "connected",
                        0.5398592494138094
                    ],
                    [
                        "disjoint",
                        0.8190066709649485
                    ],
                    [
                        "structure",
                        0.8323915147386307
                    ],
                    [
                        "datum",
                        0.8385688289895323
                    ],
                    [
                        "union",
                        0.8683657483993733
                    ],
                    [
                        "operation",
                        0.8777941256934162
                    ],
                    [
                        "guy",
                        0.8958682428935957
                    ],
                    [
                        "item",
                        0.8978218862250302
                    ],
                    [
                        "separate",
                        0.9035455448115187
                    ],
                    [
                        "minimum weight",
                        0.9044765529272228
                    ],
                    [
                        "tree",
                        0.9077267238979875
                    ],
                    [
                        "singleton",
                        0.9136634543487525
                    ],
                    [
                        "weight edge",
                        0.925520902670221
                    ],
                    [
                        "connected component",
                        1.5372586388599296
                    ],
                    [
                        "datum structure",
                        2.311451019674167
                    ],
                    [
                        "minimum weight edge",
                        2.9080634272009487
                    ],
                    [
                        "separate component",
                        2.9791057368918463
                    ],
                    [
                        "singleton set",
                        3.512727528307775
                    ]
                ],
                "topTopicSimilarity": 0.375,
                "sharedTopicScores": [
                    [
                        "set",
                        0.2687633902969871
                    ],
                    [
                        "edge",
                        0.2933965670747385
                    ],
                    [
                        "weight",
                        0.2951301866339374
                    ],
                    [
                        "minimum",
                        0.3521328323148239
                    ],
                    [
                        "vertex",
                        0.35956932399143576
                    ],
                    [
                        "minimum weight",
                        0.9044765529272228
                    ],
                    [
                        "tree",
                        0.9077267238979875
                    ],
                    [
                        "weight edge",
                        0.925520902670221
                    ],
                    [
                        "minimum weight edge",
                        2.9080634272009487
                    ]
                ]
            }
        },
        "tKwnms5iRBU-4230": {
            "id": "tKwnms5iRBU-4230",
            "heat": 0.345,
            "start": 4230.0,
            "text": " So now I'm going to do a for-loop over the edges, increasing order by weight. Now I want to know-- I have an edge, it's basically the minimum weight edge among the edges that remain, and so I want to know whether I should add it. I'm going to add it provided the endpoints of the edge are not in the same connected component. How can I find out whether two vertices are in the same connected component, given this setup? Yeah? AUDIENCE: Call find-set twice and then-- ERIK DEMAINE: Call find-set twice and see whether they're equal, exactly. Good answer. So if you find-set of u is from find-set of v, find-set just returns some identifier. We don't really care what it is, as long as it returns the same thing for the same set. So if u and v are in the same set, in other words, they're in the same connected component, then find-set will return the same thing for both. But provided they're not equal, then we can add this edge into our tree.",
            "metrics": {
                "relativeDCReadability": 0.9665470848747411,
                "lexicalDiversity": 0.46524064171123,
                "posComposition": {
                    "RB": 0.096,
                    "PRP": 0.096,
                    "VBP": 0.08,
                    "VBG": 0.016,
                    "TO": 0.021,
                    "VB": 0.048,
                    "DT": 0.096,
                    "NN": 0.123,
                    "IN": 0.112,
                    "NNS": 0.032,
                    ":": 0.011,
                    "VBZ": 0.027,
                    "JJ": 0.096,
                    "WDT": 0.005,
                    "CC": 0.027,
                    "MD": 0.021,
                    "VBD": 0.011,
                    "VBN": 0.016,
                    "WRB": 0.005,
                    "RP": 0.005,
                    "CD": 0.005,
                    "NNP": 0.037,
                    "WP": 0.005,
                    "PRP$": 0.005
                },
                "syllableRate": 2.1,
                "topicScores": [
                    [
                        "set",
                        0.2742499441343253
                    ],
                    [
                        "find",
                        0.2947749561150323
                    ],
                    [
                        "edge",
                        0.32915264184439785
                    ],
                    [
                        "connected",
                        0.4014259000535272
                    ],
                    [
                        "component",
                        0.4246583761046596
                    ],
                    [
                        "weight",
                        0.5405433382629802
                    ],
                    [
                        "audience",
                        0.565089347508515
                    ],
                    [
                        "thing",
                        0.5697858034439219
                    ],
                    [
                        "equal",
                        0.5741633804925079
                    ],
                    [
                        "DEMAINE",
                        0.5829423298010925
                    ],
                    [
                        "v",
                        0.5853774639469546
                    ],
                    [
                        "ERIK DEMAINE",
                        0.5931547136794086
                    ],
                    [
                        "loop",
                        0.825947207713634
                    ],
                    [
                        "order",
                        0.825947207713634
                    ],
                    [
                        "setup",
                        0.8922459274401358
                    ],
                    [
                        "good",
                        0.9014122052483271
                    ],
                    [
                        "answer",
                        0.9014122052483271
                    ],
                    [
                        "minimum",
                        0.906810356967177
                    ],
                    [
                        "identifier",
                        0.9147089098141133
                    ],
                    [
                        "endpoint",
                        0.9164606990147967
                    ],
                    [
                        "tree",
                        0.9186596143187046
                    ],
                    [
                        "vertex",
                        0.922623161724945
                    ],
                    [
                        "then--",
                        0.9252046085692197
                    ],
                    [
                        "word",
                        0.9345706918131271
                    ],
                    [
                        "connected component",
                        1.0717116219156217
                    ],
                    [
                        "then-- ERIK",
                        1.444457100754083
                    ],
                    [
                        "then-- ERIK DEMAINE",
                        1.8483210061784148
                    ],
                    [
                        "minimum weight",
                        3.4823258862968713
                    ],
                    [
                        "weight edge",
                        3.8000763975187737
                    ],
                    [
                        "good answer",
                        4.334584151648892
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "set",
                        0.2742499441343253
                    ],
                    [
                        "find",
                        0.2947749561150323
                    ],
                    [
                        "edge",
                        0.32915264184439785
                    ],
                    [
                        "weight",
                        0.5405433382629802
                    ],
                    [
                        "thing",
                        0.5697858034439219
                    ],
                    [
                        "ERIK DEMAINE",
                        0.5931547136794086
                    ],
                    [
                        "minimum",
                        0.906810356967177
                    ],
                    [
                        "tree",
                        0.9186596143187046
                    ],
                    [
                        "vertex",
                        0.922623161724945
                    ],
                    [
                        "minimum weight",
                        3.4823258862968713
                    ],
                    [
                        "weight edge",
                        3.8000763975187737
                    ]
                ]
            }
        },
        "tKwnms5iRBU-4320": {
            "id": "tKwnms5iRBU-4320",
            "heat": 0.34,
            "start": 4320.0,
            "text": " So we add e to the set T, and then we have to represent the fact that we just merged the connected components of u and v, and we do that with a union call. And if you're ever wondering what the heck do we use union-find for, this is the answer. The union-find data structure was invented in order to implement Kruskal's algorithm faster, OK? In fact, a lot of data structures come from graph algorithms. The reason Fibonacci heaps were invented was because there was Dijkstra's algorithm and we wanted it to run fast. So same deal here, you just saw it in the reverse order. First you saw union-find. Now, union-find, you know you can solve v in alpha of n time, the inverse Ackermann function, super, super tiny, slow growing function, smaller than log log log log log log log. Really small. But we have this sorting, which is kind of annoying. So the overall running time-- we'll worry about correctness in a moment. We have to sort-- to sort E by weight. So I'll just call that's sort of E. Then we have to do some unions. I guess for every edge, potentially, we do a union. I'll just write E times alpha of v. And then we have to do, well, we also have to find-sets, but same deal.",
            "metrics": {
                "relativeDCReadability": 0.9907942904020608,
                "lexicalDiversity": 0.5,
                "posComposition": {
                    "IN": 0.103,
                    "PRP": 0.098,
                    "VBP": 0.064,
                    "RB": 0.068,
                    "TO": 0.038,
                    "DT": 0.085,
                    "NN": 0.184,
                    "NNP": 0.051,
                    "CC": 0.034,
                    "VB": 0.051,
                    "VBD": 0.034,
                    "JJ": 0.056,
                    "NNS": 0.03,
                    "VBG": 0.013,
                    "WP": 0.004,
                    "VBZ": 0.013,
                    "VBN": 0.009,
                    "POS": 0.009,
                    "RBR": 0.004,
                    "EX": 0.004,
                    "MD": 0.017,
                    "FW": 0.004,
                    "JJR": 0.013,
                    "WDT": 0.004,
                    ":": 0.009
                },
                "syllableRate": 2.65,
                "topicScores": [
                    [
                        "log",
                        0.22019946966549542
                    ],
                    [
                        "union",
                        0.26277114505652704
                    ],
                    [
                        "log log",
                        0.27580315718484355
                    ],
                    [
                        "find",
                        0.3096362486444731
                    ],
                    [
                        "e",
                        0.35593996311942344
                    ],
                    [
                        "T",
                        0.4078526747488782
                    ],
                    [
                        "algorithm",
                        0.41438979731259357
                    ],
                    [
                        "log log log",
                        0.4170792738038587
                    ],
                    [
                        "fact",
                        0.5205434936159902
                    ],
                    [
                        "data",
                        0.5306345149137608
                    ],
                    [
                        "structure",
                        0.5363165573659067
                    ],
                    [
                        "order",
                        0.541398633815544
                    ],
                    [
                        "small",
                        0.546187597205264
                    ],
                    [
                        "v",
                        0.5464823187267259
                    ],
                    [
                        "deal",
                        0.5484626020715332
                    ],
                    [
                        "set",
                        0.5513829912763012
                    ],
                    [
                        "super",
                        0.553450730286279
                    ],
                    [
                        "set T",
                        0.5538353434017242
                    ],
                    [
                        "function",
                        0.5626523718002383
                    ],
                    [
                        "alpha",
                        0.5633330368096514
                    ],
                    [
                        "time",
                        0.5653351796852346
                    ],
                    [
                        "Kruskal",
                        0.5692962367305143
                    ],
                    [
                        "Fibonacci",
                        0.6182712577891912
                    ],
                    [
                        "Dijkstra",
                        0.6182712577891912
                    ],
                    [
                        "Ackermann",
                        0.6422715459995489
                    ],
                    [
                        "component",
                        0.8064605165532869
                    ],
                    [
                        "answer",
                        0.8292476028569703
                    ],
                    [
                        "heck",
                        0.8624715066808045
                    ],
                    [
                        "graph",
                        0.8878775612430184
                    ],
                    [
                        "lot",
                        0.8878775612430185
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "find",
                        0.3096362486444731
                    ],
                    [
                        "T",
                        0.4078526747488782
                    ],
                    [
                        "algorithm",
                        0.41438979731259357
                    ],
                    [
                        "set",
                        0.5513829912763012
                    ],
                    [
                        "Dijkstra",
                        0.6182712577891912
                    ],
                    [
                        "graph",
                        0.8878775612430184
                    ]
                ]
            }
        },
        "tKwnms5iRBU-4410": {
            "id": "tKwnms5iRBU-4410",
            "heat": 0.275,
            "start": 4410.0,
            "text": " So find-set and union cost alpha amortized, so the total cost for doing this for all edges is going to be the number of edges times alpha, and then there's like plus v, I guess, but that's smaller. That's a connected graph. So other than the sorting time, this algorithm is really good. It's faster. But if you're sorting by an n log n algorithm, this is not so great. That's how it goes. I think you can reduce this to sorting just v things, instead of E things, with a little bit of effort, like doing a select operation. But when this algorithm is really good is if your weights are integers. If You have weights, let's say weight of e is 0 or 1 or, say, n to the c, for some constant c, then I can use rate x sort, linear time sorting, and then this will be linear time, and I'm only paying E times alpha. So if you have reasonably small weights, Kruskal's algorithm is better. Otherwise, I guess you prefer Prim's algorithm. But either away. I actually used a variation of this algorithm recently. If you want to generate a random spanning tree, then you can use exactly the same algorithm. You pick a random manage that you haven't picked already, you see, can I add this edge with this test?",
            "metrics": {
                "relativeDCReadability": 1.0380518953241962,
                "lexicalDiversity": 0.5168067226890757,
                "posComposition": {
                    "RB": 0.105,
                    "JJ": 0.084,
                    "CC": 0.046,
                    "NN": 0.122,
                    "VBP": 0.063,
                    "VBN": 0.008,
                    "DT": 0.113,
                    "IN": 0.092,
                    "VBG": 0.029,
                    "NNS": 0.05,
                    "VBZ": 0.055,
                    "TO": 0.017,
                    "VB": 0.042,
                    "EX": 0.004,
                    "PRP": 0.08,
                    "JJR": 0.004,
                    "RBR": 0.008,
                    "WRB": 0.008,
                    "MD": 0.021,
                    "NNP": 0.017,
                    "PRP$": 0.004,
                    "POS": 0.013,
                    "CD": 0.008,
                    "VBD": 0.004
                },
                "syllableRate": 2.742,
                "topicScores": [
                    [
                        "algorithm",
                        0.2707299585412229
                    ],
                    [
                        "sort",
                        0.33427696736543333
                    ],
                    [
                        "time",
                        0.3674038231640582
                    ],
                    [
                        "weight",
                        0.3775981917384139
                    ],
                    [
                        "alpha",
                        0.41377692500702773
                    ],
                    [
                        "n",
                        0.4334858169329296
                    ],
                    [
                        "edge",
                        0.43720280738777517
                    ],
                    [
                        "cost",
                        0.4867567753708458
                    ],
                    [
                        "good",
                        0.5254934568717806
                    ],
                    [
                        "v",
                        0.5323623461222025
                    ],
                    [
                        "small",
                        0.53669280557352
                    ],
                    [
                        "linear",
                        0.5543750715365569
                    ],
                    [
                        "thing",
                        0.5566299966022198
                    ],
                    [
                        "random",
                        0.5623272017019045
                    ],
                    [
                        "Kruskal",
                        0.6497337570707816
                    ],
                    [
                        "E",
                        0.6530223227627386
                    ],
                    [
                        "Prim",
                        0.6648969147361202
                    ],
                    [
                        "union",
                        0.8004253842564929
                    ],
                    [
                        "total",
                        0.8004253842564929
                    ],
                    [
                        "number",
                        0.8004253842564929
                    ],
                    [
                        "graph",
                        0.827939704347294
                    ],
                    [
                        "connected",
                        0.8487739862593424
                    ],
                    [
                        "great",
                        0.8775404332594768
                    ],
                    [
                        "operation",
                        0.8890021992558244
                    ],
                    [
                        "integer",
                        0.8928686858864234
                    ],
                    [
                        "well",
                        0.8986145420139939
                    ],
                    [
                        "log",
                        0.8998896885116905
                    ],
                    [
                        "effort",
                        0.903306121422033
                    ],
                    [
                        "select",
                        0.903306121422033
                    ],
                    [
                        "test",
                        0.9071838836248827
                    ]
                ],
                "topTopicSimilarity": 0.16666666666666666,
                "sharedTopicScores": [
                    [
                        "algorithm",
                        0.2707299585412229
                    ],
                    [
                        "weight",
                        0.3775981917384139
                    ],
                    [
                        "edge",
                        0.43720280738777517
                    ],
                    [
                        "thing",
                        0.5566299966022198
                    ],
                    [
                        "graph",
                        0.827939704347294
                    ]
                ]
            }
        },
        "tKwnms5iRBU-4500": {
            "id": "tKwnms5iRBU-4500",
            "heat": 0.31,
            "start": 4500.0,
            "text": " If you can, add it and repeat. That will give you a random spanning tree. It will generate all spanning trees uniform leap likely. So that's a fun fact, useful thing for union-find. Let me tell you briefly about correctness. Again, we proved correctness with an invariant. Claim that at all times the tree T of edges that we've picked so far is contained in some minimum spanning tree, T star. T start is going to change, but I always want the edges I've chosen to be inside a minimum spanning tree. Again, we can prove this by induction. So assume by induction that this is true so far, and then suppose that we're adding an edge here. So we're converting T into T prime, which is T union e.",
            "metrics": {
                "relativeDCReadability": 0.9112921678079127,
                "lexicalDiversity": 0.4740740740740741,
                "posComposition": {
                    "IN": 0.126,
                    "PRP": 0.096,
                    "MD": 0.03,
                    "VB": 0.067,
                    "CC": 0.022,
                    "DT": 0.104,
                    "JJ": 0.089,
                    "NN": 0.133,
                    "VBG": 0.03,
                    "NNS": 0.03,
                    "VBP": 0.052,
                    "VBZ": 0.037,
                    "NNP": 0.067,
                    "VBD": 0.007,
                    "WDT": 0.015,
                    "VBN": 0.022,
                    "RB": 0.059,
                    "TO": 0.015
                },
                "syllableRate": 1.517,
                "topicScores": [
                    [
                        "t",
                        0.296456779999189
                    ],
                    [
                        "tree",
                        0.33756207205330546
                    ],
                    [
                        "edge",
                        0.4589313458412096
                    ],
                    [
                        "spanning",
                        0.531094311663136
                    ],
                    [
                        "correctness",
                        0.5614418791409169
                    ],
                    [
                        "induction",
                        0.5620480116116023
                    ],
                    [
                        "union",
                        0.5673258459511336
                    ],
                    [
                        "minimum",
                        0.5700951295004092
                    ],
                    [
                        "find",
                        0.8381225402934708
                    ],
                    [
                        "star",
                        0.8628189489985819
                    ],
                    [
                        "random",
                        0.8704308344828666
                    ],
                    [
                        "invariant",
                        0.8754526917112643
                    ],
                    [
                        "fun",
                        0.8899873406485257
                    ],
                    [
                        "fact",
                        0.8899873406485257
                    ],
                    [
                        "useful",
                        0.8899873406485257
                    ],
                    [
                        "thing",
                        0.8899873406485257
                    ],
                    [
                        "uniform",
                        0.8908821435394702
                    ],
                    [
                        "e.",
                        0.893295314237624
                    ],
                    [
                        "prime",
                        0.9176663396180901
                    ],
                    [
                        "time",
                        0.9179088160461273
                    ],
                    [
                        "true",
                        0.9252284086657976
                    ],
                    [
                        "t star",
                        1.462584524928727
                    ],
                    [
                        "tree t",
                        1.5040393110278278
                    ],
                    [
                        "spanning tree",
                        1.7455554206360306
                    ],
                    [
                        "T union",
                        1.799251451119355
                    ],
                    [
                        "T prime",
                        1.906713203609584
                    ],
                    [
                        "random spanning",
                        2.7410845603811156
                    ],
                    [
                        "minimum spanning",
                        3.1771290759907185
                    ],
                    [
                        "tree uniform",
                        3.4917709536977495
                    ],
                    [
                        "fun fact",
                        3.8094835284910893
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "tree",
                        0.33756207205330546
                    ],
                    [
                        "edge",
                        0.4589313458412096
                    ],
                    [
                        "minimum",
                        0.5700951295004092
                    ],
                    [
                        "find",
                        0.8381225402934708
                    ],
                    [
                        "thing",
                        0.8899873406485257
                    ],
                    [
                        "spanning tree",
                        1.7455554206360306
                    ],
                    [
                        "T prime",
                        1.906713203609584
                    ],
                    [
                        "minimum spanning",
                        3.1771290759907185
                    ]
                ]
            }
        },
        "tKwnms5iRBU-4590": {
            "id": "tKwnms5iRBU-4590",
            "heat": 0.303,
            "start": 4590.0,
            "text": " By the data structural setup, I know that the endpoints of e, u, and v are in different connected components. In general, what my picture looks like, is I have some various connected components, maybe there's a single vertex, whatever. I've built a minimum spanning tree for each one. I built some tree, and I actually know that these trees are contained in one global minimum spanning tree. OK, and now we're looking at an edge that goes from some vertex u in one connected component to some vertex v in a different connected component. This is our edge e. That's our setup. Because the union-find data structure maintains connected components, that's another invariant to prove. We're considering adding this edge, which connects two different connected components. So I want to use the greedy choice property with some S. What should S be? I want e to cross a cut, so what's a good cut?",
            "metrics": {
                "relativeDCReadability": 1.159373699418294,
                "lexicalDiversity": 0.5617283950617284,
                "posComposition": {
                    "IN": 0.099,
                    "DT": 0.13,
                    "NNS": 0.043,
                    "JJ": 0.105,
                    "NN": 0.173,
                    "PRP": 0.056,
                    "VBP": 0.062,
                    "CC": 0.019,
                    "WP": 0.019,
                    "PRP$": 0.019,
                    "VBZ": 0.068,
                    "RB": 0.025,
                    "EX": 0.006,
                    "WDT": 0.025,
                    "VBN": 0.019,
                    "CD": 0.025,
                    "VBD": 0.012,
                    "VBG": 0.025,
                    "NNP": 0.012,
                    "TO": 0.025,
                    "VB": 0.031,
                    "MD": 0.006
                },
                "syllableRate": 2.033,
                "topicScores": [
                    [
                        "component",
                        0.2962367816523124
                    ],
                    [
                        "connected",
                        0.3093187132883767
                    ],
                    [
                        "tree",
                        0.3757506374054307
                    ],
                    [
                        "different",
                        0.4163801396635245
                    ],
                    [
                        "vertex",
                        0.43459822698163925
                    ],
                    [
                        "edge",
                        0.44730933021920916
                    ],
                    [
                        "spanning",
                        0.5268108734591723
                    ],
                    [
                        "minimum",
                        0.5363726398835489
                    ],
                    [
                        "setup",
                        0.5406195662204123
                    ],
                    [
                        "cut",
                        0.5621342418197972
                    ],
                    [
                        "S.",
                        0.6913241210485408
                    ],
                    [
                        "connected component",
                        0.7678002806083926
                    ],
                    [
                        "structural",
                        0.7918777843498029
                    ],
                    [
                        "datum",
                        0.8100905131668149
                    ],
                    [
                        "endpoint",
                        0.8100905131668149
                    ],
                    [
                        "general",
                        0.8353226475580141
                    ],
                    [
                        "single",
                        0.8513310670166335
                    ],
                    [
                        "picture",
                        0.8652265320970404
                    ],
                    [
                        "e.",
                        0.8760248852745048
                    ],
                    [
                        "global",
                        0.897918828487033
                    ],
                    [
                        "union",
                        0.908409525823227
                    ],
                    [
                        "data",
                        0.908409525823227
                    ],
                    [
                        "good",
                        0.9153232793554857
                    ],
                    [
                        "invariant",
                        0.9174871739278273
                    ],
                    [
                        "greedy",
                        0.9220279535287957
                    ],
                    [
                        "choice",
                        0.9220279535287957
                    ],
                    [
                        "property",
                        0.9220279535287957
                    ],
                    [
                        "different connected",
                        0.9963617216784589
                    ],
                    [
                        "minimum spanning",
                        1.5434764603841895
                    ],
                    [
                        "spanning tree",
                        1.6928313349536321
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "tree",
                        0.3757506374054307
                    ],
                    [
                        "vertex",
                        0.43459822698163925
                    ],
                    [
                        "edge",
                        0.44730933021920916
                    ],
                    [
                        "minimum",
                        0.5363726398835489
                    ],
                    [
                        "cut",
                        0.5621342418197972
                    ],
                    [
                        "greedy",
                        0.9220279535287957
                    ],
                    [
                        "minimum spanning",
                        1.5434764603841895
                    ],
                    [
                        "spanning tree",
                        1.6928313349536321
                    ]
                ]
            }
        },
        "tKwnms5iRBU-4680": {
            "id": "tKwnms5iRBU-4680",
            "heat": 0.707,
            "start": 4680.0,
            "text": " Yeah? AUDIENCE: The connected component of u and then everything else. ERIK DEMAINE: Connected component of u and everything else? AUDIENCE: Yeah. ERIK DEMAINE: That would work, which is also the opposite of the connected component containing v. There are many choices that work. I could take basically this cut, which is the connected component of you with everything else versus the connected component of v. I could take this cut, which is the connected component of u only versus everybody else. Either of those will work. Good. Good curve, all right. So let's say S equals the connected component of u, or connected component of v. e crosses that, all right? Because it goes from u to v, and u is on one side, v is on the other side. I wanted to include an entire connected component because when I apply the greedy choice property, I modify T star, and I don't want to modify, I don't want to delete any of these edges that are already in my connected components, that I've already put in there. But if I choose my cut to just be this, I know that the edge that I potentially remove will cross this cut, which means it goes between connected components, which means I haven't added that yet to T. So when I apply this greedy choice property, I'm not deleting anything from T. Everything that",
            "metrics": {
                "relativeDCReadability": 1.109981088464559,
                "lexicalDiversity": 0.5291666666666667,
                "posComposition": {
                    "UH": 0.004,
                    "NNP": 0.075,
                    "DT": 0.083,
                    "JJ": 0.058,
                    "NN": 0.158,
                    "IN": 0.121,
                    "CC": 0.025,
                    "RB": 0.087,
                    "MD": 0.021,
                    "VB": 0.062,
                    "WDT": 0.029,
                    "VBZ": 0.037,
                    "VBG": 0.008,
                    "EX": 0.004,
                    "VBP": 0.054,
                    "NNS": 0.021,
                    "PRP": 0.075,
                    "POS": 0.004,
                    "VBN": 0.021,
                    "TO": 0.025,
                    "CD": 0.004,
                    "VBD": 0.004,
                    "WRB": 0.008,
                    "PRP$": 0.008
                },
                "syllableRate": 2.95,
                "topicScores": [
                    [
                        "ERIK DEMAINE",
                        0.22672772040849196
                    ],
                    [
                        "component",
                        0.233288325995976
                    ],
                    [
                        "connected",
                        0.24281398762606862
                    ],
                    [
                        "audience",
                        0.2781491301162654
                    ],
                    [
                        "cut",
                        0.38542114009153416
                    ],
                    [
                        "T.",
                        0.4334136605528749
                    ],
                    [
                        "v.",
                        0.44994553088987876
                    ],
                    [
                        "choice",
                        0.4504662977494218
                    ],
                    [
                        "right",
                        0.5303756959987389
                    ],
                    [
                        "good",
                        0.5377564105297297
                    ],
                    [
                        "property",
                        0.5571662111096591
                    ],
                    [
                        "greedy",
                        0.570605015630071
                    ],
                    [
                        "edge",
                        0.58221839832772
                    ],
                    [
                        "connected component",
                        0.682633146499362
                    ],
                    [
                        "S",
                        0.7009835191593122
                    ],
                    [
                        "curve",
                        0.9281068089019548
                    ],
                    [
                        "opposite",
                        0.9343239233425632
                    ],
                    [
                        "crosse",
                        0.9353952445779194
                    ],
                    [
                        "star",
                        0.9371593013182717
                    ],
                    [
                        "entire",
                        0.9424207938574083
                    ],
                    [
                        "T star",
                        1.8752638198353464
                    ],
                    [
                        "choice property",
                        2.4558463580066716
                    ],
                    [
                        "greedy choice",
                        2.7756753611372806
                    ],
                    [
                        "good curve",
                        3.785776014857135
                    ],
                    [
                        "entire connected",
                        3.7992001691440267
                    ],
                    [
                        "v. e",
                        5.519461869555237
                    ],
                    [
                        "e crosse",
                        7.3343937777830215
                    ],
                    [
                        "greedy choice property",
                        15.123532836025335
                    ],
                    [
                        "entire connected component",
                        15.835654580193232
                    ]
                ],
                "topTopicSimilarity": 0.20689655172413793,
                "sharedTopicScores": [
                    [
                        "ERIK DEMAINE",
                        0.22672772040849196
                    ],
                    [
                        "cut",
                        0.38542114009153416
                    ],
                    [
                        "greedy",
                        0.570605015630071
                    ],
                    [
                        "edge",
                        0.58221839832772
                    ],
                    [
                        "S",
                        0.7009835191593122
                    ],
                    [
                        "T star",
                        1.8752638198353464
                    ]
                ]
            }
        },
        "tKwnms5iRBU-4770": {
            "id": "tKwnms5iRBU-4770",
            "heat": 0.784,
            "start": 4770.0,
            "text": " was in T is still in T star. So that tells me that T prime is contained in T star prime. The new T star that I get when I apply the cut and paste argument, I modify T star potentially by removing one edge and putting e in. And the edge that I remove was not already in T, which means I preserve this part, but I also get that my new edge e is in the minimum spanning tree. And so that's how you prove by induction that at all times the edges that you've chosen so far are in T star. Actually, to apply the greedy choice property, I need not only that e is cut-- sorry, that e crosses the cut, I also need that e is the minimum weight edge crossing the cut. That's a little more argument to prove. The rough idea is that if you forget about the edges we've already dealt with, e is the globally minimum weight edge. OK, but what about the edges we've already dealt with? Some of them are in the tree. The edges that are in these-- that are in T, those obviously don't cross the cut. That's how we designed the cut. The cup was designed not to cross, not two separate any of these connected components. So all the edges that we've added to T, those are OK. They're not related to the edges that cross this cut. But we may have already considered some lower weight",
            "metrics": {
                "relativeDCReadability": 0.9842852036779522,
                "lexicalDiversity": 0.44866920152091255,
                "posComposition": {
                    "VBD": 0.019,
                    "IN": 0.122,
                    "NNP": 0.049,
                    "VBZ": 0.049,
                    "RB": 0.08,
                    "NN": 0.144,
                    "PRP": 0.072,
                    "VBN": 0.034,
                    "DT": 0.122,
                    "JJ": 0.038,
                    "WDT": 0.027,
                    "VBP": 0.087,
                    "WRB": 0.011,
                    "CC": 0.027,
                    "VBG": 0.011,
                    "CD": 0.008,
                    "PRP$": 0.004,
                    "NNS": 0.03,
                    "TO": 0.019,
                    "VB": 0.019,
                    ":": 0.008,
                    "RBR": 0.004,
                    "WP": 0.004,
                    "PDT": 0.004,
                    "MD": 0.004,
                    "JJR": 0.004
                },
                "syllableRate": 2.867,
                "topicScores": [
                    [
                        "T",
                        0.15816147637619582
                    ],
                    [
                        "edge",
                        0.23124042967519556
                    ],
                    [
                        "T star",
                        0.27112191186093115
                    ],
                    [
                        "cut",
                        0.2846043244706654
                    ],
                    [
                        "ok",
                        0.3850167441252652
                    ],
                    [
                        "minimum",
                        0.4195904604015109
                    ],
                    [
                        "weight",
                        0.42728589870148875
                    ],
                    [
                        "prime",
                        0.5246319311817145
                    ],
                    [
                        "tree",
                        0.5327511324689826
                    ],
                    [
                        "new",
                        0.5410183342696461
                    ],
                    [
                        "argument",
                        0.5510846621084853
                    ],
                    [
                        "t prime",
                        0.7879465328814969
                    ],
                    [
                        "new t",
                        0.8330595887060614
                    ],
                    [
                        "paste",
                        0.8799004541817345
                    ],
                    [
                        "spanning",
                        0.8920056037745799
                    ],
                    [
                        "choice",
                        0.9052559308721605
                    ],
                    [
                        "property",
                        0.9052559308721605
                    ],
                    [
                        "sorry",
                        0.9052559308721605
                    ],
                    [
                        "induction",
                        0.9066301322087357
                    ],
                    [
                        "time",
                        0.9066301322087357
                    ],
                    [
                        "component",
                        0.9093501645337397
                    ],
                    [
                        "greedy",
                        0.9117731498294889
                    ],
                    [
                        "rough",
                        0.9125971417015011
                    ],
                    [
                        "little",
                        0.9156309755705114
                    ],
                    [
                        "idea",
                        0.9186547535561845
                    ],
                    [
                        "cup",
                        0.9221905752470345
                    ],
                    [
                        "these--",
                        0.9248591113769637
                    ],
                    [
                        "low",
                        0.9254764907275311
                    ],
                    [
                        "separate",
                        0.927636019147225
                    ],
                    [
                        "weight edge",
                        1.5329751164777572
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "T",
                        0.15816147637619582
                    ],
                    [
                        "edge",
                        0.23124042967519556
                    ],
                    [
                        "T star",
                        0.27112191186093115
                    ],
                    [
                        "cut",
                        0.2846043244706654
                    ],
                    [
                        "ok",
                        0.3850167441252652
                    ],
                    [
                        "minimum",
                        0.4195904604015109
                    ],
                    [
                        "weight",
                        0.42728589870148875
                    ],
                    [
                        "tree",
                        0.5327511324689826
                    ],
                    [
                        "greedy",
                        0.9117731498294889
                    ],
                    [
                        "weight edge",
                        1.5329751164777572
                    ]
                ]
            }
        },
        "tKwnms5iRBU-4860": {
            "id": "tKwnms5iRBU-4860",
            "heat": 1.0,
            "start": 4860.0,
            "text": " edges that we didn't add to T. If we didn't add an edge to T, that means actually they were in the same set, which means also those are-- I'm going to use my other color, blue. Those are extra edges in here that are inside a connected component, have smaller weight than e, but they're inside the connected component. So again, they're not crossed. So they don't cross the cut, rather. So e is basically the first edge that we're considering that crosses this cut, because otherwise we would have added that other edge first. So here, we have to do sort of the greedy argument again, considering edges by weight and e is going to be the first edge that crosses this particular cut, which is this connected component versus everyone else. So e has to be the minimum weight edge crossing the cut, so the greedy choice property applies. So we can put e in the minimum spanning tree, and this algorithm is correct. OK? So we've used that lemma a zillion times by now. That's minimum spanning tree and nearly linear time.",
            "metrics": {
                "relativeDCReadability": 0.9236556277575125,
                "lexicalDiversity": 0.49489795918367346,
                "posComposition": {
                    "NNS": 0.031,
                    "IN": 0.102,
                    "PRP": 0.061,
                    "VBD": 0.015,
                    "RB": 0.107,
                    "VB": 0.046,
                    "TO": 0.031,
                    "NNP": 0.031,
                    "DT": 0.112,
                    "NN": 0.168,
                    "VBZ": 0.056,
                    "JJ": 0.082,
                    "WDT": 0.015,
                    "VBP": 0.056,
                    ":": 0.005,
                    "VBG": 0.026,
                    "PRP$": 0.005,
                    "JJR": 0.005,
                    "CC": 0.02,
                    "VBN": 0.015,
                    "MD": 0.01
                },
                "syllableRate": 2.275,
                "topicScores": [
                    [
                        "edge",
                        0.2821676160522515
                    ],
                    [
                        "cut",
                        0.3647493141796202
                    ],
                    [
                        "connected",
                        0.42472530213341136
                    ],
                    [
                        "T",
                        0.42568361353057205
                    ],
                    [
                        "component",
                        0.42960476010520826
                    ],
                    [
                        "minimum",
                        0.43856892608963105
                    ],
                    [
                        "weight",
                        0.44753288061108437
                    ],
                    [
                        "tree",
                        0.5489152803284705
                    ],
                    [
                        "greedy",
                        0.5668925804684354
                    ],
                    [
                        "time",
                        0.5710739805543716
                    ],
                    [
                        "set",
                        0.8063150806383219
                    ],
                    [
                        "blue",
                        0.8162791570377136
                    ],
                    [
                        "color",
                        0.8623609769560966
                    ],
                    [
                        "small",
                        0.8839161669112557
                    ],
                    [
                        "extra",
                        0.8940350104770981
                    ],
                    [
                        "correct",
                        0.8998088659841386
                    ],
                    [
                        "argument",
                        0.9124987334029269
                    ],
                    [
                        "particular",
                        0.9124987334029269
                    ],
                    [
                        "property",
                        0.9156244259428958
                    ],
                    [
                        "choice",
                        0.9232193997089277
                    ],
                    [
                        "linear",
                        0.9235742732369193
                    ],
                    [
                        "algorithm",
                        0.9255417397074218
                    ],
                    [
                        "zillion",
                        0.929102472161204
                    ],
                    [
                        "connected component",
                        1.3508650400853504
                    ],
                    [
                        "particular cut",
                        3.4016982897477983
                    ],
                    [
                        "minimum weight",
                        3.6532418019455624
                    ],
                    [
                        "small weight",
                        3.788425726696483
                    ],
                    [
                        "extra edge",
                        3.9917580257725858
                    ],
                    [
                        "weight edge",
                        4.01483719527529
                    ],
                    [
                        "greedy argument",
                        4.551955706475869
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "edge",
                        0.2821676160522515
                    ],
                    [
                        "cut",
                        0.3647493141796202
                    ],
                    [
                        "T",
                        0.42568361353057205
                    ],
                    [
                        "minimum",
                        0.43856892608963105
                    ],
                    [
                        "weight",
                        0.44753288061108437
                    ],
                    [
                        "tree",
                        0.5489152803284705
                    ],
                    [
                        "greedy",
                        0.5668925804684354
                    ],
                    [
                        "set",
                        0.8063150806383219
                    ],
                    [
                        "algorithm",
                        0.9255417397074218
                    ],
                    [
                        "minimum weight",
                        3.6532418019455624
                    ],
                    [
                        "weight edge",
                        4.01483719527529
                    ]
                ]
            }
        }
    }
}