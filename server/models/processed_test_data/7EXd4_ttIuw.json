[{"text": ">> On today's Visual Studio toolboxTyrique is going to\nshow us how to getstarted with Python development\nusing Visual Studio Code.[MUSIC]>> Hi, welcome to\nVisual Studio Toolbox.I'm your host Robert\nGreen and joining metoday is Tyrique White. Hey Tyrique.>> Hi Robert, thanks for having me.>> Thanks for being on the show.>> Yeah, I'm Tyrique\nWhite everyone and I'ma program manager for Python\ndeveloper tools here at Microsoft.>> Cool. So we're going to\ntalk about doing some Python,we're going to show\nVisual Studio code.>> Right.>> That's awesome. So give usagain the very brief because I\nthink we've talked about it before,but the very brief\nsweet spot for Python.I is a C-sharp developer,or a JavaScript developer,when and why should I learn Python?What are the scenarios\nthat are most prevalent?>> Definitely. So Robert,excellent question when we\nget a lot at conferences.The sweet spot for Python is\nbeing able to build apps quickly.One of my demos later\nI'm going to show innine lines of code\nI'm able to create.I'll be at a very\nsimple web application.I still create a web application.That's the basis for Python.It's the scrapping\nlanguage where peopleare able to prototype quickly.But it's also used for\nproduction code as well,which is super exciting.>> Okay.>> Yeah, cool.>> Yeah, awesome. So todayspecifically we're going to\ntalk about Python and VS Code.For any of those who don't know,VS Code is this free\nopen-source cross-platform toolwhich uses a popularized extension\nmodel for every language.>> Right.>> So today we're going to talk aboutthe Python extension in VS Code\nand getting started experience.Then later, my colleague\nJeffrey will be talkingabout data science and VS\nCode for Python development.>> So that will be\nanother episode thatwe'll record after this one.>> Definitely.>> Showing people behind the scenesand how it works here in the studio.>> Right.>> This way I'm wearing\nthe same shirt.", "start": 0.0, "heat": 0.1}, {"text": ">> Awesome, cool.So let's get started.So the Python Extension offers a\nlot of great jam-packed features.It offers Intellisense, debugging,testing their support forvirtual environment\npackages like VM and Conda,some formatters like\nBlack and Autopep8,as well as some popular\nlinters like pylints.Some fun facts about Python\nextension in VS Code,it's the most popular extension\nthan the VS Code marketplace.>> Real, more certain than C-sharp.>> Yes.>> That's interesting.>> Even better is, Visual\nStudio Code is now atthe top three tool for\nPython developers,which is really exciting.A lot of hype around Python andhopefully by the end of thisyou guys will understand\na bit more why.That's all.>> So it's an extension which\nimplies that you have to go get it?>> Yes, exactly.>> You install VS Code,you don't have this Python extension.>>Right. So yeah.Let's take a step back.Let's show you how to download\nand install Visual Studio Code.So the link to get Visual Studio\nCode if you don't have it iscode.visualstudio.com and you cometo this external and download page.As you can see it auto\ndetects which OS I'm using.>> Okay.>> I can quickly grab\na copy of VS Code.I already have it installed but\nI'm sure we get the idea there.Once you have Visual Studio\nCode you are going to open it,and you're going to see\nthis welcome screen.This welcome screen has tools\nthat allow you to customize.It has this wonderful activity\nbar here which gives youaccess to all of your extensions\nthat you have installed.So after you download\nVisual Studio Codeand you want to use Python,you have to go get\nthe Python extension.>> Okay.>> So to do that you're going to\ngo to the Extensions batch here,and I'm going to type Python.Because it's the most popular,it's going to come up right\nat the top and you're going", "start": 120.0, "heat": 0.1}, {"text": "to see the Python\nextension for Microsoft.>> Not the Python for VS Code\nor the Python extension?>> No. You want the one that hasthe Green star here. Good question.>> The one that you worked on.>> The one that I worked on.>> Not that there's anything\nwrong with those other ones,but this is the one you worked on?>> Definitely. As you can see,I've already installed this.So it says uninstall which\nI'm not going to do,but they'll be an install\nbadge that can be click on.You can also see that we havesome quick tips here\non how to get started,kind of the things I'm\ngoing to cover today.So you need to install VS\nCode which you've done that.You need to install the\nextension which I've done.Then the third thing you needis an installation of\nPython on your machine.>> Right.>> Yeah. One misconceptionwe find is that some\npeople often think thatthe Python extension\nfor VS Code it comeswith Python and it\ndoes not currently.So one way to get around that is\ndepending on which OS you're on.For Windows, we recommend\ngoing to python.org which Ihave here to download the\nlatest release of Python,on Mac a brew install\nworks fine and for Linux,typically the bundled version ofPython that comes with\nthe Linux works well,you get all of these features\nof the Python extension.>> Got it.>> Sound good.>> All right. Awesome.>>So now we've got code,we got the extension, we got Python.>> We do, I have python.Perfect. Okay. So let's get started.Let's get people\naccustomed to the UI here,because it is a bit\ndifferent to get on-boarded.>> Okay.>> So now that I have the extension.As you can see, I have\nthe File Explorer here.When I open a folder,I'm going to be able to see\nthe tree view of that folder,see all the dependencies and\nall the files within there.I have a debugger icon which\nwe'll talk about later.I have a lot of other things.VS Code comes inbox\nwith source control.So I can use my favorite repos,connect to those, and do all\nof that stuff I know and love.", "start": 240.0, "heat": 0.1}, {"text": "We also have the tool bar down here,which allows you to see.I'm signed into Azure currently.I have the life share\nextension installed.I have my toolbar up here,\nall that good stuff.>> Okay.>> So what I now want to do is createa folder and let's getstarted playing around some\ncode. How does that sound?>> Sounds great.>> Another cool thing is,by default when you install\nVS Code on Windows,it adds VS Code to the path.I'll show you exactly\nwhat that means.So what I want to do is I want to\nnavigate to my Command Prompt,and I'm going to find my Demos\nfolder that I have here.I'm going to create\na new folder for us.I'm going to call it VS toolbox.I'm going to navigate to that folder.Now what's really cool is,because I have VS Code on the\npath on my Windows machine,all I have to do is type code.into the Command Prompt,and it will open up an instance\nof VS Code inside of that folder.>> Okay.>> You can see that from\nmy File Explorer here.>> So you can open\nthe folder from code,you can go to the folder and\nlaunch code from that location?>> Exactly. On Linux and Mac youhave to run a command\nto get VS Code on path,but it's super handy if\nyour command line focus.So now what I'm going to do\nactually is create a new file.This is the important part of\nactivating the Python extension.In order for the\nextension to activate,which you're seeing down there,activating extension, you need\nto select a Python folder.Sorry, excuse me, a Python file.>> Okay.>>.Py is the file type.As you can see I'm immediately,to verify that\nextension is activated,I actually have Python\ndown here in my toolbar.If I click on this, it\ngives me the list ofall the different interpreters I haveinstalled on my machine for Python.", "start": 360.0, "heat": 0.1}, {"text": ">> Is it okay when\nyou installed Python?>> Well, I've installed\nmultiple different versionsfor different reasons; for testing,for a playing around.But these are all the\ninterpreter versions I have.As the extension can pick up\nmost of those if they arein the standard places whichthey typically are when\nyou install Python.So pretty cool stuff there.So we created our file.So now what I want to\ndo is I want to talkabout the command palette.That's going to be super\nhelpful for us becausefor developers who are bit\nmore Command Line driven,you want to have that terminal\nexperience inside the editor.So in order to get to what\nI call the Command Palette,you're going to do on a Windows\nmachine Control Shift P,to bring up the Command Palette.Again, the Command Palette\nhas all of the commandsyou could ever want\nand love for Python.All those commands of Python\nor denoted by Python colon.>> Okay.>> You can scroll\ndown the entire listto get anything that you want.I am after create terminal,because I want to pull up a terminalfor some command linedriven stuff that I'm\ngoing to talk about now.>> Okay.>> Cool. So what's really coolhere is that I can start editing\nor start writing some code.So if I write print,you can see that immediately I'm\nstarting to get what we callintellisense as well\nas some documentation.So let's say I wasn't familiar\nwith the print statement,I can scroll over to this\ndocumentation tool tip here,and I can see exactly\nwhat parameters it takes.For this I just want to\nprint \"Hello world\".>> Okay.>> Cool. To run this,this is actually something we'verecently added a couple\nof releases ago,is the green Run button.So I can actually\njust run my code withthis button and it prints out\nin the terminal, \"Hello World\".>> Cool.>> Our classic example\nfor coding,\"Hello world\".", "start": 480.0, "heat": 0.1}, {"text": ">>All right.>>Perfect. That's cool.Now, the next thing I want\nto talk about which isreally important for\nPython developmentis the concept of a\nvirtual environment.Are you familiar with\nvirtual environments router?>> Not that much, no.>> Okay. So I'll explain\nbriefly what those are.So in Python you can have\napplication A and B.Let's say I'm a developer,I'm working on two\ndifferent applications.However, each application requiresseparate versions of packages\nin order to function correctly.>> Okay.>> If I were to include all of\nthose different package versionsin the same single application\nor same environment,there's a possibility that\nI might have conflicts.Some code may not run,something may get broken.So typically what we recommend\nfor Python developers is tocreate a virtual environmentwhich I'm going to show\nyou how to do now.Cool. So back to my\ncommand line here.So I'm in my VS toolbox folder.I have my hello.Py file,print \"Hello world\", we're all good.So there are different commands\ndepending on the OS you're using.I'm actually going to show you\nwhen we're on those command.Then also we can look at\nthe Linux, Mac command.But in order to run,to create a virtual environment\nfrom the command line,what I want to do is\nI want to type Py,short for Python -3 for the version\nof Python I'm going to use.Dash m, which is saying, okay,I'm going to pass a module\nthat I want you to use.This module is called VM,short for virtual environment\nwhich makes sense.I'm actually going to call\nour virtual environments.Give me any name you want. What's\nyour favorite folder name?>> My favorite folder name, pictures.>> Pictures. Cool.>> What's really cool is you noticethis pop-up that comes. It says.\"We noticed a new virtual\nenvironment has been created,do you want to select it\nfor the workspace folder?\"What's really cool about\nthat is if I select\"Yes\" and navigate to\nmy.vscode folder here,you'll see that we include this line", "start": 600.0, "heat": 0.1}, {"text": "with a path to that pictures\nvirtual environment.So the next time I open this folder,I'll already be inside of this\nvirtual environment which you cansee is being denoted here\npictures virtual environment,and so I can get more productive\nmore quickly the next time.>> That's not an actual folder\non the hard drive, right?>> So it creates a local\ncopy, actually good question.It creates a local copy of\nPython for this workspace,and you can see the list of\nscripts that this includes aswell as all of the libraries thatyou may have in that\nvirtual environment.But again, it's just\nlocal to this workspace,so that way your application\ncan get all of the stuffinside of that virtual\nenvironment. So I actually.>> It sticks around, if\nI exit code come backin I can have access tothat environment or do\nI have to recreate it?>> Exactly, you have\naccess to the environment.So what I'm actually going to do\nnow is \"Hello world\" is exciting,but I actually want to show youa web app that I have with the\nvirtual environment already create.>> Okay. Cool.>> So let's actually answer\nyour question right now.So in order to close this I'm\ngoing to go to File, Close folder.There are a couple of ways\nI can open a new folder.I can go to File,Open Folder here, and\nnavigate on my File Explorer.There's the Start Menu which\nallows me to open folder,but actually the demo Iwant is \"Sentimentapi\"\nand it's under my recent.So why not just click it there?Cool. So a couple of\nthings to immediatelynotice about this application,is it's a simple web\napplication usingthe popular Python package flaskwhich is a weighted just create\nsimple web applications,and to answer your question Robert,I have a virtual environment\nhere called \"vstoolbox\".Again, I pre-created this so it\nsaved when I opened it back up.", "start": 720.0, "heat": 0.136}, {"text": "What's even better is that\nI could actually activatethat virtual environment inside\nthe terminal in two ways.So if your command line drivenagain the way in\nwhich you're going toactivate a virtual environment ona Windows machine is youcan start with the\nvirtual environment name,so vstoolbox backslash\nbecause we're on Windows,scripts backslash\nactivate and you'll seethat the virtual\nenvironment is activated bythis parentheses with the\nvirtual environment name.>> So then does that information\nstore like in source control.So if I take this app,put it in GitHub, go home,clone it, and bring it down locally Ihave not only the code but also\nthe environment information?>> Yeah, absolutely. If you want toshare the virtual environment withdevelopers in your team or withfriends you definitely can do that.I'll also show you or you canjust create a new one,\nbut I'll show you.We've talked a little\nbit about that but Ithink it'll come full\ncircle in a minute.Another quick way you can activate\nthis virtual environment,if you don't want to have to rememberthat path to the activate file,what you can do on a Windows\nmachine is control shift back tick.What it'll do is it'll open\na new terminal for you withthis virtual environment\nalready activated.So some really cool stuff here.Let's explore the\neditor for a minute.So you guys or everyone has probablynoticed the yellow squiggles\nthat are appearing here.These yellow squiggles are\nwhat we call linting messages,and so what's important to know is\nthat the first time you installthe Python extension\nit's going to ask if youwant to install a linter.The default currently as Pylint,and so it is going to ask you\nif you want to use Pylint,but we also support other\nlenting tools like Flake8 etc.So what you're seeing here\nare these linting messages.", "start": 840.0, "heat": 0.155}, {"text": "So if I hover over those linting\nmessages, it's telling me,it's saying, \"Hey, I can't find\nunresolved import text blob.\"So what that essentially\nmeans, is that,it can't find this package inside\nof my virtual environments.So it's giving me an\nerror which is superuseful because it gives mea code diagnostic ora problem which I can also\nview under problems here,and you see that I have\nthe list of problems,unresolved import Flask,\nunresolved import textblob.So what we can do actually\nis install those.One thing that's also\ndifferent about this foldercompared to the last folder\nwe created, is that,I have this\nrequirements.txt file here,and for people who don't know forPython developers this\nis just the list ofall the dependencies thatmy application needs\nto function properly.So back to your original point.Depending on the kind of setup\nyou prefer what source control,you may send upyour virtual environments sopeople can download it\nand just activate it oryou might just send up therequirements.txt file\nand allow people tofirst create a virtual environmentand then install all the\npackages thing here.So what I'm going to do\nis I'm going to installthose packages from this\nrequirements.txt file,so back to my command line notice\nagain that I'm still insidethis virtual environment\nbecause I wantall these packages contains\nlocally to this application.So I'm going to go pip install-r and then requirements.txt\nand hit \"Enter\".What you're going to\nnotice is you're goingto notice that it's goingto find those packages\nand install them for me.It's getting the list,I've downloaded these\nbefore so it's justusing the cache\ndiversions of these guys.What's important to\nnote is that when itinstalls these you're\ngoing to notice thatthese error messages are going to\ngo away, which is really cool.So while it's installingthose packages let's explore\nthis application a bit.", "start": 960.0, "heat": 0.1}, {"text": "So what this is,as I said before, is\nthe simple Flask gap.So what I'm doing here is\nI'm essentially creatinga Flask gap that's contained\ninside this folder called Startup.I have a simple homepage\nhere which is just saying,\"Python loves vstoolbox,\" andthis is actually a\nreally cool applicationbecause it's not only just a\nsimple web application but it'sthe sentimentapi is the\ntitle of the folder denotes.So what this is going\nto allow us to do,is it's going to allow us\nto hit an end point witha Word and this API is\ngoing to help us determinethe sentiment of that\nword because maybe I justneed help determining what\nkind of sentiment words have.So very cool it finished\ninstalling the packages for us,and notice that my\nproblems went away,and suddenly if I hover over\nFlask I get documentation for it.Text blob I Get-module text blob\nwhich is really cool stuff.So now what I want us to do\nwe explore this application.So let's actually run\nthis application.There are couple of\nways you can run it.I want to run it using the debugger,because I also want to use\nthis as a moment to talkabout debugging and kind\nof what that gets you.As I stated previously,this is a sentiment APIpretty simple only less\nthan perhaps 10 linesof code if you take out all\nthe comments and the spaces,and that's again the beauty ofPython's your earlier point in\nless than 20 lines of code,essentially, I can create\na powerful sentiment API.I have some to do\nfor myself actually,I need to actually build the API.So if I scroll down to line 13,this is actually the\nroutes that's creatingthat endpoint that\nwill allow us to senda word in and get the\nsentiment back out.So what I want to do is howthis module is working\nis it's saying it'sgoing to take in that message ifthe sentiment score is greater than\nzero we're going to determine,we're going to say it's positive.It's less than zero its negative.So what I'm going to do is I'm\nactually going to write that out.", "start": 1080.0, "heat": 0.142}, {"text": "So if textblob I'musing that package and notice I'm\ngetting my IntelliSense here.So I'm going to tap to\naccept that message.Again, is what I want.So if the message hasa sentiment and notice that\nagain this IntelliSense withthe documentation which is\nallowing me to learn as Itype.polarity is less than zero,then I'm going to\nreassign that sentiment,I'm going to say,\n\"Okay your negative.\"Trying to type at the same timeand let's get rid of my comment here.>> So how does text blob\nhave a sentiment property?>> Sorry?>> Textblob.sentiment.>> Oh, it's the beauty\nof the textblob package.>> Really, it comes with\nsentiment built-in?>> Yeah.>> That's cool.>> Which is another cool\nthing about Python,I could very well\ncreate my own sentimentAPI from scratch if I wanted\nto, but why reinvent the wheel?>> Because I've never seena text box that I've ever\nused have that built into it.>> Right. So what it actually does\nthat passes in that message tothe textblock module and then it doessome stuff under the hood then\nwith cool sentiment polarity etc.>> Cool.>> So we reassign that\nsentiment has negative,and then what I'm actually\ngoing to do is I'm going toreturn that sentiment on the page,on the web application page\nwhich you'll see in a second.So cool. Let's run the application.>> All right.>> I'm going to run it\nusing the debugger actuallybecause there are a couple of\nthings I want to talk about.So let's set a breakpoint on line 15,notice that I clicked tothe left of the line number\nwhich is called the gutter.For those of you who\nare used to debuggingit's going to be the\nsame kind of feel,for those who aren't fear not it'ssuper easy to get started\nwith the debugger.So to start this, there are\na couple of ways I can runmy debugger and I'm goingto just collapse that so I can\ngive you full attention here.I can use the toolbar,", "start": 1200.0, "heat": 0.206}, {"text": "click \"Debug\" and click\n\"Start debugging.\"It also has the keyboard shortcutF5 and so what I'm going to do is\nI'm going to start doing that.Notice that when I click\n\"Start debugging\" it's goingto present to debug\nconfiguration menu.We have a list ofpopular templates that we\nknow Python developers use.Remember earlier I mentioned\nthat this is a Flask gap?>> Yeah.>> So you can see that Flask\nis in that configuration list,and so that's what I wanted\nand I'm going to select it.The next step for debugging a web appis entering the path\nto my start-up file.Remember I said that\nthis start-up file iscontained inside of a\nfolder called Startup,so what I actually want\nto do is I want to tweakthis path a little bit\nto actually point tomy start-up file that is creatingmy flask gap which is startup/app.py.Once I hit \"Enter\" it's\ngoing to start debugging forme and notice that\nthis toolbar down herechanges to orange to denote\nthat I'm in debugging mode.Another cool thing is that debug iconhere becomes highlighted in white,so you can see that I'm\nalso debugging as well.>> I guess it did.>> It did, yeah.>> Okay.>> I've never noticed that.>> Yeah. It's a pretty\ncool nifty thing.>> But at the same\ntime, do you remember,I never tend to notice\nthese things back,you remember the big controversy\nover in Visual Studiothe menu choices at the top areall caps and it was\na big controversy.>> That actually predates\nmy time in Microsoft.>> Anyway, I discovered that\nbecause there was a controversy.>> No, yeah.>> Enough about me, let's\nget back to the app.>> Yeah. So to debug a web app,another thing that people getting\nstarted with web apps maynot know is that in order tohit that break point that\nI've sent on line 15,I actually need to navigate to\nthe URL that it's giving me here.>> Okay.>> So it tells me that\nit's running on this URL,and what's really cool\nis that inside VS code", "start": 1320.0, "heat": 0.281}, {"text": "in order to get to that URL,I can either copy and paste\nit into my browser of choice,or I can just control click,which I'm going to do.>> Oh, look at that.>> You can see it says\n\"Python loves VS toolbox\".Notice that because I've set\nthis break point inside ofthe app.py that defines that message,I actually, in order to\nhit that break point,I need to send a message to this API.So let's do it. What's\nthe phrase that youlove or maybe want to know the\nsentiment of, I don't know.>> Let's say \"Champion\".>> \"Champion\", let's see what\nthe sentiment of champion is.So notice that I have\nthis wheel spinning here.>> Because we are in the\nmiddle of the World Series andeither today or tomorrow there\nwill be a champion grounds.>> Oh, wow. Well let's see\nwhat the sentiment is.So you can tell that VS Code,the icon here is blinking orange,which means that it\ndid something magical.What it's done is it's hit this\nbreak point inside of our API.Let's explore the debug\nmenu for a minutes.So notice that it got\nour message \"Champion\".This is our locals variable window.I can also have my watch window,I have my call stack,all of this good stuff,and I can also step through lines.So to step over, I could actually usethe debug toolbar there\nor I can just \"F10\",so I'm just going to use\nthe [inaudible] there.You notice that as I step,it's said \"okay\"\nremember we say that wedetermined all sentiments\nto be positive at first,and then we run them\nthrough this if statement.So I'm just going to step over again.In order to continue,I can either hitthe arrow here to continue and\nrun it all the way through,or I can just hit \"F5\".So I'm going to hit \"Continue\" again.If I navigate back to my API,I see that the word\n\"Champion\" is positive.", "start": 1440.0, "heat": 0.3}, {"text": ">> Nice. Yeah, pretty cool.>> All right, let's do another test.>> Let's do another test.>> Yes. Let's test a new message.>> Okay, let's test a new message.This time, I'm going to rerun this,but I'm going to try and\nrerun it a different way,I'm still using the debugger\nbut a slightly different way.So this time, to runthis application with the\nbreak point set on line 15,I'm going to use my debug icon\nthat I mentioned earlier.Here's what's really cool about\nthis is that the debug icongives me access to the configuration\nmenu that I saw before.So if I click this \"drop-down\"\nand select \"Add configuration\",what it's going to do and then I haveto hit the green \"play\" button,start debugging, it's\ngoing to send me intothat same debug configuration menu.>> Okay.>> You may be wondering, \"Oh Tyrique,why do I have to type this again?\",and it's because our configuration\nlast time wasn't saved,and so by going through these\nsteps we're going through now,we're saving that configurationand I'll prove that\nto you in a second.So I'm going to navigate\nto Flask again,put that path, andnotice that it creates this\nfile called \"launched.json\".We find that this launch file is veryscary or intimidating forpeople who are first\nstarting out with VS code,but fear not, it's simply an array.It's a JSON format,an array with a list of\ndifferent configurations.But notice that.>> Everything's saved.>> It saves, right,and my startup path is saved.I have some different arguments\nhere which are on by default,and to show you where it gets saved,if you navigate back toyour file explorer by using\nthe explorer button here,the dot VS code folder,if there wasn't one created before,it'll be created for\nyou and you'll havethat logic configuration saved.This is an important because, again,you don't have to go through the\nstartup steps again to save it.So let's go back to my\ndebugger, and you notice,see it says \"this\ntime\" instead of \"AD", "start": 1560.0, "heat": 0.229}, {"text": "configuration\" or \"no\nconfiguration\" like it said before,I get Python flask.Another important thing to\nrealize about debugging is that,notice that I'm currently inside\nof the \"launch.json\" file.If I start the debugger\nhere it will actually throwan error because it thinks I'm\ntrying to debug this JSON.So in order to avoid that,I need to go back actually to the\nfile that I'm trying to debug.So we're going to hit\nour green \"play\" button.Again, I need to navigate to.So let's try another word.>> All right. So this is\na test of the sentiment.So I'm from Boston.>> Okay.>> In Boston when we like\nsomething like this,we'd say \"It's wicked cool\".>> \"Wicked cool\".>> Now \"Wicked\" has the sentiment ofnegative but \"Cool\" has\nthe sentiment of positive.So let's see what happens.>> Let's see how it's\nText bot handles it.So \"Wicked cool\".Okay. Notice again,\nit's flashing orange,it means it hit the break point,and it's verified that\nit hits the break pointby the yellow line here.What's also really\ncool is that all ofthe information you're getting\nin the variables one here,you can actually hover\nover variables here.>> Yeah.>> You get the tool tips\nwhich it's not playing nice,there we go, it was shy\nat first, but here we go.You can see all the\ndifferent properties.Again, to continue, I'm\ngoing to press \"F5\".I'm going to navigate back to this.>> Excellent.>> It says \"Wicked cool is positive\".>> All right. Yes.>> It's pretty cool.>> Very good.>> Yes, it's very awesome.Again, to recap that,if you start debugging\nfrom the toolbar here,you don't get that\nconfiguration saved.So in actually to get that saved,to make you more\nproductive than next time,you want to use the debug icon\nand then an add a configuration.>> Cool.>> Which is really really cool stuff.So let's recap a\nlittle bit of what we", "start": 1680.0, "heat": 0.263}, {"text": "talked about because I know\nthat we've covered a lot.So using virtual environments,which we talked about to help youmanage packages for\ndifferent applications.So creating new environments,depending on if you're a Mac orLinux user or a Windows user,\nthe commands are there.>> Okay.>> You can then the command I use,that I didn't really touch onat the time but now\nI'm going to as thepip install - r. requirements.txt,that's if your file or if your\nproject has one of those,you can create a virtual\nenvironment first and thenyou can install the\nrequirements that are there.You can also install individual\nmodule names if you want to.>> Okay.>> Getting started with debugging.Of course there are multiple\nways you can do this,but the way that I recommend,in the way that I like to do it,is actually using the\nbug icon which takesme to the debug configuration menu\nI can click that \"Drop-down\",hit \"App configuration\", I canchoose my configuration\nof what I want to debug.>> The second time you have toretype all of the actions\nbecause you didn't save it,you're going to hit straight to here.>> Right, exactly.Put the path to that web application,and that \"launch.json\" gets created,and then remember, you don't want\nto debug the \"launch.json\" file,you actually want to go back tothe Python file that you areinterested in and then\nhit the green run button.>> Okay.>> Pretty cool stuff andthat's about all I have\nfor you guys today.>> All right.>> Just talking about that\ngetting started experience.>> Cool. So for more information,people can go to aka.ms\n/VST /pythonvscode.>> Yeah.>> There's a Getting\nStarted tutorial there.More information on Python\nwithin Visual Studio Code.Where is a good place for people\nto go to learn Python in general?>> There's a lot of\ndocumentation online,our getting started tutorial,we'll teach you links\nout to other things,other material that is useful,but yes, for example,if you want to learn about Flask,the Flask documentation that\nthey have is excellent.", "start": 1800.0, "heat": 0.313}, {"text": ">> Okay.>> If you ever have any\nquestions about gettingstarted though and you want to\ninteract directly with the team,our Twitter handle is\nat Python VS code.>> Okay.>> All one word,and we are always interacting\nwith users tryingto understand what experiences\nwork best and which don't.>> Fantastic.>> Yeah. Awesome.\nThanks for having me.>> Thanks for coming on.\nThose are great introductionto not only Visual Studio code forfolks that haven't been playing\naround with it a lot butalso how you get started using\nPython and it's awesome.>> Perfect. Yes.>> Thanks.>> Awesome. Thank you.>> Hope you guys enjoyed\nthat and we will see younext time on Visual Studio Toolbox.[MUSIC]", "start": 1920.0, "heat": 0.363}]