{
    "metadata": {
        "id": "FlGjISF3l78",
        "avgHeat": 0.43,
        "runtime": 2839.4500000000003,
        "dale-challReadabilityScore": 8.019162439656043,
        "lexicalDiversity": 0.4901263823064771,
        "posComposition": {
            "DT": 0.121,
            "JJ": 0.053,
            "NN": 0.143,
            "VBZ": 0.038,
            "VBN": 0.012,
            "IN": 0.097,
            "NNP": 0.042,
            "PRP$": 0.008,
            "MD": 0.014,
            "VB": 0.058,
            "VBP": 0.048,
            "TO": 0.045,
            "NNS": 0.046,
            "CC": 0.035,
            "VBD": 0.014,
            "POS": 0.005,
            "RB": 0.058,
            "VBG": 0.036,
            ":": 0.01,
            "PRP": 0.067,
            "WDT": 0.009,
            "RBR": 0.002,
            "JJR": 0.002,
            "WRB": 0.009,
            "CD": 0.012,
            "WP": 0.005,
            "RP": 0.003,
            "EX": 0.0,
            "``": 0.003,
            "''": 0.003,
            "PDT": 0.001,
            "NNPS": 0.0,
            "WP$": 0.0,
            "UH": 0.0
        },
        "syllableRate": 3.778,
        "topicScores": [
            [
                "ok",
                0.026345611073537067
            ],
            [
                "Python",
                0.08095228478397755
            ],
            [
                "Animal",
                0.08319513082360243
            ],
            [
                "rabbit",
                0.0884978275620666
            ],
            [
                "class",
                0.09372915360011597
            ],
            [
                "object",
                0.10620098472757117
            ],
            [
                "Animal class",
                0.11366583098757094
            ],
            [
                "method",
                0.11719804616759959
            ],
            [
                "instance",
                0.13156247707223329
            ],
            [
                "attribute",
                0.13424984441162466
            ],
            [
                "age",
                0.1344053921340167
            ],
            [
                "datum",
                0.15565742169068128
            ],
            [
                "thing",
                0.1566079374785512
            ],
            [
                "rabbit object",
                0.15695001737397588
            ],
            [
                "variable",
                0.15992161944276273
            ],
            [
                "parent",
                0.16193479626164362
            ],
            [
                "right",
                0.16254448747023298
            ],
            [
                "type",
                0.16881259264479423
            ],
            [
                "Person",
                0.17122576669322895
            ],
            [
                "Animal object",
                0.1721941996036188
            ],
            [
                "init",
                0.18010108984330794
            ],
            [
                "value",
                0.18476311418246494
            ],
            [
                "Creative Commons",
                0.18520463046185376
            ],
            [
                "code",
                0.18883184427336866
            ],
            [
                "new",
                0.19026903900105846
            ],
            [
                "different",
                0.19937360842415516
            ],
            [
                "getter",
                0.2018024961577665
            ],
            [
                "access",
                0.20298282217337432
            ],
            [
                "student",
                0.20354673288935898
            ],
            [
                "ID",
                0.2089875226880668
            ]
        ],
        "topicsList": [
            "ok",
            "Python",
            "Animal",
            "rabbit",
            "class",
            "object",
            "Animal class",
            "method",
            "instance",
            "attribute",
            "age",
            "datum",
            "thing",
            "rabbit object",
            "variable",
            "parent",
            "right",
            "type",
            "Person",
            "Animal object",
            "init",
            "value",
            "Creative Commons",
            "code",
            "new",
            "different",
            "getter",
            "access",
            "student",
            "ID"
        ]
    },
    "chunks": {
        "FlGjISF3l78-0": {
            "id": "FlGjISF3l78-0",
            "heat": 0.1,
            "start": 0.0,
            "text": " The following content is provided under a Creative Commons license. Your support will help MIT OpenCourseWare continue to offer high-quality educational resources for free. To make a donation or view additional materials from hundreds of MIT courses, visit MIT OpenCourseWare at ocw.mit.edu. ANA BELL: All right, everyone, let's get started. So today is going to be the second lecture on object-oriented programming. So just a quick recap of last time-- on Monday, we saw-- we were introduced to this idea of object-oriented programming, and we saw these things called abstract data types. And these abstract data types we implemented through Python classes. And they allowed us to create our own data types that sort of abstracted a general object of our choosing, right? So we've used lists before, for example. But with abstract data types, we were able to create objects that were of our own types. We saw the coordinate example. And then at the end of the class, we saw the fraction example. So today we're going to talk a little bit more about object-oriented programming and classes. We're going to see a few more examples. And we're going to talk about a few other nuances of classes,",
            "metrics": {
                "relativeDCReadability": 1.0849442252316663,
                "lexicalDiversity": 0.5507246376811594,
                "posComposition": {
                    "DT": 0.077,
                    "JJ": 0.116,
                    "NN": 0.13,
                    "VBZ": 0.014,
                    "VBN": 0.014,
                    "IN": 0.111,
                    "NNP": 0.053,
                    "PRP$": 0.019,
                    "MD": 0.005,
                    "VB": 0.043,
                    "VBP": 0.029,
                    "TO": 0.043,
                    "NNS": 0.097,
                    "CC": 0.039,
                    "VBD": 0.063,
                    "POS": 0.005,
                    "RB": 0.029,
                    "VBG": 0.024,
                    ":": 0.01,
                    "PRP": 0.063,
                    "WDT": 0.005,
                    "RBR": 0.005,
                    "JJR": 0.005
                },
                "syllableRate": 2.842,
                "topicScores": [
                    [
                        "Creative Commons",
                        0.23190454072588046
                    ],
                    [
                        "MIT",
                        0.27781353294246197
                    ],
                    [
                        "Creative Commons license",
                        0.32034380240664334
                    ],
                    [
                        "type",
                        0.3266824990995412
                    ],
                    [
                        "object",
                        0.34656747805991056
                    ],
                    [
                        "example",
                        0.35052850043803885
                    ],
                    [
                        "class",
                        0.37747477000358715
                    ],
                    [
                        "abstract",
                        0.38474273339966275
                    ],
                    [
                        "programming",
                        0.395980298803637
                    ],
                    [
                        "ANA BELL",
                        0.4799846434906915
                    ],
                    [
                        "OpenCourseWare",
                        0.5340109564111484
                    ],
                    [
                        "right",
                        0.5382493593300517
                    ],
                    [
                        "datum",
                        0.5417891126496198
                    ],
                    [
                        "today",
                        0.542907767818906
                    ],
                    [
                        "MIT OpenCourseWare",
                        0.5601233493750648
                    ],
                    [
                        "data",
                        0.5658036889905823
                    ],
                    [
                        "Monday",
                        0.639083384885169
                    ],
                    [
                        "Python",
                        0.6592864654186127
                    ],
                    [
                        "following",
                        0.7935422802985131
                    ],
                    [
                        "content",
                        0.8106970237302606
                    ],
                    [
                        "free",
                        0.8204858602961038
                    ],
                    [
                        "ocw.mit.edu",
                        0.8474388040057625
                    ],
                    [
                        "support",
                        0.8526085765568575
                    ],
                    [
                        "high",
                        0.8526085765568575
                    ],
                    [
                        "quality",
                        0.8526085765568575
                    ],
                    [
                        "educational",
                        0.8526085765568575
                    ],
                    [
                        "resource",
                        0.8656861511291224
                    ],
                    [
                        "course",
                        0.8754705086167289
                    ],
                    [
                        "donation",
                        0.8867889601187001
                    ],
                    [
                        "additional",
                        0.8867889601187001
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "Creative Commons",
                        0.23190454072588046
                    ],
                    [
                        "type",
                        0.3266824990995412
                    ],
                    [
                        "object",
                        0.34656747805991056
                    ],
                    [
                        "class",
                        0.37747477000358715
                    ],
                    [
                        "right",
                        0.5382493593300517
                    ],
                    [
                        "datum",
                        0.5417891126496198
                    ],
                    [
                        "Python",
                        0.6592864654186127
                    ]
                ]
            }
        },
        "FlGjISF3l78-90": {
            "id": "FlGjISF3l78-90",
            "heat": 0.152,
            "start": 90.0,
            "text": " talk about information hiding and class variables. And in the second half of the lecture, we're going to talk about the idea of inheritance. So we're going to use object-oriented programming to simulate how real life works. So in real life, you have inheritance. And in object-oriented programming, you can also simulate that. OK, so the first few slides are going to be a little bit of recap just to make sure that everyone's on the same page before I introduce a couple of new concepts related to classes. So recall that when-- in the last lecture, we talked about writing code from two different perspectives, right? The first was from someone who wanted to implement a class. So implementing the class meant defining your own object type. So you defined the object type when you defined the class. And then you decided what data attributes you wanted to define in your object. So what data makes up the object? What is the object, OK? In addition to data attributes, we also saw these things called methods. And methods were ways to tell someone how to use your data type. So what are ways that someone can interact with the data type, OK? So that's from the point of view of someone who wants to write their own object type. So you're implementing a class. And the other perspective was to write code from the point of view of someone who wanted to use a class that was already written, OK?",
            "metrics": {
                "relativeDCReadability": 1.013688826359623,
                "lexicalDiversity": 0.5019455252918288,
                "posComposition": {
                    "NN": 0.191,
                    "IN": 0.128,
                    "CC": 0.023,
                    "NNS": 0.054,
                    "DT": 0.089,
                    "JJ": 0.074,
                    "PRP": 0.047,
                    "VBP": 0.027,
                    "VBG": 0.027,
                    "TO": 0.054,
                    "VB": 0.058,
                    "WRB": 0.016,
                    "RB": 0.027,
                    "MD": 0.008,
                    "NNP": 0.019,
                    "POS": 0.004,
                    "VBN": 0.008,
                    ":": 0.004,
                    "VBD": 0.058,
                    "CD": 0.004,
                    "WP": 0.027,
                    "PRP$": 0.016,
                    "VBZ": 0.019,
                    "RP": 0.008,
                    "WDT": 0.008
                },
                "syllableRate": 3.092,
                "topicScores": [
                    [
                        "object",
                        0.26947507371247875
                    ],
                    [
                        "class",
                        0.29092028740718145
                    ],
                    [
                        "type",
                        0.3349502876161907
                    ],
                    [
                        "datum",
                        0.4534359348684141
                    ],
                    [
                        "inheritance",
                        0.5236486123586537
                    ],
                    [
                        "lecture",
                        0.5372706978553126
                    ],
                    [
                        "programming",
                        0.5381257837555095
                    ],
                    [
                        "life",
                        0.5448784977176963
                    ],
                    [
                        "real",
                        0.5497300385363643
                    ],
                    [
                        "point",
                        0.5576152653242977
                    ],
                    [
                        "view",
                        0.5576152653242977
                    ],
                    [
                        "code",
                        0.569077413747732
                    ],
                    [
                        "method",
                        0.5703315662955589
                    ],
                    [
                        "data",
                        0.5744943888204466
                    ],
                    [
                        "attribute",
                        0.5767373478719761
                    ],
                    [
                        "way",
                        0.5770886778183227
                    ],
                    [
                        "perspective",
                        0.5771491883302498
                    ],
                    [
                        "variable",
                        0.8416281921638264
                    ],
                    [
                        "information",
                        0.8769220061811371
                    ],
                    [
                        "hiding",
                        0.8769220061811371
                    ],
                    [
                        "right",
                        0.8920204556967477
                    ],
                    [
                        "second",
                        0.8964706061113923
                    ],
                    [
                        "half",
                        0.8964706061113923
                    ],
                    [
                        "idea",
                        0.8964706061113923
                    ],
                    [
                        "different",
                        0.9183283915356005
                    ],
                    [
                        "slide",
                        0.9222339352798323
                    ],
                    [
                        "little",
                        0.9222339352798323
                    ],
                    [
                        "bit",
                        0.9222339352798323
                    ],
                    [
                        "recap",
                        0.9222339352798323
                    ],
                    [
                        "sure",
                        0.9222339352798323
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "object",
                        0.26947507371247875
                    ],
                    [
                        "class",
                        0.29092028740718145
                    ],
                    [
                        "type",
                        0.3349502876161907
                    ],
                    [
                        "datum",
                        0.4534359348684141
                    ],
                    [
                        "code",
                        0.569077413747732
                    ],
                    [
                        "method",
                        0.5703315662955589
                    ],
                    [
                        "attribute",
                        0.5767373478719761
                    ],
                    [
                        "variable",
                        0.8416281921638264
                    ],
                    [
                        "right",
                        0.8920204556967477
                    ],
                    [
                        "different",
                        0.9183283915356005
                    ]
                ]
            }
        },
        "FlGjISF3l78-180": {
            "id": "FlGjISF3l78-180",
            "heat": 0.134,
            "start": 180.0,
            "text": " So this involved creating instances of objects. So you're using the object type. Once you created instances of objects, you were able to do operations on them. So you were able to see what methods whoever implemented the class added. And then, you can use those methods in order to do operations with your instances. So just looking at the coordinate example we saw last time, a little bit more in detail about what that meant-- so we had a class definition of an object type, which included deciding what the class name was. And the class name basically told Python what type of an object this was, OK? In this case, we decided we wanted to name a coordinate-- we wanted to create a Coordinate object. And the type of this object was therefore going to be a coordinate. We defined the class in the sort of general way, OK? So we needed a way to be able to access data attributes of any instance. So we use this self variable, OK? And the self variable we used to refer to any instance-- to the data attributes of any instance in a general way without actually having a particular instance in mind, OK? So whenever we access data attributes, we would say something like self dot to access a data attribute. You'd access the attribute directly with self.x. Or if you wanted to access a method,",
            "metrics": {
                "relativeDCReadability": 1.1247188685420841,
                "lexicalDiversity": 0.5041322314049587,
                "posComposition": {
                    "RB": 0.033,
                    "DT": 0.132,
                    "JJ": 0.054,
                    "VBG": 0.025,
                    "NNS": 0.054,
                    "IN": 0.116,
                    "NNP": 0.029,
                    "PRP": 0.083,
                    "VBP": 0.017,
                    "NN": 0.198,
                    "VBD": 0.079,
                    "TO": 0.054,
                    "VB": 0.041,
                    "WP": 0.017,
                    "WDT": 0.012,
                    "CC": 0.021,
                    "MD": 0.012,
                    "PRP$": 0.004,
                    "RBR": 0.004,
                    ":": 0.012,
                    "VBZ": 0.004
                },
                "syllableRate": 3.1,
                "topicScores": [
                    [
                        "ok",
                        0.24146312695864872
                    ],
                    [
                        "object",
                        0.2840687138983498
                    ],
                    [
                        "instance",
                        0.3161848248551263
                    ],
                    [
                        "attribute",
                        0.3413592996803434
                    ],
                    [
                        "class",
                        0.3505174302833311
                    ],
                    [
                        "type",
                        0.3794806033027093
                    ],
                    [
                        "able",
                        0.4312578913107027
                    ],
                    [
                        "datum",
                        0.4423139251351979
                    ],
                    [
                        "way",
                        0.4544147149510458
                    ],
                    [
                        "method",
                        0.45650232789166584
                    ],
                    [
                        "self",
                        0.459549474432479
                    ],
                    [
                        "operation",
                        0.5521184990206809
                    ],
                    [
                        "coordinate",
                        0.5718497564528459
                    ],
                    [
                        "general",
                        0.5749142008176095
                    ],
                    [
                        "variable",
                        0.5765734401782674
                    ],
                    [
                        "Python",
                        0.6799332179811708
                    ],
                    [
                        "meant--",
                        0.8955371294305334
                    ],
                    [
                        "time",
                        0.9156112712736326
                    ],
                    [
                        "little",
                        0.9156112712736326
                    ],
                    [
                        "self.x",
                        0.9176432003153429
                    ],
                    [
                        "order",
                        0.9190849346652972
                    ],
                    [
                        "example",
                        0.9235997257003454
                    ],
                    [
                        "bit",
                        0.9235997257003454
                    ],
                    [
                        "detail",
                        0.9235997257003454
                    ],
                    [
                        "case",
                        0.924569168956186
                    ],
                    [
                        "definition",
                        0.9269818338962091
                    ],
                    [
                        "mind",
                        0.9319314822878425
                    ],
                    [
                        "sort",
                        0.9350564919796873
                    ],
                    [
                        "data",
                        0.9384788283313439
                    ],
                    [
                        "particular",
                        0.9384788283313439
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.24146312695864872
                    ],
                    [
                        "object",
                        0.2840687138983498
                    ],
                    [
                        "instance",
                        0.3161848248551263
                    ],
                    [
                        "attribute",
                        0.3413592996803434
                    ],
                    [
                        "class",
                        0.3505174302833311
                    ],
                    [
                        "type",
                        0.3794806033027093
                    ],
                    [
                        "datum",
                        0.4423139251351979
                    ],
                    [
                        "method",
                        0.45650232789166584
                    ],
                    [
                        "variable",
                        0.5765734401782674
                    ],
                    [
                        "Python",
                        0.6799332179811708
                    ]
                ]
            }
        },
        "FlGjISF3l78-270": {
            "id": "FlGjISF3l78-270",
            "heat": 0.142,
            "start": 270.0,
            "text": " you would say self, dot, and then the method name-- for example, distance. And really, the bottom line of the class definition is that your class defines all of the data-- so data attributes-- and all of the methods that are going to be common across all of the instances. So any instance that you create of a particular object type, that instance is going to have this exact same structure, OK? The difference is that every instance's values are going to be different. So when you're creating instances of classes, you can create more than one instance of the same class. So we can create a Coordinate object here using this syntax right here. So you say the type, and then, whatever values it takes in. And you can create more than one Coordinate object. Each Coordinate object is going to have different data attributes. Sorry, it's going to have different data attribute values, OK? Every Coordinate object is going to have an x value and a y value. But the x and y values among different instances are going to vary, OK? So that's the difference between defining a class and looking at a particular instance of a class. So instances have the structure of the class. So for a coordinate, all instances have an x value and a y value. But the actual values are going to vary",
            "metrics": {
                "relativeDCReadability": 1.0740590318461334,
                "lexicalDiversity": 0.4831932773109244,
                "posComposition": {
                    "PRP": 0.038,
                    "MD": 0.017,
                    "VB": 0.05,
                    "JJ": 0.084,
                    "NN": 0.147,
                    "CC": 0.046,
                    "RB": 0.038,
                    "DT": 0.139,
                    ":": 0.013,
                    "IN": 0.105,
                    "VBZ": 0.038,
                    "PRP$": 0.004,
                    "NNS": 0.071,
                    "WDT": 0.013,
                    "VBP": 0.046,
                    "VBG": 0.05,
                    "TO": 0.034,
                    "POS": 0.004,
                    "WRB": 0.004,
                    "JJR": 0.008,
                    "CD": 0.008,
                    "NNP": 0.042
                },
                "syllableRate": 3.025,
                "topicScores": [
                    [
                        "instance",
                        0.2694432835593865
                    ],
                    [
                        "Coordinate",
                        0.27290664089796884
                    ],
                    [
                        "value",
                        0.27776087816566425
                    ],
                    [
                        "class",
                        0.30422242091219626
                    ],
                    [
                        "object",
                        0.344195571187862
                    ],
                    [
                        "different",
                        0.38467868617286444
                    ],
                    [
                        "y",
                        0.44044014665900755
                    ],
                    [
                        "datum",
                        0.44708449111613346
                    ],
                    [
                        "x",
                        0.45084097156371145
                    ],
                    [
                        "method",
                        0.5512299988047584
                    ],
                    [
                        "Coordinate object",
                        0.5566529424614878
                    ],
                    [
                        "attribute",
                        0.5651933394313015
                    ],
                    [
                        "type",
                        0.5761580247266245
                    ],
                    [
                        "particular",
                        0.5837889289961384
                    ],
                    [
                        "structure",
                        0.5861365711857248
                    ],
                    [
                        "distance",
                        0.796743882749125
                    ],
                    [
                        "dot",
                        0.8322464261049544
                    ],
                    [
                        "self",
                        0.8468060533861312
                    ],
                    [
                        "example",
                        0.8468060533861312
                    ],
                    [
                        "name--",
                        0.8596460795082038
                    ],
                    [
                        "data--",
                        0.8694509914558853
                    ],
                    [
                        "line",
                        0.9021328747391855
                    ],
                    [
                        "definition",
                        0.9021328747391855
                    ],
                    [
                        "common",
                        0.91805140722441
                    ],
                    [
                        "exact",
                        0.9266318547373952
                    ],
                    [
                        "syntax",
                        0.9388109047713845
                    ],
                    [
                        "actual",
                        0.9505821711745936
                    ],
                    [
                        "y value",
                        2.1707934081101454
                    ],
                    [
                        "different datum",
                        2.5028539819370383
                    ],
                    [
                        "datum attribute",
                        2.539662947070639
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "instance",
                        0.2694432835593865
                    ],
                    [
                        "value",
                        0.27776087816566425
                    ],
                    [
                        "class",
                        0.30422242091219626
                    ],
                    [
                        "object",
                        0.344195571187862
                    ],
                    [
                        "different",
                        0.38467868617286444
                    ],
                    [
                        "datum",
                        0.44708449111613346
                    ],
                    [
                        "method",
                        0.5512299988047584
                    ],
                    [
                        "attribute",
                        0.5651933394313015
                    ],
                    [
                        "type",
                        0.5761580247266245
                    ]
                ]
            }
        },
        "FlGjISF3l78-360": {
            "id": "FlGjISF3l78-360",
            "heat": 0.287,
            "start": 360.0,
            "text": " between the different instances. OK, so ultimately, why do we want to use object-oriented programming? So, so far, the examples that we've seen were numerical, right-- a coordinate, a fraction. But using object-oriented programming, you can create objects that mimic real life. So if I wanted to create objects of-- an object that defined a cat and an object that defined a rabbit, I could do that with object-oriented programming. I would just have to decide, as a programmer, what data and what methods I'd want to assign to these groups of objects, OK? So using object-oriented programming, each one of these is considered a different object. And as a different object, I can decide that a cat is going to have a name, an age, and maybe a color associated with it. And these three here, on the right, each one of these rabbits is also an object. And I'm going to decide that I'm going to represent a rabbit by just an age and a color, OK? And with object-oriented programming, using these attributes, I can group these three objects together and these three objects together, OK? So I'm grouping sets of objects that",
            "metrics": {
                "relativeDCReadability": 1.0783565904468166,
                "lexicalDiversity": 0.4827586206896552,
                "posComposition": {
                    "IN": 0.099,
                    "DT": 0.148,
                    "JJ": 0.059,
                    "NNS": 0.064,
                    "VBP": 0.03,
                    "RB": 0.054,
                    "WRB": 0.005,
                    "PRP": 0.064,
                    "VB": 0.064,
                    "TO": 0.039,
                    "NN": 0.123,
                    "NNP": 0.02,
                    "VBN": 0.015,
                    "VBD": 0.02,
                    ":": 0.01,
                    "CC": 0.049,
                    "VBG": 0.044,
                    "MD": 0.03,
                    "WDT": 0.015,
                    "WP": 0.01,
                    "CD": 0.025,
                    "VBZ": 0.015
                },
                "syllableRate": 2.592,
                "topicScores": [
                    [
                        "object",
                        0.206699267007203
                    ],
                    [
                        "programming",
                        0.2874334242863657
                    ],
                    [
                        "different",
                        0.41866563658820616
                    ],
                    [
                        "rabbit",
                        0.44034923129628895
                    ],
                    [
                        "group",
                        0.441649285266
                    ],
                    [
                        "age",
                        0.5476610595724466
                    ],
                    [
                        "cat",
                        0.5587773367613675
                    ],
                    [
                        "color",
                        0.5607727848786981
                    ],
                    [
                        "instance",
                        0.7860150195352709
                    ],
                    [
                        "fraction",
                        0.8605371543916532
                    ],
                    [
                        "life",
                        0.8833746803924446
                    ],
                    [
                        "example",
                        0.8874508586009349
                    ],
                    [
                        "numerical",
                        0.8874508586009349
                    ],
                    [
                        "coordinate",
                        0.8874508586009349
                    ],
                    [
                        "real",
                        0.8988824395345054
                    ],
                    [
                        "mimic",
                        0.905539497254642
                    ],
                    [
                        "programmer",
                        0.9113728488144475
                    ],
                    [
                        "datum",
                        0.9113728488144475
                    ],
                    [
                        "of--",
                        0.9124306077295076
                    ],
                    [
                        "method",
                        0.917283272371103
                    ],
                    [
                        "right",
                        0.9207417110602144
                    ],
                    [
                        "attribute",
                        0.9245132681253923
                    ],
                    [
                        "set",
                        0.9310111345871951
                    ],
                    [
                        "different object",
                        1.5256581194339847
                    ],
                    [
                        "different instance",
                        1.9253020355381374
                    ],
                    [
                        "object of--",
                        3.3647219772688644
                    ],
                    [
                        "real life",
                        3.8555471737931826
                    ],
                    [
                        "mimic real",
                        4.375579724453474
                    ],
                    [
                        "mimic real life",
                        23.86229219292511
                    ]
                ],
                "topTopicSimilarity": 0.3103448275862069,
                "sharedTopicScores": [
                    [
                        "object",
                        0.206699267007203
                    ],
                    [
                        "different",
                        0.41866563658820616
                    ],
                    [
                        "rabbit",
                        0.44034923129628895
                    ],
                    [
                        "age",
                        0.5476610595724466
                    ],
                    [
                        "instance",
                        0.7860150195352709
                    ],
                    [
                        "datum",
                        0.9113728488144475
                    ],
                    [
                        "method",
                        0.917283272371103
                    ],
                    [
                        "right",
                        0.9207417110602144
                    ],
                    [
                        "attribute",
                        0.9245132681253923
                    ]
                ]
            }
        },
        "FlGjISF3l78-450": {
            "id": "FlGjISF3l78-450",
            "heat": 0.234,
            "start": 450.0,
            "text": " are going to have the same attributes together. And attributes-- this is also a recap of last time-- come in two forms, right, data attributes and procedural attributes. So the data attributes are basically things that define what the object is. So how do you represent a cat as an object? And it's up to you, as the programmer, to decide how you want to do that. For a coordinate, it was pretty straightforward. You had an x and a y value. If we're representing something more abstract like an animal, then maybe I would say, well, I'm going to represent an animal by an age and a name, OK? So it's really up to you to decide how you want to represent-- what data attributes you want to represent your object with. Procedural attributes were also known as methods. And the methods are essentially asking, what can your object do, OK? So how can someone who wants to use your object-- how can someone interact with it? So for a coordinate, we saw that you could find the distance between two coordinates. Maybe for our abstract Animal object, you might have it make a sound, OK, by maybe printing to the screen or something like that. OK, this slide's also a recap of how to create a class just to make sure everyone's on the same page before we go on.",
            "metrics": {
                "relativeDCReadability": 0.9929880726681947,
                "lexicalDiversity": 0.47107438016528924,
                "posComposition": {
                    "VBP": 0.05,
                    "VBG": 0.021,
                    "TO": 0.054,
                    "VB": 0.07,
                    "DT": 0.107,
                    "JJ": 0.041,
                    "VBZ": 0.033,
                    "RB": 0.058,
                    "CC": 0.029,
                    ":": 0.017,
                    "NN": 0.136,
                    "IN": 0.099,
                    "CD": 0.008,
                    "NNS": 0.045,
                    "WP": 0.017,
                    "NNP": 0.033,
                    "WRB": 0.025,
                    "PRP": 0.079,
                    "RP": 0.008,
                    "VBD": 0.017,
                    "JJR": 0.004,
                    "MD": 0.025,
                    "PRP$": 0.017,
                    "VBN": 0.004,
                    "POS": 0.004
                },
                "syllableRate": 2.892,
                "topicScores": [
                    [
                        "attribute",
                        0.30675303096809853
                    ],
                    [
                        "object",
                        0.3416641971469318
                    ],
                    [
                        "animal",
                        0.39984045574906113
                    ],
                    [
                        "coordinate",
                        0.43849133370689386
                    ],
                    [
                        "procedural",
                        0.5458451464547761
                    ],
                    [
                        "recap",
                        0.5530741344563491
                    ],
                    [
                        "datum",
                        0.5565890527029322
                    ],
                    [
                        "method",
                        0.5686753973257628
                    ],
                    [
                        "abstract",
                        0.57702814446448
                    ],
                    [
                        "form",
                        0.8835649809365845
                    ],
                    [
                        "time--",
                        0.8928004963099943
                    ],
                    [
                        "straightforward",
                        0.8948199060009422
                    ],
                    [
                        "value",
                        0.8985068751709503
                    ],
                    [
                        "data",
                        0.9037476488101395
                    ],
                    [
                        "thing",
                        0.9037476488101395
                    ],
                    [
                        "programmer",
                        0.9082274923121263
                    ],
                    [
                        "cat",
                        0.9107565959801722
                    ],
                    [
                        "y",
                        0.9153599808027193
                    ],
                    [
                        "x",
                        0.9222953384297046
                    ],
                    [
                        "age",
                        0.9246433466452608
                    ],
                    [
                        "sound",
                        0.9269158240619697
                    ],
                    [
                        "slide",
                        0.9278643891108098
                    ],
                    [
                        "distance",
                        0.9319989524688526
                    ],
                    [
                        "screen",
                        0.9329736364667267
                    ],
                    [
                        "class",
                        0.9338491878935042
                    ],
                    [
                        "sure",
                        0.9338491878935042
                    ],
                    [
                        "page",
                        0.9338491878935042
                    ],
                    [
                        "procedural attribute",
                        1.8436101544888002
                    ],
                    [
                        "animal object",
                        2.4044812546911993
                    ],
                    [
                        "abstract animal",
                        2.722489156247344
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "attribute",
                        0.30675303096809853
                    ],
                    [
                        "object",
                        0.3416641971469318
                    ],
                    [
                        "datum",
                        0.5565890527029322
                    ],
                    [
                        "method",
                        0.5686753973257628
                    ],
                    [
                        "value",
                        0.8985068751709503
                    ],
                    [
                        "thing",
                        0.9037476488101395
                    ],
                    [
                        "age",
                        0.9246433466452608
                    ],
                    [
                        "class",
                        0.9338491878935042
                    ]
                ]
            }
        },
        "FlGjISF3l78-540": {
            "id": "FlGjISF3l78-540",
            "heat": 0.283,
            "start": 540.0,
            "text": " So we defined a class using this class keyword. And we said, class, the name of the class. So now we're going to create a more abstract Animal class. We're going to see, in the second half of the lecture, what it means to put something else in the parentheses. But for now, we say that an animal is an object in Python. So that means it's going to have all of the properties that any other object in Python has. And as we're creating this animal, we're going to define how to create an instance of this class. So we say def. And this __init__ was the special method that told Python how to create an object. Inside the parentheses, remember, we have the self, which is a variable that we use to refer to any instance of the class, OK? We don't have a particular instance in mind, we just want to be able to refer to any instance, OK? So we use this self variable. And then, the second parameter here is going to represent what other data we use to initialize our object with. So in this case, I'm going to say, I'm going to initialize an Animal object with an age, OK? So when I create an animal, I need to give it an age. Inside the __init__ are any initializations that I want to make. So the first thing is, I'm going to assign an instance variable, age-- so this is going to be the data attribute age-- to be whatever is passed in. And then, I'm also making another assignment here, where I'm assigning the data attribute name to be None originally.",
            "metrics": {
                "relativeDCReadability": 0.9763032113973487,
                "lexicalDiversity": 0.4554794520547945,
                "posComposition": {
                    "IN": 0.096,
                    "PRP": 0.086,
                    "VBD": 0.014,
                    "DT": 0.14,
                    "NN": 0.144,
                    "VBG": 0.045,
                    "CC": 0.021,
                    "RB": 0.045,
                    "VBP": 0.075,
                    "TO": 0.075,
                    "VB": 0.072,
                    "RBR": 0.003,
                    "JJ": 0.045,
                    "NNP": 0.038,
                    "WP": 0.007,
                    "VBZ": 0.034,
                    "NNS": 0.024,
                    "WRB": 0.014,
                    "WDT": 0.01,
                    "PRP$": 0.003,
                    ":": 0.007,
                    "VBN": 0.003
                },
                "syllableRate": 3.483,
                "topicScores": [
                    [
                        "class",
                        0.27426759013564417
                    ],
                    [
                        "Python",
                        0.28541220353143776
                    ],
                    [
                        "object",
                        0.3315160511600881
                    ],
                    [
                        "instance",
                        0.3419460479078078
                    ],
                    [
                        "Animal",
                        0.3986693860251449
                    ],
                    [
                        "variable",
                        0.4494195254675202
                    ],
                    [
                        "datum",
                        0.4518841692749598
                    ],
                    [
                        "init",
                        0.5196233937388749
                    ],
                    [
                        "parenthesis",
                        0.5537301616965655
                    ],
                    [
                        "second",
                        0.5649847272254784
                    ],
                    [
                        "age",
                        0.565800446331119
                    ],
                    [
                        "attribute",
                        0.5687753266576268
                    ],
                    [
                        "self",
                        0.5712502130378014
                    ],
                    [
                        "keyword",
                        0.8044134007891088
                    ],
                    [
                        "abstract",
                        0.9041815717351351
                    ],
                    [
                        "lecture",
                        0.9081910619330595
                    ],
                    [
                        "half",
                        0.9140783462767983
                    ],
                    [
                        "def",
                        0.9146824292509524
                    ],
                    [
                        "property",
                        0.9248486335255524
                    ],
                    [
                        "mind",
                        0.9316418181977025
                    ],
                    [
                        "special",
                        0.9328978427545842
                    ],
                    [
                        "method",
                        0.9328978427545842
                    ],
                    [
                        "case",
                        0.9352316339410011
                    ],
                    [
                        "particular",
                        0.9361310681673082
                    ],
                    [
                        "thing",
                        0.9377568359913983
                    ],
                    [
                        "parameter",
                        0.9385191010041868
                    ],
                    [
                        "assignment",
                        0.9390770805214306
                    ],
                    [
                        "initialization",
                        0.9411594553313839
                    ],
                    [
                        "Animal class",
                        1.0829399423459092
                    ],
                    [
                        "Animal object",
                        1.18097897383121
                    ]
                ],
                "topTopicSimilarity": 0.4666666666666667,
                "sharedTopicScores": [
                    [
                        "class",
                        0.27426759013564417
                    ],
                    [
                        "Python",
                        0.28541220353143776
                    ],
                    [
                        "object",
                        0.3315160511600881
                    ],
                    [
                        "instance",
                        0.3419460479078078
                    ],
                    [
                        "Animal",
                        0.3986693860251449
                    ],
                    [
                        "variable",
                        0.4494195254675202
                    ],
                    [
                        "datum",
                        0.4518841692749598
                    ],
                    [
                        "init",
                        0.5196233937388749
                    ],
                    [
                        "age",
                        0.565800446331119
                    ],
                    [
                        "attribute",
                        0.5687753266576268
                    ],
                    [
                        "method",
                        0.9328978427545842
                    ],
                    [
                        "thing",
                        0.9377568359913983
                    ],
                    [
                        "Animal class",
                        1.0829399423459092
                    ],
                    [
                        "Animal object",
                        1.18097897383121
                    ]
                ]
            }
        },
        "FlGjISF3l78-630": {
            "id": "FlGjISF3l78-630",
            "heat": 0.329,
            "start": 630.0,
            "text": " Later on in the code, when I want to create an Animal object, I say the class name. And then I pass it in whatever parameters it takes-- in this case, the age. And I'm assigning it to this instance here, OK? All right, so now we have this class, Animal. We've done the first part here, which is to initialize the class, right? So we've told Python how to create an object of this type. There's a few other methods here that I've implemented. Next two we call getters, and the two after that we call setters, OK? And getters and setters are very commonly used when implementing a class. So getters essentially return the values of any of the data attributes, OK? So if you look carefully, get_age() is just returning self.age, and get_name() just returns self.name. So they're very simple methods. Similarly, set_age() and set_name()-- we're going to see what this funny equal sign is doing here in the next couple of slides. But setters do a very similar thing where they're going to set the data attributes to whatever is passed in, OK?",
            "metrics": {
                "relativeDCReadability": 1.0715815983808008,
                "lexicalDiversity": 0.4873096446700508,
                "posComposition": {
                    "RB": 0.096,
                    "IN": 0.066,
                    "DT": 0.112,
                    "NN": 0.117,
                    "WRB": 0.02,
                    "PRP": 0.086,
                    "VBP": 0.091,
                    "TO": 0.036,
                    "VB": 0.03,
                    "NNP": 0.056,
                    "CC": 0.041,
                    "WDT": 0.01,
                    "NNS": 0.061,
                    "VBZ": 0.041,
                    ":": 0.01,
                    "VBG": 0.025,
                    "VBD": 0.005,
                    "VBN": 0.025,
                    "JJ": 0.051,
                    "EX": 0.005,
                    "CD": 0.01,
                    "WP": 0.005
                },
                "syllableRate": 2.333,
                "topicScores": [
                    [
                        "ok",
                        0.22329882720923902
                    ],
                    [
                        "Animal",
                        0.31996872116742614
                    ],
                    [
                        "class",
                        0.3648729164237406
                    ],
                    [
                        "getter",
                        0.43682189466103843
                    ],
                    [
                        "right",
                        0.5254495380620936
                    ],
                    [
                        "object",
                        0.5352852256344786
                    ],
                    [
                        "datum",
                        0.554189168545264
                    ],
                    [
                        "attribute",
                        0.5551642482309306
                    ],
                    [
                        "method",
                        0.5620174127884324
                    ],
                    [
                        "Python",
                        0.6450472242084433
                    ],
                    [
                        "Animal object",
                        0.7551859425027088
                    ],
                    [
                        "code",
                        0.7924166239220927
                    ],
                    [
                        "age",
                        0.8058574146646243
                    ],
                    [
                        "case",
                        0.8517447971735871
                    ],
                    [
                        "parameter",
                        0.8636487823006195
                    ],
                    [
                        "instance",
                        0.8747210236766584
                    ],
                    [
                        "type",
                        0.8806070697229843
                    ],
                    [
                        "get_age",
                        0.886820884700711
                    ],
                    [
                        "get_name",
                        0.886820884700711
                    ],
                    [
                        "self.name",
                        0.8977974815019493
                    ],
                    [
                        "slide",
                        0.9014679322904281
                    ],
                    [
                        "self.age",
                        0.9155765857610482
                    ],
                    [
                        "simple",
                        0.9172263263762315
                    ],
                    [
                        "set_name()--",
                        0.9186663707286247
                    ],
                    [
                        "value",
                        0.9210544874560951
                    ],
                    [
                        "funny",
                        0.9256659138097607
                    ],
                    [
                        "equal",
                        0.9256659138097607
                    ],
                    [
                        "sign",
                        0.9256659138097607
                    ],
                    [
                        "couple",
                        0.9256659138097607
                    ],
                    [
                        "similar",
                        0.9268364195043988
                    ]
                ],
                "topTopicSimilarity": 0.5333333333333333,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.22329882720923902
                    ],
                    [
                        "Animal",
                        0.31996872116742614
                    ],
                    [
                        "class",
                        0.3648729164237406
                    ],
                    [
                        "getter",
                        0.43682189466103843
                    ],
                    [
                        "right",
                        0.5254495380620936
                    ],
                    [
                        "object",
                        0.5352852256344786
                    ],
                    [
                        "datum",
                        0.554189168545264
                    ],
                    [
                        "attribute",
                        0.5551642482309306
                    ],
                    [
                        "method",
                        0.5620174127884324
                    ],
                    [
                        "Python",
                        0.6450472242084433
                    ],
                    [
                        "Animal object",
                        0.7551859425027088
                    ],
                    [
                        "code",
                        0.7924166239220927
                    ],
                    [
                        "age",
                        0.8058574146646243
                    ],
                    [
                        "instance",
                        0.8747210236766584
                    ],
                    [
                        "type",
                        0.8806070697229843
                    ],
                    [
                        "value",
                        0.9210544874560951
                    ]
                ]
            }
        },
        "FlGjISF3l78-720": {
            "id": "FlGjISF3l78-720",
            "heat": 0.487,
            "start": 720.0,
            "text": " So those are getters and setters. And then, the last thing down here is this __str__ method. And this __str__ method is used to tell Python how to print an object of this type Animal. So if you didn't have this __str__ method, if you remember from last lecture, what ends up happening is you're going to get some message when you print your object that says, this is an object of type Animal at this memory location, which is very uninformative, right? So you implement this method here, which tells Python how to print an object of this type, OK? So the big point of this slide is that you should be using getters and setters-- you should be implementing getters and setters for your classes. And we're going to see, in the next couple of slides, why exactly. But basically, they're going to prevent bugs from coming into play later on if someone decides to change implementation. So we saw how to-- so the previous slide, this slide here, shows the implementation of the Animal class. And here we can see how we can create an instance of this object. So we can say a = Animal(3). So this is going to create a new Animal object with an age of 3. And we can access the object through the variable a. Dot notation, recall, is a way for you to access data attributes and methods of a class, OK?",
            "metrics": {
                "relativeDCReadability": 1.0198187027977785,
                "lexicalDiversity": 0.4475806451612903,
                "posComposition": {
                    "RB": 0.048,
                    "DT": 0.133,
                    "VBP": 0.028,
                    "NNS": 0.048,
                    "CC": 0.04,
                    "JJ": 0.044,
                    "NN": 0.161,
                    "RP": 0.008,
                    "VBZ": 0.052,
                    "VBN": 0.004,
                    "TO": 0.04,
                    "VB": 0.056,
                    "NNP": 0.04,
                    "WRB": 0.024,
                    "IN": 0.109,
                    "PRP": 0.06,
                    "VBD": 0.008,
                    "WP": 0.004,
                    "VBG": 0.032,
                    "PRP$": 0.008,
                    "WDT": 0.008,
                    "MD": 0.024,
                    ":": 0.008,
                    "CD": 0.008
                },
                "syllableRate": 2.817,
                "topicScores": [
                    [
                        "Animal",
                        0.2629211977175147
                    ],
                    [
                        "object",
                        0.2919721579052717
                    ],
                    [
                        "str",
                        0.29406375337159535
                    ],
                    [
                        "method",
                        0.3269666899738432
                    ],
                    [
                        "Python",
                        0.34685313349986635
                    ],
                    [
                        "ok",
                        0.35714334891851207
                    ],
                    [
                        "slide",
                        0.3757500183856247
                    ],
                    [
                        "type",
                        0.4032812561342659
                    ],
                    [
                        "getter",
                        0.4167611619064224
                    ],
                    [
                        "class",
                        0.43734442221662334
                    ],
                    [
                        "implementation",
                        0.5623608124377033
                    ],
                    [
                        "access",
                        0.5834042350666275
                    ],
                    [
                        "type Animal",
                        0.612020997546951
                    ],
                    [
                        "Animal(3",
                        0.6440482397154113
                    ],
                    [
                        "dot",
                        0.6796692488395735
                    ],
                    [
                        "right",
                        0.8593997660631699
                    ],
                    [
                        "thing",
                        0.8695220647609098
                    ],
                    [
                        "lecture",
                        0.8926993282474337
                    ],
                    [
                        "memory",
                        0.8926993282474337
                    ],
                    [
                        "location",
                        0.8926993282474337
                    ],
                    [
                        "uninformative",
                        0.8926993282474337
                    ],
                    [
                        "message",
                        0.9012912575184818
                    ],
                    [
                        "big",
                        0.9135127496374535
                    ],
                    [
                        "point",
                        0.9135127496374535
                    ],
                    [
                        "setters--",
                        0.9135127496374535
                    ],
                    [
                        "recall",
                        0.9154545026575013
                    ],
                    [
                        "previous",
                        0.9157699943573969
                    ],
                    [
                        "couple",
                        0.9173014085324545
                    ],
                    [
                        "=",
                        0.9197575156723455
                    ],
                    [
                        "bug",
                        0.9202705314353282
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "Animal",
                        0.2629211977175147
                    ],
                    [
                        "object",
                        0.2919721579052717
                    ],
                    [
                        "method",
                        0.3269666899738432
                    ],
                    [
                        "Python",
                        0.34685313349986635
                    ],
                    [
                        "ok",
                        0.35714334891851207
                    ],
                    [
                        "type",
                        0.4032812561342659
                    ],
                    [
                        "getter",
                        0.4167611619064224
                    ],
                    [
                        "class",
                        0.43734442221662334
                    ],
                    [
                        "access",
                        0.5834042350666275
                    ],
                    [
                        "right",
                        0.8593997660631699
                    ],
                    [
                        "thing",
                        0.8695220647609098
                    ]
                ]
            }
        },
        "FlGjISF3l78-810": {
            "id": "FlGjISF3l78-810",
            "heat": 0.262,
            "start": 810.0,
            "text": " So you can say a.age later on in your program, and that is allowed. It'll try to access the age data attribute of this particular instance of the class, a. So this is going to give you 3. However, it's actually not recommended to access data attributes directly. So this is the reason-- so you're going to see in the next slide, the reason-- why we're going to use getters and setters. Instead, you should use the get_age() getter method to get the age of the animal. So this is going to return, also, 3. So these are going to do the same thing. And the reason why you'd want to use getters and setters is this idea of information hiding, OK? So the whole reason why we're using classes in object-oriented programming is so that you can abstract certain data from the user, OK? One of the things you should be abstracting is these data attributes. So users shouldn't really need to know how a class is implemented. They should just know how to use the class, OK? So consider the following case. Let's say whoever wrote the Animal class wants to change the implementation. And they've decided they don't want to call the data attribute \"age\" anymore, they want to call it \"years,\" OK? So when they initialize an animal they say self.years = age. So an animal still gets initialized by its age. And the age gets passed into a data attribute named \"years,\"",
            "metrics": {
                "relativeDCReadability": 0.9983057516397535,
                "lexicalDiversity": 0.5303030303030303,
                "posComposition": {
                    "IN": 0.068,
                    "PRP": 0.068,
                    "MD": 0.03,
                    "VB": 0.087,
                    "NN": 0.14,
                    "RB": 0.068,
                    "PRP$": 0.008,
                    "CC": 0.023,
                    "DT": 0.121,
                    "VBZ": 0.049,
                    "VBN": 0.023,
                    "TO": 0.053,
                    "NNS": 0.061,
                    "JJ": 0.03,
                    "VBG": 0.027,
                    "CD": 0.011,
                    ":": 0.008,
                    "VBP": 0.042,
                    "WRB": 0.023,
                    "NNP": 0.027,
                    "POS": 0.004,
                    "WDT": 0.004,
                    "VBD": 0.004,
                    "``": 0.011,
                    "''": 0.011
                },
                "syllableRate": 3.15,
                "topicScores": [
                    [
                        "ok",
                        0.2193855350152877
                    ],
                    [
                        "age",
                        0.31068722146861855
                    ],
                    [
                        "attribute",
                        0.3294467607152272
                    ],
                    [
                        "class",
                        0.33624226092376075
                    ],
                    [
                        "datum",
                        0.37324268244026776
                    ],
                    [
                        "getter",
                        0.4071817084072113
                    ],
                    [
                        "animal",
                        0.4401444803414735
                    ],
                    [
                        "access",
                        0.5295964900290175
                    ],
                    [
                        "year",
                        0.5336841659026879
                    ],
                    [
                        "reason--",
                        0.5470260909048265
                    ],
                    [
                        "thing",
                        0.5499400914160796
                    ],
                    [
                        "user",
                        0.5595968602489659
                    ],
                    [
                        "data",
                        0.5609982425865946
                    ],
                    [
                        "program",
                        0.7909013750346006
                    ],
                    [
                        "a.age",
                        0.8040829743472581
                    ],
                    [
                        "particular",
                        0.8606631517033122
                    ],
                    [
                        "instance",
                        0.8606631517033122
                    ],
                    [
                        "get_age",
                        0.8834694078896627
                    ],
                    [
                        "slide",
                        0.8944865660613701
                    ],
                    [
                        "method",
                        0.9002248658263675
                    ],
                    [
                        "case",
                        0.9053631557306078
                    ],
                    [
                        "implementation",
                        0.9066813936947016
                    ],
                    [
                        "information",
                        0.9106566654660153
                    ],
                    [
                        "hiding",
                        0.9106566654660153
                    ],
                    [
                        "object",
                        0.9129337499084342
                    ],
                    [
                        "programming",
                        0.9129337499084342
                    ],
                    [
                        "idea",
                        0.9170803709064148
                    ],
                    [
                        "certain",
                        0.9192082599824235
                    ],
                    [
                        "following",
                        0.9192583030358736
                    ],
                    [
                        "self.year",
                        0.9280037035304418
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.2193855350152877
                    ],
                    [
                        "age",
                        0.31068722146861855
                    ],
                    [
                        "attribute",
                        0.3294467607152272
                    ],
                    [
                        "class",
                        0.33624226092376075
                    ],
                    [
                        "datum",
                        0.37324268244026776
                    ],
                    [
                        "getter",
                        0.4071817084072113
                    ],
                    [
                        "access",
                        0.5295964900290175
                    ],
                    [
                        "thing",
                        0.5499400914160796
                    ],
                    [
                        "instance",
                        0.8606631517033122
                    ],
                    [
                        "method",
                        0.9002248658263675
                    ],
                    [
                        "object",
                        0.9129337499084342
                    ]
                ]
            }
        },
        "FlGjISF3l78-900": {
            "id": "FlGjISF3l78-900",
            "heat": 0.178,
            "start": 900.0,
            "text": " OK? Since I'm implementing this class, I want to have a getter, which is going to return self.years. So I'm not returning self.age anymore, because age is no longer the data attribute I'm using. So with this new implementation, if someone was using this implementation and was accessing age directly as-- was accessing the data attribute age directly-- with this new implementation, they'd actually get an error, right? Because this animal that they created using my old implementation no longer has an attribute named \"age.\" And so Python's going to spit out an error saying no attribute found or something like that, OK? If they were using the getter a.get_age()-- the person who implemented the class re-implemented get_age() to work correctly, right, with their new data attribute, years, as opposed to age-- so if I was using the getter get_age(), I wouldn't have run into the bug, OK? So things to remember-- write getters and setters for your classes. And later on in your code, use getters and setters to prevent bugs and to promote easy to maintain code. OK, so information hiding is great. But having said that, Python's actually not very great at information hiding, OK? Python allows you to do certain things",
            "metrics": {
                "relativeDCReadability": 1.1826306778421942,
                "lexicalDiversity": 0.5707762557077626,
                "posComposition": {
                    "JJ": 0.05,
                    "IN": 0.1,
                    "PRP": 0.046,
                    "VBP": 0.023,
                    "VBG": 0.064,
                    "DT": 0.082,
                    "NN": 0.164,
                    "TO": 0.046,
                    "VB": 0.05,
                    "WDT": 0.005,
                    "VBZ": 0.023,
                    "NNS": 0.059,
                    "RB": 0.082,
                    "RBR": 0.005,
                    "VBD": 0.041,
                    "CC": 0.037,
                    ":": 0.023,
                    "MD": 0.009,
                    "PRP$": 0.018,
                    "VBN": 0.014,
                    "``": 0.005,
                    "''": 0.005,
                    "NNP": 0.032,
                    "POS": 0.009,
                    "RP": 0.005,
                    "WP": 0.005
                },
                "syllableRate": 2.867,
                "topicScores": [
                    [
                        "ok",
                        0.20107661676441307
                    ],
                    [
                        "getter",
                        0.32126862625148067
                    ],
                    [
                        "attribute",
                        0.32571878738903237
                    ],
                    [
                        "Python",
                        0.34075923452077084
                    ],
                    [
                        "implementation",
                        0.3616579850109966
                    ],
                    [
                        "age",
                        0.364147934315505
                    ],
                    [
                        "new",
                        0.40468170552225485
                    ],
                    [
                        "datum",
                        0.4096383882409521
                    ],
                    [
                        "class",
                        0.415538513671092
                    ],
                    [
                        "right",
                        0.5228079848539996
                    ],
                    [
                        "get_age",
                        0.5267642346614825
                    ],
                    [
                        "error",
                        0.5367992587551335
                    ],
                    [
                        "information",
                        0.5471229179238855
                    ],
                    [
                        "thing",
                        0.549935877658506
                    ],
                    [
                        "hiding",
                        0.5534535016127645
                    ],
                    [
                        "bug",
                        0.5558603335250186
                    ],
                    [
                        "great",
                        0.5559586087938333
                    ],
                    [
                        "code",
                        0.5575497709485525
                    ],
                    [
                        "self.year",
                        0.813515619146282
                    ],
                    [
                        "self.age",
                        0.8651392984914558
                    ],
                    [
                        "as--",
                        0.8876996918467775
                    ],
                    [
                        "directly--",
                        0.8876996918467775
                    ],
                    [
                        "implemented",
                        0.8889531085186815
                    ],
                    [
                        "animal",
                        0.8957424165310248
                    ],
                    [
                        "old",
                        0.8957424165310248
                    ],
                    [
                        "a.get_age()--",
                        0.9056836475120799
                    ],
                    [
                        "person",
                        0.9056836475120799
                    ],
                    [
                        "certain",
                        0.9105631428996119
                    ],
                    [
                        "easy",
                        0.9117390454347652
                    ],
                    [
                        "datum attribute",
                        1.1119005448783983
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.20107661676441307
                    ],
                    [
                        "getter",
                        0.32126862625148067
                    ],
                    [
                        "attribute",
                        0.32571878738903237
                    ],
                    [
                        "Python",
                        0.34075923452077084
                    ],
                    [
                        "age",
                        0.364147934315505
                    ],
                    [
                        "new",
                        0.40468170552225485
                    ],
                    [
                        "datum",
                        0.4096383882409521
                    ],
                    [
                        "class",
                        0.415538513671092
                    ],
                    [
                        "right",
                        0.5228079848539996
                    ],
                    [
                        "thing",
                        0.549935877658506
                    ],
                    [
                        "code",
                        0.5575497709485525
                    ]
                ]
            }
        },
        "FlGjISF3l78-990": {
            "id": "FlGjISF3l78-990",
            "heat": 0.246,
            "start": 990.0,
            "text": " that you should never be doing. OK. So the first, we've just seen. The first is to access data attributes from outside of the class, OK? So if I were to say a.age, Python allows me to do that without using a getter and setter. Python also allows you to write to data attributes from outside the class. So if I implemented the class Animal assuming that age was a number, an integer, and all of my methods work as long as age is an integer, but someone decided to be smart and, outside of the class, set age to be infinite as a string, that might cause the code to crash, OK? Python allows you to do that. But now you're breaking the fact that age has to be an integer, right? So now the methods should probably be checking the fact that age is an integer all the time. The other thing that you're allowed to do is to create data attributes outside of the class definition, OK? So if I wanted to create a new data attribute called \"size\" for this particular instance, Python also allows me to do that. And I can set it to whatever I want, OK? So Python allows you to do all these things, but it's actually not good style to do any of them. So just don't do it. All right. So the last thing I want to mention-- the last thing",
            "metrics": {
                "relativeDCReadability": 0.9803880449956915,
                "lexicalDiversity": 0.4538152610441767,
                "posComposition": {
                    "IN": 0.108,
                    "PRP": 0.076,
                    "MD": 0.016,
                    "RB": 0.068,
                    "VB": 0.088,
                    "VBG": 0.02,
                    "NNP": 0.052,
                    "DT": 0.12,
                    "JJ": 0.044,
                    "VBP": 0.028,
                    "VBN": 0.016,
                    "VBZ": 0.044,
                    "TO": 0.072,
                    "NN": 0.133,
                    "NNS": 0.036,
                    "VBD": 0.02,
                    "CC": 0.028,
                    "PRP$": 0.004,
                    "WDT": 0.004,
                    "PDT": 0.008,
                    "``": 0.004,
                    "''": 0.004,
                    ":": 0.004
                },
                "syllableRate": 2.8,
                "topicScores": [
                    [
                        "Python",
                        0.24508061873444595
                    ],
                    [
                        "class",
                        0.3218190507266386
                    ],
                    [
                        "age",
                        0.32841148628456734
                    ],
                    [
                        "integer",
                        0.36031309085155194
                    ],
                    [
                        "attribute",
                        0.36836619109808577
                    ],
                    [
                        "thing",
                        0.3807960186705537
                    ],
                    [
                        "data",
                        0.43997176863051196
                    ],
                    [
                        "right",
                        0.5364612180332636
                    ],
                    [
                        "fact",
                        0.5537587691760445
                    ],
                    [
                        "method",
                        0.5718205405803869
                    ],
                    [
                        "animal",
                        0.6588734835849046
                    ],
                    [
                        "setter",
                        0.8921209110605214
                    ],
                    [
                        "time",
                        0.9078270588310231
                    ],
                    [
                        "a.age",
                        0.9084233491097679
                    ],
                    [
                        "access",
                        0.9103029375380827
                    ],
                    [
                        "datum",
                        0.9103029375380827
                    ],
                    [
                        "number",
                        0.9155420312717354
                    ],
                    [
                        "smart",
                        0.9155420312717354
                    ],
                    [
                        "string",
                        0.9155420312717354
                    ],
                    [
                        "size",
                        0.9184208141014937
                    ],
                    [
                        "infinite",
                        0.9218953056293712
                    ],
                    [
                        "code",
                        0.9218953056293712
                    ],
                    [
                        "definition",
                        0.9234989931519146
                    ],
                    [
                        "particular",
                        0.9248388519623022
                    ],
                    [
                        "instance",
                        0.9248388519623022
                    ],
                    [
                        "new",
                        0.9305458345694428
                    ],
                    [
                        "good",
                        0.9326245609160497
                    ],
                    [
                        "style",
                        0.9326245609160497
                    ],
                    [
                        "class animal",
                        1.2129297840313504
                    ],
                    [
                        "data attribute",
                        1.5212893319243022
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "Python",
                        0.24508061873444595
                    ],
                    [
                        "class",
                        0.3218190507266386
                    ],
                    [
                        "age",
                        0.32841148628456734
                    ],
                    [
                        "attribute",
                        0.36836619109808577
                    ],
                    [
                        "thing",
                        0.3807960186705537
                    ],
                    [
                        "right",
                        0.5364612180332636
                    ],
                    [
                        "method",
                        0.5718205405803869
                    ],
                    [
                        "access",
                        0.9103029375380827
                    ],
                    [
                        "datum",
                        0.9103029375380827
                    ],
                    [
                        "code",
                        0.9218953056293712
                    ],
                    [
                        "instance",
                        0.9248388519623022
                    ],
                    [
                        "new",
                        0.9305458345694428
                    ]
                ]
            }
        },
        "FlGjISF3l78-1080": {
            "id": "FlGjISF3l78-1080",
            "heat": 0.101,
            "start": 1080.0,
            "text": " about classes before we go on to inheritance-- is this idea called default arguments. And default arguments are passed into methods. And since methods are functions, you can also pass in different arguments to functions. So for example, this set_name() method had self. And then, this new name is equal to this empty string here, OK? We haven't seen this before. But this is called a default argument. And you can use the function in one of two ways. The first way is so we can create a new instance of an Animal type object with this line here, a = Animal(3). And then we can say a.set_name(). So this calls the setter method to set the name. And notice, we've always said that you have to put in parameters for everything other than self, OK? But here we have no parameters passed in. But that's OK, because newname actually has a default argument, OK? So that tells Python, if no parameter is passed in for this particular formal parameter, then use whatever is up here by default. So if I haven't passed in the parameter a.get_na-- a.set_name(), sorry-- a.sett_name() is going to be setting the name to the empty string, because that's what the default parameter is.",
            "metrics": {
                "relativeDCReadability": 1.0036627820281623,
                "lexicalDiversity": 0.47685185185185186,
                "posComposition": {
                    "IN": 0.134,
                    "NNS": 0.051,
                    "PRP": 0.046,
                    "VBP": 0.037,
                    "TO": 0.032,
                    "VB": 0.042,
                    ":": 0.014,
                    "VBZ": 0.06,
                    "DT": 0.12,
                    "NN": 0.162,
                    "VBN": 0.037,
                    "CC": 0.042,
                    "MD": 0.019,
                    "RB": 0.069,
                    "JJ": 0.065,
                    "NNP": 0.028,
                    "VBD": 0.009,
                    "CD": 0.014,
                    "WDT": 0.005,
                    "VBG": 0.009,
                    "WP": 0.005
                },
                "syllableRate": 2.642,
                "topicScores": [
                    [
                        "ok",
                        0.2768184581980089
                    ],
                    [
                        "default",
                        0.3129201073302653
                    ],
                    [
                        "parameter",
                        0.33056722527249593
                    ],
                    [
                        "argument",
                        0.3394325593255533
                    ],
                    [
                        "method",
                        0.3887115208182792
                    ],
                    [
                        "function",
                        0.4520670365724303
                    ],
                    [
                        "a.set_name",
                        0.5616530441060862
                    ],
                    [
                        "self",
                        0.5712729921682693
                    ],
                    [
                        "string",
                        0.5727811960495343
                    ],
                    [
                        "way",
                        0.5767686283666926
                    ],
                    [
                        "new",
                        0.5781394497092929
                    ],
                    [
                        "Animal(3",
                        0.6454670274239023
                    ],
                    [
                        "Python",
                        0.7031987251665438
                    ],
                    [
                        "class",
                        0.8310348214399264
                    ],
                    [
                        "inheritance--",
                        0.8456801071503033
                    ],
                    [
                        "idea",
                        0.8456801071503033
                    ],
                    [
                        "different",
                        0.9092837923393194
                    ],
                    [
                        "example",
                        0.9102500614340606
                    ],
                    [
                        "sorry--",
                        0.9137139734985307
                    ],
                    [
                        "equal",
                        0.924711740309055
                    ],
                    [
                        "line",
                        0.9298437140021855
                    ],
                    [
                        "instance",
                        0.9365782109735152
                    ],
                    [
                        "type",
                        0.9365782109735152
                    ],
                    [
                        "object",
                        0.9365782109735152
                    ],
                    [
                        "newname",
                        0.9367264449322509
                    ],
                    [
                        "formal",
                        0.9376379020735718
                    ],
                    [
                        "a.get_na--",
                        0.9384565442976754
                    ],
                    [
                        "setter",
                        0.9396455755956377
                    ],
                    [
                        "particular",
                        0.9436695387797772
                    ],
                    [
                        "default argument",
                        1.4483199317935964
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.2768184581980089
                    ],
                    [
                        "method",
                        0.3887115208182792
                    ],
                    [
                        "new",
                        0.5781394497092929
                    ],
                    [
                        "Python",
                        0.7031987251665438
                    ],
                    [
                        "class",
                        0.8310348214399264
                    ],
                    [
                        "different",
                        0.9092837923393194
                    ],
                    [
                        "instance",
                        0.9365782109735152
                    ],
                    [
                        "type",
                        0.9365782109735152
                    ],
                    [
                        "object",
                        0.9365782109735152
                    ]
                ]
            }
        },
        "FlGjISF3l78-1170": {
            "id": "FlGjISF3l78-1170",
            "heat": 0.1,
            "start": 1170.0,
            "text": " So in the next line, when I print a.get_name(), this is just going to print the empty string, OK? If you do want to pass in a parameter, you can do so as normal. So you can say a = Animal(3), a.set_name(), and then pass in a parameter here. And then, newname is going to be assigned to whatever parameter is passed in like that. Whatever you pass in overrides the default argument, and everything is good. So when I print a.get_name(), this is going to print out the name that you've passed in. Questions about default? Yeah. AUDIENCE: [INAUDIBLE] ANA BELL: What if you don't provide a default value for-- AUDIENCE: For newname? ANA BELL: For newname? If you don't provide a default argument for newname and you do this case here, then that's going to give you an error. So Python's going to say something like, expected one argument, got zero, or something like that. Great question. OK. All right, so let's move on to this idea of hierarchies, OK? So the great thing about object-oriented programming is that it allows us to add layers of abstraction to our code, all right? So we don't need to know how very, very low-level things are implemented in order to use them. And we can build up our code to be more and more complex as we use up these different abstractions.",
            "metrics": {
                "relativeDCReadability": 1.0118631316819038,
                "lexicalDiversity": 0.4791666666666667,
                "posComposition": {
                    "RB": 0.067,
                    "IN": 0.125,
                    "DT": 0.083,
                    "JJ": 0.05,
                    "NN": 0.142,
                    "WRB": 0.013,
                    "PRP": 0.071,
                    "VBP": 0.046,
                    "VBZ": 0.033,
                    "VBG": 0.021,
                    "TO": 0.054,
                    "VB": 0.083,
                    "MD": 0.013,
                    "CD": 0.013,
                    "CC": 0.029,
                    "VBN": 0.021,
                    "WDT": 0.004,
                    "NNS": 0.025,
                    "RP": 0.013,
                    "NNP": 0.058,
                    "WP": 0.004,
                    ":": 0.004,
                    "POS": 0.008,
                    "VBD": 0.004,
                    "PRP$": 0.008,
                    "JJR": 0.008
                },
                "syllableRate": 2.842,
                "topicScores": [
                    [
                        "ANA BELL",
                        0.34405365601851723
                    ],
                    [
                        "audience",
                        0.35263065628464046
                    ],
                    [
                        "newname",
                        0.3659572058189778
                    ],
                    [
                        "default",
                        0.37304727079710415
                    ],
                    [
                        "parameter",
                        0.4135453359133405
                    ],
                    [
                        "argument",
                        0.4459623434145518
                    ],
                    [
                        "a.get_name",
                        0.4877549318664111
                    ],
                    [
                        "Animal(3",
                        0.5387364033898651
                    ],
                    [
                        "right",
                        0.5494360196796779
                    ],
                    [
                        "question",
                        0.5541013871840675
                    ],
                    [
                        "great",
                        0.5697326001523305
                    ],
                    [
                        "code",
                        0.5732360768783439
                    ],
                    [
                        "abstraction",
                        0.5751659851180542
                    ],
                    [
                        "thing",
                        0.5785143905886567
                    ],
                    [
                        "Python",
                        0.6858900799419684
                    ],
                    [
                        "line",
                        0.8083991598967234
                    ],
                    [
                        "string",
                        0.8083991598967234
                    ],
                    [
                        "a.set_name",
                        0.821682910441988
                    ],
                    [
                        "normal",
                        0.8399450030462234
                    ],
                    [
                        "=",
                        0.8852840435965892
                    ],
                    [
                        "good",
                        0.8865590900531252
                    ],
                    [
                        "for--",
                        0.9062469872630889
                    ],
                    [
                        "override",
                        0.9117819739995778
                    ],
                    [
                        "error",
                        0.9130109885410768
                    ],
                    [
                        "value",
                        0.92123659747459
                    ],
                    [
                        "low",
                        0.9258108919137035
                    ],
                    [
                        "case",
                        0.9270062488827097
                    ],
                    [
                        "hierarchy",
                        0.9305985870405072
                    ],
                    [
                        "object",
                        0.9313041838213241
                    ],
                    [
                        "programming",
                        0.9313041838213241
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "right",
                        0.5494360196796779
                    ],
                    [
                        "code",
                        0.5732360768783439
                    ],
                    [
                        "thing",
                        0.5785143905886567
                    ],
                    [
                        "Python",
                        0.6858900799419684
                    ],
                    [
                        "value",
                        0.92123659747459
                    ],
                    [
                        "object",
                        0.9313041838213241
                    ]
                ]
            }
        },
        "FlGjISF3l78-1260": {
            "id": "FlGjISF3l78-1260",
            "heat": 0.137,
            "start": 1260.0,
            "text": " So consider every one of these things on this slide as being a separate object, all right? Every one of these things can be considered to be an animal, OK? According to our implementation of an animal, the one thing that an animal has is an age, OK? And that's probably true, right? Every one of these things has an age. But now I want to build up on this and create separate groups, right? And each one of these separate groups that I create on top of Animal is going to have its own functionality, right? They're going to be a little bit more specific, a little more specialized. So I can create these three groups now, a cat, a rabbit, and a person group. And for example-- so they're all animals, right? They all have an age. But for example, maybe a person's going to have a list of friends whereas a cat and a rabbit do not. Maybe a cat has a data attribute for the number of lives they have left, right, whereas a person and a rabbit do not, OK? So you can think of adding these more specialized-- adding functionality to each one of these subgroups, OK? So they're going to be more and more specialized, but all of them retaining the fact that they are animals. So they all have an age, for example. So on top of these, we can add another layer",
            "metrics": {
                "relativeDCReadability": 0.890984790303405,
                "lexicalDiversity": 0.43548387096774194,
                "posComposition": {
                    "RB": 0.044,
                    "VB": 0.052,
                    "DT": 0.177,
                    "CD": 0.028,
                    "IN": 0.109,
                    "NNS": 0.056,
                    "NN": 0.141,
                    "VBG": 0.036,
                    "JJ": 0.052,
                    "NNP": 0.02,
                    "MD": 0.016,
                    "VBN": 0.008,
                    "TO": 0.032,
                    "PRP$": 0.008,
                    "WDT": 0.004,
                    "VBZ": 0.024,
                    "CC": 0.044,
                    "PRP": 0.052,
                    "VBP": 0.052,
                    "RP": 0.004,
                    "RBR": 0.012,
                    "JJR": 0.008,
                    ":": 0.008,
                    "VBD": 0.004,
                    "POS": 0.004
                },
                "syllableRate": 2.867,
                "topicScores": [
                    [
                        "ok",
                        0.21676634268990053
                    ],
                    [
                        "right",
                        0.29101320801342584
                    ],
                    [
                        "animal",
                        0.3280474491224914
                    ],
                    [
                        "thing",
                        0.3470231534428588
                    ],
                    [
                        "age",
                        0.35097706498794157
                    ],
                    [
                        "group",
                        0.3745883392487727
                    ],
                    [
                        "rabbit",
                        0.4206017112505296
                    ],
                    [
                        "cat",
                        0.42774645405813405
                    ],
                    [
                        "separate",
                        0.42911565493170467
                    ],
                    [
                        "person",
                        0.4432521761442376
                    ],
                    [
                        "example",
                        0.5557374922597731
                    ],
                    [
                        "specialized",
                        0.5583474513701726
                    ],
                    [
                        "little",
                        0.5621687420286912
                    ],
                    [
                        "functionality",
                        0.5711462059430235
                    ],
                    [
                        "object",
                        0.8157073484860338
                    ],
                    [
                        "slide",
                        0.8272086386367001
                    ],
                    [
                        "implementation",
                        0.8975027123165026
                    ],
                    [
                        "true",
                        0.9012546578230426
                    ],
                    [
                        "specific",
                        0.9202403462067046
                    ],
                    [
                        "layer",
                        0.9216642732312526
                    ],
                    [
                        "subgroup",
                        0.9301811571538463
                    ],
                    [
                        "list",
                        0.9328717057148204
                    ],
                    [
                        "friend",
                        0.9328717057148204
                    ],
                    [
                        "data",
                        0.9340591296559929
                    ],
                    [
                        "attribute",
                        0.9340591296559929
                    ],
                    [
                        "number",
                        0.9340591296559929
                    ],
                    [
                        "life",
                        0.9340591296559929
                    ],
                    [
                        "fact",
                        0.9360399323884318
                    ],
                    [
                        "separate group",
                        1.8575664270402221
                    ],
                    [
                        "separate object",
                        2.3340622277554712
                    ]
                ],
                "topTopicSimilarity": 0.23333333333333334,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.21676634268990053
                    ],
                    [
                        "right",
                        0.29101320801342584
                    ],
                    [
                        "thing",
                        0.3470231534428588
                    ],
                    [
                        "age",
                        0.35097706498794157
                    ],
                    [
                        "rabbit",
                        0.4206017112505296
                    ],
                    [
                        "object",
                        0.8157073484860338
                    ],
                    [
                        "attribute",
                        0.9340591296559929
                    ]
                ]
            }
        },
        "FlGjISF3l78-1350": {
            "id": "FlGjISF3l78-1350",
            "heat": 0.179,
            "start": 1350.0,
            "text": " and say that a student is a person and is an animal, OK? But in addition to having an age and maybe also having a list of friends, a student might also have a major or-- they're pretty, so maybe-- their favorite subject in school. So that's the general idea of hierarchies, OK? So we can sort of abstract the previous slide into this one and say that we have parent classes and child classes, OK? The Animal class is like our parent class. It's the highest-level class. Inheriting from the Animal class, we have these child classes or subclasses, OK? Whatever an animal can do, a person can do. Whatever an animal can do, a cat can do. And whatever an animal can do, a rabbit can do, OK-- that is, have an age and maybe some really basic functionality, OK? But between person, cat, and rabbit, they're going to be varying wildly as to the kinds of things that they can do, right? But they can all do whatever Animal can do. So child classes inherit all of the data attributes and all of the methods, or behaviors, that their parent's classes have, OK? But child classes can add more information. Like for example, a person can have a list of friends whereas a general animal will not. It can add more behavior.",
            "metrics": {
                "relativeDCReadability": 0.8911372218365422,
                "lexicalDiversity": 0.463519313304721,
                "posComposition": {
                    "CC": 0.069,
                    "VB": 0.082,
                    "IN": 0.094,
                    "DT": 0.137,
                    "NN": 0.163,
                    "VBZ": 0.026,
                    "JJ": 0.043,
                    "TO": 0.013,
                    "VBG": 0.021,
                    "RB": 0.052,
                    "NNS": 0.064,
                    "MD": 0.064,
                    ":": 0.013,
                    "PRP": 0.039,
                    "VBP": 0.039,
                    "PRP$": 0.013,
                    "NNP": 0.03,
                    "CD": 0.004,
                    "WDT": 0.017,
                    "POS": 0.004,
                    "VBN": 0.004,
                    "JJR": 0.009
                },
                "syllableRate": 2.85,
                "topicScores": [
                    [
                        "class",
                        0.25545540943955586
                    ],
                    [
                        "animal",
                        0.2715741221686818
                    ],
                    [
                        "person",
                        0.36870349854286283
                    ],
                    [
                        "child",
                        0.3702580475455939
                    ],
                    [
                        "parent",
                        0.4349507480897164
                    ],
                    [
                        "student",
                        0.5232625941372924
                    ],
                    [
                        "age",
                        0.5372425552886182
                    ],
                    [
                        "list",
                        0.544026312337886
                    ],
                    [
                        "friend",
                        0.5458488994893504
                    ],
                    [
                        "cat",
                        0.5610523947971561
                    ],
                    [
                        "rabbit",
                        0.5617392456881317
                    ],
                    [
                        "behavior",
                        0.5618359978937062
                    ],
                    [
                        "general",
                        0.5707254647171051
                    ],
                    [
                        "OK--",
                        0.6619095984744264
                    ],
                    [
                        "school",
                        0.8687082507550569
                    ],
                    [
                        "pretty",
                        0.8859143520813831
                    ],
                    [
                        "maybe--",
                        0.8859143520813831
                    ],
                    [
                        "addition",
                        0.8933238414509486
                    ],
                    [
                        "major",
                        0.8933238414509486
                    ],
                    [
                        "or--",
                        0.8933238414509486
                    ],
                    [
                        "favorite",
                        0.8933238414509486
                    ],
                    [
                        "subject",
                        0.8933238414509486
                    ],
                    [
                        "hierarchy",
                        0.8974839675640689
                    ],
                    [
                        "inheriting",
                        0.9041199506333338
                    ],
                    [
                        "idea",
                        0.904223283508456
                    ],
                    [
                        "right",
                        0.9060514175770122
                    ],
                    [
                        "level",
                        0.9076868820547016
                    ],
                    [
                        "previous",
                        0.9112009988053404
                    ],
                    [
                        "slide",
                        0.9112009988053404
                    ],
                    [
                        "high",
                        0.9140527578866511
                    ]
                ],
                "topTopicSimilarity": 0.2,
                "sharedTopicScores": [
                    [
                        "class",
                        0.25545540943955586
                    ],
                    [
                        "parent",
                        0.4349507480897164
                    ],
                    [
                        "student",
                        0.5232625941372924
                    ],
                    [
                        "age",
                        0.5372425552886182
                    ],
                    [
                        "rabbit",
                        0.5617392456881317
                    ],
                    [
                        "right",
                        0.9060514175770122
                    ]
                ]
            }
        },
        "FlGjISF3l78-1440": {
            "id": "FlGjISF3l78-1440",
            "heat": 0.138,
            "start": 1440.0,
            "text": " Like, maybe a cat can climb trees whereas people and rabbits cannot. Or you can also override behavior. So in the previous one, we had animal, person, student. So maybe we have, an animal doesn't speak at all, but a person can speak. So that's added functionality to the person. And maybe a person can only say hello. But then, when we talk to a student, we can override the fact-- override the speak() method of a person and say that a student can say, you know, I have homework, or I need sleep, or something like that, OK? So we have the same speak() method for both person and student, because they can both speak. But student will override the fact that they say hello with something else. OK, so let's look at some code to put this into perspective. So we have this Animal class, which we've seen before. This is the parent class, OK? It inherits from object, which means that everything that a basic object can do in Python, an animal can do, which is things like binding variables, you know, very low-level things, OK? We've seen the __init__. We've seen the two getters, the setters, and the string method to print an object of type Animal. All right, now, let's create a subclass of Animal. We'll call it Cat, OK? We create a class named Cat. In parentheses, instead of putting \"object,\" we now put \"Animal.\" And this tells Python that Cat's parent class is Animal.",
            "metrics": {
                "relativeDCReadability": 0.9441065209857856,
                "lexicalDiversity": 0.5112781954887218,
                "posComposition": {
                    "IN": 0.109,
                    "RB": 0.064,
                    "DT": 0.12,
                    "NN": 0.154,
                    "MD": 0.045,
                    "VB": 0.06,
                    "NNS": 0.041,
                    "JJ": 0.041,
                    "CC": 0.041,
                    "PRP": 0.083,
                    "CD": 0.008,
                    "VBD": 0.004,
                    "VBP": 0.06,
                    "VBZ": 0.03,
                    "NNP": 0.056,
                    "WDT": 0.015,
                    "TO": 0.015,
                    "WRB": 0.004,
                    ":": 0.004,
                    "POS": 0.008,
                    "VBN": 0.015,
                    "VBG": 0.008,
                    "``": 0.008,
                    "''": 0.008
                },
                "syllableRate": 3.058,
                "topicScores": [
                    [
                        "Animal",
                        0.21893035393346771
                    ],
                    [
                        "person",
                        0.28650960447421203
                    ],
                    [
                        "Cat",
                        0.3127799359888784
                    ],
                    [
                        "speak",
                        0.31908011408956766
                    ],
                    [
                        "student",
                        0.321605576567659
                    ],
                    [
                        "class",
                        0.3779318588362223
                    ],
                    [
                        "object",
                        0.3797771032291227
                    ],
                    [
                        "Python",
                        0.4072248695043623
                    ],
                    [
                        "method",
                        0.4338010357966957
                    ],
                    [
                        "parent",
                        0.5664500798777193
                    ],
                    [
                        "thing",
                        0.5730382611145327
                    ],
                    [
                        "tree",
                        0.826003714967472
                    ],
                    [
                        "people",
                        0.826003714967472
                    ],
                    [
                        "rabbit",
                        0.826003714967472
                    ],
                    [
                        "behavior",
                        0.8572139476305827
                    ],
                    [
                        "previous",
                        0.8913912326847755
                    ],
                    [
                        "init",
                        0.9084510315755752
                    ],
                    [
                        "functionality",
                        0.9140884986863589
                    ],
                    [
                        "perspective",
                        0.9170686604587618
                    ],
                    [
                        "homework",
                        0.9183033754083337
                    ],
                    [
                        "sleep",
                        0.9183033754083337
                    ],
                    [
                        "fact--",
                        0.9224318703821346
                    ],
                    [
                        "low",
                        0.9260855119983493
                    ],
                    [
                        "level",
                        0.9260855119983493
                    ],
                    [
                        "setter",
                        0.9282874456298661
                    ],
                    [
                        "code",
                        0.929379196706445
                    ],
                    [
                        "variable",
                        0.929957246404445
                    ],
                    [
                        "parenthesis",
                        0.9315345762462806
                    ],
                    [
                        "type",
                        0.9320523025671986
                    ],
                    [
                        "basic",
                        0.9335394414568744
                    ]
                ],
                "topTopicSimilarity": 0.43333333333333335,
                "sharedTopicScores": [
                    [
                        "Animal",
                        0.21893035393346771
                    ],
                    [
                        "student",
                        0.321605576567659
                    ],
                    [
                        "class",
                        0.3779318588362223
                    ],
                    [
                        "object",
                        0.3797771032291227
                    ],
                    [
                        "Python",
                        0.4072248695043623
                    ],
                    [
                        "method",
                        0.4338010357966957
                    ],
                    [
                        "parent",
                        0.5664500798777193
                    ],
                    [
                        "thing",
                        0.5730382611145327
                    ],
                    [
                        "rabbit",
                        0.826003714967472
                    ],
                    [
                        "init",
                        0.9084510315755752
                    ],
                    [
                        "code",
                        0.929379196706445
                    ],
                    [
                        "variable",
                        0.929957246404445
                    ],
                    [
                        "type",
                        0.9320523025671986
                    ]
                ]
            }
        },
        "FlGjISF3l78-1530": {
            "id": "FlGjISF3l78-1530",
            "heat": 0.114,
            "start": 1530.0,
            "text": " So everything that an animal can do, a cat can do. So that includes all of the attributes, which was age and name, and all of the methods. So all the getters, the setters, the __str__, the __init__, everything that the animal had, now the cat has-- the Cat class has. In the Cat class, we're going to add two more methods though. The first is speak(). So speak() is going to be a method that's going to just take in the self, OK-- no other parameters. And all it's doing is printing \"meow\" to the screen-- very simple, OK? So through this speak(), we've added new functionality to the class. So an animal couldn't speak, whereas a cat says \"meow.\" Additionally, through this __str__ method here, we're overriding the animal __str__, OK? So if we go back to the previous slide, we can see that the animal's __str__ had animal, plus the name, plus the age here whereas the cat's __str__ now says \"cat,\" name, and the age, OK? So this is just how I chose to implement this, OK? So here I've overridden the __str__ method of the Animal class. Notice that this class doesn't have an __init__, and that's OK. Because Python's actually going to say, well,",
            "metrics": {
                "relativeDCReadability": 0.9981796721663946,
                "lexicalDiversity": 0.5021645021645021,
                "posComposition": {
                    "RB": 0.082,
                    "NN": 0.152,
                    "IN": 0.065,
                    "DT": 0.169,
                    "MD": 0.017,
                    "VB": 0.048,
                    "VBZ": 0.061,
                    "NNS": 0.026,
                    "WDT": 0.009,
                    "VBD": 0.017,
                    "CC": 0.03,
                    "PDT": 0.004,
                    "NNPS": 0.004,
                    ":": 0.013,
                    "NNP": 0.074,
                    "PRP": 0.035,
                    "VBP": 0.022,
                    "VBG": 0.03,
                    "TO": 0.035,
                    "CD": 0.004,
                    "JJR": 0.004,
                    "JJ": 0.043,
                    "VBN": 0.013,
                    "``": 0.013,
                    "''": 0.013,
                    "POS": 0.013,
                    "WRB": 0.004
                },
                "syllableRate": 2.508,
                "topicScores": [
                    [
                        "ok",
                        0.18885378394632374
                    ],
                    [
                        "str",
                        0.23924711501607737
                    ],
                    [
                        "animal",
                        0.29778515544915807
                    ],
                    [
                        "class",
                        0.32255330542857297
                    ],
                    [
                        "Cat",
                        0.32343010956971907
                    ],
                    [
                        "method",
                        0.3277450199469581
                    ],
                    [
                        "speak",
                        0.36417733831497245
                    ],
                    [
                        "age",
                        0.4476579376419604
                    ],
                    [
                        "Cat class",
                        0.47097762371408186
                    ],
                    [
                        "init",
                        0.5284065779708933
                    ],
                    [
                        "meow",
                        0.5569127710439185
                    ],
                    [
                        "Python",
                        0.6717066024151411
                    ],
                    [
                        "attribute",
                        0.8866213529493281
                    ],
                    [
                        "setter",
                        0.899970524097292
                    ],
                    [
                        "parameter",
                        0.917291731228154
                    ],
                    [
                        "self",
                        0.9253419975451689
                    ],
                    [
                        "simple",
                        0.928652936379674
                    ],
                    [
                        "screen--",
                        0.932107044791674
                    ],
                    [
                        "new",
                        0.9345825104694425
                    ],
                    [
                        "functionality",
                        0.9345825104694425
                    ],
                    [
                        "previous",
                        0.936555444801978
                    ],
                    [
                        "slide",
                        0.936555444801978
                    ],
                    [
                        "Animal class",
                        1.24230596777371
                    ],
                    [
                        "new functionality",
                        6.901669655316602
                    ],
                    [
                        "previous slide",
                        7.139087312637114
                    ]
                ],
                "topTopicSimilarity": 0.36,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.18885378394632374
                    ],
                    [
                        "class",
                        0.32255330542857297
                    ],
                    [
                        "method",
                        0.3277450199469581
                    ],
                    [
                        "age",
                        0.4476579376419604
                    ],
                    [
                        "init",
                        0.5284065779708933
                    ],
                    [
                        "Python",
                        0.6717066024151411
                    ],
                    [
                        "attribute",
                        0.8866213529493281
                    ],
                    [
                        "new",
                        0.9345825104694425
                    ],
                    [
                        "Animal class",
                        1.24230596777371
                    ]
                ]
            }
        },
        "FlGjISF3l78-1620": {
            "id": "FlGjISF3l78-1620",
            "heat": 0.161,
            "start": 1620.0,
            "text": " if there's no __init__ in this particular method-- sorry, in this particular class-- then look to my parents and say, do my parents have an __init__, OK? And if so, use that __init__. So that's actually true for any other methods. So the idea here is, when you have hierarchies, you have a parent class, you have a child class, you could have a child class to that child class, and so on and so on. So you can have multiple levels of inheritance. What happens when you create an object that is of type something that's been-- of a type that's the child class of a child class of a child class, right? What happens when you call a method on that object? Well, Python's are going to say, does a method with that name exist in my current class definition? And if so, use that. But if not, then, look to my parents. Do my parents know how to do that, right? Do my parents have a method for whatever I want to do? If so, use that. If not, look to their parents, and so on and so on. So you're sort of tracing back up your ancestry to figure out if you can do this method or not. So let's look at a slightly more complicated example. We have a class named Person. It's going to inherit from Animal. Inside this person, I'm going to create my own-- I'm going to create an __init__ method. And the __init__ method is going to do something different than",
            "metrics": {
                "relativeDCReadability": 0.8688464230439763,
                "lexicalDiversity": 0.4197080291970803,
                "posComposition": {
                    "IN": 0.117,
                    "EX": 0.004,
                    "VBZ": 0.044,
                    "DT": 0.099,
                    "NN": 0.146,
                    "JJ": 0.062,
                    ":": 0.015,
                    "RB": 0.055,
                    "TO": 0.044,
                    "PRP$": 0.033,
                    "NNS": 0.033,
                    "CC": 0.036,
                    "VB": 0.066,
                    "VBP": 0.058,
                    "NNP": 0.036,
                    "WDT": 0.018,
                    "WRB": 0.015,
                    "PRP": 0.051,
                    "MD": 0.011,
                    "WP": 0.007,
                    "VBN": 0.007,
                    "POS": 0.007,
                    "VBG": 0.022,
                    "RP": 0.011,
                    "RBR": 0.004
                },
                "syllableRate": 2.983,
                "topicScores": [
                    [
                        "init",
                        0.2584843902417798
                    ],
                    [
                        "class",
                        0.2621278663571476
                    ],
                    [
                        "parent",
                        0.286500866896434
                    ],
                    [
                        "child",
                        0.29708546904257144
                    ],
                    [
                        "method",
                        0.2972480123606666
                    ],
                    [
                        "particular",
                        0.511224328225704
                    ],
                    [
                        "right",
                        0.5497492104676247
                    ],
                    [
                        "object",
                        0.5723229506302022
                    ],
                    [
                        "type",
                        0.5745323301726831
                    ],
                    [
                        "Python",
                        0.653115731591964
                    ],
                    [
                        "Person",
                        0.6735825594877778
                    ],
                    [
                        "Animal",
                        0.6761868530749249
                    ],
                    [
                        "sorry",
                        0.8471184059613796
                    ],
                    [
                        "inheritance",
                        0.9131293957973269
                    ],
                    [
                        "true",
                        0.9164012618159362
                    ],
                    [
                        "hierarchy",
                        0.919523450595163
                    ],
                    [
                        "definition",
                        0.9243868172240676
                    ],
                    [
                        "idea",
                        0.9251403995010948
                    ],
                    [
                        "multiple",
                        0.9307109929353015
                    ],
                    [
                        "level",
                        0.9307109929353015
                    ],
                    [
                        "been--",
                        0.9346232319475284
                    ],
                    [
                        "example",
                        0.9356513833614821
                    ],
                    [
                        "own--",
                        0.9377701152836858
                    ],
                    [
                        "current",
                        0.9398401498265261
                    ],
                    [
                        "child class",
                        0.9449745444302204
                    ],
                    [
                        "complicated",
                        0.9449916310454891
                    ],
                    [
                        "different",
                        0.9478035639988657
                    ],
                    [
                        "ancestry",
                        0.9482427142993872
                    ],
                    [
                        "particular method--",
                        2.1887328856488026
                    ],
                    [
                        "particular class--",
                        2.2723054110325793
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "init",
                        0.2584843902417798
                    ],
                    [
                        "class",
                        0.2621278663571476
                    ],
                    [
                        "parent",
                        0.286500866896434
                    ],
                    [
                        "method",
                        0.2972480123606666
                    ],
                    [
                        "right",
                        0.5497492104676247
                    ],
                    [
                        "object",
                        0.5723229506302022
                    ],
                    [
                        "type",
                        0.5745323301726831
                    ],
                    [
                        "Python",
                        0.653115731591964
                    ],
                    [
                        "Person",
                        0.6735825594877778
                    ],
                    [
                        "Animal",
                        0.6761868530749249
                    ],
                    [
                        "different",
                        0.9478035639988657
                    ]
                ]
            }
        },
        "FlGjISF3l78-1710": {
            "id": "FlGjISF3l78-1710",
            "heat": 0.342,
            "start": 1710.0,
            "text": " what the animal's __init__ method is doing. It's going to take in self, as usual. And it's going to take in two parameters as opposed to one, a name and an age. First thing the __init__ method's doing is it's calling the animal's __init__ method. Why am I doing that? Well, I could theoretically initialize the name and the age data attributes that Animal initializes in this method. But I'm using the fact that I've already written code that initializes those two data attributes. So why not just use it, OK? So here, this says, I'm going to call the class Animal. I'm going to call its __init__ method. And I'm going to leave it up to you to-- not you as the class, but I'm talking as the programs is running-- I'm going to leave it up to you to figure out how to initialize an animal with this particular age and what to name it. So Python says, yep, I know how to do this, so I'm going to go ahead and do that for you. So now it says person is an animal. And I've initialized the age and the name for you. The next thing I'm doing in the __init__ is I'm going to set the name to whatever name was passed in, OK? So in the __init__, notice, I can do whatever I want, including calling methods. And then, the last thing I'm doing here is I'm going to create a new data attribute for Person, which is a list of friends, OK? So an animal didn't have a list of friends, but a person is going to.",
            "metrics": {
                "relativeDCReadability": 0.9040806254842515,
                "lexicalDiversity": 0.4610169491525424,
                "posComposition": {
                    "WP": 0.007,
                    "DT": 0.105,
                    "NN": 0.112,
                    "POS": 0.01,
                    "JJ": 0.031,
                    "VBZ": 0.058,
                    "VBG": 0.071,
                    "PRP": 0.108,
                    "TO": 0.064,
                    "VB": 0.061,
                    "IN": 0.071,
                    "CC": 0.041,
                    "CD": 0.01,
                    "NNS": 0.031,
                    "VBN": 0.014,
                    "NNP": 0.044,
                    "WRB": 0.014,
                    "VBP": 0.058,
                    "MD": 0.007,
                    "RB": 0.047,
                    "WDT": 0.01,
                    "PRP$": 0.003,
                    "RP": 0.01,
                    ":": 0.007,
                    "VBD": 0.007
                },
                "syllableRate": 3.333,
                "topicScores": [
                    [
                        "init",
                        0.22060346884845783
                    ],
                    [
                        "animal",
                        0.2889585941285716
                    ],
                    [
                        "method",
                        0.2953012768081928
                    ],
                    [
                        "age",
                        0.37893185480743613
                    ],
                    [
                        "thing",
                        0.44222451945702784
                    ],
                    [
                        "attribute",
                        0.449008732032007
                    ],
                    [
                        "class",
                        0.569924172643703
                    ],
                    [
                        "friend",
                        0.5717607194931104
                    ],
                    [
                        "list",
                        0.5734544382750641
                    ],
                    [
                        "data",
                        0.5781947183021223
                    ],
                    [
                        "person",
                        0.5812821067259326
                    ],
                    [
                        "Python",
                        0.668168338347771
                    ],
                    [
                        "usual",
                        0.8636615573370574
                    ],
                    [
                        "self",
                        0.8873985104945726
                    ],
                    [
                        "parameter",
                        0.9111090655621054
                    ],
                    [
                        "running--",
                        0.9294593325045547
                    ],
                    [
                        "notice",
                        0.9304435100229917
                    ],
                    [
                        "datum",
                        0.9317398855099286
                    ],
                    [
                        "fact",
                        0.9359280039650418
                    ],
                    [
                        "code",
                        0.9359280039650418
                    ],
                    [
                        "to--",
                        0.942085851821399
                    ],
                    [
                        "program",
                        0.942085851821399
                    ],
                    [
                        "particular",
                        0.9431202257151394
                    ],
                    [
                        "new",
                        0.9473848194242177
                    ],
                    [
                        "class Animal",
                        1.3712632426609281
                    ],
                    [
                        "age data",
                        4.162936056237422
                    ],
                    [
                        "data attribute",
                        4.648390698612081
                    ],
                    [
                        "particular age",
                        4.875672198172253
                    ],
                    [
                        "new data",
                        6.587224832334548
                    ],
                    [
                        "new data attribute",
                        44.83218462170483
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "init",
                        0.22060346884845783
                    ],
                    [
                        "method",
                        0.2953012768081928
                    ],
                    [
                        "age",
                        0.37893185480743613
                    ],
                    [
                        "thing",
                        0.44222451945702784
                    ],
                    [
                        "attribute",
                        0.449008732032007
                    ],
                    [
                        "class",
                        0.569924172643703
                    ],
                    [
                        "Python",
                        0.668168338347771
                    ],
                    [
                        "datum",
                        0.9317398855099286
                    ],
                    [
                        "code",
                        0.9359280039650418
                    ],
                    [
                        "new",
                        0.9473848194242177
                    ]
                ]
            }
        },
        "FlGjISF3l78-1800": {
            "id": "FlGjISF3l78-1800",
            "heat": 0.299,
            "start": 1800.0,
            "text": " The next four methods here are-- this one's a getter, so it's going to return the list of friends. This is going to append a friend to the end of my list. I want to make a note that I actually didn't write a method to remove friends. So once you get a friend, they're friends for life. But that's OK. The next method here is speak(), which is going to print \"hello\" to the screen. And the last method here is going to get the age difference between two people. So that just basically subtracts their age and says it's a five-year age difference, or whatever it is. And down here, I have an __str__ method, which I've overridden from the Animal, which, instead of \"animal: name,\" it's going to say \"person: name : age,\" OK? So we can run this code. So that's down here. I have an animal person here. So I'm going to run this code. And what did I do? I created a new person. I gave it a name and an age. I created another person, a name and an age. And here I've just run some methods on it, which was get_name(), get_age(), get_name(), and get_age() for each of the two people. So that printed, Jack is 30, Jill is 25. If I print p1, this is going to use the __str__ method",
            "metrics": {
                "relativeDCReadability": 0.9338704899011068,
                "lexicalDiversity": 0.4777327935222672,
                "posComposition": {
                    "DT": 0.142,
                    "JJ": 0.049,
                    "CD": 0.02,
                    "NNS": 0.028,
                    "RB": 0.073,
                    "VBP": 0.049,
                    ":": 0.004,
                    "NN": 0.154,
                    "POS": 0.004,
                    "IN": 0.065,
                    "PRP": 0.085,
                    "VBZ": 0.061,
                    "VBG": 0.028,
                    "TO": 0.045,
                    "VB": 0.053,
                    "PRP$": 0.008,
                    "VBD": 0.024,
                    "CC": 0.045,
                    "WDT": 0.016,
                    "``": 0.012,
                    "''": 0.012,
                    "VBN": 0.004,
                    "NNP": 0.012,
                    "MD": 0.004,
                    "WP": 0.004
                },
                "syllableRate": 2.558,
                "topicScores": [
                    [
                        "method",
                        0.2961908681179077
                    ],
                    [
                        "age",
                        0.3160291984229736
                    ],
                    [
                        "friend",
                        0.3397946487257514
                    ],
                    [
                        "ok",
                        0.36205528237355
                    ],
                    [
                        "person",
                        0.39108747103348834
                    ],
                    [
                        "str",
                        0.5256201047944037
                    ],
                    [
                        "code",
                        0.5472612268793727
                    ],
                    [
                        "list",
                        0.5473905669449812
                    ],
                    [
                        "people",
                        0.5573219196106265
                    ],
                    [
                        "get_age",
                        0.5604382267330791
                    ],
                    [
                        "get_name",
                        0.5660569694326806
                    ],
                    [
                        "difference",
                        0.5733951847307441
                    ],
                    [
                        "animal",
                        0.580129357266713
                    ],
                    [
                        "Jack",
                        0.7054870963887848
                    ],
                    [
                        "Jill",
                        0.7054870963887848
                    ],
                    [
                        "getter",
                        0.8877886318683177
                    ],
                    [
                        "life",
                        0.9075979716215089
                    ],
                    [
                        "speak",
                        0.9165141067629116
                    ],
                    [
                        "screen",
                        0.9165141067629116
                    ],
                    [
                        "note",
                        0.9218954838707908
                    ],
                    [
                        "year",
                        0.9340642135104421
                    ],
                    [
                        "new",
                        0.9428895261760294
                    ],
                    [
                        "p1",
                        0.9455972058955305
                    ],
                    [
                        "age difference",
                        2.626350712102287
                    ],
                    [
                        "year age",
                        4.837966948175923
                    ],
                    [
                        "animal person",
                        5.0591960384132895
                    ],
                    [
                        "new person",
                        5.954890283007085
                    ],
                    [
                        "year age difference",
                        33.65354473353924
                    ]
                ],
                "topTopicSimilarity": 0.21428571428571427,
                "sharedTopicScores": [
                    [
                        "method",
                        0.2961908681179077
                    ],
                    [
                        "age",
                        0.3160291984229736
                    ],
                    [
                        "ok",
                        0.36205528237355
                    ],
                    [
                        "code",
                        0.5472612268793727
                    ],
                    [
                        "getter",
                        0.8877886318683177
                    ],
                    [
                        "new",
                        0.9428895261760294
                    ]
                ]
            }
        },
        "FlGjISF3l78-1890": {
            "id": "FlGjISF3l78-1890",
            "heat": 0.494,
            "start": 1890.0,
            "text": " of Person. So it's to print \"person:\", their name, and then, their age. p1.speak() just says \"hello.\" And then, the age difference between p1 and p2 is just 5. So that's just subtracting and then printing that out to the screen. OK, so that's my person. Let's add another class. This class is going to be a student, and it's going to be a subclass of Person. Since it's a subclass of Person, it's going to-- a student is going inherit all the attributes of a person, and therefore, all the attributes of an animal. The __init__ method of a student is going to be a little different from the one of Person. We're going to give it a name, an age, and a major. Notice we're using default arguments here. So if I create a student without giving it a major, the major is going to be set to None originally. Once again, this line here, Person. init (self, name, age), tells Python, hey, you already know how to initialize a person for me with this name and this age. So can you just do that? And Python says, yes, I can do that for you. And so that saves you, maybe, like five lines of code just by calling the __init__ method that you've already written through Person, OK? So Student has been initialized to be a person.",
            "metrics": {
                "relativeDCReadability": 0.8640372918127576,
                "lexicalDiversity": 0.47346938775510206,
                "posComposition": {
                    "IN": 0.098,
                    "NNP": 0.065,
                    "PRP": 0.069,
                    "VBZ": 0.061,
                    "TO": 0.045,
                    "VB": 0.045,
                    "``": 0.008,
                    "NN": 0.147,
                    "''": 0.008,
                    "PRP$": 0.012,
                    "CC": 0.041,
                    "RB": 0.09,
                    "JJ": 0.029,
                    "DT": 0.131,
                    "CD": 0.012,
                    "NNPS": 0.004,
                    "VBG": 0.045,
                    "POS": 0.008,
                    ":": 0.004,
                    "PDT": 0.008,
                    "NNS": 0.02,
                    "VBP": 0.02,
                    "VBN": 0.016,
                    "WRB": 0.004,
                    "MD": 0.008
                },
                "syllableRate": 2.742,
                "topicScores": [
                    [
                        "Person",
                        0.19396357529835803
                    ],
                    [
                        "age",
                        0.33226600807961415
                    ],
                    [
                        "student",
                        0.3708718617299385
                    ],
                    [
                        "ok",
                        0.3837960367681792
                    ],
                    [
                        "Python",
                        0.40282721624914114
                    ],
                    [
                        "init",
                        0.42659488731011813
                    ],
                    [
                        "major",
                        0.44451562894079255
                    ],
                    [
                        "subclass",
                        0.5517640909242225
                    ],
                    [
                        "method",
                        0.5579379480811976
                    ],
                    [
                        "attribute",
                        0.5667560927488815
                    ],
                    [
                        "line",
                        0.5739610505921272
                    ],
                    [
                        "screen",
                        0.9097007991235662
                    ],
                    [
                        "animal",
                        0.9195205556435058
                    ],
                    [
                        "difference",
                        0.9221392997114719
                    ],
                    [
                        "p1",
                        0.9221392997114719
                    ],
                    [
                        "p2",
                        0.9221392997114719
                    ],
                    [
                        "notice",
                        0.9236947813279388
                    ],
                    [
                        "subtracting",
                        0.9255808492194654
                    ],
                    [
                        "self",
                        0.9306001411589291
                    ],
                    [
                        "argument",
                        0.9331776689882332
                    ],
                    [
                        "to--",
                        0.9337993699865282
                    ],
                    [
                        "inherit",
                        0.9337993699865282
                    ],
                    [
                        "little",
                        0.9351182488190715
                    ],
                    [
                        "default",
                        0.937283509729792
                    ],
                    [
                        "code",
                        0.9410148152265626
                    ],
                    [
                        "age difference",
                        3.8081775556733652
                    ],
                    [
                        "little different",
                        6.964709282702901
                    ],
                    [
                        "default argument",
                        6.977792429238558
                    ]
                ],
                "topTopicSimilarity": 0.32142857142857145,
                "sharedTopicScores": [
                    [
                        "Person",
                        0.19396357529835803
                    ],
                    [
                        "age",
                        0.33226600807961415
                    ],
                    [
                        "student",
                        0.3708718617299385
                    ],
                    [
                        "ok",
                        0.3837960367681792
                    ],
                    [
                        "Python",
                        0.40282721624914114
                    ],
                    [
                        "init",
                        0.42659488731011813
                    ],
                    [
                        "method",
                        0.5579379480811976
                    ],
                    [
                        "attribute",
                        0.5667560927488815
                    ],
                    [
                        "code",
                        0.9410148152265626
                    ]
                ]
            }
        },
        "FlGjISF3l78-1980": {
            "id": "FlGjISF3l78-1980",
            "heat": 0.955,
            "start": 1980.0,
            "text": " And additionally, we're going to set another data attribute for the student to be the major. And we're going to set the major to be None. The student is going to get this setter here, this setter method, which is going to change the major to whatever else they want if they want to change it. And then, I'm going to override the speak() method. So the speak method for the person, recall, just said \"hello.\" A student is going to be a little bit more complex. I'm going to use the fact that someone created this random class, OK? So this is where we can write more interesting code by reusing code that other people have written. So someone wrote a random class that can do cool things with random numbers. So if I want to use random numbers in my code, I'm going to put this \"import random\" at the top of my code, which essentially brings in all of the methods from the Random class, one of the methods being this random() method. So random() is a random() method from the Random class. And this essentially gives me a number between 0 and 1, including 0 but not including 1, OK? So this random number I get here is going to help me write my method for speak(), where it's going to-- with 25% probability, it's either going to say, \"I have homework,\" \"I need sleep,\" \"I should eat,\" or \"I'm watching TV,\" OK? So a student is going to say one of those four things. And the last thing I'm doing down here is overwriting the __str__ method.",
            "metrics": {
                "relativeDCReadability": 1.09323603819169,
                "lexicalDiversity": 0.5204081632653061,
                "posComposition": {
                    "CC": 0.031,
                    "RB": 0.034,
                    "PRP": 0.068,
                    "VBP": 0.048,
                    "VBG": 0.065,
                    "TO": 0.058,
                    "VB": 0.065,
                    "DT": 0.112,
                    "NNS": 0.027,
                    "NN": 0.146,
                    "IN": 0.075,
                    "JJ": 0.054,
                    "CD": 0.031,
                    "VBZ": 0.041,
                    "WDT": 0.014,
                    "VBD": 0.01,
                    "``": 0.02,
                    "''": 0.02,
                    "RBR": 0.007,
                    "NNP": 0.034,
                    "WRB": 0.007,
                    "MD": 0.01,
                    "VBN": 0.007,
                    "PRP$": 0.01,
                    ":": 0.003,
                    "RP": 0.003
                },
                "syllableRate": 3.3,
                "topicScores": [
                    [
                        "method",
                        0.2503592643205863
                    ],
                    [
                        "random",
                        0.2591051348778112
                    ],
                    [
                        "ok",
                        0.2689769107063053
                    ],
                    [
                        "student",
                        0.35100114468542704
                    ],
                    [
                        "class",
                        0.37182363868624396
                    ],
                    [
                        "number",
                        0.3822542059942572
                    ],
                    [
                        "code",
                        0.38945128060805473
                    ],
                    [
                        "major",
                        0.4058581725456576
                    ],
                    [
                        "speak",
                        0.4351291203181387
                    ],
                    [
                        "thing",
                        0.4513953584263121
                    ],
                    [
                        "setter",
                        0.5473735270666454
                    ],
                    [
                        "tv",
                        0.6568847298762136
                    ],
                    [
                        "Random class",
                        0.6625937006526029
                    ],
                    [
                        "datum",
                        0.8817847775631231
                    ],
                    [
                        "attribute",
                        0.8817847775631231
                    ],
                    [
                        "str",
                        0.9028700323407136
                    ],
                    [
                        "complex",
                        0.9074902701909348
                    ],
                    [
                        "recall",
                        0.9102000337905796
                    ],
                    [
                        "person",
                        0.9164085639114924
                    ],
                    [
                        "homework",
                        0.9217973763823917
                    ],
                    [
                        "sleep",
                        0.9217973763823917
                    ],
                    [
                        "import",
                        0.9234997458750058
                    ],
                    [
                        "little",
                        0.9254586253196059
                    ],
                    [
                        "bit",
                        0.9254586253196059
                    ],
                    [
                        "probability",
                        0.9274838594019801
                    ],
                    [
                        "fact",
                        0.9281578172782379
                    ],
                    [
                        "interesting",
                        0.9303420578160226
                    ],
                    [
                        "people",
                        0.9303420578160226
                    ],
                    [
                        "to--",
                        0.9371792014440868
                    ],
                    [
                        "random number",
                        1.6182324148025122
                    ]
                ],
                "topTopicSimilarity": 0.26666666666666666,
                "sharedTopicScores": [
                    [
                        "method",
                        0.2503592643205863
                    ],
                    [
                        "ok",
                        0.2689769107063053
                    ],
                    [
                        "student",
                        0.35100114468542704
                    ],
                    [
                        "class",
                        0.37182363868624396
                    ],
                    [
                        "code",
                        0.38945128060805473
                    ],
                    [
                        "thing",
                        0.4513953584263121
                    ],
                    [
                        "datum",
                        0.8817847775631231
                    ],
                    [
                        "attribute",
                        0.8817847775631231
                    ]
                ]
            }
        },
        "FlGjISF3l78-2070": {
            "id": "FlGjISF3l78-2070",
            "heat": 0.648,
            "start": 2070.0,
            "text": " So let's look at the code. I'm going to comment this part out, and uncomment the student, and see what we get. OK, so here, I am creating the student. I'm creating one student whose major is CS, name is Alice, and age is 20. s2 is going to be another student-- name-- Beth, age-- 18. And the major is going to be None, because I didn't pass in any major here. So by default, using the default argument, it's going to be None. If I print s1, s2, that's going to print out these two things over here just by whatever __str__ method does. And then I'm going to get the students to speak. And if I run it multiple times, you can see that it's going to print different things each time. So \"I need sleep,\" \"I have homework,\" \"I need sleep,\" \"I have homework,\" yeah. So every time, it's going to print something different. OK, questions about inheritance in this example? OK. Last thing we're going to talk about in this class is an idea of-- or in this lecture, is the idea of-- a class variable, OK? So to illustrate this, I'm going to create yet another subclass of my animal called a rabbit.",
            "metrics": {
                "relativeDCReadability": 1.0646274973275662,
                "lexicalDiversity": 0.5474137931034483,
                "posComposition": {
                    "RB": 0.043,
                    "EX": 0.004,
                    "POS": 0.004,
                    "NN": 0.142,
                    "IN": 0.086,
                    "DT": 0.091,
                    "PRP": 0.082,
                    "VBP": 0.056,
                    "VBG": 0.056,
                    "TO": 0.052,
                    "VB": 0.065,
                    "CC": 0.03,
                    "JJ": 0.065,
                    "WP": 0.004,
                    "CD": 0.017,
                    "WP$": 0.004,
                    "VBZ": 0.052,
                    "NNP": 0.026,
                    ":": 0.022,
                    "VBD": 0.009,
                    "WDT": 0.009,
                    "RP": 0.004,
                    "NNS": 0.026,
                    "MD": 0.004,
                    "``": 0.017,
                    "''": 0.017,
                    "VBN": 0.009,
                    "PRP$": 0.004
                },
                "syllableRate": 2.575,
                "topicScores": [
                    [
                        "ok",
                        0.2363909225055622
                    ],
                    [
                        "student",
                        0.35561269620168806
                    ],
                    [
                        "major",
                        0.43719980408654785
                    ],
                    [
                        "time",
                        0.4440162788339128
                    ],
                    [
                        "thing",
                        0.4475742002379951
                    ],
                    [
                        "sleep",
                        0.5418509725045112
                    ],
                    [
                        "homework",
                        0.5418509725045112
                    ],
                    [
                        "s2",
                        0.5471262697204397
                    ],
                    [
                        "different",
                        0.5594942772139269
                    ],
                    [
                        "default",
                        0.5664667288286892
                    ],
                    [
                        "idea",
                        0.5739042880533969
                    ],
                    [
                        "of--",
                        0.5786203532385882
                    ],
                    [
                        "class",
                        0.580066658816683
                    ],
                    [
                        "cs",
                        0.5858478995221864
                    ],
                    [
                        "Alice",
                        0.5858478995221864
                    ],
                    [
                        "Beth",
                        0.6059114668767484
                    ],
                    [
                        "code",
                        0.787434353115245
                    ],
                    [
                        "str",
                        0.8820459317672501
                    ],
                    [
                        "method",
                        0.898982662554311
                    ],
                    [
                        "age",
                        0.8990909140996582
                    ],
                    [
                        "name--",
                        0.9064038391556838
                    ],
                    [
                        "argument",
                        0.9154244621488467
                    ],
                    [
                        "example",
                        0.9163945552566469
                    ],
                    [
                        "s1",
                        0.918454982394417
                    ],
                    [
                        "rabbit",
                        0.9199039793370574
                    ],
                    [
                        "multiple",
                        0.922946975225291
                    ],
                    [
                        "question",
                        0.9274565628220064
                    ],
                    [
                        "lecture",
                        0.9296207564593091
                    ],
                    [
                        "variable",
                        0.9296207564593091
                    ],
                    [
                        "inheritance",
                        0.9322006664272663
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.2363909225055622
                    ],
                    [
                        "student",
                        0.35561269620168806
                    ],
                    [
                        "thing",
                        0.4475742002379951
                    ],
                    [
                        "different",
                        0.5594942772139269
                    ],
                    [
                        "class",
                        0.580066658816683
                    ],
                    [
                        "code",
                        0.787434353115245
                    ],
                    [
                        "method",
                        0.898982662554311
                    ],
                    [
                        "age",
                        0.8990909140996582
                    ],
                    [
                        "rabbit",
                        0.9199039793370574
                    ],
                    [
                        "variable",
                        0.9296207564593091
                    ]
                ]
            }
        },
        "FlGjISF3l78-2160": {
            "id": "FlGjISF3l78-2160",
            "heat": 0.659,
            "start": 2160.0,
            "text": " So class variables-- so so far, we've seen-- sorry, let me back up. So so far, we've seen instance variables, right? So things like self.name, self.age, those are all instance variables. So they're variables that are specif-- they are common across all of the instances of the class, right? Every instance of the class has this particular variable. But the value of the variable is going to be different between all of the different instances. So class variables are going to be variables whose values are shared between all of the instances in the class. So if one instance of the class modifies this class variable, then, any other instance of the class is going to see the modified value. So it's sort of shared among all of the different instances. So we're going to use class variables to keep track of rabbits. OK, so we're creating this class, Rabbit. tag = 1. We haven't seen something like this before. So tag is our class variable. Class variables are typically defined inside the class definition but outside of the __init__. So tag is going to be a class variable, and I'm initializing it to 1. Inside the __init__, this tells us how to create a Rabbit object.",
            "metrics": {
                "relativeDCReadability": 0.9362136620730628,
                "lexicalDiversity": 0.5253456221198156,
                "posComposition": {
                    "RB": 0.06,
                    "NN": 0.157,
                    "NNS": 0.069,
                    ":": 0.014,
                    "PRP": 0.055,
                    "VBP": 0.06,
                    "VBN": 0.032,
                    "JJ": 0.051,
                    "VB": 0.041,
                    "RP": 0.005,
                    "NNP": 0.037,
                    "IN": 0.129,
                    "DT": 0.134,
                    "WDT": 0.005,
                    "VBZ": 0.041,
                    "CC": 0.014,
                    "VBG": 0.032,
                    "TO": 0.037,
                    "WP$": 0.005,
                    "CD": 0.014,
                    "PRP$": 0.005,
                    "WRB": 0.005
                },
                "syllableRate": 2.742,
                "topicScores": [
                    [
                        "class",
                        0.22614818080750487
                    ],
                    [
                        "variable",
                        0.24063862194779506
                    ],
                    [
                        "instance",
                        0.25114983758445736
                    ],
                    [
                        "rabbit",
                        0.3517600501840074
                    ],
                    [
                        "tag",
                        0.44315947172432996
                    ],
                    [
                        "different",
                        0.44332342823167276
                    ],
                    [
                        "value",
                        0.4486739497661558
                    ],
                    [
                        "right",
                        0.51381261626328
                    ],
                    [
                        "init",
                        0.5253896264917909
                    ],
                    [
                        "seen--",
                        0.8398250600177303
                    ],
                    [
                        "sorry",
                        0.8398250600177303
                    ],
                    [
                        "self.age",
                        0.897691270634907
                    ],
                    [
                        "thing",
                        0.9055724778753115
                    ],
                    [
                        "self.name",
                        0.9055724778753115
                    ],
                    [
                        "particular",
                        0.9215771656620061
                    ],
                    [
                        "specif--",
                        0.9217062799681903
                    ],
                    [
                        "common",
                        0.9217062799681903
                    ],
                    [
                        "object",
                        0.9320993163249439
                    ],
                    [
                        "=",
                        0.9330000550438527
                    ],
                    [
                        "track",
                        0.9405692210139349
                    ],
                    [
                        "definition",
                        0.9458063116861666
                    ],
                    [
                        "class variable",
                        1.3142553603106604
                    ],
                    [
                        "different instance",
                        1.7932149100384558
                    ],
                    [
                        "instance variable",
                        1.8232817074144065
                    ],
                    [
                        "rabbit object",
                        1.904870751514854
                    ],
                    [
                        "seen-- sorry",
                        2.393351904012577
                    ],
                    [
                        "particular variable",
                        4.575243409628716
                    ],
                    [
                        "class definition",
                        5.08472796266534
                    ]
                ],
                "topTopicSimilarity": 0.39285714285714285,
                "sharedTopicScores": [
                    [
                        "class",
                        0.22614818080750487
                    ],
                    [
                        "variable",
                        0.24063862194779506
                    ],
                    [
                        "instance",
                        0.25114983758445736
                    ],
                    [
                        "rabbit",
                        0.3517600501840074
                    ],
                    [
                        "different",
                        0.44332342823167276
                    ],
                    [
                        "value",
                        0.4486739497661558
                    ],
                    [
                        "right",
                        0.51381261626328
                    ],
                    [
                        "init",
                        0.5253896264917909
                    ],
                    [
                        "thing",
                        0.9055724778753115
                    ],
                    [
                        "object",
                        0.9320993163249439
                    ],
                    [
                        "rabbit object",
                        1.904870751514854
                    ]
                ]
            }
        },
        "FlGjISF3l78-2250": {
            "id": "FlGjISF3l78-2250",
            "heat": 0.808,
            "start": 2250.0,
            "text": " So I'm going to give it self as usual, an age, and then two parents. Don't worry about the two parents for now. Inside the __init__-- sorry, inside the __init__-- I'm going to call the __init__ of the animal just to do less work. Python already knows how to initialize an animal for me, so let's do that. So that's going to set the two data attributes, name and age. I'm going to set the data attributes for parent1, parent2 for a rabbit to be whatever's passed in. And then, this is where I'm going to use this class variable. So I'm creating this data attribute instance variable particular to a specific instance called rid, OK? And I'm assigning this instance variable to the class variable. And I access class variables using not self, but the class name-- so in this case, rabbit.tag. So initially, tag is going to be 1. And then, the __init__ is going to increment the tag by 1 here, OK? So that means that, from now on, if I create any other instances, the other instances are going to be accessing the updated value of tag instead of being 1. So let's do a quick drawing to show you what I mean. So let's say I have Rabbit.tag here, OK?",
            "metrics": {
                "relativeDCReadability": 1.0006501075341652,
                "lexicalDiversity": 0.508695652173913,
                "posComposition": {
                    "RB": 0.07,
                    "PRP": 0.061,
                    "VBP": 0.048,
                    "VBG": 0.061,
                    "TO": 0.061,
                    "VB": 0.074,
                    "IN": 0.091,
                    "JJ": 0.048,
                    "DT": 0.109,
                    "NN": 0.143,
                    "CC": 0.03,
                    "CD": 0.026,
                    "NNS": 0.035,
                    "NNP": 0.039,
                    ":": 0.013,
                    "JJR": 0.004,
                    "VBZ": 0.03,
                    "WRB": 0.009,
                    "POS": 0.017,
                    "WDT": 0.009,
                    "VBN": 0.017,
                    "WP": 0.004
                },
                "syllableRate": 2.767,
                "topicScores": [
                    [
                        "ok",
                        0.27169397806211476
                    ],
                    [
                        "variable",
                        0.33996491780642685
                    ],
                    [
                        "instance",
                        0.35669457079654965
                    ],
                    [
                        "class",
                        0.3865166635252399
                    ],
                    [
                        "datum",
                        0.44092222142959775
                    ],
                    [
                        "attribute",
                        0.44655039491674403
                    ],
                    [
                        "tag",
                        0.45990280638948844
                    ],
                    [
                        "init__--",
                        0.5012302367064062
                    ],
                    [
                        "parent",
                        0.50798311902048
                    ],
                    [
                        "age",
                        0.5453495317277482
                    ],
                    [
                        "rabbit.tag",
                        0.5701220956176896
                    ],
                    [
                        "self",
                        0.5707762233633418
                    ],
                    [
                        "animal",
                        0.5716006154808476
                    ],
                    [
                        "access",
                        0.5838892404029415
                    ],
                    [
                        "usual",
                        0.8271754921532896
                    ],
                    [
                        "sorry",
                        0.8885988150193848
                    ],
                    [
                        "work",
                        0.8986363771615172
                    ],
                    [
                        "Python",
                        0.9041731691690948
                    ],
                    [
                        "rid",
                        0.9299138629668054
                    ],
                    [
                        "case",
                        0.9328571833097214
                    ],
                    [
                        "particular",
                        0.9354912230278102
                    ],
                    [
                        "specific",
                        0.9354912230278102
                    ],
                    [
                        "name--",
                        0.938215880017009
                    ],
                    [
                        "value",
                        0.9411477921480628
                    ],
                    [
                        "quick",
                        0.9419232130740945
                    ],
                    [
                        "drawing",
                        0.9419232130740945
                    ],
                    [
                        "datum attribute",
                        1.8537826501993646
                    ],
                    [
                        "class variable",
                        1.8661716041118026
                    ],
                    [
                        "instance variable",
                        2.694784096701311
                    ],
                    [
                        "variable particular",
                        4.62133999050917
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.27169397806211476
                    ],
                    [
                        "variable",
                        0.33996491780642685
                    ],
                    [
                        "instance",
                        0.35669457079654965
                    ],
                    [
                        "class",
                        0.3865166635252399
                    ],
                    [
                        "datum",
                        0.44092222142959775
                    ],
                    [
                        "attribute",
                        0.44655039491674403
                    ],
                    [
                        "parent",
                        0.50798311902048
                    ],
                    [
                        "age",
                        0.5453495317277482
                    ],
                    [
                        "access",
                        0.5838892404029415
                    ],
                    [
                        "Python",
                        0.9041731691690948
                    ],
                    [
                        "value",
                        0.9411477921480628
                    ]
                ]
            }
        },
        "FlGjISF3l78-2340": {
            "id": "FlGjISF3l78-2340",
            "heat": 0.425,
            "start": 2340.0,
            "text": " So initially, tag is going to be 1, OK? And then I'm going to create a new Rabbit object. So this is as I'm calling the code, OK? So let's say this is a rabbit object-- oh boy, OK-- r1. You know, I actually googled how to draw a rabbit, but that didn't help at all. OK, so r1 is going to be a new rabbit that we create. Initially, what happens is, when I first create this new rabbit, it's going to access the class variable, which, it's current value is 1. So when I create the rabbit ID-- the rabbit ID, r1.rid-- this is going to get the value 1. And according to the code, after I set the rabbit ID to whatever tag is, I'm going to increment the tag. So this is going to say, OK, now that I've said it, I'm going to go back up here and increment the tag to be 2. OK. So let's say I create another Rabbit object, OK? All right, there-- that's a sad rabbit, r2. The ID of r2 is going to be what? Well, according to the way we create a new Rabbit object is it's going to access whatever the value of tag",
            "metrics": {
                "relativeDCReadability": 1.0537364104424216,
                "lexicalDiversity": 0.5357142857142857,
                "posComposition": {
                    "RB": 0.062,
                    "NN": 0.138,
                    "VBZ": 0.076,
                    "VBG": 0.058,
                    "TO": 0.067,
                    "VB": 0.071,
                    "CD": 0.018,
                    "NNP": 0.08,
                    "CC": 0.018,
                    "PRP": 0.076,
                    "VBP": 0.049,
                    "DT": 0.121,
                    "JJ": 0.036,
                    "IN": 0.045,
                    "POS": 0.009,
                    ":": 0.022,
                    "UH": 0.009,
                    "VBD": 0.018,
                    "WRB": 0.013,
                    "WP": 0.009,
                    "WDT": 0.004
                },
                "syllableRate": 2.483,
                "topicScores": [
                    [
                        "ok",
                        0.18428591068357544
                    ],
                    [
                        "rabbit",
                        0.20407377644350067
                    ],
                    [
                        "ID",
                        0.2968777387721439
                    ],
                    [
                        "tag",
                        0.3263887782514019
                    ],
                    [
                        "new",
                        0.35024437271954234
                    ],
                    [
                        "object",
                        0.42952325815747977
                    ],
                    [
                        "value",
                        0.4412697499935465
                    ],
                    [
                        "rabbit ID",
                        0.4845550139863304
                    ],
                    [
                        "r1",
                        0.548763378421425
                    ],
                    [
                        "code",
                        0.5528080890507141
                    ],
                    [
                        "r2",
                        0.5681603132300861
                    ],
                    [
                        "new rabbit",
                        0.6326316578628862
                    ],
                    [
                        "rabbit object",
                        0.8458070382911049
                    ],
                    [
                        "boy",
                        0.9049480287079094
                    ],
                    [
                        "class",
                        0.922530139027269
                    ],
                    [
                        "variable",
                        0.922530139027269
                    ],
                    [
                        "current",
                        0.9273995735261427
                    ],
                    [
                        "there--",
                        0.9322065868803638
                    ],
                    [
                        "sad",
                        0.9322065868803638
                    ],
                    [
                        "way",
                        0.9382452951495116
                    ],
                    [
                        "OK-- r1",
                        1.0774048726597965
                    ],
                    [
                        "sad rabbit",
                        2.144648049883505
                    ],
                    [
                        "new rabbit object",
                        3.219809555128931
                    ],
                    [
                        "current value",
                        4.508632895323756
                    ],
                    [
                        "class variable",
                        5.714196797642881
                    ]
                ],
                "topTopicSimilarity": 0.4,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.18428591068357544
                    ],
                    [
                        "rabbit",
                        0.20407377644350067
                    ],
                    [
                        "ID",
                        0.2968777387721439
                    ],
                    [
                        "new",
                        0.35024437271954234
                    ],
                    [
                        "object",
                        0.42952325815747977
                    ],
                    [
                        "value",
                        0.4412697499935465
                    ],
                    [
                        "code",
                        0.5528080890507141
                    ],
                    [
                        "rabbit object",
                        0.8458070382911049
                    ],
                    [
                        "class",
                        0.922530139027269
                    ],
                    [
                        "variable",
                        0.922530139027269
                    ]
                ]
            }
        },
        "FlGjISF3l78-2430": {
            "id": "FlGjISF3l78-2430",
            "heat": 0.61,
            "start": 2430.0,
            "text": " is, which is a class variable. It was changed by the previous creation of my rabbit, so now I'm going to access that, right? So the value is going to be 2. And according to the code, the next thing I do after I create the instance rid is I'm going to increment tag. So I'm incrementing the class variable to be 3, OK? So notice that all of my instances are accessing this shared resource, this shared variable called tag. So as I'm creating more and more rabbits, they're all going to be incrementing the value of tag, because it's shared among all of the instances. And so this value, this tag class variable, keeps track of how many different instances of a rab-- of how many different instances of rabbits I've created throughout my entire program, OK? So the big idea here is that class variables are shared across all the instances. So they can all modify them. But these rids, right, these instance variables, are only for that particular instance. So r2 can't have access to r1's ID value, nor could change it. But it won't change it across all of the different instances, OK?",
            "metrics": {
                "relativeDCReadability": 1.0350439588869886,
                "lexicalDiversity": 0.49282296650717705,
                "posComposition": {
                    "VBZ": 0.033,
                    "WDT": 0.01,
                    "DT": 0.12,
                    "NN": 0.139,
                    "PRP": 0.072,
                    "VBD": 0.005,
                    "VBN": 0.033,
                    "IN": 0.11,
                    "JJ": 0.057,
                    "PRP$": 0.014,
                    "RB": 0.057,
                    "VBP": 0.057,
                    "VBG": 0.043,
                    "TO": 0.033,
                    "VB": 0.043,
                    "CD": 0.01,
                    "CC": 0.029,
                    "NNP": 0.029,
                    "NNS": 0.053,
                    "JJR": 0.01,
                    "WRB": 0.01,
                    ":": 0.005,
                    "PDT": 0.005,
                    "MD": 0.019,
                    "POS": 0.005
                },
                "syllableRate": 2.55,
                "topicScores": [
                    [
                        "instance",
                        0.2587369335996773
                    ],
                    [
                        "ok",
                        0.26987496636156
                    ],
                    [
                        "variable",
                        0.3058143411410572
                    ],
                    [
                        "class",
                        0.3651434569907864
                    ],
                    [
                        "tag",
                        0.3738383212106772
                    ],
                    [
                        "value",
                        0.3786490486952187
                    ],
                    [
                        "different",
                        0.4300288423403425
                    ],
                    [
                        "rabbit",
                        0.4372267515518784
                    ],
                    [
                        "access",
                        0.44696996916132264
                    ],
                    [
                        "right",
                        0.5457680551097873
                    ],
                    [
                        "rid",
                        0.5674676148116639
                    ],
                    [
                        "previous",
                        0.8941461704879796
                    ],
                    [
                        "creation",
                        0.8941461704879796
                    ],
                    [
                        "code",
                        0.9048166672477935
                    ],
                    [
                        "thing",
                        0.9118991100116126
                    ],
                    [
                        "resource",
                        0.9139757410732923
                    ],
                    [
                        "track",
                        0.919546053590649
                    ],
                    [
                        "entire",
                        0.919546053590649
                    ],
                    [
                        "program",
                        0.919546053590649
                    ],
                    [
                        "particular",
                        0.9248797182259492
                    ],
                    [
                        "rab--",
                        0.9256225979864883
                    ],
                    [
                        "r2",
                        0.9261973272211332
                    ],
                    [
                        "big",
                        0.9275485940356686
                    ],
                    [
                        "idea",
                        0.9275485940356686
                    ],
                    [
                        "r1",
                        0.9318087663554441
                    ],
                    [
                        "class variable",
                        1.1520697007318954
                    ],
                    [
                        "different instance",
                        1.4173565691173675
                    ],
                    [
                        "id value",
                        1.468863935992276
                    ],
                    [
                        "tag class",
                        2.787078011446094
                    ],
                    [
                        "instance variable",
                        2.815493830789943
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "instance",
                        0.2587369335996773
                    ],
                    [
                        "ok",
                        0.26987496636156
                    ],
                    [
                        "variable",
                        0.3058143411410572
                    ],
                    [
                        "class",
                        0.3651434569907864
                    ],
                    [
                        "value",
                        0.3786490486952187
                    ],
                    [
                        "different",
                        0.4300288423403425
                    ],
                    [
                        "rabbit",
                        0.4372267515518784
                    ],
                    [
                        "access",
                        0.44696996916132264
                    ],
                    [
                        "right",
                        0.5457680551097873
                    ],
                    [
                        "code",
                        0.9048166672477935
                    ],
                    [
                        "thing",
                        0.9118991100116126
                    ]
                ]
            }
        },
        "FlGjISF3l78-2520": {
            "id": "FlGjISF3l78-2520",
            "heat": 0.436,
            "start": 2520.0,
            "text": " So that's how the __init__ method works of Rabbit, OK? So we have these tags that keep track of how many rabbits we've created. We have a couple of getter-- we have some getters here to get all the parents. So now let's add a somewhat more interesting function. Oh, I just want to mention, when I'm getting the rid, I'm actually using this cool zfill() function here, or method, which actually pads the beginning of any number with however many zeros in order to get to that number here. So the number 1 becomes 001 and so on. So it ensures that I have this nice-looking ID type thing that's always three digits long. So let's try to work with this Rabbit object. Let's define what happens when you add two rabbits together, OK-- in this class, not in the real world. OK. So if I want to use the plus operator between two rabbit instances, I have to implement this __add__ method, OK? So all I'm doing here is I'm returning a new Rabbit object, OK? Whoops, sorry about that. And let's recall the __init__ method of the rabbit, OK? So when I'm returning a new Rabbit object, I'm returning a new Rabbit object that's going to have an age of 0. Self-- so the Rabbit object I'm calling this method on is going to be the parent of the new rabbit.",
            "metrics": {
                "relativeDCReadability": 0.9922364214333204,
                "lexicalDiversity": 0.5317460317460317,
                "posComposition": {
                    "IN": 0.099,
                    "DT": 0.123,
                    "VBZ": 0.036,
                    "WRB": 0.02,
                    "NNP": 0.079,
                    "NN": 0.115,
                    "NNS": 0.036,
                    "PRP": 0.075,
                    "VBP": 0.083,
                    "WDT": 0.012,
                    "JJ": 0.052,
                    "VBN": 0.004,
                    ":": 0.012,
                    "RB": 0.071,
                    "TO": 0.036,
                    "VB": 0.056,
                    "PDT": 0.004,
                    "RBR": 0.004,
                    "VBG": 0.036,
                    "CC": 0.012,
                    "CD": 0.024,
                    "POS": 0.008,
                    "WP": 0.004
                },
                "syllableRate": 2.892,
                "topicScores": [
                    [
                        "ok",
                        0.18918475559821935
                    ],
                    [
                        "rabbit",
                        0.20200455403583673
                    ],
                    [
                        "object",
                        0.3316364202665736
                    ],
                    [
                        "method",
                        0.343250814198763
                    ],
                    [
                        "new",
                        0.3650841992452766
                    ],
                    [
                        "number",
                        0.45545769921384643
                    ],
                    [
                        "init",
                        0.4817739594566277
                    ],
                    [
                        "function",
                        0.5424235214680895
                    ],
                    [
                        "work",
                        0.5657895875280042
                    ],
                    [
                        "parent",
                        0.5681008232497782
                    ],
                    [
                        "rabbit object",
                        0.6333691643657359
                    ],
                    [
                        "ID",
                        0.6542314672202492
                    ],
                    [
                        "new rabbit",
                        0.6847357939243791
                    ],
                    [
                        "tag",
                        0.8858096431516241
                    ],
                    [
                        "track",
                        0.8858096431516241
                    ],
                    [
                        "zfill",
                        0.8930082538206232
                    ],
                    [
                        "couple",
                        0.9041009850847178
                    ],
                    [
                        "getter--",
                        0.9041009850847178
                    ],
                    [
                        "interesting",
                        0.9055920811297218
                    ],
                    [
                        "Whoops",
                        0.9070688746320198
                    ],
                    [
                        "world",
                        0.909381955349758
                    ],
                    [
                        "rid",
                        0.9124797262501648
                    ],
                    [
                        "cool",
                        0.9124797262501648
                    ],
                    [
                        "beginning",
                        0.9203331375437046
                    ],
                    [
                        "zero",
                        0.9203331375437046
                    ],
                    [
                        "order",
                        0.9203331375437046
                    ],
                    [
                        "digit",
                        0.9209658266706426
                    ],
                    [
                        "class",
                        0.9261200990028627
                    ],
                    [
                        "real",
                        0.9261200990028627
                    ],
                    [
                        "type",
                        0.9281177460043996
                    ]
                ],
                "topTopicSimilarity": 0.36666666666666664,
                "sharedTopicScores": [
                    [
                        "ok",
                        0.18918475559821935
                    ],
                    [
                        "rabbit",
                        0.20200455403583673
                    ],
                    [
                        "object",
                        0.3316364202665736
                    ],
                    [
                        "method",
                        0.343250814198763
                    ],
                    [
                        "new",
                        0.3650841992452766
                    ],
                    [
                        "init",
                        0.4817739594566277
                    ],
                    [
                        "parent",
                        0.5681008232497782
                    ],
                    [
                        "rabbit object",
                        0.6333691643657359
                    ],
                    [
                        "ID",
                        0.6542314672202492
                    ],
                    [
                        "class",
                        0.9261200990028627
                    ],
                    [
                        "type",
                        0.9281177460043996
                    ]
                ]
            }
        },
        "FlGjISF3l78-2610": {
            "id": "FlGjISF3l78-2610",
            "heat": 0.466,
            "start": 2610.0,
            "text": " And other is going to be the other parent of the new rabbit, OK? So if we look at the code, and I run it, this part here, I'm creating three rabbits, r1, r2, and r3. Notice this class variable is working as expected, because the IDs of each of my rabbits increments as I create more rabbits. So we have 001, 002, 003. If I print r1, and r2, and r3-- that was these three lines over here-- the parents of r1 and r2 are None, because that's just the default-- yes, the default arguments for creating a rabbit. To add two rabbits together, I use the plus operator between two Rabbit objects. And on the right here, I'm testing rabbit addition. And I can print out the IDs of all my rabbits. And notice that, when I've created this new rabbit, r4, the ID of it still kept incrementing. So now, the ID of the fourth rabbit is 004. And then, when I get r4's parents, they are as we want them to be, so r1 and r2.",
            "metrics": {
                "relativeDCReadability": 1.031843069034039,
                "lexicalDiversity": 0.46808510638297873,
                "posComposition": {
                    "CC": 0.064,
                    "JJ": 0.032,
                    "VBZ": 0.027,
                    "VBG": 0.032,
                    "TO": 0.016,
                    "VB": 0.027,
                    "DT": 0.112,
                    "NN": 0.133,
                    "IN": 0.106,
                    "NNP": 0.037,
                    "RB": 0.064,
                    "PRP": 0.085,
                    "VBP": 0.074,
                    "CD": 0.043,
                    "NNS": 0.064,
                    "VBN": 0.011,
                    "PRP$": 0.011,
                    "RBR": 0.005,
                    ":": 0.016,
                    "WDT": 0.005,
                    "VBD": 0.011,
                    "MD": 0.005,
                    "RP": 0.005,
                    "WRB": 0.011,
                    "POS": 0.005
                },
                "syllableRate": 2.025,
                "topicScores": [
                    [
                        "rabbit",
                        0.220928781114051
                    ],
                    [
                        "r2",
                        0.3288253501001431
                    ],
                    [
                        "r1",
                        0.34584258071743257
                    ],
                    [
                        "ID",
                        0.36753232145478976
                    ],
                    [
                        "parent",
                        0.4179641745372511
                    ],
                    [
                        "r3",
                        0.47033366641432767
                    ],
                    [
                        "new",
                        0.5285925413638144
                    ],
                    [
                        "r4",
                        0.5543570042223722
                    ],
                    [
                        "code",
                        0.8498314309787013
                    ],
                    [
                        "class",
                        0.8806365885481483
                    ],
                    [
                        "variable",
                        0.8806365885481483
                    ],
                    [
                        "object",
                        0.8855047374922052
                    ],
                    [
                        "addition",
                        0.8903730773925232
                    ],
                    [
                        "default--",
                        0.8939298200820238
                    ],
                    [
                        "line",
                        0.9004028711987452
                    ],
                    [
                        "here--",
                        0.9004028711987452
                    ],
                    [
                        "argument",
                        0.9004028711987452
                    ],
                    [
                        "right",
                        0.904025368286799
                    ],
                    [
                        "plus",
                        0.9058532809126825
                    ],
                    [
                        "operator",
                        0.9058532809126825
                    ],
                    [
                        "fourth",
                        0.9179106184574011
                    ],
                    [
                        "new rabbit",
                        1.2443538214294099
                    ],
                    [
                        "rabbit object",
                        2.348274427824897
                    ],
                    [
                        "rabbit addition",
                        2.392067288035222
                    ],
                    [
                        "fourth rabbit",
                        2.6630687272707934
                    ],
                    [
                        "class variable",
                        3.4547557406407345
                    ],
                    [
                        "default argument",
                        4.125497200607139
                    ],
                    [
                        "plus operator",
                        4.573209207845809
                    ]
                ],
                "topTopicSimilarity": 0.35714285714285715,
                "sharedTopicScores": [
                    [
                        "rabbit",
                        0.220928781114051
                    ],
                    [
                        "ID",
                        0.36753232145478976
                    ],
                    [
                        "parent",
                        0.4179641745372511
                    ],
                    [
                        "new",
                        0.5285925413638144
                    ],
                    [
                        "code",
                        0.8498314309787013
                    ],
                    [
                        "class",
                        0.8806365885481483
                    ],
                    [
                        "variable",
                        0.8806365885481483
                    ],
                    [
                        "object",
                        0.8855047374922052
                    ],
                    [
                        "right",
                        0.904025368286799
                    ],
                    [
                        "rabbit object",
                        2.348274427824897
                    ]
                ]
            }
        },
        "FlGjISF3l78-2700": {
            "id": "FlGjISF3l78-2700",
            "heat": 0.535,
            "start": 2700.0,
            "text": " The other thing I want to do is to compare two rabbits. So if I want to compare two rabbits, I want to make sure that their parents are the same. So I can compare the first parent of the first rabbit with the first parent of the second rabbit and the second parent of the first rabbit to the second parent of second rabbit or getting the combinations of those two. So that's what these two Booleans are doing. So these are going to tell me-- these are going to be Boolean values, either True or False. And I'm going to return either they have the same parents of that type or the same parents criss-crossed, OK? So here, notice that I'm actually comparing the IDs of the rabbits as opposed to the Rabbit objects directly, OK? So if, instead of comparing the IDs in here, I was comparing the parents themselves, directly, what would end up happening is this function, this method, eq(), would get called over and over again. Because here, we have parents that are rabbits. And at some point, the parents of the very, very first rabbits ever created by this program are None. And so when I try to call-- when I try to call the parent one of None, that's going to give me an error, OK, something like an attribute error where None doesn't have this parent attribute, OK? So that's why I'm comparing IDs here, OK? And the code in the lecture here shows",
            "metrics": {
                "relativeDCReadability": 0.8898786048052685,
                "lexicalDiversity": 0.4580152671755725,
                "posComposition": {
                    "DT": 0.134,
                    "JJ": 0.065,
                    "NN": 0.099,
                    "PRP": 0.057,
                    "VBP": 0.069,
                    "TO": 0.046,
                    "VB": 0.053,
                    "VBZ": 0.031,
                    "CD": 0.019,
                    "NNS": 0.053,
                    "IN": 0.092,
                    "PRP$": 0.004,
                    "NNP": 0.057,
                    "MD": 0.011,
                    "CC": 0.038,
                    "VBG": 0.042,
                    "WP": 0.008,
                    ":": 0.008,
                    "RB": 0.065,
                    "VBN": 0.011,
                    "VBD": 0.004,
                    "RP": 0.008,
                    "WDT": 0.011,
                    "WRB": 0.015
                },
                "syllableRate": 2.967,
                "topicScores": [
                    [
                        "parent",
                        0.21153402158892629
                    ],
                    [
                        "rabbit",
                        0.22570075019111374
                    ],
                    [
                        "second",
                        0.35304363797605554
                    ],
                    [
                        "id",
                        0.4220115478716678
                    ],
                    [
                        "error",
                        0.5696361516850507
                    ],
                    [
                        "attribute",
                        0.5745954405347597
                    ],
                    [
                        "false",
                        0.5816705899726644
                    ],
                    [
                        "Booleans",
                        0.5936141965961385
                    ],
                    [
                        "true",
                        0.603458259151702
                    ],
                    [
                        "thing",
                        0.813548719762477
                    ],
                    [
                        "sure",
                        0.8678445163844589
                    ],
                    [
                        "combination",
                        0.8886518305212078
                    ],
                    [
                        "eq",
                        0.8931206376386683
                    ],
                    [
                        "value",
                        0.9009250032561558
                    ],
                    [
                        "me--",
                        0.9072306320256226
                    ],
                    [
                        "method",
                        0.9074682151833385
                    ],
                    [
                        "object",
                        0.9104214808200977
                    ],
                    [
                        "type",
                        0.9123437707837316
                    ],
                    [
                        "function",
                        0.9136143515743128
                    ],
                    [
                        "point",
                        0.918349290319516
                    ],
                    [
                        "program",
                        0.9236399435444914
                    ],
                    [
                        "call--",
                        0.9253520260392784
                    ],
                    [
                        "code",
                        0.928112133562143
                    ],
                    [
                        "lecture",
                        0.928112133562143
                    ],
                    [
                        "second rabbit",
                        1.1219035725138504
                    ],
                    [
                        "second parent",
                        1.129813421925991
                    ],
                    [
                        "boolean value",
                        1.1913996220875658
                    ],
                    [
                        "rabbit object",
                        2.4584572524234423
                    ],
                    [
                        "parent attribute",
                        2.482830382704334
                    ],
                    [
                        "attribute error",
                        4.625508752173675
                    ]
                ],
                "topTopicSimilarity": 0.3333333333333333,
                "sharedTopicScores": [
                    [
                        "parent",
                        0.21153402158892629
                    ],
                    [
                        "rabbit",
                        0.22570075019111374
                    ],
                    [
                        "attribute",
                        0.5745954405347597
                    ],
                    [
                        "thing",
                        0.813548719762477
                    ],
                    [
                        "value",
                        0.9009250032561558
                    ],
                    [
                        "method",
                        0.9074682151833385
                    ],
                    [
                        "object",
                        0.9104214808200977
                    ],
                    [
                        "type",
                        0.9123437707837316
                    ],
                    [
                        "code",
                        0.928112133562143
                    ],
                    [
                        "rabbit object",
                        2.4584572524234423
                    ]
                ]
            }
        },
        "FlGjISF3l78-2790": {
            "id": "FlGjISF3l78-2790",
            "heat": 0.83,
            "start": 2790.0,
            "text": " you some tests about whether rabbits have the same parents. And I've created new rabbits here, r3 and r4, the addition of those two. And r5 and r6 are going to have the same parents down here-- True-- but r4 and r6 don't, OK? So just to wrap it up, object-oriented programming is the idea of creating your own collections of data where you can organize the information in a very consistent manner. So every single type of object that you create of this particular type that you create-- sorry, every object instance of a particular type is going to have the exact same data attributes and the exact same methods, OK? So this really comes back to the idea of decomposition and abstraction in programming. All right, thanks, everyone.",
            "metrics": {
                "relativeDCReadability": 1.1220372703393033,
                "lexicalDiversity": 0.4888888888888889,
                "posComposition": {
                    "PRP": 0.044,
                    "DT": 0.119,
                    "NNS": 0.089,
                    "IN": 0.096,
                    "VBP": 0.067,
                    "JJ": 0.126,
                    "CC": 0.059,
                    "VBN": 0.007,
                    "RB": 0.074,
                    "NN": 0.119,
                    "CD": 0.007,
                    "VBG": 0.03,
                    "TO": 0.03,
                    "VB": 0.037,
                    "RP": 0.015,
                    ":": 0.022,
                    "NNP": 0.007,
                    "VBZ": 0.022,
                    "PRP$": 0.007,
                    "WRB": 0.007,
                    "MD": 0.007,
                    "PDT": 0.007
                },
                "syllableRate": 1.725,
                "topicScores": [
                    [
                        "object",
                        0.45087278847505
                    ],
                    [
                        "type",
                        0.46149459007606675
                    ],
                    [
                        "parent",
                        0.49478147308406983
                    ],
                    [
                        "rabbit",
                        0.525401531911043
                    ],
                    [
                        "r4",
                        0.5469930504737162
                    ],
                    [
                        "programming",
                        0.5515816032610253
                    ],
                    [
                        "idea",
                        0.5515816032610253
                    ],
                    [
                        "r6",
                        0.559896741924658
                    ],
                    [
                        "particular",
                        0.5620193744071785
                    ],
                    [
                        "exact",
                        0.5620193744071785
                    ],
                    [
                        "datum",
                        0.5694321546142314
                    ],
                    [
                        "True--",
                        0.6249435313279088
                    ],
                    [
                        "test",
                        0.8079486082348762
                    ],
                    [
                        "manner",
                        0.8426559979840501
                    ],
                    [
                        "r3",
                        0.8451840078790496
                    ],
                    [
                        "addition",
                        0.8451840078790496
                    ],
                    [
                        "new",
                        0.8636017776865439
                    ],
                    [
                        "r5",
                        0.8690206520536636
                    ],
                    [
                        "consistent",
                        0.8820754383286473
                    ],
                    [
                        "here--",
                        0.8849885657402804
                    ],
                    [
                        "thank",
                        0.8856163452237621
                    ],
                    [
                        "sorry",
                        0.8904712616895721
                    ],
                    [
                        "method",
                        0.8904712616895721
                    ],
                    [
                        "collection",
                        0.8966411132102777
                    ],
                    [
                        "information",
                        0.8966411132102777
                    ],
                    [
                        "single",
                        0.9041126420896841
                    ],
                    [
                        "instance",
                        0.9041126420896841
                    ],
                    [
                        "attribute",
                        0.9041126420896841
                    ],
                    [
                        "decomposition",
                        0.9093804683630575
                    ],
                    [
                        "abstraction",
                        0.9093804683630575
                    ]
                ],
                "topTopicSimilarity": 0.3,
                "sharedTopicScores": [
                    [
                        "object",
                        0.45087278847505
                    ],
                    [
                        "type",
                        0.46149459007606675
                    ],
                    [
                        "parent",
                        0.49478147308406983
                    ],
                    [
                        "rabbit",
                        0.525401531911043
                    ],
                    [
                        "datum",
                        0.5694321546142314
                    ],
                    [
                        "new",
                        0.8636017776865439
                    ],
                    [
                        "method",
                        0.8904712616895721
                    ],
                    [
                        "instance",
                        0.9041126420896841
                    ],
                    [
                        "attribute",
                        0.9041126420896841
                    ]
                ]
            }
        }
    }
}