[{"text": "The following content is\nprovided under a Creative", "start": 0.79, "duration": 2.4}, {"text": "Commons license.", "start": 3.19, "duration": 1.54}, {"text": "Your support will help\nMIT OpenCourseWare", "start": 4.73, "duration": 2.3}, {"text": "continue to offer high-quality\neducational resources for free.", "start": 7.03, "duration": 4.36}, {"text": "To make a donation or\nview additional materials", "start": 11.39, "duration": 2.6}, {"text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare", "start": 13.99, "duration": 3.89}, {"text": "at ocw.mit.edu.", "start": 17.88, "duration": 0.96}, {"text": "ANA BELL: All right,\neveryone, let's get started.", "start": 31.789, "duration": 2.041}, {"text": "So today is going to\nbe the second lecture", "start": 37.67, "duration": 2.43}, {"text": "on object-oriented programming.", "start": 40.1, "duration": 1.5}, {"text": "So just a quick recap of\nlast time-- on Monday,", "start": 41.6, "duration": 3.33}, {"text": "we saw-- we were\nintroduced to this idea", "start": 44.93, "duration": 2.977}, {"text": "of object-oriented\nprogramming, and we", "start": 47.907, "duration": 1.583}, {"text": "saw these things called\nabstract data types.", "start": 49.49, "duration": 2.74}, {"text": "And these abstract data\ntypes we implemented", "start": 52.23, "duration": 2.12}, {"text": "through Python classes.", "start": 54.35, "duration": 2.82}, {"text": "And they allowed us to\ncreate our own data types", "start": 57.17, "duration": 4.23}, {"text": "that sort of abstracted a\ngeneral object of our choosing,", "start": 61.4, "duration": 4.601}, {"text": "right?", "start": 66.001, "duration": 0.499}, {"text": "So we've used lists\nbefore, for example.", "start": 66.5, "duration": 2.599}, {"text": "But with abstract\ndata types, we were", "start": 69.099, "duration": 1.541}, {"text": "able to create objects\nthat were of our own types.", "start": 70.64, "duration": 4.47}, {"text": "We saw the coordinate example.", "start": 75.11, "duration": 1.32}, {"text": "And then at the\nend of the class,", "start": 76.43, "duration": 1.374}, {"text": "we saw the fraction example.", "start": 77.804, "duration": 1.3}, {"text": "So today we're going to\ntalk a little bit more", "start": 79.104, "duration": 1.916}, {"text": "about object-oriented\nprogramming and classes.", "start": 81.02, "duration": 2.04}, {"text": "We're going to see\na few more examples.", "start": 83.06, "duration": 2.67}, {"text": "And we're going to talk about\na few other nuances of classes,", "start": 85.73, "duration": 6.27}, {"text": "talk about information\nhiding and class variables.", "start": 92.0, "duration": 3.217}, {"text": "And in the second\nhalf of the lecture,", "start": 95.217, "duration": 1.583}, {"text": "we're going to talk about\nthe idea of inheritance.", "start": 96.8, "duration": 2.68}, {"text": "So we're going to use\nobject-oriented programming", "start": 99.48, "duration": 3.23}, {"text": "to simulate how real life works.", "start": 102.71, "duration": 2.167}, {"text": "So in real life, you\nhave inheritance.", "start": 104.877, "duration": 1.583}, {"text": "And in object-oriented\nprogramming,", "start": 106.46, "duration": 2.55}, {"text": "you can also simulate that.", "start": 109.01, "duration": 3.47}, {"text": "OK, so the first\nfew slides are going", "start": 112.48, "duration": 1.739}, {"text": "to be a little bit of recap just\nto make sure that everyone's", "start": 114.219, "duration": 2.541}, {"text": "on the same page\nbefore I introduce", "start": 116.76, "duration": 2.16}, {"text": "a couple of new concepts\nrelated to classes.", "start": 118.92, "duration": 3.21}, {"text": "So recall that when--\nin the last lecture,", "start": 122.13, "duration": 2.88}, {"text": "we talked about\nwriting code from two", "start": 125.01, "duration": 2.23}, {"text": "different perspectives, right?", "start": 127.24, "duration": 1.25}, {"text": "The first was from someone who\nwanted to implement a class.", "start": 128.49, "duration": 3.96}, {"text": "So implementing the class meant\ndefining your own object type.", "start": 132.45, "duration": 5.36}, {"text": "So you defined the object type\nwhen you defined the class.", "start": 137.81, "duration": 3.4}, {"text": "And then you decided what\ndata attributes you wanted", "start": 141.21, "duration": 3.47}, {"text": "to define in your object.", "start": 144.68, "duration": 1.83}, {"text": "So what data makes\nup the object?", "start": 146.51, "duration": 2.67}, {"text": "What is the object, OK?", "start": 149.18, "duration": 3.56}, {"text": "In addition to data\nattributes, we also", "start": 152.74, "duration": 1.76}, {"text": "saw these things called methods.", "start": 154.5, "duration": 3.3}, {"text": "And methods were\nways to tell someone", "start": 157.8, "duration": 2.31}, {"text": "how to use your data type.", "start": 160.11, "duration": 1.717}, {"text": "So what are ways that someone\ncan interact with the data", "start": 161.827, "duration": 2.333}, {"text": "type, OK?", "start": 164.16, "duration": 1.329}, {"text": "So that's from the\npoint of view of someone", "start": 165.489, "duration": 1.791}, {"text": "who wants to write\ntheir own object type.", "start": 167.28, "duration": 2.37}, {"text": "So you're implementing a class.", "start": 169.65, "duration": 3.82}, {"text": "And the other perspective\nwas to write code", "start": 173.47, "duration": 3.066}, {"text": "from the point of\nview of someone", "start": 176.536, "duration": 1.374}, {"text": "who wanted to use a class\nthat was already written, OK?", "start": 177.91, "duration": 3.54}, {"text": "So this involved creating\ninstances of objects.", "start": 181.45, "duration": 3.24}, {"text": "So you're using the object type.", "start": 184.69, "duration": 3.29}, {"text": "Once you created\ninstances of objects,", "start": 187.98, "duration": 1.68}, {"text": "you were able to do\noperations on them.", "start": 189.66, "duration": 1.66}, {"text": "So you were able to see\nwhat methods whoever", "start": 191.32, "duration": 2.24}, {"text": "implemented the class added.", "start": 193.56, "duration": 1.86}, {"text": "And then, you can\nuse those methods", "start": 195.42, "duration": 1.74}, {"text": "in order to do operations\nwith your instances.", "start": 197.16, "duration": 7.29}, {"text": "So just looking at the\ncoordinate example we", "start": 204.45, "duration": 2.63}, {"text": "saw last time, a little\nbit more in detail", "start": 207.08, "duration": 1.98}, {"text": "about what that meant--\nso we had a class", "start": 209.06, "duration": 3.53}, {"text": "definition of an object\ntype, which included deciding", "start": 212.59, "duration": 4.21}, {"text": "what the class name was.", "start": 216.8, "duration": 2.15}, {"text": "And the class name\nbasically told", "start": 218.95, "duration": 2.04}, {"text": "Python what type of an\nobject this was, OK?", "start": 220.99, "duration": 2.79}, {"text": "In this case, we\ndecided we wanted", "start": 223.78, "duration": 1.83}, {"text": "to name a coordinate-- we wanted\nto create a Coordinate object.", "start": 225.61, "duration": 3.45}, {"text": "And the type of this\nobject was therefore", "start": 229.06, "duration": 2.4}, {"text": "going to be a coordinate.", "start": 231.46, "duration": 2.46}, {"text": "We defined the class in the\nsort of general way, OK?", "start": 233.92, "duration": 3.3}, {"text": "So we needed a way to\nbe able to access data", "start": 237.22, "duration": 2.67}, {"text": "attributes of any instance.", "start": 239.89, "duration": 3.06}, {"text": "So we use this\nself variable, OK?", "start": 242.95, "duration": 3.615}, {"text": "And the self variable\nwe used to refer", "start": 246.565, "duration": 3.345}, {"text": "to any instance-- to the data\nattributes of any instance", "start": 249.91, "duration": 5.27}, {"text": "in a general way\nwithout actually", "start": 255.18, "duration": 1.589}, {"text": "having a particular\ninstance in mind, OK?", "start": 256.769, "duration": 3.301}, {"text": "So whenever we access\ndata attributes,", "start": 260.07, "duration": 1.889}, {"text": "we would say something like self\ndot to access a data attribute.", "start": 261.959, "duration": 4.271}, {"text": "You'd access the attribute\ndirectly with self.x.", "start": 266.23, "duration": 2.93}, {"text": "Or if you wanted\nto access a method,", "start": 269.16, "duration": 1.53}, {"text": "you would say self, dot,\nand then the method name--", "start": 270.69, "duration": 2.459}, {"text": "for example, distance.", "start": 273.149, "duration": 0.916}, {"text": "And really, the bottom line\nof the class definition", "start": 277.35, "duration": 2.52}, {"text": "is that your class defines\nall of the data-- so data", "start": 279.87, "duration": 3.042}, {"text": "attributes-- and\nall of the methods", "start": 282.912, "duration": 1.458}, {"text": "that are going to be common\nacross all of the instances.", "start": 284.37, "duration": 2.82}, {"text": "So any instance that you create\nof a particular object type,", "start": 287.19, "duration": 5.22}, {"text": "that instance is going to have\nthis exact same structure, OK?", "start": 292.41, "duration": 6.08}, {"text": "The difference is that\nevery instance's values", "start": 298.49, "duration": 4.08}, {"text": "are going to be different.", "start": 302.57, "duration": 2.7}, {"text": "So when you're creating\ninstances of classes,", "start": 305.27, "duration": 2.93}, {"text": "you can create more than one\ninstance of the same class.", "start": 308.2, "duration": 3.57}, {"text": "So we can create a\nCoordinate object here", "start": 311.77, "duration": 2.7}, {"text": "using this syntax right here.", "start": 314.47, "duration": 3.18}, {"text": "So you say the type, and then,\nwhatever values it takes in.", "start": 317.65, "duration": 4.38}, {"text": "And you can create more\nthan one Coordinate object.", "start": 322.03, "duration": 2.35}, {"text": "Each Coordinate object is\ngoing to have different data", "start": 327.57, "duration": 2.58}, {"text": "attributes.", "start": 330.15, "duration": 2.28}, {"text": "Sorry, it's going to have\ndifferent data attribute", "start": 332.43, "duration": 2.18}, {"text": "values, OK?", "start": 334.61, "duration": 2.13}, {"text": "Every Coordinate object is\ngoing to have an x value and a y", "start": 336.74, "duration": 2.91}, {"text": "value.", "start": 339.65, "duration": 1.88}, {"text": "But the x and y values\namong different instances", "start": 341.53, "duration": 3.75}, {"text": "are going to vary, OK?", "start": 345.28, "duration": 2.4}, {"text": "So that's the difference\nbetween defining a class", "start": 347.68, "duration": 2.56}, {"text": "and looking at a particular\ninstance of a class.", "start": 350.24, "duration": 2.0}, {"text": "So instances have the\nstructure of the class.", "start": 352.24, "duration": 2.13}, {"text": "So for a coordinate,\nall instances", "start": 354.37, "duration": 2.58}, {"text": "have an x value and a y value.", "start": 356.95, "duration": 2.79}, {"text": "But the actual values\nare going to vary", "start": 359.74, "duration": 2.1}, {"text": "between the different instances.", "start": 361.84, "duration": 2.5}, {"text": "OK, so ultimately,\nwhy do we want", "start": 364.34, "duration": 2.24}, {"text": "to use object-oriented\nprogramming?", "start": 366.58, "duration": 1.59}, {"text": "So, so far, the\nexamples that we've seen", "start": 368.17, "duration": 4.27}, {"text": "were numerical, right--\na coordinate, a fraction.", "start": 372.44, "duration": 4.08}, {"text": "But using object-oriented\nprogramming,", "start": 376.52, "duration": 3.12}, {"text": "you can create objects\nthat mimic real life.", "start": 379.64, "duration": 5.09}, {"text": "So if I wanted to create\nobjects of-- an object that", "start": 384.73, "duration": 4.92}, {"text": "defined a cat and an object\nthat defined a rabbit,", "start": 389.65, "duration": 2.58}, {"text": "I could do that with\nobject-oriented programming.", "start": 392.23, "duration": 2.7}, {"text": "I would just have to decide,\nas a programmer, what", "start": 394.93, "duration": 3.21}, {"text": "data and what methods\nI'd want to assign", "start": 398.14, "duration": 2.21}, {"text": "to these groups of objects, OK?", "start": 400.35, "duration": 4.86}, {"text": "So using object-oriented\nprogramming, each one of these", "start": 405.21, "duration": 3.63}, {"text": "is considered a\ndifferent object.", "start": 408.84, "duration": 2.43}, {"text": "And as a different\nobject, I can decide", "start": 411.27, "duration": 2.1}, {"text": "that a cat is going to have\na name, an age, and maybe", "start": 413.37, "duration": 2.91}, {"text": "a color associated with it.", "start": 416.28, "duration": 1.67}, {"text": "And these three\nhere, on the right,", "start": 420.872, "duration": 1.458}, {"text": "each one of these rabbits\nis also an object.", "start": 422.33, "duration": 2.257}, {"text": "And I'm going to\ndecide that I'm going", "start": 424.587, "duration": 1.583}, {"text": "to represent a rabbit by\njust an age and a color, OK?", "start": 426.17, "duration": 5.54}, {"text": "And with object-oriented\nprogramming,", "start": 431.71, "duration": 4.28}, {"text": "using these\nattributes, I can group", "start": 435.99, "duration": 5.61}, {"text": "these three objects together and\nthese three objects together,", "start": 441.6, "duration": 3.19}, {"text": "OK?", "start": 444.79, "duration": 0.5}, {"text": "So I'm grouping\nsets of objects that", "start": 449.5, "duration": 3.57}, {"text": "are going to have the\nsame attributes together.", "start": 453.07, "duration": 4.12}, {"text": "And attributes-- this is also\na recap of last time-- come", "start": 457.19, "duration": 3.04}, {"text": "in two forms, right,\ndata attributes", "start": 460.23, "duration": 1.86}, {"text": "and procedural attributes.", "start": 462.09, "duration": 2.81}, {"text": "So the data attributes\nare basically", "start": 464.9, "duration": 4.38}, {"text": "things that define\nwhat the object is.", "start": 469.28, "duration": 3.48}, {"text": "So how do you represent\na cat as an object?", "start": 472.76, "duration": 3.547}, {"text": "And it's up to you,\nas the programmer,", "start": 476.307, "duration": 1.583}, {"text": "to decide how you\nwant to do that.", "start": 477.89, "duration": 1.86}, {"text": "For a coordinate, it was\npretty straightforward.", "start": 479.75, "duration": 4.2}, {"text": "You had an x and a y value.", "start": 483.95, "duration": 2.579}, {"text": "If we're representing something\nmore abstract like an animal,", "start": 486.529, "duration": 2.541}, {"text": "then maybe I would\nsay, well, I'm", "start": 489.07, "duration": 1.375}, {"text": "going to represent an animal\nby an age and a name, OK?", "start": 490.445, "duration": 2.399}, {"text": "So it's really up\nto you to decide", "start": 492.844, "duration": 1.416}, {"text": "how you want to represent--\nwhat data attributes you want", "start": 494.26, "duration": 6.72}, {"text": "to represent your object with.", "start": 500.98, "duration": 3.57}, {"text": "Procedural attributes were\nalso known as methods.", "start": 504.55, "duration": 4.14}, {"text": "And the methods are\nessentially asking,", "start": 508.69, "duration": 4.33}, {"text": "what can your object do, OK?", "start": 513.02, "duration": 2.19}, {"text": "So how can someone who wants\nto use your object-- how", "start": 515.21, "duration": 2.579}, {"text": "can someone interact with it?", "start": 517.789, "duration": 2.221}, {"text": "So for a coordinate,\nwe saw that you", "start": 520.01, "duration": 1.649}, {"text": "could find the distance\nbetween two coordinates.", "start": 521.659, "duration": 2.161}, {"text": "Maybe for our abstract\nAnimal object,", "start": 523.82, "duration": 3.36}, {"text": "you might have it\nmake a sound, OK,", "start": 527.18, "duration": 2.52}, {"text": "by maybe printing to the\nscreen or something like that.", "start": 529.7, "duration": 4.22}, {"text": "OK, this slide's also a recap\nof how to create a class just", "start": 533.92, "duration": 4.88}, {"text": "to make sure everyone's on\nthe same page before we go on.", "start": 538.8, "duration": 2.91}, {"text": "So we defined a class\nusing this class keyword.", "start": 541.71, "duration": 3.06}, {"text": "And we said, class,\nthe name of the class.", "start": 544.77, "duration": 1.82}, {"text": "So now we're going to create\na more abstract Animal class.", "start": 546.59, "duration": 3.087}, {"text": "We're going to see,\nin the second half", "start": 549.677, "duration": 1.583}, {"text": "of the lecture, what it\nmeans to put something", "start": 551.26, "duration": 2.13}, {"text": "else in the parentheses.", "start": 553.39, "duration": 1.0}, {"text": "But for now, we say that an\nanimal is an object in Python.", "start": 554.39, "duration": 9.23}, {"text": "So that means it's going to\nhave all of the properties", "start": 563.62, "duration": 3.03}, {"text": "that any other\nobject in Python has.", "start": 566.65, "duration": 3.09}, {"text": "And as we're\ncreating this animal,", "start": 569.74, "duration": 1.47}, {"text": "we're going to\ndefine how to create", "start": 571.21, "duration": 3.18}, {"text": "an instance of this class.", "start": 574.39, "duration": 1.92}, {"text": "So we say def.", "start": 576.31, "duration": 1.74}, {"text": "And this __init__ was the\nspecial method that told Python", "start": 578.05, "duration": 2.49}, {"text": "how to create an object.", "start": 580.54, "duration": 2.956}, {"text": "Inside the\nparentheses, remember,", "start": 583.496, "duration": 1.374}, {"text": "we have the self,\nwhich is a variable", "start": 584.87, "duration": 2.13}, {"text": "that we use to refer to any\ninstance of the class, OK?", "start": 587.0, "duration": 2.967}, {"text": "We don't have a particular\ninstance in mind,", "start": 589.967, "duration": 1.833}, {"text": "we just want to be able to\nrefer to any instance, OK?", "start": 591.8, "duration": 3.39}, {"text": "So we use this self variable.", "start": 595.19, "duration": 3.252}, {"text": "And then, the second\nparameter here", "start": 598.442, "duration": 1.458}, {"text": "is going to represent\nwhat other data we use", "start": 599.9, "duration": 3.75}, {"text": "to initialize our object with.", "start": 603.65, "duration": 1.42}, {"text": "So in this case,\nI'm going to say,", "start": 605.07, "duration": 1.416}, {"text": "I'm going to initialize an\nAnimal object with an age, OK?", "start": 606.486, "duration": 2.624}, {"text": "So when I create an animal,\nI need to give it an age.", "start": 609.11, "duration": 4.039}, {"text": "Inside the __init__ are any\ninitializations that I want", "start": 613.149, "duration": 2.291}, {"text": "to make.", "start": 615.44, "duration": 1.47}, {"text": "So the first thing is, I'm\ngoing to assign an instance", "start": 616.91, "duration": 2.67}, {"text": "variable, age-- so this is\ngoing to be the data attribute", "start": 619.58, "duration": 3.12}, {"text": "age-- to be whatever\nis passed in.", "start": 622.7, "duration": 2.29}, {"text": "And then, I'm also making\nanother assignment here,", "start": 624.99, "duration": 2.12}, {"text": "where I'm assigning\nthe data attribute", "start": 627.11, "duration": 2.07}, {"text": "name to be None originally.", "start": 629.18, "duration": 4.22}, {"text": "Later on in the code, when\nI want to create an Animal", "start": 633.4, "duration": 2.34}, {"text": "object, I say the class name.", "start": 635.74, "duration": 2.58}, {"text": "And then I pass it in\nwhatever parameters", "start": 638.32, "duration": 2.76}, {"text": "it takes-- in this\ncase, the age.", "start": 641.08, "duration": 2.07}, {"text": "And I'm assigning it to\nthis instance here, OK?", "start": 643.15, "duration": 7.61}, {"text": "All right, so now we\nhave this class, Animal.", "start": 650.76, "duration": 4.23}, {"text": "We've done the first\npart here, which is", "start": 654.99, "duration": 2.82}, {"text": "to initialize the class, right?", "start": 657.81, "duration": 3.45}, {"text": "So we've told Python how to\ncreate an object of this type.", "start": 661.26, "duration": 5.31}, {"text": "There's a few other methods\nhere that I've implemented.", "start": 666.57, "duration": 4.77}, {"text": "Next two we call\ngetters, and the two", "start": 671.34, "duration": 3.06}, {"text": "after that we call setters, OK?", "start": 674.4, "duration": 3.08}, {"text": "And getters and setters\nare very commonly", "start": 677.48, "duration": 2.44}, {"text": "used when implementing a class.", "start": 679.92, "duration": 8.14}, {"text": "So getters essentially\nreturn the values of any", "start": 688.06, "duration": 3.52}, {"text": "of the data attributes, OK?", "start": 691.58, "duration": 4.02}, {"text": "So if you look carefully,\nget_age() is just returning", "start": 695.6, "duration": 4.69}, {"text": "self.age, and get_name()\njust returns self.name.", "start": 700.29, "duration": 4.35}, {"text": "So they're very simple methods.", "start": 704.64, "duration": 3.24}, {"text": "Similarly, set_age()\nand set_name()--", "start": 707.88, "duration": 1.72}, {"text": "we're going to see what this\nfunny equal sign is doing here", "start": 709.6, "duration": 3.77}, {"text": "in the next couple of slides.", "start": 713.37, "duration": 1.65}, {"text": "But setters do a\nvery similar thing", "start": 715.02, "duration": 1.5}, {"text": "where they're going to\nset the data attributes", "start": 716.52, "duration": 1.916}, {"text": "to whatever is passed in, OK?", "start": 718.436, "duration": 2.491}, {"text": "So those are\ngetters and setters.", "start": 724.6, "duration": 2.07}, {"text": "And then, the last thing down\nhere is this __str__ method.", "start": 726.67, "duration": 2.75}, {"text": "And this __str__ method is used\nto tell Python how to print", "start": 729.42, "duration": 4.11}, {"text": "an object of this type Animal.", "start": 733.53, "duration": 2.421}, {"text": "So if you didn't have\nthis __str__ method,", "start": 735.951, "duration": 1.749}, {"text": "if you remember\nfrom last lecture,", "start": 737.7, "duration": 1.53}, {"text": "what ends up happening is you're\ngoing to get some message when", "start": 739.23, "duration": 4.65}, {"text": "you print your object that\nsays, this is an object of type", "start": 743.88, "duration": 3.54}, {"text": "Animal at this memory location,\nwhich is very uninformative,", "start": 747.42, "duration": 3.39}, {"text": "right?", "start": 750.81, "duration": 0.9}, {"text": "So you implement\nthis method here,", "start": 751.71, "duration": 1.59}, {"text": "which tells Python how to print\nan object of this type, OK?", "start": 753.3, "duration": 7.019}, {"text": "So the big point\nof this slide is", "start": 760.319, "duration": 3.088}, {"text": "that you should be using\ngetters and setters-- you", "start": 763.407, "duration": 2.083}, {"text": "should be implementing getters\nand setters for your classes.", "start": 765.49, "duration": 3.85}, {"text": "And we're going to see, in\nthe next couple of slides,", "start": 769.34, "duration": 3.1}, {"text": "why exactly.", "start": 772.44, "duration": 1.95}, {"text": "But basically, they're\ngoing to prevent bugs", "start": 774.39, "duration": 3.27}, {"text": "from coming into play\nlater on if someone decides", "start": 777.66, "duration": 3.75}, {"text": "to change implementation.", "start": 781.41, "duration": 2.74}, {"text": "So we saw how to-- so\nthe previous slide,", "start": 784.15, "duration": 2.029}, {"text": "this slide here, shows the\nimplementation of the Animal", "start": 786.179, "duration": 2.291}, {"text": "class.", "start": 788.47, "duration": 1.32}, {"text": "And here we can see\nhow we can create", "start": 789.79, "duration": 2.76}, {"text": "an instance of this object.", "start": 792.55, "duration": 2.28}, {"text": "So we can say a = Animal(3).", "start": 794.83, "duration": 1.91}, {"text": "So this is going to create a new\nAnimal object with an age of 3.", "start": 796.74, "duration": 4.06}, {"text": "And we can access the object\nthrough the variable a.", "start": 800.8, "duration": 4.59}, {"text": "Dot notation, recall,\nis a way for you", "start": 805.39, "duration": 1.86}, {"text": "to access data attributes\nand methods of a class, OK?", "start": 807.25, "duration": 3.87}, {"text": "So you can say a.age\nlater on in your program,", "start": 811.12, "duration": 3.54}, {"text": "and that is allowed.", "start": 814.66, "duration": 1.73}, {"text": "It'll try to access\nthe age data attribute", "start": 816.39, "duration": 2.14}, {"text": "of this particular\ninstance of the class, a.", "start": 818.53, "duration": 2.91}, {"text": "So this is going to give you 3.", "start": 821.44, "duration": 3.02}, {"text": "However, it's actually\nnot recommended to access", "start": 824.46, "duration": 3.12}, {"text": "data attributes directly.", "start": 827.58, "duration": 1.18}, {"text": "So this is the\nreason-- so you're", "start": 828.76, "duration": 1.52}, {"text": "going to see in the next slide,\nthe reason-- why we're going", "start": 830.28, "duration": 2.5}, {"text": "to use getters and setters.", "start": 832.78, "duration": 1.16}, {"text": "Instead, you should use the\nget_age() getter method to get", "start": 833.94, "duration": 5.77}, {"text": "the age of the animal.", "start": 839.71, "duration": 3.13}, {"text": "So this is going\nto return, also, 3.", "start": 842.84, "duration": 1.564}, {"text": "So these are going\nto do the same thing.", "start": 844.404, "duration": 1.666}, {"text": "And the reason why you'd want\nto use getters and setters", "start": 849.9, "duration": 2.82}, {"text": "is this idea of\ninformation hiding, OK?", "start": 852.72, "duration": 2.859}, {"text": "So the whole reason\nwhy we're using classes", "start": 855.579, "duration": 1.791}, {"text": "in object-oriented\nprogramming is", "start": 857.37, "duration": 2.22}, {"text": "so that you can abstract\ncertain data from the user, OK?", "start": 859.59, "duration": 5.1}, {"text": "One of the things you\nshould be abstracting", "start": 864.69, "duration": 2.19}, {"text": "is these data attributes.", "start": 866.88, "duration": 2.46}, {"text": "So users shouldn't\nreally need to know", "start": 869.34, "duration": 1.83}, {"text": "how a class is implemented.", "start": 871.17, "duration": 2.19}, {"text": "They should just know\nhow to use the class, OK?", "start": 873.36, "duration": 3.09}, {"text": "So consider the following case.", "start": 876.45, "duration": 1.44}, {"text": "Let's say whoever wrote\nthe Animal class wants", "start": 877.89, "duration": 3.39}, {"text": "to change the implementation.", "start": 881.28, "duration": 2.382}, {"text": "And they've decided\nthey don't want", "start": 883.662, "duration": 1.458}, {"text": "to call the data attribute\n\"age\" anymore, they", "start": 885.12, "duration": 1.95}, {"text": "want to call it \"years,\" OK?", "start": 887.07, "duration": 1.83}, {"text": "So when they\ninitialize an animal", "start": 888.9, "duration": 1.53}, {"text": "they say self.years = age.", "start": 890.43, "duration": 3.54}, {"text": "So an animal still gets\ninitialized by its age.", "start": 893.97, "duration": 4.17}, {"text": "And the age gets passed into a\ndata attribute named \"years,\"", "start": 898.14, "duration": 4.93}, {"text": "OK?", "start": 903.07, "duration": 1.51}, {"text": "Since I'm implementing\nthis class,", "start": 904.58, "duration": 1.62}, {"text": "I want to have a getter, which\nis going to return self.years.", "start": 906.2, "duration": 2.73}, {"text": "So I'm not returning\nself.age anymore,", "start": 908.93, "duration": 2.25}, {"text": "because age is no longer the\ndata attribute I'm using.", "start": 911.18, "duration": 4.81}, {"text": "So with this new\nimplementation, if someone", "start": 915.99, "duration": 4.32}, {"text": "was using this implementation\nand was accessing age directly", "start": 920.31, "duration": 3.51}, {"text": "as-- was accessing the data\nattribute age directly--", "start": 923.82, "duration": 4.12}, {"text": "with this new\nimplementation, they'd", "start": 927.94, "duration": 1.5}, {"text": "actually get an error, right?", "start": 929.44, "duration": 1.59}, {"text": "Because this animal\nthat they created", "start": 931.03, "duration": 2.16}, {"text": "using my old\nimplementation no longer", "start": 933.19, "duration": 2.37}, {"text": "has an attribute named \"age.\"", "start": 935.56, "duration": 2.31}, {"text": "And so Python's\ngoing to spit out", "start": 937.87, "duration": 1.98}, {"text": "an error saying no attribute\nfound or something like that,", "start": 939.85, "duration": 2.535}, {"text": "OK?", "start": 942.385, "duration": 0.895}, {"text": "If they were using the\ngetter a.get_age()--", "start": 943.28, "duration": 2.99}, {"text": "the person who implemented the\nclass re-implemented get_age()", "start": 946.27, "duration": 2.79}, {"text": "to work correctly, right,\nwith their new data attribute,", "start": 949.06, "duration": 6.42}, {"text": "years, as opposed to age--\nso if I was using the getter", "start": 955.48, "duration": 4.46}, {"text": "get_age(), I wouldn't\nhave run into the bug, OK?", "start": 959.94, "duration": 3.73}, {"text": "So things to remember--\nwrite getters and setters", "start": 963.67, "duration": 5.39}, {"text": "for your classes.", "start": 969.06, "duration": 1.35}, {"text": "And later on in your code,\nuse getters and setters", "start": 970.41, "duration": 2.58}, {"text": "to prevent bugs and to\npromote easy to maintain code.", "start": 972.99, "duration": 6.76}, {"text": "OK, so information\nhiding is great.", "start": 979.75, "duration": 5.259}, {"text": "But having said that,\nPython's actually not", "start": 985.009, "duration": 1.791}, {"text": "very great at\ninformation hiding, OK?", "start": 986.8, "duration": 2.49}, {"text": "Python allows you\nto do certain things", "start": 989.29, "duration": 1.77}, {"text": "that you should never be doing.", "start": 991.06, "duration": 2.22}, {"text": "OK.", "start": 993.28, "duration": 0.84}, {"text": "So the first, we've just seen.", "start": 994.12, "duration": 3.06}, {"text": "The first is to\naccess data attributes", "start": 997.18, "duration": 2.61}, {"text": "from outside of the class, OK?", "start": 999.79, "duration": 2.7}, {"text": "So if I were to\nsay a.age, Python", "start": 1002.49, "duration": 2.52}, {"text": "allows me to do that without\nusing a getter and setter.", "start": 1005.01, "duration": 4.69}, {"text": "Python also allows you to\nwrite to data attributes", "start": 1009.7, "duration": 4.2}, {"text": "from outside the class.", "start": 1013.9, "duration": 2.35}, {"text": "So if I implemented\nthe class Animal", "start": 1016.25, "duration": 2.37}, {"text": "assuming that age was\na number, an integer,", "start": 1018.62, "duration": 3.49}, {"text": "and all of my methods work\nas long as age is an integer,", "start": 1022.11, "duration": 3.66}, {"text": "but someone decided to be smart\nand, outside of the class,", "start": 1025.77, "duration": 3.49}, {"text": "set age to be infinite\nas a string, that might", "start": 1029.26, "duration": 4.97}, {"text": "cause the code to crash, OK?", "start": 1034.23, "duration": 2.79}, {"text": "Python allows you to do that.", "start": 1037.02, "duration": 1.77}, {"text": "But now you're breaking\nthe fact that age", "start": 1038.79, "duration": 3.96}, {"text": "has to be an integer, right?", "start": 1042.75, "duration": 1.614}, {"text": "So now the methods\nshould probably", "start": 1044.364, "duration": 1.416}, {"text": "be checking the fact that age\nis an integer all the time.", "start": 1045.78, "duration": 2.374}, {"text": "The other thing that\nyou're allowed to do", "start": 1050.702, "duration": 1.708}, {"text": "is to create data attributes\noutside of the class", "start": 1052.41, "duration": 3.48}, {"text": "definition, OK?", "start": 1055.89, "duration": 1.65}, {"text": "So if I wanted to create a new\ndata attribute called \"size\"", "start": 1057.54, "duration": 2.94}, {"text": "for this particular\ninstance, Python also", "start": 1060.48, "duration": 1.89}, {"text": "allows me to do that.", "start": 1062.37, "duration": 1.42}, {"text": "And I can set it to\nwhatever I want, OK?", "start": 1063.79, "duration": 2.757}, {"text": "So Python allows you\nto do all these things,", "start": 1066.547, "duration": 1.833}, {"text": "but it's actually not good\nstyle to do any of them.", "start": 1068.38, "duration": 4.21}, {"text": "So just don't do it.", "start": 1072.59, "duration": 3.63}, {"text": "All right.", "start": 1076.22, "duration": 2.174}, {"text": "So the last thing I want\nto mention-- the last thing", "start": 1078.394, "duration": 2.166}, {"text": "about classes before we\ngo on to inheritance--", "start": 1080.56, "duration": 2.28}, {"text": "is this idea called\ndefault arguments.", "start": 1082.84, "duration": 2.82}, {"text": "And default arguments\nare passed into methods.", "start": 1085.66, "duration": 3.351}, {"text": "And since methods\nare functions, you", "start": 1089.011, "duration": 1.499}, {"text": "can also pass in different\narguments to functions.", "start": 1090.51, "duration": 4.08}, {"text": "So for example, this\nset_name() method had self.", "start": 1094.59, "duration": 3.06}, {"text": "And then, this new name is equal\nto this empty string here, OK?", "start": 1097.65, "duration": 5.07}, {"text": "We haven't seen this before.", "start": 1102.72, "duration": 3.432}, {"text": "But this is called\na default argument.", "start": 1106.152, "duration": 1.583}, {"text": "And you can use the\nfunction in one of two ways.", "start": 1110.39, "duration": 3.225}, {"text": "The first way is\nso we can create", "start": 1117.24, "duration": 1.7}, {"text": "a new instance of an Animal\ntype object with this line", "start": 1118.94, "duration": 3.96}, {"text": "here, a = Animal(3).", "start": 1122.9, "duration": 3.46}, {"text": "And then we can\nsay a.set_name().", "start": 1126.36, "duration": 1.87}, {"text": "So this calls the setter\nmethod to set the name.", "start": 1128.23, "duration": 4.13}, {"text": "And notice, we've\nalways said that you", "start": 1132.36, "duration": 3.11}, {"text": "have to put in parameters for\neverything other than self, OK?", "start": 1135.47, "duration": 4.8}, {"text": "But here we have no\nparameters passed in.", "start": 1140.27, "duration": 3.97}, {"text": "But that's OK, because\nnewname actually", "start": 1144.24, "duration": 3.65}, {"text": "has a default argument, OK?", "start": 1147.89, "duration": 3.55}, {"text": "So that tells Python, if no\nparameter is passed in for this", "start": 1151.44, "duration": 4.05}, {"text": "particular formal parameter,\nthen use whatever is up here", "start": 1155.49, "duration": 4.08}, {"text": "by default. So if I haven't\npassed in the parameter", "start": 1159.57, "duration": 3.59}, {"text": "a.get_na-- a.set_name(), sorry--\na.sett_name() is going to be", "start": 1163.16, "duration": 4.45}, {"text": "setting the name to\nthe empty string,", "start": 1167.61, "duration": 1.68}, {"text": "because that's what the\ndefault parameter is.", "start": 1169.29, "duration": 2.74}, {"text": "So in the next line, when\nI print a.get_name(),", "start": 1172.03, "duration": 2.09}, {"text": "this is just going to\nprint the empty string, OK?", "start": 1174.12, "duration": 2.26}, {"text": "If you do want to\npass in a parameter,", "start": 1179.34, "duration": 1.83}, {"text": "you can do so as normal.", "start": 1181.17, "duration": 2.55}, {"text": "So you can say a =\nAnimal(3), a.set_name(),", "start": 1183.72, "duration": 2.37}, {"text": "and then pass in\na parameter here.", "start": 1186.09, "duration": 2.52}, {"text": "And then, newname is going to be\nassigned to whatever parameter", "start": 1188.61, "duration": 3.585}, {"text": "is passed in like that.", "start": 1192.195, "duration": 3.695}, {"text": "Whatever you pass in overrides\nthe default argument,", "start": 1195.89, "duration": 3.12}, {"text": "and everything is good.", "start": 1199.01, "duration": 1.987}, {"text": "So when I print a.get_name(),\nthis is going to print out", "start": 1200.997, "duration": 2.333}, {"text": "the name that you've passed in.", "start": 1203.33, "duration": 1.68}, {"text": "Questions about default?", "start": 1208.35, "duration": 1.827}, {"text": "Yeah.", "start": 1210.177, "duration": 0.974}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 1211.151, "duration": 0.974}, {"text": "ANA BELL: What if you don't\nprovide a default value for--", "start": 1216.055, "duration": 2.375}, {"text": "AUDIENCE: For newname?", "start": 1218.43, "duration": 1.32}, {"text": "ANA BELL: For newname?", "start": 1219.75, "duration": 0.916}, {"text": "If you don't provide a\ndefault argument for newname", "start": 1222.56, "duration": 2.4}, {"text": "and you do this case\nhere, then that's", "start": 1224.96, "duration": 2.64}, {"text": "going to give you an error.", "start": 1227.6, "duration": 1.15}, {"text": "So Python's going to\nsay something like,", "start": 1228.75, "duration": 1.666}, {"text": "expected one argument, got\nzero, or something like that.", "start": 1230.416, "duration": 2.909}, {"text": "Great question.", "start": 1233.325, "duration": 0.625}, {"text": "OK.", "start": 1237.537, "duration": 2.363}, {"text": "All right, so let's move on to\nthis idea of hierarchies, OK?", "start": 1239.9, "duration": 2.934}, {"text": "So the great thing about\nobject-oriented programming", "start": 1242.834, "duration": 2.166}, {"text": "is that it allows us to\nadd layers of abstraction", "start": 1245.0, "duration": 2.52}, {"text": "to our code, all right?", "start": 1247.52, "duration": 0.97}, {"text": "So we don't need to know how\nvery, very low-level things are", "start": 1248.49, "duration": 3.65}, {"text": "implemented in\norder to use them.", "start": 1252.14, "duration": 1.68}, {"text": "And we can build up our code\nto be more and more complex", "start": 1253.82, "duration": 5.67}, {"text": "as we use up these\ndifferent abstractions.", "start": 1259.49, "duration": 4.65}, {"text": "So consider every one of these\nthings on this slide as being", "start": 1264.14, "duration": 4.56}, {"text": "a separate object, all right?", "start": 1268.7, "duration": 2.25}, {"text": "Every one of these things can be\nconsidered to be an animal, OK?", "start": 1270.95, "duration": 5.043}, {"text": "According to our\nimplementation of an animal,", "start": 1279.69, "duration": 2.07}, {"text": "the one thing that an\nanimal has is an age, OK?", "start": 1281.76, "duration": 2.64}, {"text": "And that's probably true, right?", "start": 1284.4, "duration": 1.77}, {"text": "Every one of these\nthings has an age.", "start": 1286.17, "duration": 2.69}, {"text": "But now I want to\nbuild up on this", "start": 1288.86, "duration": 2.77}, {"text": "and create separate\ngroups, right?", "start": 1291.63, "duration": 1.95}, {"text": "And each one of\nthese separate groups", "start": 1293.58, "duration": 1.77}, {"text": "that I create on\ntop of Animal is", "start": 1295.35, "duration": 2.64}, {"text": "going to have its own\nfunctionality, right?", "start": 1297.99, "duration": 2.109}, {"text": "They're going to be a little\nbit more specific, a little more", "start": 1300.099, "duration": 2.541}, {"text": "specialized.", "start": 1302.64, "duration": 1.92}, {"text": "So I can create these three\ngroups now, a cat, a rabbit,", "start": 1304.56, "duration": 2.85}, {"text": "and a person group.", "start": 1307.41, "duration": 2.95}, {"text": "And for example-- so\nthey're all animals, right?", "start": 1310.36, "duration": 3.15}, {"text": "They all have an age.", "start": 1313.51, "duration": 2.24}, {"text": "But for example,\nmaybe a person's", "start": 1315.75, "duration": 1.56}, {"text": "going to have a list of friends\nwhereas a cat and a rabbit", "start": 1317.31, "duration": 3.42}, {"text": "do not.", "start": 1320.73, "duration": 1.93}, {"text": "Maybe a cat has a data attribute\nfor the number of lives", "start": 1322.66, "duration": 4.62}, {"text": "they have left, right, whereas a\nperson and a rabbit do not, OK?", "start": 1327.28, "duration": 4.41}, {"text": "So you can think of adding\nthese more specialized-- adding", "start": 1331.69, "duration": 4.89}, {"text": "functionality to each one\nof these subgroups, OK?", "start": 1336.58, "duration": 2.759}, {"text": "So they're going to be\nmore and more specialized,", "start": 1339.339, "duration": 2.041}, {"text": "but all of them retaining the\nfact that they are animals.", "start": 1341.38, "duration": 2.675}, {"text": "So they all have an\nage, for example.", "start": 1344.055, "duration": 4.105}, {"text": "So on top of these, we\ncan add another layer", "start": 1348.16, "duration": 3.77}, {"text": "and say that a student is a\nperson and is an animal, OK?", "start": 1351.93, "duration": 4.66}, {"text": "But in addition to having an\nage and maybe also having a list", "start": 1356.59, "duration": 3.32}, {"text": "of friends, a student\nmight also have a major", "start": 1359.91, "duration": 2.52}, {"text": "or-- they're pretty, so\nmaybe-- their favorite subject", "start": 1362.43, "duration": 4.29}, {"text": "in school.", "start": 1366.72, "duration": 0.5}, {"text": "So that's the general\nidea of hierarchies, OK?", "start": 1372.29, "duration": 3.02}, {"text": "So we can sort of abstract the\nprevious slide into this one", "start": 1375.31, "duration": 6.69}, {"text": "and say that we have parent\nclasses and child classes, OK?", "start": 1382.0, "duration": 3.57}, {"text": "The Animal class is\nlike our parent class.", "start": 1385.57, "duration": 2.32}, {"text": "It's the highest-level class.", "start": 1387.89, "duration": 1.33}, {"text": "Inheriting from\nthe Animal class,", "start": 1393.48, "duration": 2.1}, {"text": "we have these child\nclasses or subclasses, OK?", "start": 1395.58, "duration": 3.8}, {"text": "Whatever an animal can\ndo, a person can do.", "start": 1399.38, "duration": 2.304}, {"text": "Whatever an animal\ncan do, a cat can do.", "start": 1401.684, "duration": 1.666}, {"text": "And whatever an animal can do,\na rabbit can do, OK-- that is,", "start": 1403.35, "duration": 3.08}, {"text": "have an age and maybe some\nreally basic functionality, OK?", "start": 1406.43, "duration": 5.1}, {"text": "But between person,\ncat, and rabbit,", "start": 1411.53, "duration": 1.77}, {"text": "they're going to\nbe varying wildly", "start": 1413.3, "duration": 1.59}, {"text": "as to the kinds of things\nthat they can do, right?", "start": 1414.89, "duration": 2.083}, {"text": "But they can all do\nwhatever Animal can do.", "start": 1416.973, "duration": 3.097}, {"text": "So child classes inherit\nall of the data attributes", "start": 1420.07, "duration": 2.94}, {"text": "and all of the\nmethods, or behaviors,", "start": 1423.01, "duration": 1.74}, {"text": "that their parent's\nclasses have, OK?", "start": 1424.75, "duration": 3.86}, {"text": "But child classes can\nadd more information.", "start": 1428.61, "duration": 2.19}, {"text": "Like for example, a person\ncan have a list of friends", "start": 1430.8, "duration": 2.49}, {"text": "whereas a general\nanimal will not.", "start": 1433.29, "duration": 1.74}, {"text": "It can add more behavior.", "start": 1438.79, "duration": 1.35}, {"text": "Like, maybe a cat can\nclimb trees whereas people", "start": 1440.14, "duration": 3.03}, {"text": "and rabbits cannot.", "start": 1443.17, "duration": 2.65}, {"text": "Or you can also\noverride behavior.", "start": 1445.82, "duration": 2.17}, {"text": "So in the previous one, we\nhad animal, person, student.", "start": 1447.99, "duration": 3.44}, {"text": "So maybe we have, an animal\ndoesn't speak at all,", "start": 1451.43, "duration": 2.34}, {"text": "but a person can speak.", "start": 1453.77, "duration": 1.65}, {"text": "So that's added\nfunctionality to the person.", "start": 1455.42, "duration": 3.0}, {"text": "And maybe a person\ncan only say hello.", "start": 1458.42, "duration": 1.92}, {"text": "But then, when we\ntalk to a student,", "start": 1460.34, "duration": 1.5}, {"text": "we can override the fact--\noverride the speak() method", "start": 1461.84, "duration": 3.75}, {"text": "of a person and say that a\nstudent can say, you know,", "start": 1465.59, "duration": 3.21}, {"text": "I have homework, or I need\nsleep, or something like that,", "start": 1468.8, "duration": 2.75}, {"text": "OK?", "start": 1471.55, "duration": 1.0}, {"text": "So we have the same speak()\nmethod for both person", "start": 1472.55, "duration": 2.612}, {"text": "and student, because\nthey can both speak.", "start": 1475.162, "duration": 1.708}, {"text": "But student will\noverride the fact", "start": 1476.87, "duration": 1.689}, {"text": "that they say hello\nwith something else.", "start": 1478.559, "duration": 1.666}, {"text": "OK, so let's look at some code\nto put this into perspective.", "start": 1482.79, "duration": 4.57}, {"text": "So we have this Animal class,\nwhich we've seen before.", "start": 1487.36, "duration": 4.93}, {"text": "This is the parent class, OK?", "start": 1492.29, "duration": 2.21}, {"text": "It inherits from object,\nwhich means that everything", "start": 1494.5, "duration": 3.63}, {"text": "that a basic object can do\nin Python, an animal can do,", "start": 1498.13, "duration": 3.54}, {"text": "which is things like\nbinding variables,", "start": 1501.67, "duration": 2.33}, {"text": "you know, very\nlow-level things, OK?", "start": 1504.0, "duration": 2.831}, {"text": "We've seen the __init__.", "start": 1506.831, "duration": 0.999}, {"text": "We've seen the two getters, the\nsetters, and the string method", "start": 1507.83, "duration": 3.99}, {"text": "to print an object\nof type Animal.", "start": 1511.82, "duration": 3.93}, {"text": "All right, now, let's\ncreate a subclass of Animal.", "start": 1515.75, "duration": 2.58}, {"text": "We'll call it Cat, OK?", "start": 1518.33, "duration": 4.11}, {"text": "We create a class named Cat.", "start": 1522.44, "duration": 3.257}, {"text": "In parentheses, instead\nof putting \"object,\"", "start": 1525.697, "duration": 1.833}, {"text": "we now put \"Animal.\"", "start": 1527.53, "duration": 1.67}, {"text": "And this tells Python that\nCat's parent class is Animal.", "start": 1529.2, "duration": 5.67}, {"text": "So everything that an\nanimal can do, a cat can do.", "start": 1534.87, "duration": 3.03}, {"text": "So that includes all of\nthe attributes, which", "start": 1537.9, "duration": 2.22}, {"text": "was age and name, and\nall of the methods.", "start": 1540.12, "duration": 2.53}, {"text": "So all the getters, the setters,\nthe __str__, the __init__,", "start": 1542.65, "duration": 2.84}, {"text": "everything that the animal\nhad, now the cat has--", "start": 1545.49, "duration": 2.67}, {"text": "the Cat class has.", "start": 1548.16, "duration": 3.54}, {"text": "In the Cat class, we're going\nto add two more methods though.", "start": 1551.7, "duration": 4.03}, {"text": "The first is speak().", "start": 1555.73, "duration": 3.46}, {"text": "So speak() is going to be a\nmethod that's going to just", "start": 1559.19, "duration": 5.79}, {"text": "take in the self, OK--\nno other parameters.", "start": 1564.98, "duration": 3.94}, {"text": "And all it's doing is printing\n\"meow\" to the screen-- very", "start": 1568.92, "duration": 2.79}, {"text": "simple, OK?", "start": 1571.71, "duration": 1.44}, {"text": "So through this speak(),\nwe've added new functionality", "start": 1573.15, "duration": 2.61}, {"text": "to the class.", "start": 1575.76, "duration": 1.32}, {"text": "So an animal couldn't speak,\nwhereas a cat says \"meow.\"", "start": 1577.08, "duration": 5.61}, {"text": "Additionally, through\nthis __str__ method here,", "start": 1582.69, "duration": 2.31}, {"text": "we're overriding the\nanimal __str__, OK?", "start": 1585.0, "duration": 3.24}, {"text": "So if we go back to\nthe previous slide,", "start": 1588.24, "duration": 2.08}, {"text": "we can see that the\nanimal's __str__ had animal,", "start": 1590.32, "duration": 3.89}, {"text": "plus the name, plus the age here\nwhereas the cat's __str__ now", "start": 1594.21, "duration": 6.69}, {"text": "says \"cat,\" name,\nand the age, OK?", "start": 1600.9, "duration": 3.61}, {"text": "So this is just how I chose\nto implement this, OK?", "start": 1604.51, "duration": 3.76}, {"text": "So here I've overridden the\n__str__ method of the Animal", "start": 1608.27, "duration": 3.06}, {"text": "class.", "start": 1611.33, "duration": 2.36}, {"text": "Notice that this class\ndoesn't have an __init__,", "start": 1613.69, "duration": 2.76}, {"text": "and that's OK.", "start": 1616.45, "duration": 1.24}, {"text": "Because Python's actually\ngoing to say, well,", "start": 1617.69, "duration": 3.38}, {"text": "if there's no __init__ in this\nparticular method-- sorry,", "start": 1621.07, "duration": 3.36}, {"text": "in this particular class-- then\nlook to my parents and say,", "start": 1624.43, "duration": 5.34}, {"text": "do my parents have\nan __init__, OK?", "start": 1629.77, "duration": 2.01}, {"text": "And if so, use that __init__.", "start": 1631.78, "duration": 3.76}, {"text": "So that's actually true\nfor any other methods.", "start": 1635.54, "duration": 2.077}, {"text": "So the idea here is, when\nyou have hierarchies,", "start": 1640.77, "duration": 3.07}, {"text": "you have a parent class,\nyou have a child class,", "start": 1643.84, "duration": 2.959}, {"text": "you could have a child\nclass to that child class,", "start": 1646.799, "duration": 2.041}, {"text": "and so on and so on.", "start": 1648.84, "duration": 1.07}, {"text": "So you can have multiple\nlevels of inheritance.", "start": 1649.91, "duration": 4.02}, {"text": "What happens when you\ncreate an object that", "start": 1653.93, "duration": 1.97}, {"text": "is of type something that's\nbeen-- of a type that's", "start": 1655.9, "duration": 4.1}, {"text": "the child class of a child\nclass of a child class, right?", "start": 1660.0, "duration": 3.7}, {"text": "What happens when you call\na method on that object?", "start": 1663.7, "duration": 4.2}, {"text": "Well, Python's are going\nto say, does a method with", "start": 1667.9, "duration": 2.61}, {"text": "that name exist in my\ncurrent class definition?", "start": 1670.51, "duration": 2.61}, {"text": "And if so, use that.", "start": 1673.12, "duration": 1.63}, {"text": "But if not, then,\nlook to my parents.", "start": 1674.75, "duration": 1.64}, {"text": "Do my parents know\nhow to do that, right?", "start": 1676.39, "duration": 2.67}, {"text": "Do my parents have a method\nfor whatever I want to do?", "start": 1679.06, "duration": 4.95}, {"text": "If so, use that.", "start": 1684.01, "duration": 0.81}, {"text": "If not, look to their\nparents, and so on and so on.", "start": 1684.82, "duration": 2.28}, {"text": "So you're sort of tracing\nback up your ancestry", "start": 1687.1, "duration": 2.85}, {"text": "to figure out if you can\ndo this method or not.", "start": 1689.95, "duration": 4.68}, {"text": "So let's look at a slightly\nmore complicated example.", "start": 1694.63, "duration": 3.64}, {"text": "We have a class named Person.", "start": 1698.27, "duration": 1.61}, {"text": "It's going to\ninherit from Animal.", "start": 1699.88, "duration": 1.416}, {"text": "Inside this person, I'm\ngoing to create my own--", "start": 1704.68, "duration": 2.82}, {"text": "I'm going to create\nan __init__ method.", "start": 1707.5, "duration": 2.01}, {"text": "And the __init__ method is going\nto do something different than", "start": 1709.51, "duration": 2.624}, {"text": "what the animal's\n__init__ method is doing.", "start": 1712.134, "duration": 2.236}, {"text": "It's going to take\nin self, as usual.", "start": 1714.37, "duration": 1.8}, {"text": "And it's going to take in\ntwo parameters as opposed", "start": 1716.17, "duration": 2.124}, {"text": "to one, a name and an age.", "start": 1718.294, "duration": 3.015}, {"text": "First thing the __init__\nmethod's doing is it's calling", "start": 1721.309, "duration": 2.291}, {"text": "the animal's __init__ method.", "start": 1723.6, "duration": 2.49}, {"text": "Why am I doing that?", "start": 1726.09, "duration": 1.95}, {"text": "Well, I could theoretically\ninitialize the name", "start": 1728.04, "duration": 5.0}, {"text": "and the age data\nattributes that Animal", "start": 1733.04, "duration": 2.31}, {"text": "initializes in this method.", "start": 1735.35, "duration": 3.22}, {"text": "But I'm using the\nfact that I've already", "start": 1738.57, "duration": 2.06}, {"text": "written code that initializes\nthose two data attributes.", "start": 1740.63, "duration": 2.79}, {"text": "So why not just use it, OK?", "start": 1743.42, "duration": 2.37}, {"text": "So here, this says, I'm going\nto call the class Animal.", "start": 1745.79, "duration": 3.12}, {"text": "I'm going to call\nits __init__ method.", "start": 1748.91, "duration": 1.89}, {"text": "And I'm going to leave it up to\nyou to-- not you as the class,", "start": 1750.8, "duration": 3.75}, {"text": "but I'm talking as the\nprograms is running--", "start": 1754.55, "duration": 4.095}, {"text": "I'm going to leave it\nup to you to figure out", "start": 1758.645, "duration": 1.875}, {"text": "how to initialize an animal\nwith this particular age", "start": 1760.52, "duration": 4.32}, {"text": "and what to name it.", "start": 1764.84, "duration": 1.211}, {"text": "So Python says, yep,\nI know how to do this,", "start": 1768.64, "duration": 2.47}, {"text": "so I'm going to go ahead\nand do that for you.", "start": 1771.11, "duration": 2.36}, {"text": "So now it says\nperson is an animal.", "start": 1773.47, "duration": 2.43}, {"text": "And I've initialized the\nage and the name for you.", "start": 1775.9, "duration": 2.86}, {"text": "The next thing I'm doing in the\n__init__ is I'm going to set", "start": 1778.76, "duration": 2.5}, {"text": "the name to whatever\nname was passed in, OK?", "start": 1781.26, "duration": 3.492}, {"text": "So in the __init__, notice,\nI can do whatever I want,", "start": 1784.752, "duration": 2.208}, {"text": "including calling methods.", "start": 1786.96, "duration": 3.845}, {"text": "And then, the last\nthing I'm doing here", "start": 1790.805, "duration": 1.625}, {"text": "is I'm going to create a new\ndata attribute for Person,", "start": 1792.43, "duration": 2.82}, {"text": "which is a list of friends, OK?", "start": 1795.25, "duration": 2.649}, {"text": "So an animal didn't\nhave a list of friends,", "start": 1797.899, "duration": 1.791}, {"text": "but a person is going to.", "start": 1799.69, "duration": 2.031}, {"text": "The next four methods here\nare-- this one's a getter,", "start": 1804.55, "duration": 3.177}, {"text": "so it's going to return\nthe list of friends.", "start": 1807.727, "duration": 1.833}, {"text": "This is going to append a\nfriend to the end of my list.", "start": 1809.56, "duration": 5.19}, {"text": "I want to make a note that I\nactually didn't write a method", "start": 1814.75, "duration": 2.67}, {"text": "to remove friends.", "start": 1817.42, "duration": 0.88}, {"text": "So once you get a friend,\nthey're friends for life.", "start": 1818.3, "duration": 2.99}, {"text": "But that's OK.", "start": 1821.29, "duration": 2.91}, {"text": "The next method here is speak(),\nwhich is going to print \"hello\"", "start": 1824.2, "duration": 3.39}, {"text": "to the screen.", "start": 1827.59, "duration": 2.1}, {"text": "And the last method\nhere is going", "start": 1829.69, "duration": 1.616}, {"text": "to get the age difference\nbetween two people.", "start": 1831.306, "duration": 1.874}, {"text": "So that just basically\nsubtracts their age", "start": 1833.18, "duration": 1.75}, {"text": "and says it's a five-year age\ndifference, or whatever it is.", "start": 1834.93, "duration": 3.8}, {"text": "And down here, I have\nan __str__ method,", "start": 1838.73, "duration": 2.02}, {"text": "which I've overridden\nfrom the Animal, which,", "start": 1840.75, "duration": 1.95}, {"text": "instead of \"animal: name,\" it's\ngoing to say \"person: name :", "start": 1842.7, "duration": 3.93}, {"text": "age,\" OK?", "start": 1846.63, "duration": 0.836}, {"text": "So we can run this code.", "start": 1852.82, "duration": 1.94}, {"text": "So that's down here.", "start": 1854.76, "duration": 1.54}, {"text": "I have an animal person here.", "start": 1856.3, "duration": 7.37}, {"text": "So I'm going to run this code.", "start": 1867.69, "duration": 3.16}, {"text": "And what did I do?", "start": 1870.85, "duration": 2.33}, {"text": "I created a new person.", "start": 1873.18, "duration": 1.11}, {"text": "I gave it a name and an age.", "start": 1874.29, "duration": 1.92}, {"text": "I created another person,\na name and an age.", "start": 1876.21, "duration": 2.01}, {"text": "And here I've just run\nsome methods on it,", "start": 1878.22, "duration": 1.77}, {"text": "which was get_name(),\nget_age(), get_name(),", "start": 1879.99, "duration": 2.55}, {"text": "and get_age() for each\nof the two people.", "start": 1882.54, "duration": 2.55}, {"text": "So that printed, Jack\nis 30, Jill is 25.", "start": 1885.09, "duration": 4.4}, {"text": "If I print p1, this is going\nto use the __str__ method", "start": 1889.49, "duration": 2.7}, {"text": "of Person.", "start": 1892.19, "duration": 0.599}, {"text": "So it's to print \"person:\",\ntheir name, and then,", "start": 1892.789, "duration": 2.041}, {"text": "their age.", "start": 1894.83, "duration": 1.71}, {"text": "p1.speak() just says \"hello.\"", "start": 1896.54, "duration": 1.77}, {"text": "And then, the age difference\nbetween p1 and p2 is just 5.", "start": 1898.31, "duration": 3.63}, {"text": "So that's just subtracting\nand then printing that out", "start": 1901.94, "duration": 2.957}, {"text": "to the screen.", "start": 1904.897, "duration": 0.583}, {"text": "OK, so that's my person.", "start": 1909.408, "duration": 1.272}, {"text": "Let's add another class.", "start": 1913.56, "duration": 3.48}, {"text": "This class is going\nto be a student,", "start": 1917.04, "duration": 1.91}, {"text": "and it's going to be\na subclass of Person.", "start": 1918.95, "duration": 3.9}, {"text": "Since it's a subclass\nof Person, it's", "start": 1922.85, "duration": 1.92}, {"text": "going to-- a student\nis going inherit", "start": 1924.77, "duration": 2.9}, {"text": "all the attributes of a\nperson, and therefore, all the", "start": 1927.67, "duration": 3.69}, {"text": "attributes of an animal.", "start": 1931.36, "duration": 3.42}, {"text": "The __init__ method of a\nstudent is going to be a little", "start": 1934.78, "duration": 2.49}, {"text": "different from\nthe one of Person.", "start": 1937.27, "duration": 2.28}, {"text": "We're going to give it a\nname, an age, and a major.", "start": 1939.55, "duration": 2.99}, {"text": "Notice we're using\ndefault arguments here.", "start": 1942.54, "duration": 3.07}, {"text": "So if I create a student\nwithout giving it a major,", "start": 1945.61, "duration": 2.355}, {"text": "the major is going to be\nset to None originally.", "start": 1947.965, "duration": 5.025}, {"text": "Once again, this line here,\nPerson. init (self, name, age),", "start": 1952.99, "duration": 4.74}, {"text": "tells Python, hey,\nyou already know", "start": 1957.73, "duration": 2.7}, {"text": "how to initialize a person for\nme with this name and this age.", "start": 1960.43, "duration": 3.69}, {"text": "So can you just do that?", "start": 1964.12, "duration": 2.25}, {"text": "And Python says, yes,\nI can do that for you.", "start": 1966.37, "duration": 2.37}, {"text": "And so that saves you, maybe,\nlike five lines of code just", "start": 1968.74, "duration": 3.104}, {"text": "by calling the __init__ method\nthat you've already written", "start": 1971.844, "duration": 2.416}, {"text": "through Person, OK?", "start": 1974.26, "duration": 2.61}, {"text": "So Student has been\ninitialized to be a person.", "start": 1976.87, "duration": 3.81}, {"text": "And additionally, we're going\nto set another data attribute", "start": 1980.68, "duration": 2.46}, {"text": "for the student to be the major.", "start": 1983.14, "duration": 1.5}, {"text": "And we're going to set\nthe major to be None.", "start": 1984.64, "duration": 4.22}, {"text": "The student is going to get\nthis setter here, this setter", "start": 1988.86, "duration": 3.78}, {"text": "method, which is going to\nchange the major to whatever", "start": 1992.64, "duration": 2.82}, {"text": "else they want if they\nwant to change it.", "start": 1995.46, "duration": 4.39}, {"text": "And then, I'm going to\noverride the speak() method.", "start": 1999.85, "duration": 5.06}, {"text": "So the speak method\nfor the person,", "start": 2004.91, "duration": 1.59}, {"text": "recall, just said \"hello.\"", "start": 2006.5, "duration": 1.71}, {"text": "A student is going to be\na little bit more complex.", "start": 2008.21, "duration": 2.97}, {"text": "I'm going to use the\nfact that someone", "start": 2011.18, "duration": 2.58}, {"text": "created this random class, OK?", "start": 2013.76, "duration": 2.54}, {"text": "So this is where we can\nwrite more interesting code", "start": 2016.3, "duration": 2.62}, {"text": "by reusing code that\nother people have written.", "start": 2018.92, "duration": 2.66}, {"text": "So someone wrote a\nrandom class that", "start": 2021.58, "duration": 1.9}, {"text": "can do cool things\nwith random numbers.", "start": 2023.48, "duration": 3.95}, {"text": "So if I want to use\nrandom numbers in my code,", "start": 2027.43, "duration": 2.441}, {"text": "I'm going to put this \"import\nrandom\" at the top of my code,", "start": 2029.871, "duration": 2.499}, {"text": "which essentially brings in all\nof the methods from the Random", "start": 2032.37, "duration": 2.583}, {"text": "class, one of the methods\nbeing this random() method.", "start": 2034.953, "duration": 3.957}, {"text": "So random() is a random()\nmethod from the Random class.", "start": 2038.91, "duration": 5.93}, {"text": "And this essentially gives\nme a number between 0 and 1,", "start": 2044.84, "duration": 2.96}, {"text": "including 0 but not\nincluding 1, OK?", "start": 2047.8, "duration": 3.64}, {"text": "So this random number I get\nhere is going to help me write", "start": 2051.44, "duration": 3.33}, {"text": "my method for speak(), where\nit's going to-- with 25%", "start": 2054.77, "duration": 4.074}, {"text": "probability, it's either going\nto say, \"I have homework,\"", "start": 2058.844, "duration": 2.375}, {"text": "\"I need sleep,\" \"I should\neat,\" or \"I'm watching TV,\" OK?", "start": 2061.219, "duration": 3.181}, {"text": "So a student is going to say\none of those four things.", "start": 2064.4, "duration": 2.652}, {"text": "And the last thing I'm doing\ndown here is overwriting", "start": 2067.052, "duration": 2.208}, {"text": "the __str__ method.", "start": 2069.26, "duration": 2.189}, {"text": "So let's look at the code.", "start": 2071.449, "duration": 2.431}, {"text": "I'm going to comment this part\nout, and uncomment the student,", "start": 2073.88, "duration": 7.74}, {"text": "and see what we get.", "start": 2081.62, "duration": 1.372}, {"text": "OK, so here, I am\ncreating the student.", "start": 2085.76, "duration": 3.51}, {"text": "I'm creating one student whose\nmajor is CS, name is Alice,", "start": 2089.27, "duration": 3.26}, {"text": "and age is 20.", "start": 2092.53, "duration": 1.68}, {"text": "s2 is going to be\nanother student-- name--", "start": 2094.21, "duration": 2.56}, {"text": "Beth, age-- 18.", "start": 2096.77, "duration": 1.227}, {"text": "And the major is going\nto be None, because I", "start": 2097.997, "duration": 1.833}, {"text": "didn't pass in any major here.", "start": 2099.83, "duration": 2.26}, {"text": "So by default, using\nthe default argument,", "start": 2102.09, "duration": 2.06}, {"text": "it's going to be None.", "start": 2104.15, "duration": 1.14}, {"text": "If I print s1, s2, that's going\nto print out these two things", "start": 2105.29, "duration": 3.3}, {"text": "over here just by whatever\n__str__ method does.", "start": 2108.59, "duration": 3.68}, {"text": "And then I'm going to get\nthe students to speak.", "start": 2114.78, "duration": 4.24}, {"text": "And if I run it\nmultiple times, you", "start": 2119.02, "duration": 1.76}, {"text": "can see that it's going to print\ndifferent things each time.", "start": 2120.78, "duration": 2.89}, {"text": "So \"I need sleep,\" \"I have\nhomework,\" \"I need sleep,\"", "start": 2126.67, "duration": 2.49}, {"text": "\"I have homework,\" yeah.", "start": 2129.16, "duration": 2.41}, {"text": "So every time, it's going to\nprint something different.", "start": 2131.57, "duration": 2.334}, {"text": "OK, questions about\ninheritance in this example?", "start": 2137.8, "duration": 5.38}, {"text": "OK.", "start": 2146.512, "duration": 1.325}, {"text": "Last thing we're going to\ntalk about in this class", "start": 2147.837, "duration": 2.083}, {"text": "is an idea of-- or\nin this lecture,", "start": 2149.92, "duration": 2.28}, {"text": "is the idea of-- a\nclass variable, OK?", "start": 2152.2, "duration": 3.12}, {"text": "So to illustrate this, I'm going\nto create yet another subclass", "start": 2155.32, "duration": 3.0}, {"text": "of my animal called a rabbit.", "start": 2158.32, "duration": 2.03}, {"text": "So class variables-- so so\nfar, we've seen-- sorry,", "start": 2163.97, "duration": 4.56}, {"text": "let me back up.", "start": 2168.53, "duration": 0.72}, {"text": "So so far, we've seen\ninstance variables, right?", "start": 2169.25, "duration": 3.39}, {"text": "So things like self.name,\nself.age, those", "start": 2172.64, "duration": 3.136}, {"text": "are all instance variables.", "start": 2175.776, "duration": 1.124}, {"text": "So they're variables\nthat are specif--", "start": 2176.9, "duration": 1.98}, {"text": "they are common across all of\nthe instances of the class,", "start": 2178.88, "duration": 3.31}, {"text": "right?", "start": 2182.19, "duration": 0.5}, {"text": "Every instance of the class\nhas this particular variable.", "start": 2182.69, "duration": 3.6}, {"text": "But the value of the\nvariable is going", "start": 2186.29, "duration": 1.6}, {"text": "to be different between all\nof the different instances.", "start": 2187.89, "duration": 3.91}, {"text": "So class variables are\ngoing to be variables", "start": 2191.8, "duration": 4.76}, {"text": "whose values are\nshared between all", "start": 2196.56, "duration": 1.77}, {"text": "of the instances in the class.", "start": 2198.33, "duration": 1.8}, {"text": "So if one instance of the class\nmodifies this class variable,", "start": 2200.13, "duration": 6.305}, {"text": "then, any other\ninstance of the class", "start": 2206.435, "duration": 2.175}, {"text": "is going to see\nthe modified value.", "start": 2208.61, "duration": 1.66}, {"text": "So it's sort of shared among\nall of the different instances.", "start": 2210.27, "duration": 4.75}, {"text": "So we're going to\nuse class variables", "start": 2215.02, "duration": 1.95}, {"text": "to keep track of rabbits.", "start": 2216.97, "duration": 1.355}, {"text": "OK, so we're creating\nthis class, Rabbit.", "start": 2220.94, "duration": 3.22}, {"text": "tag = 1.", "start": 2224.16, "duration": 0.88}, {"text": "We haven't seen something\nlike this before.", "start": 2225.04, "duration": 3.93}, {"text": "So tag is our class variable.", "start": 2228.97, "duration": 3.02}, {"text": "Class variables are typically\ndefined inside the class", "start": 2231.99, "duration": 3.39}, {"text": "definition but outside\nof the __init__.", "start": 2235.38, "duration": 5.62}, {"text": "So tag is going to\nbe a class variable,", "start": 2241.0, "duration": 1.71}, {"text": "and I'm initializing it to 1.", "start": 2242.71, "duration": 3.71}, {"text": "Inside the __init__, this\ntells us how to create a Rabbit", "start": 2246.42, "duration": 3.03}, {"text": "object.", "start": 2249.45, "duration": 0.72}, {"text": "So I'm going to give it self\nas usual, an age, and then", "start": 2250.17, "duration": 2.82}, {"text": "two parents.", "start": 2252.99, "duration": 1.56}, {"text": "Don't worry about the\ntwo parents for now.", "start": 2254.55, "duration": 3.45}, {"text": "Inside the __init__--\nsorry, inside the __init__--", "start": 2258.0, "duration": 3.0}, {"text": "I'm going to call the __init__\nof the animal just to do less", "start": 2261.0, "duration": 4.44}, {"text": "work.", "start": 2265.44, "duration": 1.88}, {"text": "Python already knows how to\ninitialize an animal for me,", "start": 2267.32, "duration": 2.61}, {"text": "so let's do that.", "start": 2269.93, "duration": 0.93}, {"text": "So that's going to set the two\ndata attributes, name and age.", "start": 2270.86, "duration": 4.06}, {"text": "I'm going to set\nthe data attributes", "start": 2274.92, "duration": 1.5}, {"text": "for parent1,\nparent2 for a rabbit", "start": 2276.42, "duration": 1.74}, {"text": "to be whatever's passed in.", "start": 2278.16, "duration": 1.985}, {"text": "And then, this is\nwhere I'm going", "start": 2280.145, "duration": 1.375}, {"text": "to use this class variable.", "start": 2281.52, "duration": 2.7}, {"text": "So I'm creating\nthis data attribute", "start": 2284.22, "duration": 4.87}, {"text": "instance variable particular\nto a specific instance called", "start": 2289.09, "duration": 4.29}, {"text": "rid, OK?", "start": 2293.38, "duration": 2.35}, {"text": "And I'm assigning this instance\nvariable to the class variable.", "start": 2295.73, "duration": 5.16}, {"text": "And I access class\nvariables using not self,", "start": 2300.89, "duration": 2.7}, {"text": "but the class name-- so\nin this case, rabbit.tag.", "start": 2303.59, "duration": 3.165}, {"text": "So initially, tag\nis going to be 1.", "start": 2310.01, "duration": 2.28}, {"text": "And then, the __init__ is going\nto increment the tag by 1 here,", "start": 2312.29, "duration": 4.826}, {"text": "OK?", "start": 2317.116, "duration": 0.844}, {"text": "So that means that,\nfrom now on, if I", "start": 2317.96, "duration": 1.95}, {"text": "create any other instances,\nthe other instances", "start": 2319.91, "duration": 2.22}, {"text": "are going to be accessing the\nupdated value of tag instead", "start": 2322.13, "duration": 2.94}, {"text": "of being 1.", "start": 2325.07, "duration": 1.38}, {"text": "So let's do a quick drawing\nto show you what I mean.", "start": 2326.45, "duration": 3.61}, {"text": "So let's say I have\nRabbit.tag here, OK?", "start": 2330.06, "duration": 7.164}, {"text": "So initially, tag is\ngoing to be 1, OK?", "start": 2340.36, "duration": 5.26}, {"text": "And then I'm going to\ncreate a new Rabbit object.", "start": 2345.62, "duration": 2.47}, {"text": "So this is as I'm\ncalling the code, OK?", "start": 2348.09, "duration": 2.46}, {"text": "So let's say this is a rabbit\nobject-- oh boy, OK-- r1.", "start": 2350.55, "duration": 4.74}, {"text": "You know, I actually googled\nhow to draw a rabbit,", "start": 2357.777, "duration": 2.083}, {"text": "but that didn't help at all.", "start": 2359.86, "duration": 1.23}, {"text": "OK, so r1 is going to be a\nnew rabbit that we create.", "start": 2361.09, "duration": 7.53}, {"text": "Initially, what happens is, when\nI first create this new rabbit,", "start": 2368.62, "duration": 4.65}, {"text": "it's going to access the\nclass variable, which,", "start": 2373.27, "duration": 5.5}, {"text": "it's current value is 1.", "start": 2378.77, "duration": 2.44}, {"text": "So when I create the\nrabbit ID-- the rabbit ID,", "start": 2381.21, "duration": 4.13}, {"text": "r1.rid-- this is going\nto get the value 1.", "start": 2385.34, "duration": 5.005}, {"text": "And according to\nthe code, after I", "start": 2393.2, "duration": 2.19}, {"text": "set the rabbit ID\nto whatever tag is,", "start": 2395.39, "duration": 1.77}, {"text": "I'm going to increment the tag.", "start": 2397.16, "duration": 2.5}, {"text": "So this is going to say,\nOK, now that I've said it,", "start": 2399.66, "duration": 2.57}, {"text": "I'm going to go back up here\nand increment the tag to be 2.", "start": 2402.23, "duration": 4.77}, {"text": "OK.", "start": 2407.0, "duration": 0.97}, {"text": "So let's say I create\nanother Rabbit object, OK?", "start": 2407.97, "duration": 3.642}, {"text": "All right, there--\nthat's a sad rabbit, r2.", "start": 2411.612, "duration": 6.568}, {"text": "The ID of r2 is\ngoing to be what?", "start": 2418.18, "duration": 6.25}, {"text": "Well, according to the way\nwe create a new Rabbit object", "start": 2424.43, "duration": 3.72}, {"text": "is it's going to access\nwhatever the value of tag", "start": 2428.15, "duration": 2.76}, {"text": "is, which is a class variable.", "start": 2430.91, "duration": 2.52}, {"text": "It was changed by the previous\ncreation of my rabbit,", "start": 2433.43, "duration": 2.97}, {"text": "so now I'm going to\naccess that, right?", "start": 2436.4, "duration": 2.61}, {"text": "So the value is going to be 2.", "start": 2439.01, "duration": 1.782}, {"text": "And according to the\ncode, the next thing", "start": 2443.322, "duration": 1.708}, {"text": "I do after I create\nthe instance rid", "start": 2445.03, "duration": 3.6}, {"text": "is I'm going to increment tag.", "start": 2448.63, "duration": 2.22}, {"text": "So I'm incrementing the\nclass variable to be 3, OK?", "start": 2450.85, "duration": 5.71}, {"text": "So notice that all\nof my instances", "start": 2456.56, "duration": 1.43}, {"text": "are accessing this\nshared resource,", "start": 2457.99, "duration": 4.8}, {"text": "this shared variable called tag.", "start": 2462.79, "duration": 2.79}, {"text": "So as I'm creating\nmore and more rabbits,", "start": 2465.58, "duration": 1.95}, {"text": "they're all going to be\nincrementing the value of tag,", "start": 2467.53, "duration": 2.34}, {"text": "because it's shared among\nall of the instances.", "start": 2469.87, "duration": 3.61}, {"text": "And so this value, this\ntag class variable,", "start": 2473.48, "duration": 3.99}, {"text": "keeps track of how many\ndifferent instances of a rab--", "start": 2477.47, "duration": 3.36}, {"text": "of how many different\ninstances of rabbits", "start": 2480.83, "duration": 2.28}, {"text": "I've created throughout\nmy entire program, OK?", "start": 2483.11, "duration": 4.28}, {"text": "So the big idea here is that\nclass variables are shared", "start": 2487.39, "duration": 2.87}, {"text": "across all the instances.", "start": 2490.26, "duration": 1.53}, {"text": "So they can all modify them.", "start": 2491.79, "duration": 2.8}, {"text": "But these rids, right,\nthese instance variables,", "start": 2494.59, "duration": 6.26}, {"text": "are only for that\nparticular instance.", "start": 2500.85, "duration": 3.1}, {"text": "So r2 can't have access to r1's\nID value, nor could change it.", "start": 2503.95, "duration": 5.9}, {"text": "But it won't change it across\nall of the different instances,", "start": 2509.85, "duration": 4.852}, {"text": "OK?", "start": 2514.702, "duration": 0.5}, {"text": "So that's how the __init__\nmethod works of Rabbit, OK?", "start": 2520.84, "duration": 6.22}, {"text": "So we have these tags that\nkeep track of how many rabbits", "start": 2527.06, "duration": 2.63}, {"text": "we've created.", "start": 2529.69, "duration": 1.8}, {"text": "We have a couple of getter--\nwe have some getters here", "start": 2531.49, "duration": 3.107}, {"text": "to get all the parents.", "start": 2534.597, "duration": 0.958}, {"text": "So now let's add a somewhat\nmore interesting function.", "start": 2535.555, "duration": 4.465}, {"text": "Oh, I just want to mention,\nwhen I'm getting the rid,", "start": 2540.02, "duration": 3.21}, {"text": "I'm actually using this\ncool zfill() function here,", "start": 2543.23, "duration": 3.29}, {"text": "or method, which actually pads\nthe beginning of any number", "start": 2546.52, "duration": 4.33}, {"text": "with however many zeros in order\nto get to that number here.", "start": 2550.85, "duration": 3.33}, {"text": "So the number 1\nbecomes 001 and so on.", "start": 2554.18, "duration": 2.35}, {"text": "So it ensures that I have\nthis nice-looking ID type", "start": 2556.53, "duration": 3.98}, {"text": "thing that's always\nthree digits long.", "start": 2560.51, "duration": 1.65}, {"text": "So let's try to work\nwith this Rabbit object.", "start": 2564.88, "duration": 2.24}, {"text": "Let's define what happens when\nyou add two rabbits together,", "start": 2567.12, "duration": 3.71}, {"text": "OK-- in this class,\nnot in the real world.", "start": 2570.83, "duration": 2.9}, {"text": "OK.", "start": 2573.73, "duration": 1.12}, {"text": "So if I want to use the plus\noperator between two rabbit", "start": 2574.85, "duration": 4.91}, {"text": "instances, I have to implement\nthis __add__ method, OK?", "start": 2579.76, "duration": 7.99}, {"text": "So all I'm doing here is I'm\nreturning a new Rabbit object,", "start": 2587.75, "duration": 3.824}, {"text": "OK?", "start": 2591.574, "duration": 0.826}, {"text": "Whoops, sorry about that.", "start": 2592.4, "duration": 1.89}, {"text": "And let's recall the __init__\nmethod of the rabbit, OK?", "start": 2594.29, "duration": 4.02}, {"text": "So when I'm returning\na new Rabbit object,", "start": 2598.31, "duration": 2.084}, {"text": "I'm returning a new\nRabbit object that's", "start": 2600.394, "duration": 1.666}, {"text": "going to have an age of 0.", "start": 2602.06, "duration": 3.03}, {"text": "Self-- so the Rabbit object\nI'm calling this method on", "start": 2605.09, "duration": 3.09}, {"text": "is going to be the\nparent of the new rabbit.", "start": 2608.18, "duration": 3.36}, {"text": "And other is going to be the\nother parent of the new rabbit,", "start": 2611.54, "duration": 4.526}, {"text": "OK?", "start": 2616.066, "duration": 2.264}, {"text": "So if we look at the\ncode, and I run it,", "start": 2618.33, "duration": 20.62}, {"text": "this part here, I'm creating\nthree rabbits, r1, r2, and r3.", "start": 2638.95, "duration": 5.76}, {"text": "Notice this class\nvariable is working", "start": 2644.71, "duration": 3.51}, {"text": "as expected, because the\nIDs of each of my rabbits", "start": 2648.22, "duration": 2.46}, {"text": "increments as I\ncreate more rabbits.", "start": 2650.68, "duration": 1.56}, {"text": "So we have 001, 002, 003.", "start": 2652.24, "duration": 5.47}, {"text": "If I print r1, and\nr2, and r3-- that", "start": 2657.71, "duration": 2.79}, {"text": "was these three lines over\nhere-- the parents of r1 and r2", "start": 2660.5, "duration": 3.3}, {"text": "are None, because that's just\nthe default-- yes, the default", "start": 2663.8, "duration": 5.46}, {"text": "arguments for creating a rabbit.", "start": 2669.26, "duration": 2.69}, {"text": "To add two rabbits together,\nI use the plus operator", "start": 2671.95, "duration": 2.35}, {"text": "between two Rabbit objects.", "start": 2674.3, "duration": 3.16}, {"text": "And on the right here, I'm\ntesting rabbit addition.", "start": 2677.46, "duration": 3.18}, {"text": "And I can print out the\nIDs of all my rabbits.", "start": 2680.64, "duration": 4.175}, {"text": "And notice that, when I've\ncreated this new rabbit,", "start": 2684.815, "duration": 2.125}, {"text": "r4, the ID of it still\nkept incrementing.", "start": 2686.94, "duration": 3.42}, {"text": "So now, the ID of the\nfourth rabbit is 004.", "start": 2690.36, "duration": 5.31}, {"text": "And then, when I\nget r4's parents,", "start": 2695.67, "duration": 1.92}, {"text": "they are as we want them\nto be, so r1 and r2.", "start": 2697.59, "duration": 2.705}, {"text": "The other thing I want to do\nis to compare two rabbits.", "start": 2705.53, "duration": 3.721}, {"text": "So if I want to\ncompare two rabbits,", "start": 2709.251, "duration": 1.499}, {"text": "I want to make sure that\ntheir parents are the same.", "start": 2710.75, "duration": 2.62}, {"text": "So I can compare the first\nparent of the first rabbit", "start": 2713.37, "duration": 4.051}, {"text": "with the first parent\nof the second rabbit", "start": 2717.421, "duration": 1.749}, {"text": "and the second parent\nof the first rabbit", "start": 2719.17, "duration": 2.26}, {"text": "to the second parent\nof second rabbit", "start": 2721.43, "duration": 2.4}, {"text": "or getting the\ncombinations of those two.", "start": 2723.83, "duration": 2.82}, {"text": "So that's what these\ntwo Booleans are doing.", "start": 2726.65, "duration": 2.82}, {"text": "So these are going\nto tell me-- these", "start": 2729.47, "duration": 2.13}, {"text": "are going to be Boolean\nvalues, either True or False.", "start": 2731.6, "duration": 2.88}, {"text": "And I'm going to\nreturn either they", "start": 2734.48, "duration": 2.43}, {"text": "have the same\nparents of that type", "start": 2736.91, "duration": 1.95}, {"text": "or the same parents\ncriss-crossed, OK?", "start": 2738.86, "duration": 3.096}, {"text": "So here, notice\nthat I'm actually", "start": 2741.956, "duration": 1.374}, {"text": "comparing the IDs of the\nrabbits as opposed to the Rabbit", "start": 2743.33, "duration": 3.51}, {"text": "objects directly, OK?", "start": 2746.84, "duration": 2.38}, {"text": "So if, instead of\ncomparing the IDs in here,", "start": 2749.22, "duration": 4.31}, {"text": "I was comparing the parents\nthemselves, directly,", "start": 2753.53, "duration": 2.96}, {"text": "what would end up happening\nis this function, this method,", "start": 2756.49, "duration": 3.31}, {"text": "eq(), would get called\nover and over again.", "start": 2759.8, "duration": 2.97}, {"text": "Because here, we have\nparents that are rabbits.", "start": 2762.77, "duration": 3.06}, {"text": "And at some point, the parents\nof the very, very first rabbits", "start": 2765.83, "duration": 3.06}, {"text": "ever created by this\nprogram are None.", "start": 2768.89, "duration": 2.8}, {"text": "And so when I try\nto call-- when I", "start": 2771.69, "duration": 2.72}, {"text": "try to call the parent one of\nNone, that's going to give me", "start": 2774.41, "duration": 4.92}, {"text": "an error, OK, something\nlike an attribute error", "start": 2779.33, "duration": 2.4}, {"text": "where None doesn't have\nthis parent attribute, OK?", "start": 2781.73, "duration": 4.05}, {"text": "So that's why I'm\ncomparing IDs here, OK?", "start": 2785.78, "duration": 2.46}, {"text": "And the code in the\nlecture here shows", "start": 2788.24, "duration": 3.9}, {"text": "you some tests about whether\nrabbits have the same parents.", "start": 2792.14, "duration": 4.77}, {"text": "And I've created\nnew rabbits here,", "start": 2796.91, "duration": 1.56}, {"text": "r3 and r4, the\naddition of those two.", "start": 2798.47, "duration": 5.02}, {"text": "And r5 and r6 are going to have\nthe same parents down here--", "start": 2803.49, "duration": 3.69}, {"text": "True-- but r4 and r6 don't, OK?", "start": 2807.18, "duration": 4.53}, {"text": "So just to wrap it up,\nobject-oriented programming", "start": 2811.71, "duration": 2.58}, {"text": "is the idea of creating\nyour own collections of data", "start": 2814.29, "duration": 2.71}, {"text": "where you can organize\nthe information in a very", "start": 2817.0, "duration": 2.0}, {"text": "consistent manner.", "start": 2819.0, "duration": 0.81}, {"text": "So every single type\nof object that you", "start": 2819.81, "duration": 2.1}, {"text": "create of this particular\ntype that you create-- sorry,", "start": 2821.91, "duration": 3.36}, {"text": "every object instance\nof a particular type", "start": 2825.27, "duration": 2.76}, {"text": "is going to have the\nexact same data attributes", "start": 2828.03, "duration": 2.22}, {"text": "and the exact same methods, OK?", "start": 2830.25, "duration": 1.62}, {"text": "So this really comes back\nto the idea of decomposition", "start": 2831.87, "duration": 3.18}, {"text": "and abstraction in programming.", "start": 2835.05, "duration": 1.83}, {"text": "All right, thanks, everyone.", "start": 2836.88, "duration": 2.57}]