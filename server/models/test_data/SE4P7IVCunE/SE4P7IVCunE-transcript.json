[{"text": "The following content is\nprovided under a Creative", "start": 0.79, "duration": 2.4}, {"text": "Commons license.", "start": 3.19, "duration": 1.54}, {"text": "Your support will help\nMIT OpenCourseWare", "start": 4.73, "duration": 2.3}, {"text": "continue to offer high quality\neducational resources for free.", "start": 7.03, "duration": 4.36}, {"text": "To make a donation or\nview additional materials", "start": 11.39, "duration": 2.6}, {"text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare", "start": 13.99, "duration": 3.89}, {"text": "at ocw.mit.edu.", "start": 17.88, "duration": 0.96}, {"text": "ANA BELL: All right\neveryone, let's get started.", "start": 30.0, "duration": 2.79}, {"text": "So good afternoon.", "start": 32.79, "duration": 2.62}, {"text": "So this is the 3rd\nlecture of 6.0001 and 600.", "start": 35.41, "duration": 4.82}, {"text": "As always, please\ndownload slides and code", "start": 40.23, "duration": 1.92}, {"text": "to follow along.", "start": 42.15, "duration": 1.86}, {"text": "So a quick recap of\nwhat we did last time.", "start": 44.01, "duration": 2.53}, {"text": "Last time, we talked about\nstrings as a new object type,", "start": 46.54, "duration": 4.555}, {"text": "as sequences of characters.", "start": 51.095, "duration": 1.945}, {"text": "And then we introduced\ntwo new concepts", "start": 53.04, "duration": 3.817}, {"text": "that allowed us to\nwrite slightly more", "start": 56.857, "duration": 1.583}, {"text": "complicated programs.", "start": 58.44, "duration": 1.08}, {"text": "So we introduced branching, with\nthese keywords, if, elif, else.", "start": 59.52, "duration": 4.43}, {"text": "And branching allowed\nus to write programs", "start": 63.95, "duration": 1.75}, {"text": "that, us, as programmers,\ncould introduce decisions", "start": 65.7, "duration": 3.9}, {"text": "into our programs.", "start": 69.6, "duration": 1.65}, {"text": "And then we introduced two\ndifferent kinds of loops,", "start": 71.25, "duration": 2.22}, {"text": "while loops and for loops.", "start": 73.47, "duration": 1.162}, {"text": "And those also added a\nlittle bit of complexity", "start": 74.632, "duration": 1.958}, {"text": "to our programs.", "start": 76.59, "duration": 2.262}, {"text": "Today, we're going to talk a\nlittle bit more about strings.", "start": 78.852, "duration": 2.458}, {"text": "So we're going to see a\ncouple of more operations", "start": 81.31, "duration": 2.09}, {"text": "that you can do on strings\nand string objects.", "start": 83.4, "duration": 3.09}, {"text": "And then we're going\nto talk about three", "start": 86.49, "duration": 2.13}, {"text": "different algorithms,\na guess and check", "start": 88.62, "duration": 2.13}, {"text": "algorithm, an\napproximate solution", "start": 90.75, "duration": 2.22}, {"text": "algorithm, and a bisection\nmethod algorithm.", "start": 92.97, "duration": 5.42}, {"text": "So let's dive right in.", "start": 98.39, "duration": 1.32}, {"text": "We'll talk a little bit\nabout strings, first.", "start": 99.71, "duration": 2.01}, {"text": "So strings, we thought of them\nas sequences of characters,", "start": 101.72, "duration": 3.33}, {"text": "case sensitive, as we saw in\nprograms we wrote last lecture.", "start": 105.05, "duration": 5.25}, {"text": "And strings are objects.", "start": 110.3, "duration": 2.43}, {"text": "And we can do all of these\noperations on string objects,", "start": 112.73, "duration": 4.2}, {"text": "like test if they're equal, less\nthan, greater than, and so on.", "start": 116.93, "duration": 4.036}, {"text": "It turns out, we can do more\nthan just concatenate two", "start": 120.966, "duration": 3.174}, {"text": "strings together or do\nthese little tests on them.", "start": 124.14, "duration": 4.05}, {"text": "So we're going to start\nintroducing the idea", "start": 128.19, "duration": 3.46}, {"text": "of a function or a procedure.", "start": 131.65, "duration": 2.039}, {"text": "And we're going to see\nmore about functions", "start": 133.689, "duration": 1.791}, {"text": "and how you can write your\nown functions next lecture.", "start": 135.48, "duration": 3.42}, {"text": "But for today, you can\nthink of a function", "start": 138.9, "duration": 3.1}, {"text": "as sort of a procedure that\ndoes something for you.", "start": 142.0, "duration": 2.49}, {"text": "Someone already wrote this.", "start": 144.49, "duration": 1.705}, {"text": "So the first one\nwe're going to look at", "start": 146.195, "duration": 1.625}, {"text": "is a pretty popular function.", "start": 147.82, "duration": 2.95}, {"text": "And when applied on a string,\nthis function, called len,", "start": 150.77, "duration": 4.47}, {"text": "will tell you the\nlength of a string.", "start": 155.24, "duration": 1.75}, {"text": "So that's going to tell\nyou how many characters", "start": 156.99, "duration": 2.33}, {"text": "are in the string.", "start": 159.32, "duration": 2.91}, {"text": "And characters are going\nto be letters, digits,", "start": 162.23, "duration": 2.5}, {"text": "special characters,\nspaces, and so on.", "start": 164.73, "duration": 1.84}, {"text": "So it's just going to\ncount how many characters", "start": 166.57, "duration": 2.87}, {"text": "are in a string.", "start": 169.44, "duration": 1.53}, {"text": "So if I have the string\ns is equal to \"abc\"--", "start": 170.97, "duration": 3.01}, {"text": "remember a string is in\nquotation marks-- then,", "start": 173.98, "duration": 3.38}, {"text": "if I do this, if I write\nthis expression, len s, here,", "start": 177.36, "duration": 6.12}, {"text": "since it's an expression,\nit has a value.", "start": 183.48, "duration": 2.59}, {"text": "So it evaluates to\na certain value.", "start": 186.07, "duration": 2.24}, {"text": "And by definition, it's\ngoing to tell me what", "start": 188.31, "duration": 1.98}, {"text": "the length of the string,\nwhich is 3 characters long.", "start": 190.29, "duration": 2.455}, {"text": "Another thing that\nwe can do on strings", "start": 199.81, "duration": 1.659}, {"text": "is, since they're a\nsequence of characters,", "start": 201.469, "duration": 1.791}, {"text": "I might want to get\nwhat character is", "start": 203.26, "duration": 2.7}, {"text": "at a certain position.", "start": 205.96, "duration": 1.96}, {"text": "So we do this using this\nfancy word called indexing.", "start": 207.92, "duration": 5.15}, {"text": "But pretty much what\nindexing into a string means", "start": 213.07, "duration": 2.61}, {"text": "is you're going\nto tell Python, I", "start": 215.68, "duration": 3.24}, {"text": "want to know the character,\nat this certain position", "start": 218.92, "duration": 3.09}, {"text": "or at this certain\nindex, inside my sting.", "start": 222.01, "duration": 3.63}, {"text": "So once again, let's use this\nstring, s is equal to \"abc.\"", "start": 225.64, "duration": 4.14}, {"text": "And let's index into it.", "start": 229.78, "duration": 1.95}, {"text": "So in computer science, we start\nfrom 0, counting by convention.", "start": 231.73, "duration": 4.32}, {"text": "Notice, we had a problem\nset 0 in this class.", "start": 236.05, "duration": 2.49}, {"text": "Python is no different.", "start": 238.54, "duration": 1.0}, {"text": "So in Python, you start\nindexing at position 0.", "start": 239.54, "duration": 6.17}, {"text": "Or you start indexing at 0.", "start": 245.71, "duration": 3.24}, {"text": "So the first character, in your\nstring, we say is at position 0", "start": 248.95, "duration": 4.68}, {"text": "or at index 0.", "start": 253.63, "duration": 1.54}, {"text": "The next character in\nthe string is at index 1.", "start": 255.17, "duration": 2.69}, {"text": "And the next character in\nthe string is at index 2.", "start": 257.86, "duration": 2.219}, {"text": "In Python, it turns\nout, you can also", "start": 263.37, "duration": 1.68}, {"text": "use negative numbers to index.", "start": 265.05, "duration": 2.66}, {"text": "And if you index into the string\nwith negative 1, for example,", "start": 267.71, "duration": 8.05}, {"text": "that means that you want the\nlast character in the string.", "start": 275.76, "duration": 2.52}, {"text": "So the last character\nin your string", "start": 278.28, "duration": 1.74}, {"text": "is always going to be\nat position negative 1,", "start": 280.02, "duration": 3.086}, {"text": "the second-to-last\ncharacter is at negative 2,", "start": 283.106, "duration": 2.194}, {"text": "third-to-last character\nis at negative 3,", "start": 285.3, "duration": 2.22}, {"text": "and so on and so on.", "start": 287.52, "duration": 2.514}, {"text": "So the way you\nindex into a string", "start": 290.034, "duration": 1.416}, {"text": "is with these square\nbrackets, here.", "start": 291.45, "duration": 3.12}, {"text": "And this is the notation.", "start": 294.57, "duration": 1.95}, {"text": "So if I want the character\nat position 0 or at index 0,", "start": 296.52, "duration": 4.05}, {"text": "I say s, which is the\nstring I want to index into.", "start": 300.57, "duration": 3.409}, {"text": "And then, inside\nthe square brackets,", "start": 303.979, "duration": 1.541}, {"text": "I say what index I want.", "start": 305.52, "duration": 2.39}, {"text": "So s at index 0 is going to\nbe the value \"a.\" s at index 1", "start": 307.91, "duration": 4.8}, {"text": "is going to be the value\n\"b,\" and so on and so on.", "start": 312.71, "duration": 4.49}, {"text": "And we can also do\nnegative indexing, as well.", "start": 317.2, "duration": 4.18}, {"text": "I added this in here.", "start": 324.33, "duration": 0.9}, {"text": "If you do try to\nindex into a string", "start": 325.23, "duration": 2.13}, {"text": "beyond the limits\nof the string--", "start": 327.36, "duration": 2.52}, {"text": "and we can even\ntry this out, just", "start": 329.88, "duration": 1.95}, {"text": "to show you that it's not the\nend of the world if we do that.", "start": 331.83, "duration": 3.66}, {"text": "If we have s is equal to \"abc,\"\nand we have s at position 20,", "start": 335.49, "duration": 5.64}, {"text": "for example,\nobviously, my string", "start": 341.13, "duration": 2.53}, {"text": "is only length 3, so\nwhat's at position 20?", "start": 343.66, "duration": 3.34}, {"text": "I get an error.", "start": 347.0, "duration": 1.61}, {"text": "I call this angry\ntext, here, in Python.", "start": 348.61, "duration": 2.79}, {"text": "But really, the most\nrelevant thing to note", "start": 351.4, "duration": 2.04}, {"text": "is these last couple\nof lines here.", "start": 353.44, "duration": 4.23}, {"text": "This tells you what\nline is problematic.", "start": 357.67, "duration": 3.7}, {"text": "So s at position\n20 has an issue.", "start": 361.37, "duration": 4.07}, {"text": "And this last line here tells\nme what actual error I have.", "start": 365.44, "duration": 3.36}, {"text": "So it's an index\nerror, which means", "start": 368.8, "duration": 1.71}, {"text": "I'm trying to index too\nfar into the string,", "start": 370.51, "duration": 2.19}, {"text": "because it only has\nthree characters.", "start": 372.7, "duration": 1.97}, {"text": "So it's nice to be able to\nget a single character out", "start": 382.23, "duration": 3.03}, {"text": "of my string.", "start": 385.26, "duration": 1.08}, {"text": "But sometimes, I might\nwant to get a substring.", "start": 386.34, "duration": 2.97}, {"text": "So I want to start at\nthe first character", "start": 389.31, "duration": 3.33}, {"text": "and go halfway into\nthe string, or I", "start": 392.64, "duration": 1.86}, {"text": "want to take a few\ncharacters in between,", "start": 394.5, "duration": 3.732}, {"text": "or I want to skip every other\nletter or something like that", "start": 398.232, "duration": 2.458}, {"text": "in my string.", "start": 400.69, "duration": 1.89}, {"text": "So if I want to do this slightly\nmore complicated interaction", "start": 402.58, "duration": 3.9}, {"text": "with strings, we call that\nslicing, slicing into a string.", "start": 406.48, "duration": 6.06}, {"text": "And this notation here should\nseem a little bit familiar,", "start": 412.54, "duration": 3.51}, {"text": "because we saw it last lecture\nwhen we did it with range.", "start": 416.05, "duration": 3.66}, {"text": "We had a start,\nstop, and a step.", "start": 419.71, "duration": 3.134}, {"text": "The notation was a\nlittle bit different,", "start": 422.844, "duration": 1.666}, {"text": "because, in range, we had\nopen-close parentheses", "start": 424.51, "duration": 2.7}, {"text": "and commas in between.", "start": 427.21, "duration": 2.16}, {"text": "But except for that, this\nsort of works the same.", "start": 429.37, "duration": 4.56}, {"text": "The start is the\nindex, starting from 0,", "start": 433.93, "duration": 3.69}, {"text": "from where you want to\nslice into this string.", "start": 437.62, "duration": 2.49}, {"text": "The stop is the stop index.", "start": 440.11, "duration": 3.09}, {"text": "So you're going to go\nup until stop minus 1", "start": 443.2, "duration": 2.58}, {"text": "and take that index.", "start": 445.78, "duration": 1.65}, {"text": "And then the step is how many\nletters you wish to take.", "start": 447.43, "duration": 4.6}, {"text": "So this is the\nfull notation here.", "start": 455.24, "duration": 2.16}, {"text": "But sometimes, you\ncan not give it", "start": 457.4, "duration": 1.86}, {"text": "a third sort of number in here.", "start": 459.26, "duration": 5.292}, {"text": "So if you only give\nit two numbers,", "start": 464.552, "duration": 1.458}, {"text": "then, to Python, that represents\njust the start and the stop.", "start": 466.01, "duration": 3.207}, {"text": "And by default, step\nis going to be 1.", "start": 469.217, "duration": 1.583}, {"text": "And there's a lot of other\nthings you can do with strings.", "start": 473.91, "duration": 3.59}, {"text": "You can omit numbers and\njust leave colons in Python.", "start": 477.5, "duration": 2.85}, {"text": "By definition, the way\nthat whoever wrote slicing", "start": 483.16, "duration": 4.48}, {"text": "had decided, if\nyou omit numbers,", "start": 487.64, "duration": 2.72}, {"text": "then it's going to be\nequivalent to these things here.", "start": 490.36, "duration": 4.29}, {"text": "So we slice using square\nbrackets, just like indexing.", "start": 494.65, "duration": 2.84}, {"text": "Except now, we can\ngive it two numbers.", "start": 497.49, "duration": 3.84}, {"text": "So with this string, s, if\nwe slice into the string s,", "start": 501.33, "duration": 10.16}, {"text": "we start from index 3\nand go up until index 6.", "start": 511.49, "duration": 4.5}, {"text": "So if we have abcdefgh, this is\nposition 0, 1, 2, 3, 4, 5, 6,", "start": 515.99, "duration": 11.29}, {"text": "7.", "start": 527.28, "duration": 0.5}, {"text": "And you just count.", "start": 530.47, "duration": 2.04}, {"text": "So s, starting from 3 and going\ntill 6, is going to start here,", "start": 532.51, "duration": 6.41}, {"text": "3.", "start": 538.92, "duration": 1.99}, {"text": "So it's going to come\nup with-- sorry d.", "start": 540.91, "duration": 3.54}, {"text": "And then we're going to take e.", "start": 544.45, "duration": 2.19}, {"text": "And then we're going to take f.", "start": 546.64, "duration": 1.98}, {"text": "And since we're going\nuntil stop minus 1,", "start": 548.62, "duration": 2.01}, {"text": "we're not going to take g.", "start": 550.63, "duration": 3.54}, {"text": "Because this is position 6, and\nwe're going until 6 minus 1.", "start": 554.17, "duration": 2.88}, {"text": "The next one here, 3, 6, 2\nis going every other one.", "start": 562.02, "duration": 4.22}, {"text": "So we start at 3, and then\nwe skip every other one,", "start": 566.24, "duration": 3.58}, {"text": "so we go d but not e, and\nthen f, and then stop.", "start": 569.82, "duration": 3.47}, {"text": "If you do s and then nothing\ninside except colons,", "start": 577.63, "duration": 5.99}, {"text": "notice that you're going\nto have s, and then", "start": 583.62, "duration": 2.37}, {"text": "nothing, and then colon,\nnothing, colon, nothing.", "start": 585.99, "duration": 3.48}, {"text": "So nothing for start, nothing\nfor stop, nothing for step.", "start": 589.47, "duration": 2.97}, {"text": "And that's just going to value\nit to the string, itself.", "start": 592.44, "duration": 3.87}, {"text": "It's the same as 0 to the\nlength s going every step.", "start": 596.31, "duration": 4.56}, {"text": "This one might\nactually be useful.", "start": 600.87, "duration": 2.1}, {"text": "It reverses the string\nautomatically for you.", "start": 602.97, "duration": 2.43}, {"text": "So with this one\nlittle line here,", "start": 605.4, "duration": 1.8}, {"text": "you can get the\ninverse of your string.", "start": 607.2, "duration": 3.01}, {"text": "And that's equivalent to that.", "start": 610.21, "duration": 1.25}, {"text": "So the minus 1 represents\nstarting from the end", "start": 614.4, "duration": 2.24}, {"text": "and going back every letter.", "start": 616.64, "duration": 3.38}, {"text": "And then this one's a little\nbit more complicated but also", "start": 620.02, "duration": 3.12}, {"text": "not too bad.", "start": 623.14, "duration": 0.645}, {"text": "So as we're doing\nthese string slices,", "start": 630.02, "duration": 3.687}, {"text": "again, if you're unsure\nwhat something does,", "start": 633.707, "duration": 1.833}, {"text": "just type it into Spider.", "start": 635.54, "duration": 1.68}, {"text": "And you might be surprised.", "start": 637.22, "duration": 1.672}, {"text": "You might not be.", "start": 638.892, "duration": 0.708}, {"text": "But it's a good way\nto check yourself,", "start": 639.6, "duration": 1.583}, {"text": "to make sure you're\nunderstanding what's happening.", "start": 641.183, "duration": 4.457}, {"text": "One thing I want to\nmention, and it's", "start": 645.64, "duration": 2.67}, {"text": "good to keep this in\nthe back of your mind.", "start": 648.31, "duration": 2.23}, {"text": "We're going to come\nback to this as we", "start": 650.54, "duration": 1.64}, {"text": "start talking about slightly\nmore complicated object types.", "start": 652.18, "duration": 4.11}, {"text": "But strings are immutable.", "start": 656.29, "duration": 2.122}, {"text": "So just keep this word\nin the back of your mind", "start": 658.412, "duration": 1.958}, {"text": "as we go through this class.", "start": 660.37, "duration": 1.61}, {"text": "And what I mean by this is\nthat an actual string object,", "start": 661.98, "duration": 3.58}, {"text": "once it's created,\ncannot be modified.", "start": 665.56, "duration": 3.48}, {"text": "This might not mean\nanything right now.", "start": 669.04, "duration": 2.37}, {"text": "But let me just draw\na little something.", "start": 671.41, "duration": 3.53}, {"text": "Let's say I have this\nstring, s is equal to hello.", "start": 674.94, "duration": 2.634}, {"text": "Remember, in the\nfirst lecture, we", "start": 677.574, "duration": 1.416}, {"text": "drew a diagram\nsort of like this.", "start": 678.99, "duration": 2.09}, {"text": "This is my memory.", "start": 681.08, "duration": 1.81}, {"text": "I have this object \"hello.\"", "start": 682.89, "duration": 3.1}, {"text": "And this object, \"hello\" is\nbound to this variable s.", "start": 685.99, "duration": 3.37}, {"text": "So now I can access the object\n\"hello\" using this variable s.", "start": 689.36, "duration": 6.98}, {"text": "Now you might think, well, since\nI could index into a string,", "start": 696.34, "duration": 3.15}, {"text": "I might be able to just say\nsomething like, s at position 0", "start": 699.49, "duration": 4.11}, {"text": "is equal to y.", "start": 703.6, "duration": 1.89}, {"text": "And that will just change\nthe little h into a y,", "start": 705.49, "duration": 2.67}, {"text": "and I'll have a new object.", "start": 708.16, "duration": 1.685}, {"text": "Well strings are immutable,\nwhich means, in Python,", "start": 709.845, "duration": 2.125}, {"text": "you're not actually\nallowed to do this.", "start": 711.97, "duration": 1.35}, {"text": "And it gives you an error\nif you do try to do that.", "start": 713.32, "duration": 2.124}, {"text": "If you want the variable s to\npoint to the string, Y-E-L-L-O,", "start": 718.2, "duration": 5.754}, {"text": "you could just say s\nis equal to Y-E-L-L-O.", "start": 723.954, "duration": 4.256}, {"text": "Or you could do string\noperations like this.", "start": 728.21, "duration": 2.76}, {"text": "And this takes the y\nand it concatenates it", "start": 730.97, "duration": 2.55}, {"text": "to the string s,\nall of the elements", "start": 733.52, "duration": 4.5}, {"text": "starting from position\n1, which is e, l, l, o.", "start": 738.02, "duration": 3.414}, {"text": "So this makes Y-E-L-L-O.", "start": 741.434, "duration": 3.136}, {"text": "Now internally,\nwhat happens when", "start": 744.57, "duration": 1.92}, {"text": "I write this line\nis Python says,", "start": 746.49, "duration": 1.74}, {"text": "OK, I'm going to break my\nbond with this original object", "start": 748.23, "duration": 3.1}, {"text": "\"hello.\"", "start": 751.33, "duration": 1.19}, {"text": "I'm going to bind\nmy string variable", "start": 752.52, "duration": 4.09}, {"text": "s to the new object \"yello.\"\nand this other, old object", "start": 756.61, "duration": 3.44}, {"text": "still is in memory somewhere.", "start": 760.05, "duration": 2.41}, {"text": "But it's an entirely different\nobject that I've created here.", "start": 762.46, "duration": 4.75}, {"text": "Again, it might not\nmean anything right now,", "start": 767.21, "duration": 1.99}, {"text": "but just keep this in\nthe back of your mind,", "start": 769.2, "duration": 1.88}, {"text": "strings are immutable.", "start": 771.08, "duration": 1.51}, {"text": "So the next thing I\nwant to talk about", "start": 779.45, "duration": 2.43}, {"text": "is a little bit of\nrecap on for loops.", "start": 781.88, "duration": 4.72}, {"text": "And we're going to see how\nwe can apply for loops, very", "start": 786.6, "duration": 2.48}, {"text": "easily, to write very\nnice, readable code when", "start": 789.08, "duration": 3.54}, {"text": "dealing with strings.", "start": 792.62, "duration": 1.89}, {"text": "So remember that for\nloops had a loop variable.", "start": 794.51, "duration": 3.87}, {"text": "My loop variable being this var,\nhere, in this particular case.", "start": 798.38, "duration": 3.93}, {"text": "It can be anything you want.", "start": 802.31, "duration": 2.19}, {"text": "And this variable, in\nthis particular case,", "start": 804.5, "duration": 2.76}, {"text": "iterates over this sequence\nof numbers, 0, 1, 2, 3, 4.", "start": 807.26, "duration": 5.27}, {"text": "So the very first time through\nthe loop, var has a value of 0.", "start": 812.53, "duration": 4.14}, {"text": "It does the expressions\nin the loop.", "start": 816.67, "duration": 1.93}, {"text": "As soon as they're done,\nvar takes the value 1.", "start": 818.6, "duration": 3.004}, {"text": "It does all the\nexpressions in the loop.", "start": 821.604, "duration": 1.666}, {"text": "And then var takes the value\n2, and it does that all", "start": 823.27, "duration": 2.67}, {"text": "the way up until 0, 1, 2.", "start": 825.94, "duration": 2.28}, {"text": "And the last time it goes around\nis with var is equal to 3.", "start": 828.22, "duration": 5.21}, {"text": "And remember, we said that\nwe can customize our range", "start": 833.43, "duration": 2.31}, {"text": "in order to start\nfrom a custom value", "start": 835.74, "duration": 2.37}, {"text": "to end at a different value\nand to skip certain numbers.", "start": 838.11, "duration": 3.48}, {"text": "So, so far, we've only\nbeen using for loops", "start": 844.79, "duration": 2.58}, {"text": "over a sequence of numbers.", "start": 847.37, "duration": 1.25}, {"text": "But actually, for loops are a\nlot more powerful than that.", "start": 848.62, "duration": 3.16}, {"text": "You can use them to iterate\nover any sequence of values", "start": 851.78, "duration": 5.19}, {"text": "not just numbers\nbut also strings.", "start": 856.97, "duration": 4.86}, {"text": "So here are two pieces of code,\nthis one and this one here.", "start": 861.83, "duration": 6.71}, {"text": "These two pieces of code\nboth do the exact same thing.", "start": 868.54, "duration": 2.555}, {"text": "To me, possibly to\nyou, this one looks", "start": 873.62, "duration": 3.45}, {"text": "a lot more readable than this\none, just at a first glance.", "start": 877.07, "duration": 2.93}, {"text": "If I were to read this one,\njust using the keywords", "start": 883.11, "duration": 3.6}, {"text": "and variables here, it would\nsound like broken English.", "start": 886.71, "duration": 7.41}, {"text": "But you could decipher\nwhat I'm trying to say.", "start": 894.12, "duration": 2.76}, {"text": "For a char in a string s,\nif the char is equal to \"i\"", "start": 896.88, "duration": 4.71}, {"text": "or a char is equal to \"u,\"\nprint \"There is an i or a u.\"", "start": 901.59, "duration": 5.475}, {"text": "It sounds weird, but\nyou could probably", "start": 907.065, "duration": 2.265}, {"text": "tell what I was\ntrying to do here.", "start": 909.33, "duration": 2.52}, {"text": "Whereas up here,\nit's a little more", "start": 911.85, "duration": 2.28}, {"text": "complicated to tell\nwhat I'm doing.", "start": 914.13, "duration": 1.5}, {"text": "You have to sort of think\nabout it a little bit.", "start": 915.63, "duration": 2.1}, {"text": "For some index in\nthis range of numbers,", "start": 917.73, "duration": 2.76}, {"text": "0 through the\nlength of the string", "start": 920.49, "duration": 3.36}, {"text": "s, if s, at position index, is\nan \"i\" or s at position index", "start": 923.85, "duration": 5.04}, {"text": "is a \"u\" print, \"There\nis an i or a u.\"", "start": 928.89, "duration": 4.27}, {"text": "Both of these codes just\ngo through the string s.", "start": 933.16, "duration": 3.78}, {"text": "And if it encounters a\nletter that's an i or a u,", "start": 936.94, "duration": 3.06}, {"text": "it's just going to print\nout this string here.", "start": 940.0, "duration": 2.01}, {"text": "But this bottom one is\na lot more pythonic.", "start": 942.01, "duration": 2.55}, {"text": "It's an actual word created\nby the Python community.", "start": 944.56, "duration": 3.9}, {"text": "And it just looks pretty, right?", "start": 948.46, "duration": 4.325}, {"text": "You can tell what this\ncode's supposed to do.", "start": 952.785, "duration": 2.939}, {"text": "Whereas this one is a little\nbit harder to decipher.", "start": 955.724, "duration": 2.166}, {"text": "So that's sort of an\nillustration of a for loop", "start": 961.62, "duration": 2.58}, {"text": "over a sequence of characters.", "start": 964.2, "duration": 2.79}, {"text": "So char is going to be\na loop variable, still.", "start": 966.99, "duration": 3.54}, {"text": "And the loop variable,\ninstead of iterating over", "start": 970.53, "duration": 3.39}, {"text": "a set of numbers, it's going\nto iterate over every character", "start": 973.92, "duration": 3.3}, {"text": "in s, directly.", "start": 977.22, "duration": 1.95}, {"text": "And char is going\nto be a character.", "start": 979.17, "duration": 3.72}, {"text": "It's going to be a letter.", "start": 982.89, "duration": 1.571}, {"text": "So here's a more\ncomplicated example.", "start": 988.9, "duration": 2.79}, {"text": "I wrote this code a\ncouple of years ago.", "start": 991.69, "duration": 3.0}, {"text": "And it was my attempt at\ncreating robot cheerleaders ,", "start": 994.69, "duration": 3.18}, {"text": "because I needed\nsome motivation.", "start": 997.87, "duration": 2.61}, {"text": "And then I googled, last\nnight, \"robot cheerleaders,\"", "start": 1000.48, "duration": 3.93}, {"text": "and was not disappointed.", "start": 1004.41, "duration": 1.62}, {"text": "Created this GIF.", "start": 1006.03, "duration": 0.99}, {"text": "It looks pretty cool.", "start": 1007.02, "duration": 2.026}, {"text": "And it looks like they\nkind of stole my idea.", "start": 1009.046, "duration": 1.874}, {"text": "But that's fine.", "start": 1010.92, "duration": 2.38}, {"text": "So let's look at what this\ncode's supposed to do.", "start": 1013.3, "duration": 2.807}, {"text": "I'm going to run it.", "start": 1016.107, "duration": 0.833}, {"text": "I'm going to run it, and\nthen we'll go through it.", "start": 1025.467, "duration": 2.083}, {"text": "All right, it prints out,\n\"I will cheer for you!", "start": 1032.2, "duration": 2.32}, {"text": "Enter a word.\"", "start": 1034.52, "duration": 1.15}, {"text": "You know what, I like robots,\nso I'll put in \"ROBOTS.\"", "start": 1035.67, "duration": 4.86}, {"text": "How enthusiastic\nam I about robots?", "start": 1040.53, "duration": 2.37}, {"text": "Let's say 6.", "start": 1042.9, "duration": 3.04}, {"text": "So what this is going to\nprint is-- it's a cheerleader,", "start": 1045.94, "duration": 3.12}, {"text": "right? \"Give me an r, r.\" \"Give\nme an o, o.\" \"Give me a b, b,\"", "start": 1049.06, "duration": 3.21}, {"text": "and so on and so on.", "start": 1052.27, "duration": 1.56}, {"text": "\"What does that spell?", "start": 1053.83, "duration": 1.15}, {"text": "ROBOTS.\"", "start": 1054.98, "duration": 0.77}, {"text": "And it's going to print it 6\ntimes, because I'm 6 out of 10", "start": 1055.75, "duration": 3.57}, {"text": "enthusiastic about robots.", "start": 1059.32, "duration": 2.16}, {"text": "So that's pretty much what\nthat code's supposed to do.", "start": 1061.48, "duration": 2.262}, {"text": "And you can write it using\nwhat we've learned so far.", "start": 1063.742, "duration": 2.208}, {"text": "Now let's go through\nit a little bit.", "start": 1068.7, "duration": 1.57}, {"text": "And I'm going to show\nyou just how easy it", "start": 1070.27, "duration": 2.3}, {"text": "is to convert this code using\na for loop over characters.", "start": 1072.57, "duration": 4.65}, {"text": "Right now, what it does is\nit asks the user for input,", "start": 1077.22, "duration": 6.46}, {"text": "so a word and a number.", "start": 1083.68, "duration": 3.5}, {"text": "And then it does this\nthing, here, right?", "start": 1087.18, "duration": 2.04}, {"text": "First, it uses a while loop.", "start": 1089.22, "duration": 3.59}, {"text": "And second, it uses indexing.", "start": 1092.81, "duration": 3.93}, {"text": "And what tips you off\nthat it's using indexing", "start": 1096.74, "duration": 4.08}, {"text": "is it's using the square\nbracket, here, into the word.", "start": 1100.82, "duration": 3.42}, {"text": "And obviously, it's\nusing a while loop.", "start": 1108.26, "duration": 2.22}, {"text": "And it has to first create\na counter, initialize it.", "start": 1110.48, "duration": 4.192}, {"text": "And then, down here, it's\ngoing to increment it", "start": 1114.672, "duration": 1.958}, {"text": "inside the while loop.", "start": 1116.63, "duration": 1.38}, {"text": "If you remember,\nthat's sort of what", "start": 1118.01, "duration": 2.76}, {"text": "we need to do for while loops.", "start": 1120.77, "duration": 3.52}, {"text": "So it's going to start at 0,\nand it's just basically going", "start": 1124.29, "duration": 2.76}, {"text": "to go through index i is\nequal to 0, 1, 2, 3 4, which", "start": 1127.05, "duration": 3.6}, {"text": "is going to go all the way to\nthe end of the word, whatever", "start": 1130.65, "duration": 3.33}, {"text": "the user typed in, in\nthis case \"ROBOTS.\"", "start": 1133.98, "duration": 2.73}, {"text": "It's going to get the\ncharacter at that position.", "start": 1136.71, "duration": 3.48}, {"text": "word at position i is\ngoing to be a character.", "start": 1140.19, "duration": 5.28}, {"text": "This line here is just for the\ncheerleading to make sense.", "start": 1145.47, "duration": 9.38}, {"text": "It's just to take\ncare of letters that", "start": 1154.85, "duration": 2.55}, {"text": "make sense to use an, right?", "start": 1157.4, "duration": 2.94}, {"text": "So give me a b, give me an b.", "start": 1160.34, "duration": 2.64}, {"text": "So give me an b does\nnot make sense, right?", "start": 1162.98, "duration": 2.52}, {"text": "So that's just\ntaking care of that.", "start": 1165.5, "duration": 3.36}, {"text": "And I'm using this\nin keyword to check", "start": 1168.86, "duration": 2.64}, {"text": "whether the character-- so\nthe character, r, for example,", "start": 1171.5, "duration": 3.87}, {"text": "in robots-- is\ninside an letters.", "start": 1175.37, "duration": 3.87}, {"text": "And an letters I've defined\nup here, which is these", "start": 1179.24, "duration": 2.25}, {"text": "are all the letters\nthat make sense", "start": 1181.49, "duration": 1.95}, {"text": "to put an an before the letter.", "start": 1183.44, "duration": 4.64}, {"text": "So give me an r for\nexample, here, on the right.", "start": 1188.08, "duration": 2.38}, {"text": "And so if it makes sense to\nuse an before the letter,", "start": 1195.95, "duration": 2.27}, {"text": "use that, and otherwise\nuse just an a.", "start": 1198.22, "duration": 5.77}, {"text": "And after I'm done, I say,\n\"What does that spell?\"", "start": 1203.99, "duration": 2.13}, {"text": "And then it's just a for loop\nthat goes times many times", "start": 1206.12, "duration": 4.35}, {"text": "and prints out the word\nand the exclamation mark.", "start": 1210.47, "duration": 2.42}, {"text": "So this code might have been\na little bit more intuitive", "start": 1223.0, "duration": 3.87}, {"text": "if I rewrote it or\nif I'd originally", "start": 1226.87, "duration": 2.19}, {"text": "written it with a for loop.", "start": 1229.06, "duration": 4.74}, {"text": "So this part here, the\nwhile loop and indexing", "start": 1233.8, "duration": 3.0}, {"text": "and creating my\noriginal counter,", "start": 1236.8, "duration": 2.07}, {"text": "we can get rid of that.", "start": 1238.87, "duration": 3.12}, {"text": "And we can replace it with\nthis, for char in word.", "start": 1241.99, "duration": 4.27}, {"text": "I'm originally using\nchar, so I can use char", "start": 1246.26, "duration": 3.12}, {"text": "as my loop variable again.", "start": 1249.38, "duration": 2.19}, {"text": "And simply, I'm just going to\niterate over the word, itself.", "start": 1251.57, "duration": 3.72}, {"text": "So now, instead of\nhaving this mess here, I", "start": 1257.87, "duration": 2.1}, {"text": "have a one-liner that says,\nfor every character in my word,", "start": 1259.97, "duration": 3.51}, {"text": "do all this stuff here.", "start": 1263.48, "duration": 1.26}, {"text": "So that remains the same.", "start": 1264.74, "duration": 1.5}, {"text": "And then I don't even need to\nincrement a counter variable,", "start": 1266.24, "duration": 2.49}, {"text": "because I'm not using\nwhile loops anymore.", "start": 1268.73, "duration": 1.44}, {"text": "I'm just using a for loop.", "start": 1270.17, "duration": 1.23}, {"text": "So the code becomes-- delete\nthat-- for char in word.", "start": 1274.07, "duration": 6.33}, {"text": "And then delete that.", "start": 1280.4, "duration": 2.82}, {"text": "And that does the\nexact same thing.", "start": 1283.22, "duration": 1.972}, {"text": "And it's a lot more readable.", "start": 1285.192, "duration": 1.208}, {"text": "So this was our toolbox at\nthe beginning of this course.", "start": 1290.57, "duration": 4.2}, {"text": "We are two and half,\nI guess, lectures in.", "start": 1294.77, "duration": 3.236}, {"text": "These are the things\nwe've added to it.", "start": 1298.006, "duration": 1.624}, {"text": "We know integer,\nfloats, Booleans.", "start": 1299.63, "duration": 2.91}, {"text": "We know a bit of string\nmanipulation, math operations.", "start": 1302.54, "duration": 3.69}, {"text": "We added, recently, these\nconditionals and branching", "start": 1306.23, "duration": 2.64}, {"text": "to write slightly more\ninteresting programs.", "start": 1308.87, "duration": 2.94}, {"text": "And now we have loops,\nfor and while loops", "start": 1311.81, "duration": 2.1}, {"text": "to add interesting and\nmore complicated programs.", "start": 1313.91, "duration": 3.184}, {"text": "So with these, the second\npart of this lecture", "start": 1317.094, "duration": 1.916}, {"text": "is going to be looking at\nthree different algorithms.", "start": 1319.01, "duration": 3.06}, {"text": "That's the sort of\ncomputer science part", "start": 1322.07, "duration": 1.68}, {"text": "of this class, Introduction\nto Computer Science", "start": 1323.75, "duration": 2.43}, {"text": "and Programming using Python.", "start": 1326.18, "duration": 2.19}, {"text": "Don't let the word\nalgorithm scare you.", "start": 1328.37, "duration": 1.68}, {"text": "They're not that complicated.", "start": 1334.52, "duration": 2.19}, {"text": "You just have to sort of\nthink a little bit about them.", "start": 1336.71, "duration": 3.24}, {"text": "And you'll be able to get them.", "start": 1339.95, "duration": 2.61}, {"text": "So we're going to look\nat three algorithms, all", "start": 1342.56, "duration": 2.64}, {"text": "in the context of solving\none problem, which", "start": 1345.2, "duration": 1.89}, {"text": "is finding the cube root.", "start": 1347.09, "duration": 1.906}, {"text": "The first algorithm\nis guess and check,", "start": 1348.996, "duration": 1.713}, {"text": "then we're going to look at\nan approximation algorithm,", "start": 1350.709, "duration": 2.291}, {"text": "and then a bisection search.", "start": 1353.0, "duration": 3.72}, {"text": "So the first is the\nguess and check method.", "start": 1356.72, "duration": 3.18}, {"text": "You might have done this,\nin math, in high school.", "start": 1359.9, "duration": 4.94}, {"text": "The guess and check method\nis also sometimes called", "start": 1364.84, "duration": 2.57}, {"text": "exhaustive enumeration.", "start": 1367.41, "duration": 1.05}, {"text": "And you'll see why.", "start": 1368.46, "duration": 0.81}, {"text": "So given a problem, let's say,\nfind the cube root of a number,", "start": 1369.27, "duration": 4.11}, {"text": "let's say you can guess a\nstarting value for a solution.", "start": 1373.38, "duration": 2.56}, {"text": "The guess and check\nmethod works if you're", "start": 1379.05, "duration": 1.75}, {"text": "able to check if your\nsolution is correct.", "start": 1380.8, "duration": 2.47}, {"text": "So if your guess is\noriginally 0, you can say,", "start": 1383.27, "duration": 3.17}, {"text": "is 0 cubed equal to the\ncube of whatever I'm trying", "start": 1386.44, "duration": 5.64}, {"text": "to find the cube root of?", "start": 1392.08, "duration": 1.167}, {"text": "So if I'm trying to\nfind the cube root of 8,", "start": 1393.247, "duration": 1.833}, {"text": "is 0 cubed equal to 8?", "start": 1395.08, "duration": 2.51}, {"text": "No.", "start": 1397.59, "duration": 1.91}, {"text": "So the solution is not correct.", "start": 1399.5, "duration": 1.77}, {"text": "If it's not correct,\nguess another value.", "start": 1401.27, "duration": 1.92}, {"text": "Do it systematically\nuntil you find a solution", "start": 1403.19, "duration": 3.18}, {"text": "or you've guessed all\nthe possible values,", "start": 1406.37, "duration": 5.9}, {"text": "you've exhausted all\nof your search space.", "start": 1412.27, "duration": 1.75}, {"text": "So here's a very simple guess\nand check code that finds", "start": 1416.56, "duration": 2.9}, {"text": "the cube root of a number.", "start": 1419.46, "duration": 2.01}, {"text": "So I'm trying to find\nthe cube root of 8.", "start": 1421.47, "duration": 1.95}, {"text": "So my cube is 8.", "start": 1423.42, "duration": 2.31}, {"text": "I'm going to have a\nfor loop that says,", "start": 1425.73, "duration": 2.25}, {"text": "I'm going to start from 0.", "start": 1427.98, "duration": 2.73}, {"text": "And I'm going to go\nall the way up to--", "start": 1430.71, "duration": 3.27}, {"text": "So I'm going to start from 0\nand go all the way up to 8.", "start": 1433.98, "duration": 5.099}, {"text": "For every one of these\nnumbers, I'm going to say,", "start": 1439.079, "duration": 2.041}, {"text": "is my guess to the power\nof 3 equal to the cube 8?", "start": 1441.12, "duration": 3.78}, {"text": "And if it is, I'm going\nto print out this message.", "start": 1444.9, "duration": 4.32}, {"text": "Pretty simple, however, this\ncode is not very user friendly,", "start": 1449.22, "duration": 4.87}, {"text": "right?", "start": 1454.09, "duration": 0.5}, {"text": "If the user wants to\nfind the cube root of 9,", "start": 1454.59, "duration": 3.27}, {"text": "they're not going to get\nany output, because we never", "start": 1457.86, "duration": 2.97}, {"text": "print anything in\nthe case of the guess", "start": 1460.83, "duration": 4.56}, {"text": "not being a perfect cube.", "start": 1465.39, "duration": 2.732}, {"text": "or the cube not\nbeing a perfect cube.", "start": 1468.122, "duration": 3.318}, {"text": "So we can modify the\ncode a little bit", "start": 1471.44, "duration": 2.86}, {"text": "to add two extra features.", "start": 1474.3, "duration": 3.569}, {"text": "The first is we're\ngoing to be able to deal", "start": 1477.869, "duration": 1.791}, {"text": "with negative cubes,\nwhich is kind of cool.", "start": 1479.66, "duration": 4.14}, {"text": "And the second is we're\ngoing to tell the user,", "start": 1483.8, "duration": 2.94}, {"text": "if the cube is not\na perfect cube,", "start": 1486.74, "duration": 2.19}, {"text": "hey, this cube is\nnot a perfect cube.", "start": 1488.93, "duration": 1.6}, {"text": "So we're not going to\nsilently just fail,", "start": 1490.53, "duration": 2.15}, {"text": "because then the user\nhas some sort of feedback", "start": 1492.68, "duration": 3.44}, {"text": "on their input.", "start": 1496.12, "duration": 1.92}, {"text": "So let's step through this code.", "start": 1498.04, "duration": 2.96}, {"text": "We have, first of all, a\nfor loop just like before.", "start": 1501.0, "duration": 4.95}, {"text": "And we're going to go\nthrough 0 to 8 in this case.", "start": 1505.95, "duration": 7.12}, {"text": "We're using the absolute\nvalue, because we", "start": 1513.07, "duration": 1.75}, {"text": "might want to find the cube\nroot of negative numbers.", "start": 1514.82, "duration": 2.835}, {"text": "First thing we're doing\nis doing this check here.", "start": 1520.32, "duration": 3.84}, {"text": "Instead of guessing whether\nthe guess to the power of 3", "start": 1527.4, "duration": 4.86}, {"text": "is equal to the\ncube, we're going", "start": 1532.26, "duration": 1.92}, {"text": "to check if it's\ngreater or equal to,", "start": 1534.18, "duration": 2.01}, {"text": "and we're going to do that\nfor the following reason.", "start": 1536.19, "duration": 3.18}, {"text": "So if we're trying to\nfind the cube root of 8,", "start": 1539.37, "duration": 2.79}, {"text": "for example, versus a\ncube root of 9-- this is 8", "start": 1542.16, "duration": 5.2}, {"text": "and this is 9-- what is\nthis code going to do?", "start": 1547.36, "duration": 3.93}, {"text": "It's going to first guess 0.", "start": 1551.29, "duration": 3.03}, {"text": "0 cubed is not\ngreater or equal to 8.", "start": 1554.32, "duration": 4.0}, {"text": "1 cubed is not\ngreater or equal to 8.", "start": 1558.32, "duration": 1.92}, {"text": "2 cubed is greater\nor equal to 8,", "start": 1560.24, "duration": 1.71}, {"text": "so here, once we've guessed\n2, we're going to break.", "start": 1561.95, "duration": 3.81}, {"text": "Because we found a\nnumber that works.", "start": 1565.76, "duration": 4.32}, {"text": "And there's no need\nto keep looking.", "start": 1570.08, "duration": 1.71}, {"text": "Once we've found the cubed\nroot of this number 8,", "start": 1571.79, "duration": 4.92}, {"text": "there's no need to keep\nsearching the remainder, 3, 4,", "start": 1576.71, "duration": 3.69}, {"text": "5, 6, 7, 8.", "start": 1580.4, "duration": 0.92}, {"text": "Sort of the same idea\nwhen we're trying", "start": 1584.38, "duration": 2.31}, {"text": "to find the cube root of 9.", "start": 1586.69, "duration": 2.424}, {"text": "We're going to start with 0.", "start": 1589.114, "duration": 1.166}, {"text": "0 to the power of\n3 is less than 9.", "start": 1590.28, "duration": 4.13}, {"text": "1 to the power of 3 is less 9.", "start": 1594.41, "duration": 1.42}, {"text": "2 to the power of\n3 is less than 9.", "start": 1595.83, "duration": 1.93}, {"text": "When we get to 3\nto the power of 3,", "start": 1597.76, "duration": 2.61}, {"text": "that's going to\nbe greater than 9.", "start": 1600.37, "duration": 1.74}, {"text": "So this code tells\nus, once we've", "start": 1602.11, "duration": 12.84}, {"text": "picked a number that's\nbeyond the reasonable number", "start": 1614.95, "duration": 3.39}, {"text": "of our cubed root, of our cube,\nthe cubed root of our cube,", "start": 1618.34, "duration": 4.14}, {"text": "then we should stop.", "start": 1622.48, "duration": 2.347}, {"text": "Because, again, it doesn't\nmake sense to keep searching.", "start": 1624.827, "duration": 2.333}, {"text": "Because if 3 to the power of\n3 is already greater than 9,", "start": 1627.16, "duration": 3.06}, {"text": "4 to the power of 3 is also\ngoing to be greater than 9", "start": 1630.22, "duration": 2.25}, {"text": "and so on.", "start": 1632.47, "duration": 2.25}, {"text": "So once we break here, we\neither have guess being 2", "start": 1634.72, "duration": 4.53}, {"text": "or guess being 3 depending on\nwhat cube we're trying to find.", "start": 1639.25, "duration": 2.77}, {"text": "And if the guess to the power\nor 3 is not equal to the cube,", "start": 1645.12, "duration": 4.5}, {"text": "then, obviously, the cube\nwas not a perfect cube.", "start": 1649.62, "duration": 3.25}, {"text": "So that's this case\nhere, if we were looking", "start": 1652.87, "duration": 2.12}, {"text": "at at the cube root of 9.", "start": 1654.99, "duration": 3.75}, {"text": "And otherwise, this\npart here just looks", "start": 1658.74, "duration": 2.04}, {"text": "at whether we should make it\na positive or a negative cube.", "start": 1660.78, "duration": 5.46}, {"text": "So if our original cube\nwas less than 0, then,", "start": 1666.24, "duration": 3.625}, {"text": "obviously, the cube root\nof a negative number", "start": 1669.865, "duration": 1.875}, {"text": "is going to be a\nnegative number,", "start": 1671.74, "duration": 1.2}, {"text": "and, otherwise,\nit's just our guess.", "start": 1672.94, "duration": 1.54}, {"text": "So that's the guess\nand check method,", "start": 1679.149, "duration": 1.541}, {"text": "slightly more\nfeature-rich program", "start": 1680.69, "duration": 2.31}, {"text": "for guessing the cube root.", "start": 1683.0, "duration": 2.34}, {"text": "But that only tells us the\ncube root of perfect cubes", "start": 1685.34, "duration": 4.29}, {"text": "and doesn't really give\nus anything else, any more", "start": 1689.63, "duration": 3.06}, {"text": "information.", "start": 1692.69, "duration": 0.76}, {"text": "So sometimes, you might\nwant to say, well,", "start": 1693.45, "duration": 3.82}, {"text": "I don't care that 9\nis not a perfect cube,", "start": 1697.27, "duration": 2.1}, {"text": "just give me a\nclose enough answer.", "start": 1699.37, "duration": 3.24}, {"text": "So that's where approximate\nsolutions come in.", "start": 1702.61, "duration": 2.61}, {"text": "So this is where we're OK with\nhaving a good enough solution.", "start": 1705.22, "duration": 4.122}, {"text": "So in order to do\nthat, we're going", "start": 1709.342, "duration": 1.458}, {"text": "to start with a guess\nand then increment that", "start": 1710.8, "duration": 2.01}, {"text": "guess by some small value.", "start": 1712.81, "duration": 1.31}, {"text": "Start from 0 and start\nincrementing by 0.001", "start": 1717.02, "duration": 3.78}, {"text": "and just go upwards from there.", "start": 1720.8, "duration": 1.67}, {"text": "And at some point, you might\nfind a good enough solution.", "start": 1722.47, "duration": 5.41}, {"text": "In this program, we're going to\nkeep guessing as long as we're", "start": 1727.88, "duration": 4.77}, {"text": "not close enough.", "start": 1732.65, "duration": 2.66}, {"text": "And close enough is going\nto be given by this epsilon", "start": 1735.31, "duration": 2.59}, {"text": "value in the program.", "start": 1737.9, "duration": 2.67}, {"text": "So as long as the guess cubed\nminus the cube-- so how far", "start": 1740.57, "duration": 5.33}, {"text": "away are we from\nthe actual answer--", "start": 1745.9, "duration": 1.92}, {"text": "is greater than some\nepsilon, keep guessing,", "start": 1747.82, "duration": 3.39}, {"text": "because the solution\nis not good enough.", "start": 1751.21, "duration": 2.75}, {"text": "But once this is\nless than epsilon,", "start": 1753.96, "duration": 1.92}, {"text": "then we've reached a\ngood enough solution.", "start": 1755.88, "duration": 3.26}, {"text": "So two things to note with\napproximate solutions.", "start": 1759.14, "duration": 2.7}, {"text": "So you can get more\naccurate answers", "start": 1761.84, "duration": 1.82}, {"text": "if your step size is\nreally, really small.", "start": 1763.66, "duration": 2.25}, {"text": "If you're incrementing\nby 0.0001,", "start": 1765.91, "duration": 1.789}, {"text": "you're going to get a really\ngood approximate solution,", "start": 1767.699, "duration": 2.291}, {"text": "but your program\nwill be a lot slower.", "start": 1769.99, "duration": 1.583}, {"text": "Same sort of idea with epsilon,\nyou can change epsilon.", "start": 1775.1, "duration": 4.56}, {"text": "If you change epsilon\nto be a bigger epsilon,", "start": 1779.66, "duration": 2.64}, {"text": "you're sacrificing\naccuracy, but you're", "start": 1782.3, "duration": 1.83}, {"text": "going to reach a\nsolution a lot faster.", "start": 1784.13, "duration": 2.065}, {"text": "So here's the code for the\napproximate solution of a cube", "start": 1789.38, "duration": 3.521}, {"text": "root.", "start": 1792.901, "duration": 0.499}, {"text": "It might look\nintimidating, but, look,", "start": 1793.4, "duration": 2.31}, {"text": "almost half this code is\njust initializing variables.", "start": 1795.71, "duration": 4.02}, {"text": "So we're initializing,\nthis is the cube", "start": 1799.73, "duration": 3.52}, {"text": "we want to find\nthe cube root of.", "start": 1803.25, "duration": 1.55}, {"text": "We pick an epsilon of this.", "start": 1804.8, "duration": 1.29}, {"text": "We start with a guess of 0.", "start": 1806.09, "duration": 1.92}, {"text": "We start with an\nincrement of 0.0001.", "start": 1808.01, "duration": 2.192}, {"text": "And just for fun, let's keep\ntrack of the number of guesses", "start": 1810.202, "duration": 2.458}, {"text": "that it takes us to\nget to the answer.", "start": 1812.66, "duration": 1.583}, {"text": "This is similar to the\nguess and check from before.", "start": 1817.71, "duration": 3.545}, {"text": "It's not similar.", "start": 1826.672, "duration": 0.708}, {"text": "Well this part is similar to\nthe guess and check from before.", "start": 1827.38, "duration": 2.94}, {"text": "So we're going to take the\nguess to the power of 3", "start": 1830.32, "duration": 3.45}, {"text": "minus the cube, right?", "start": 1833.77, "duration": 1.27}, {"text": "So that's how far away are\nwe from the actual answer?", "start": 1835.04, "duration": 3.45}, {"text": "And we're going to\nsay, if that's not good", "start": 1838.49, "duration": 2.07}, {"text": "enough-- so if\nwe're still greater", "start": 1840.56, "duration": 1.5}, {"text": "than or equal to the\nepsilon-- then keep guessing.", "start": 1842.06, "duration": 3.99}, {"text": "So we're going to be\nstuck in this loop, where", "start": 1846.05, "duration": 3.11}, {"text": "we keep guessing\nvalues, until we've", "start": 1849.16, "duration": 2.67}, {"text": "reached a guess\nthat's good enough,", "start": 1851.83, "duration": 1.5}, {"text": "so until we're\nless than epsilon.", "start": 1853.33, "duration": 3.86}, {"text": "And way we keep guessing\nis just with this line,", "start": 1857.19, "duration": 2.02}, {"text": "right here, which says,\nincrement my guess", "start": 1859.21, "duration": 4.8}, {"text": "by increment, and increment\nbeing this really small value.", "start": 1864.01, "duration": 3.49}, {"text": "That make sense?", "start": 1867.5, "duration": 0.97}, {"text": "So I'm going to\nkeep incrementing", "start": 1871.445, "duration": 1.375}, {"text": "my guess by that small value.", "start": 1872.82, "duration": 2.76}, {"text": "Before I go on, I'm\ngoing to run the code.", "start": 1875.58, "duration": 2.52}, {"text": "And we're going to discover\na small issue with it.", "start": 1878.1, "duration": 3.36}, {"text": "So with 27, we're\ngoing to run it.", "start": 1892.58, "duration": 2.01}, {"text": "Perfect, it took me 300 guesses.", "start": 1894.59, "duration": 2.52}, {"text": "But 2.99999 is close\nto the cube root of 27.", "start": 1897.11, "duration": 3.38}, {"text": "We can find the cube\nroot of this guy here.", "start": 1903.37, "duration": 4.46}, {"text": "And it took me 20,000\nguesses, but I figured out", "start": 1907.83, "duration": 3.02}, {"text": "that 200.99999, so 201,\nis close to the cube", "start": 1910.85, "duration": 4.32}, {"text": "root of that large number.", "start": 1915.17, "duration": 1.32}, {"text": "I should have done this.", "start": 1926.16, "duration": 1.05}, {"text": "This is going to be\na giveaway, you guys.", "start": 1927.21, "duration": 1.708}, {"text": "Sorry.", "start": 1928.918, "duration": 1.532}, {"text": "Then we're going\nto have-- let's say", "start": 1930.45, "duration": 2.25}, {"text": "I want to try cube of 10,000.", "start": 1932.7, "duration": 2.81}, {"text": "So 10,000 is not a perfect cube.", "start": 1935.51, "duration": 2.36}, {"text": "So we can run the code.", "start": 1937.87, "duration": 2.66}, {"text": "And with 8,120,601 I had\nalready gotten an answer.", "start": 1940.53, "duration": 5.81}, {"text": "But with 10,000, I'm not\ngetting an answer yet, right?", "start": 1946.34, "duration": 2.64}, {"text": "So I'm thinking that there\nmight be something wrong.", "start": 1948.98, "duration": 3.51}, {"text": "So I'm going to stop my code.", "start": 1952.49, "duration": 2.22}, {"text": "So I just hit Control C,\nbecause I feel like I've", "start": 1954.71, "duration": 2.79}, {"text": "entered an infinite loop.", "start": 1957.5, "duration": 1.11}, {"text": "And, in fact, I have.", "start": 1958.61, "duration": 3.38}, {"text": "So what ended up happening\nis this problem here.", "start": 1961.99, "duration": 3.58}, {"text": "So I'm going to draw something.", "start": 1965.57, "duration": 2.33}, {"text": "According to the code,\nI'm going to start from 0,", "start": 1970.6, "duration": 7.9}, {"text": "and I'm going to increment\nmy guesses, like that.", "start": 1978.5, "duration": 4.53}, {"text": "With every little increment,\nI'm going to make a new guess.", "start": 1983.03, "duration": 3.0}, {"text": "I'm going to take that\nguess to the power of 3.", "start": 1986.03, "duration": 2.036}, {"text": "I'm going to subtract\nthe cube, and I'm", "start": 1988.066, "duration": 1.624}, {"text": "going to figure out if\nI'm less than epsilon.", "start": 1989.69, "duration": 2.58}, {"text": "This is the epsilon that I want\nto be in, this little bit here.", "start": 1992.27, "duration": 6.56}, {"text": "So with every new\nguess, I might be,", "start": 1998.83, "duration": 2.25}, {"text": "maybe-- so this is\nwhere I want to be,", "start": 2001.08, "duration": 2.86}, {"text": "within this little\nboundary here.", "start": 2003.94, "duration": 2.21}, {"text": "With every new guess,\nI might be here.", "start": 2006.15, "duration": 3.12}, {"text": "With the next guess, over\nhere, I might be here.", "start": 2009.27, "duration": 4.18}, {"text": "When I make another\nguess, I might be here.", "start": 2013.45, "duration": 2.94}, {"text": "So I'm getting close to\nbeing within epsilon.", "start": 2016.39, "duration": 2.7}, {"text": "But maybe with my\nnext guess, I'm", "start": 2019.09, "duration": 2.01}, {"text": "going to hop over my epsilon and\nhave made too big of a guess.", "start": 2021.1, "duration": 3.96}, {"text": "So just because of\nthe way the numbers", "start": 2028.99, "duration": 3.42}, {"text": "were chosen in this example,\njust to illustrate this,", "start": 2032.41, "duration": 3.54}, {"text": "using an increment of 0.01, a\nwith finding the cube of 10,000", "start": 2035.95, "duration": 3.315}, {"text": "and epsilon of 0.1, it\nturns out that, as I'm", "start": 2039.265, "duration": 2.955}, {"text": "doing all these\ncalculations, I'm", "start": 2042.22, "duration": 1.53}, {"text": "going to skip over this perfect\nsort of epsilon difference.", "start": 2043.75, "duration": 8.84}, {"text": "So first, I'm going\nto be too small.", "start": 2052.59, "duration": 2.21}, {"text": "And then I'm going\nto be too large.", "start": 2054.8, "duration": 1.649}, {"text": "And once I've become too large\nor too far away from epsilon,", "start": 2056.449, "duration": 3.811}, {"text": "the guesses I continue\nto make are just", "start": 2060.26, "duration": 1.83}, {"text": "going to be even farther\naway from epsilon.", "start": 2062.09, "duration": 4.569}, {"text": "And I'm not going\nto get to my answer.", "start": 2066.659, "duration": 1.8}, {"text": "And that's why I've reached\nan infinite loop in this code.", "start": 2068.459, "duration": 2.416}, {"text": "All I'm doing in\nthis code is checking", "start": 2073.57, "duration": 2.76}, {"text": "whether my guess cube minus\ncube is less than epsilon.", "start": 2076.33, "duration": 5.59}, {"text": "The only thing I\nneed to do here is", "start": 2081.92, "duration": 1.71}, {"text": "sort of add this\nlittle clause, here,", "start": 2083.63, "duration": 1.74}, {"text": "that says, oh, by the way, also\ncheck that I'm less than cube.", "start": 2085.37, "duration": 6.05}, {"text": "Because this is just like we\ndid in the very first program,", "start": 2094.38, "duration": 4.02}, {"text": "when I'm checking 0,\n1, 2, 3, 4, 5, 6, 7, 8,", "start": 2098.4, "duration": 6.589}, {"text": "when I'm trying to find\nthe cube root of 8.", "start": 2104.989, "duration": 1.791}, {"text": "Once I've reached 8,\nI'm going to stop.", "start": 2114.15, "duration": 3.202}, {"text": "And it's the same thing here.", "start": 2117.352, "duration": 1.208}, {"text": "So I just added\nthis little clause", "start": 2122.14, "duration": 1.44}, {"text": "that says, well,\nwhile I'm greater", "start": 2123.58, "duration": 2.34}, {"text": "than or equal to\nepsilon and I'm still", "start": 2125.92, "duration": 1.92}, {"text": "less than the actual\ncube, just keep searching.", "start": 2127.84, "duration": 2.31}, {"text": "But once I've reached the\ncube, then stop searching.", "start": 2130.15, "duration": 5.25}, {"text": "And with 10,000,\nyou can see that I", "start": 2135.4, "duration": 2.73}, {"text": "failed to actually find-- so\nthat's what this part, here,", "start": 2138.13, "duration": 3.0}, {"text": "does.", "start": 2141.13, "duration": 0.78}, {"text": "It tells me I've\nfailed to find the cube", "start": 2141.91, "duration": 3.31}, {"text": "root with those\nparticular parameters.", "start": 2145.22, "duration": 1.73}, {"text": "The last thing we're going to\nlook at is bisection search.", "start": 2151.198, "duration": 2.722}, {"text": "And to illustrate this, I'm\ngoing to need one volunteer.", "start": 2153.92, "duration": 3.355}, {"text": "And you're going to\nplay a game with me", "start": 2157.275, "duration": 1.625}, {"text": "in front of the whole class.", "start": 2158.9, "duration": 1.26}, {"text": "And there will be a prize.", "start": 2160.16, "duration": 1.71}, {"text": "There go the hands.", "start": 2161.87, "duration": 0.84}, {"text": "In the blue shirt, right there.", "start": 2166.31, "duration": 1.935}, {"text": "Cool.", "start": 2168.245, "duration": 0.645}, {"text": "So the prize is going\nto be, once again, this.", "start": 2168.89, "duration": 3.78}, {"text": "I promise I don't have millions\nof these, Google glasses.", "start": 2172.67, "duration": 4.78}, {"text": "I also don't work for Google.", "start": 2177.45, "duration": 1.43}, {"text": "I just happened to get a couple.", "start": 2178.88, "duration": 2.34}, {"text": "So the game is this.", "start": 2181.22, "duration": 3.69}, {"text": "I'm going to ask you to pick\na number, a whole number,", "start": 2184.91, "duration": 2.88}, {"text": "between 0 and 100.", "start": 2187.79, "duration": 2.71}, {"text": "And I'm going to\ntry to guess it.", "start": 2190.5, "duration": 1.85}, {"text": "And you need to\nmake it hard for me.", "start": 2192.35, "duration": 1.74}, {"text": "And you need to make it so hard\nfor me that I cannot guess it", "start": 2194.09, "duration": 2.541}, {"text": "within 10 guesses.", "start": 2196.631, "duration": 3.939}, {"text": "And if you can do that, if\nI cannot guess it within 10", "start": 2200.57, "duration": 2.31}, {"text": "guesses, you get this.", "start": 2202.88, "duration": 1.82}, {"text": "And I'm going to draw out\nwhat I do as we go along.", "start": 2208.31, "duration": 2.61}, {"text": "So do you have your number?", "start": 2210.92, "duration": 2.43}, {"text": "Yes?", "start": 2213.35, "duration": 0.57}, {"text": "AUDIENCE: Yeah.", "start": 2213.92, "duration": 0.624}, {"text": "ANA BELL: Perfect.", "start": 2214.544, "duration": 1.566}, {"text": "Let me erase that.", "start": 2216.11, "duration": 0.96}, {"text": "Actually, I should've\nprobably kept that,", "start": 2217.07, "duration": 1.708}, {"text": "because I'll still use it.", "start": 2218.778, "duration": 2.102}, {"text": "There's the numbers, 0 to 100.", "start": 2220.88, "duration": 3.93}, {"text": "Is your number 50?", "start": 2224.81, "duration": 2.505}, {"text": "AUDIENCE: No.", "start": 2227.315, "duration": 1.465}, {"text": "ANA BELL: 50 Was my guess.", "start": 2228.78, "duration": 1.33}, {"text": "So I've made one guess.", "start": 2230.11, "duration": 1.46}, {"text": "Is your number higher\nor lower than 50?", "start": 2231.57, "duration": 2.432}, {"text": "AUDIENCE: Higher.", "start": 2234.002, "duration": 0.708}, {"text": "ANA BELL: Higher.", "start": 2234.71, "duration": 1.23}, {"text": "Is your number-- my next\nguess is going to be 75.", "start": 2235.94, "duration": 5.11}, {"text": "And the reason I'm guessing 75\nis because-- what's your name?", "start": 2241.05, "duration": 3.302}, {"text": "AUDIENCE: Sophie.", "start": 2244.352, "duration": 0.708}, {"text": "ANA BELL: What's that?", "start": 2245.06, "duration": 0.555}, {"text": "AUDIENCE: Sophie.", "start": 2245.615, "duration": 0.615}, {"text": "ANA BELL: Sophie.", "start": 2246.23, "duration": 0.8}, {"text": "Sophie said, 50 was too low.", "start": 2247.03, "duration": 2.79}, {"text": "So I immediately know that it\ncannot be any less than 50.", "start": 2249.82, "duration": 2.83}, {"text": "So I've already eliminated\nhalf of the numbers.", "start": 2252.65, "duration": 3.08}, {"text": "So my next guess is 75.", "start": 2255.73, "duration": 1.53}, {"text": "Is your number 75?", "start": 2257.26, "duration": 2.76}, {"text": "Is your number lower or higher?", "start": 2260.02, "duration": 1.632}, {"text": "AUDIENCE: Higher.", "start": 2261.652, "duration": 0.708}, {"text": "ANA BELL: Since it's higher,\nI'm eliminating this half here.", "start": 2265.06, "duration": 2.91}, {"text": "Is your number-- so\nbetween 75 and 100.", "start": 2267.97, "duration": 4.285}, {"text": "Oh, boy, you're\nputting me on the spot.", "start": 2272.255, "duration": 1.625}, {"text": "What's that?", "start": 2273.88, "duration": 0.499}, {"text": "AUDIENCE: 87.", "start": 2274.379, "duration": 0.631}, {"text": "ANA BELL: 87, thank you.", "start": 2275.01, "duration": 2.47}, {"text": "87?", "start": 2277.48, "duration": 1.1}, {"text": "AUDIENCE: No.", "start": 2278.58, "duration": 0.76}, {"text": "ANA BELL: Higher or lower?", "start": 2279.34, "duration": 1.113}, {"text": "AUDIENCE: Lower.", "start": 2280.453, "duration": 0.727}, {"text": "ANA BELL: Lower.", "start": 2281.18, "duration": 0.96}, {"text": "So since it's lower, I'm\neliminating that half.", "start": 2282.14, "duration": 2.65}, {"text": "Is your number 81?", "start": 2287.54, "duration": 3.24}, {"text": "Higher or lower?", "start": 2290.78, "duration": 1.674}, {"text": "AUDIENCE: Lower.", "start": 2292.454, "duration": 0.666}, {"text": "ANA BELL: So she said, lower,\nso I'm eliminating that half.", "start": 2295.732, "duration": 2.458}, {"text": "Is your number 78?", "start": 2300.81, "duration": 1.64}, {"text": "Oh, boy, that's really hard.", "start": 2302.45, "duration": 2.32}, {"text": "78, OK.", "start": 2304.77, "duration": 2.08}, {"text": "Higher or lower?", "start": 2306.85, "duration": 0.75}, {"text": "AUDIENCE: Lower.", "start": 2307.6, "duration": 2.48}, {"text": "ANA BELL: Is your number 76?", "start": 2310.08, "duration": 1.375}, {"text": "AUDIENCE: Yeah.", "start": 2311.455, "duration": 0.625}, {"text": "ANA BELL: Yay.", "start": 2312.08, "duration": 0.87}, {"text": "All right, perfect,\n76 was the number.", "start": 2312.95, "duration": 2.377}, {"text": "So how many guesses have I made?", "start": 2315.327, "duration": 1.333}, {"text": "One, two, three, four, five,\nsix-- I made six guesses.", "start": 2316.66, "duration": 7.13}, {"text": "So I did get it under 10.", "start": 2323.79, "duration": 3.671}, {"text": "But you know what?", "start": 2327.461, "duration": 0.749}, {"text": "The game was rigged.", "start": 2328.21, "duration": 2.51}, {"text": "So you get the prize anyway,\njust because I rigged the game.", "start": 2330.72, "duration": 3.742}, {"text": "Here you go.", "start": 2334.462, "duration": 0.677}, {"text": "Pass it down.", "start": 2335.139, "duration": 0.541}, {"text": "AUDIENCE: Thank you.", "start": 2335.68, "duration": 0.833}, {"text": "ANA BELL: Thank you.", "start": 2336.513, "duration": 1.377}, {"text": "So notice, in bisection\nsearch, what I did was I", "start": 2337.89, "duration": 4.12}, {"text": "eliminated half the search\nspace with every guess.", "start": 2342.01, "duration": 2.85}, {"text": "I said, well, she said\nit's higher or lower,", "start": 2344.86, "duration": 2.28}, {"text": "so I definitely cannot be in\nthe other search space, right?", "start": 2347.14, "duration": 2.82}, {"text": "If I was doing approximate\nsolution or, in this case,", "start": 2349.96, "duration": 2.56}, {"text": "guess and check, I would be\nasking Sophie, is your number", "start": 2352.52, "duration": 3.52}, {"text": "0, 1, 2, 3, 4, and so on?", "start": 2356.04, "duration": 4.27}, {"text": "So with guess and check,\nit would have taken me", "start": 2360.31, "duration": 3.3}, {"text": "76 guesses to get to the number,\nwhereas, with this bisection", "start": 2363.61, "duration": 5.61}, {"text": "search, that I just\ndid, it only took me 6.", "start": 2369.22, "duration": 4.98}, {"text": "Isn't that cool?", "start": 2374.2, "duration": 1.04}, {"text": "So that means that the\nlarger the space actually", "start": 2375.24, "duration": 5.6}, {"text": "is, that I need to\nsearch, the better it", "start": 2380.84, "duration": 3.18}, {"text": "is to use bisection search,\nthis bisection search method.", "start": 2384.02, "duration": 2.47}, {"text": "So that's basically what\nI'm illustrating here.", "start": 2389.06, "duration": 2.35}, {"text": "So we have our\noriginal search space.", "start": 2391.41, "duration": 3.17}, {"text": "We're going to choose a\nguess halfway, eliminate", "start": 2394.58, "duration": 2.16}, {"text": "half of the guesses.", "start": 2396.74, "duration": 1.44}, {"text": "Then we're going look in\nthe remaining interval,", "start": 2398.18, "duration": 3.6}, {"text": "eliminate half the guesses,\nand so on and so on.", "start": 2401.78, "duration": 3.098}, {"text": "So then this is the code\nfor bisection search.", "start": 2408.85, "duration": 2.015}, {"text": "Also looks intimidating,\nbut it's not so bad.", "start": 2414.55, "duration": 2.17}, {"text": "So we're initializing a\nbunch of stuff up here.", "start": 2416.72, "duration": 2.0}, {"text": "The most important couple\nof things we're initializing", "start": 2418.72, "duration": 2.25}, {"text": "are, first of all, this high\nand this low boundaries.", "start": 2420.97, "duration": 5.97}, {"text": "So with the guessing game,\nthe low boundary was 0,", "start": 2426.94, "duration": 3.03}, {"text": "and the high boundary was 100.", "start": 2429.97, "duration": 4.771}, {"text": "When we're looking\nat the cube root,", "start": 2434.741, "duration": 1.499}, {"text": "the low boundary\nis going to be 0,", "start": 2436.24, "duration": 2.43}, {"text": "and the high boundary is\ngoing to be just my cube,", "start": 2438.67, "duration": 4.29}, {"text": "because a guess to the power\nof 3 cannot be any greater than", "start": 2442.96, "duration": 3.36}, {"text": "cube.", "start": 2446.32, "duration": 2.05}, {"text": "And then, I'm just going\nto do the same procedure", "start": 2448.37, "duration": 2.22}, {"text": "that I did with the\nguessing game, which", "start": 2450.59, "duration": 1.666}, {"text": "is I'm going to make my\nguess, be halfway in between.", "start": 2452.256, "duration": 4.284}, {"text": "So with this guessing game,\nI had to sort of choose,", "start": 2456.54, "duration": 3.92}, {"text": "if there were four\nnumbers in between,", "start": 2460.46, "duration": 1.77}, {"text": "should I go higher or lower?", "start": 2462.23, "duration": 2.02}, {"text": "Well, when we're doing\nby bisection search,", "start": 2464.25, "duration": 2.15}, {"text": "here, we don't care about that.", "start": 2466.4, "duration": 2.092}, {"text": "We're just going to do\nfloating point division,", "start": 2468.492, "duration": 1.958}, {"text": "because we want decimal numbers.", "start": 2470.45, "duration": 7.08}, {"text": "So I have a low boundary\nand a high boundary.", "start": 2477.53, "duration": 2.25}, {"text": "And I figured out\nmy halfway point.", "start": 2479.78, "duration": 2.05}, {"text": "Then I have this\nwhile loop here.", "start": 2484.63, "duration": 2.61}, {"text": "A while loop is similar to the\napproximation method, where,", "start": 2487.24, "duration": 8.29}, {"text": "as long as I don't have a\nguest that's good enough--", "start": 2495.53, "duration": 2.59}, {"text": "so this, depicted by\nthis greater or equal", "start": 2498.12, "duration": 1.88}, {"text": "to epsilon-- as long as my\nguess is not good enough,", "start": 2500.0, "duration": 2.55}, {"text": "I'm going to keep guessing.", "start": 2502.55, "duration": 1.63}, {"text": "That's what this\nwhile loop is saying.", "start": 2504.18, "duration": 1.792}, {"text": "So if the guess to the\npower of 3 minus cube", "start": 2505.972, "duration": 1.833}, {"text": "is not good enough,\nkeep guessing.", "start": 2507.805, "duration": 2.815}, {"text": "And the way I keep guessing\nis this part, here,", "start": 2510.62, "duration": 5.72}, {"text": "says, my guess was too low.", "start": 2516.34, "duration": 4.83}, {"text": "So if my guess was too\nlow, set the low boundary", "start": 2521.17, "duration": 2.34}, {"text": "to be the guess.", "start": 2523.51, "duration": 1.77}, {"text": "Because I don't care about\nall of the other numbers", "start": 2525.28, "duration": 3.09}, {"text": "that are much lower than me.", "start": 2528.37, "duration": 2.25}, {"text": "So set the low to be the guess.", "start": 2530.62, "duration": 1.79}, {"text": "That's what that line is doing.", "start": 2532.41, "duration": 3.1}, {"text": "And otherwise, my\nguess was too high.", "start": 2535.51, "duration": 3.65}, {"text": "That's what this else is doing.", "start": 2539.16, "duration": 1.41}, {"text": "So set the high to be\nthe guess, because I", "start": 2540.57, "duration": 1.86}, {"text": "don't care about numbers\nany higher than my guess.", "start": 2542.43, "duration": 4.26}, {"text": "Once I have these\nnew boundaries,", "start": 2546.69, "duration": 1.77}, {"text": "I make another\nguess, again, halfway", "start": 2548.46, "duration": 2.92}, {"text": "in between the new\nboundary points.", "start": 2551.38, "duration": 3.087}, {"text": "So essentially, I'm\njust halving my interval", "start": 2554.467, "duration": 1.833}, {"text": "with every single guess.", "start": 2556.3, "duration": 2.414}, {"text": "And that's what the\nwhile loop is doing.", "start": 2558.714, "duration": 1.666}, {"text": "And then I print out\nthe remaining part.", "start": 2560.38, "duration": 4.31}, {"text": "So notice the search\nspace originally being N,", "start": 2564.69, "duration": 5.76}, {"text": "we're halving it\nwith each guess.", "start": 2570.45, "duration": 1.827}, {"text": "So the first guess\ndivides it by 2,", "start": 2572.277, "duration": 1.458}, {"text": "the second guess divides\nit by 4, and so on.", "start": 2573.735, "duration": 2.335}, {"text": "So by the time we get\nto the k-th guess,", "start": 2576.07, "duration": 3.23}, {"text": "N/2k, the k-th guess, let's say\nthat's the actual answer we're", "start": 2579.3, "duration": 4.427}, {"text": "interested in.", "start": 2583.727, "duration": 0.583}, {"text": "There's only one value\nin that little interval.", "start": 2584.31, "duration": 2.86}, {"text": "And that's the answer we want.", "start": 2587.17, "duration": 2.27}, {"text": "So 2 to the k is\nequal to N. And then", "start": 2589.44, "duration": 3.69}, {"text": "how many guesses did we make?", "start": 2593.13, "duration": 1.83}, {"text": "k is equal to log\nbase 2 of N. So when", "start": 2594.96, "duration": 6.19}, {"text": "we are playing the guessing\ngame of 100, my end was 100.", "start": 2601.15, "duration": 3.77}, {"text": "Log base 2 of 100 is\n6.-something, I think.", "start": 2604.92, "duration": 5.02}, {"text": "So in fact, I could\nhave said, if I", "start": 2609.94, "duration": 1.8}, {"text": "don't guess it\nwithin seven guesses,", "start": 2611.74, "duration": 4.02}, {"text": "you would have won as well.", "start": 2615.76, "duration": 1.18}, {"text": "So that's why the\ngame was rigged.", "start": 2616.94, "duration": 2.12}, {"text": "So the guess,\nnotice, it converges", "start": 2619.06, "duration": 2.67}, {"text": "on the order of\nlog base N instead", "start": 2621.73, "duration": 2.76}, {"text": "of just linearly in terms of N.\nSo that's why it's so powerful.", "start": 2624.49, "duration": 4.092}, {"text": "One last thing I\nwant to mention is", "start": 2628.582, "duration": 1.458}, {"text": "the code I showed only\nworks for positive cubes.", "start": 2630.04, "duration": 3.42}, {"text": "And that's because\nof the following.", "start": 2633.46, "duration": 4.14}, {"text": "So I have this 0 and 1.", "start": 2637.6, "duration": 3.3}, {"text": "Let's say I'm trying to\nfind the cube root of 0.5.", "start": 2640.9, "duration": 2.88}, {"text": "When I first set my initial\nboundaries, my low is this one,", "start": 2643.78, "duration": 4.28}, {"text": "and my high is this one.", "start": 2648.06, "duration": 2.62}, {"text": "But what's the cube root of 0.5?", "start": 2650.68, "duration": 1.8}, {"text": "Is it within this boundary or\nis it outside this boundary?", "start": 2652.48, "duration": 2.589}, {"text": "AUDIENCE: Outside the boundary.", "start": 2655.069, "duration": 1.291}, {"text": "ANA BELL: I heard, outside.", "start": 2656.36, "duration": 1.125}, {"text": "It's like 0.7 something.", "start": 2657.485, "duration": 1.215}, {"text": "So it's out here.", "start": 2658.7, "duration": 1.47}, {"text": "So with this\nparticular code, I'm", "start": 2660.17, "duration": 1.53}, {"text": "going to be halving my interval\nin between those numbers,", "start": 2661.7, "duration": 4.47}, {"text": "but I'll never get to an answer.", "start": 2666.17, "duration": 1.98}, {"text": "Because the actual cube root\nof 0.5, or numbers less than 1,", "start": 2668.15, "duration": 4.64}, {"text": "is going to be\noutside that boundary.", "start": 2672.79, "duration": 1.91}, {"text": "So there's a small change you\ncan make to the program, which", "start": 2674.7, "duration": 2.75}, {"text": "will fix that.", "start": 2677.45, "duration": 1.2}, {"text": "And that's in the code.", "start": 2678.65, "duration": 1.05}, {"text": "I didn't put it in, but it's a\nvery small change, a small if", "start": 2679.7, "duration": 2.67}, {"text": "statement.", "start": 2682.37, "duration": 1.08}, {"text": "So that's it.", "start": 2683.45, "duration": 2.41}, {"text": "All right, thank you.", "start": 2685.86, "duration": 4.27}, {"text": "[APPLAUSE]", "start": 2690.13, "duration": 4.25}]