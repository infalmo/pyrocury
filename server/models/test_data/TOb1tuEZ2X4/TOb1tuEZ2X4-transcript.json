[{"text": "The following content is\nprovided under a Creative", "start": 0.07, "duration": 2.43}, {"text": "Commons license.", "start": 2.5, "duration": 1.519}, {"text": "Your support will help\nMIT OpenCourseWare", "start": 4.019, "duration": 2.341}, {"text": "continue to offer high quality\neducational resources for free.", "start": 6.36, "duration": 4.37}, {"text": "To make a donation or\nview additional materials", "start": 10.73, "duration": 2.61}, {"text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare", "start": 13.34, "duration": 3.896}, {"text": "at ocw.mit.edu.", "start": 17.236, "duration": 0.625}, {"text": "PROFESSOR: So this\nis a 2-3 tree.", "start": 22.776, "duration": 1.374}, {"text": "So as you can see, every node\nhas-- so the 2-3 is either", "start": 24.15, "duration": 3.19}, {"text": "two children or three children.", "start": 27.34, "duration": 1.5}, {"text": "Every node can have either\none key or two keys.", "start": 28.84, "duration": 2.51}, {"text": "And the correlation\nis that every--", "start": 31.35, "duration": 3.315}, {"text": "so if there are n keys in a\nnode, it has n plus 1 children.", "start": 34.665, "duration": 2.945}, {"text": "So the way that works is\nsimilar to binary search trees.", "start": 37.61, "duration": 4.13}, {"text": "So if you have value here, the\ntwo children surrounding it--", "start": 41.74, "duration": 4.61}, {"text": "so this side is less,\nthis side is more.", "start": 46.35, "duration": 2.5}, {"text": "So it's essentially sort of\ngoing in order reversal, left", "start": 48.85, "duration": 4.16}, {"text": "child, root, right child.", "start": 53.01, "duration": 1.82}, {"text": "So [INAUDIBLE], it's ordered.", "start": 54.83, "duration": 1.61}, {"text": "So generally a B tree\nwill have some nodes.", "start": 56.44, "duration": 7.57}, {"text": "So let's say n and\nn plus 1 children.", "start": 64.01, "duration": 6.6}, {"text": "And if you take\nanything in the middle,", "start": 76.92, "duration": 3.21}, {"text": "look at the two children,\nall the keys in this sub-tree", "start": 80.13, "duration": 3.13}, {"text": "are smaller than the key\nhere, and all the keys", "start": 83.26, "duration": 3.1}, {"text": "in this sub-tree are\nlarger than the key here.", "start": 86.36, "duration": 2.32}, {"text": "So that's the general node.", "start": 88.68, "duration": 1.64}, {"text": "So before we go\ninto more details", "start": 90.32, "duration": 4.25}, {"text": "of the properties\nand everything,", "start": 94.57, "duration": 1.95}, {"text": "the question is why use B-trees.", "start": 96.52, "duration": 2.81}, {"text": "So if we do a quick\ndepth analysis,", "start": 99.33, "duration": 3.05}, {"text": "we can see that the\ndepth is to log n rate.", "start": 102.38, "duration": 2.38}, {"text": "Is that clear to everyone sort\nof, why the depth is log n?", "start": 104.76, "duration": 3.87}, {"text": "Because you have branching just\nlike in binary search trees.", "start": 108.63, "duration": 3.395}, {"text": "In fact, you have\nmore branching.", "start": 112.025, "duration": 1.835}, {"text": "But in any case,\ndepth is to log n.", "start": 113.86, "duration": 2.16}, {"text": "But why use B-trees over\nbinary search trees?", "start": 116.02, "duration": 4.24}, {"text": "Anyone have a\nreason why you would", "start": 120.26, "duration": 4.66}, {"text": "prefer to use B-trees or not?", "start": 124.92, "duration": 2.58}, {"text": "So all the operations\nare still log n.", "start": 127.5, "duration": 3.87}, {"text": "Any guesses?", "start": 131.37, "duration": 0.54}, {"text": "None.", "start": 136.14, "duration": 0.94}, {"text": "OK.", "start": 137.08, "duration": 1.42}, {"text": "Well, OK, the reason\nis memory hierarchy.", "start": 138.5, "duration": 3.74}, {"text": "So normally in\n[INAUDIBLE], we just", "start": 142.24, "duration": 2.1}, {"text": "assume that the computer\nhas access to memory,", "start": 144.34, "duration": 2.98}, {"text": "and you can just pick up things\nfrom disk and constant time", "start": 147.32, "duration": 2.83}, {"text": "and do your operations with\nit, and you don't worry", "start": 150.15, "duration": 2.74}, {"text": "about caches and everything.", "start": 152.89, "duration": 1.404}, {"text": "But that's not how\ncomputers work.", "start": 154.294, "duration": 1.416}, {"text": "So in a computer, you\nhave-- so those of you", "start": 155.71, "duration": 1.982}, {"text": "who have taken some\ncomputer architecture", "start": 157.692, "duration": 1.708}, {"text": "class [INAUDIBLE] or something,\nyou will know that hierarchy.", "start": 159.4, "duration": 3.33}, {"text": "So there's a CPU-- so\nlet's draw it somewhere.", "start": 162.73, "duration": 3.84}, {"text": "So you have your CPU.", "start": 166.57, "duration": 1.45}, {"text": "And [INAUDIBLE] CPU,\nyou have some registers.", "start": 168.02, "duration": 2.55}, {"text": "You have your caches,\nL1, L2, L3, whatever.", "start": 170.57, "duration": 2.36}, {"text": "You have your RAM.", "start": 172.93, "duration": 1.15}, {"text": "You have disk after that.", "start": 174.08, "duration": 1.53}, {"text": "So disk [? loads. ?] Then\nyou have your, I don't know,", "start": 175.61, "duration": 2.25}, {"text": "your cloud, whatever.", "start": 177.86, "duration": 1.23}, {"text": "So each level, your\nmemory size grows", "start": 179.09, "duration": 2.04}, {"text": "and your access\ntime grows as well.", "start": 181.13, "duration": 3.3}, {"text": "So in the basic memory\nhierarchy model,", "start": 184.43, "duration": 3.22}, {"text": "we have just two levels\nof hierarchy, let's say.", "start": 187.65, "duration": 4.28}, {"text": "So you have cache connected\nby a high bandwidth channel", "start": 191.93, "duration": 4.44}, {"text": "to the CPU, and you have a\nlow bandwidth channel to disk.", "start": 196.37, "duration": 3.0}, {"text": "So the difference\nis-- so essentially", "start": 203.04, "duration": 2.714}, {"text": "you can consider that cache\njust has infinite speed.", "start": 205.754, "duration": 2.166}, {"text": "Cache, just like,\nwhatever you can take it.", "start": 207.92, "duration": 1.87}, {"text": "You don't have any cost for\nbringing in stuff from cache.", "start": 209.79, "duration": 3.0}, {"text": "But it's finite size.", "start": 212.79, "duration": 1.89}, {"text": "So the way cache works is it\nhas a bunch of words, which", "start": 214.68, "duration": 2.88}, {"text": "is a finite number of words.", "start": 217.56, "duration": 1.18}, {"text": "So each word has size B, and\nlet's say you have m words.", "start": 218.74, "duration": 6.175}, {"text": "However, hard disk is just,\nlet's say, infinite memory,", "start": 227.61, "duration": 3.73}, {"text": "but it has some cost\nassociated to accessing things.", "start": 231.34, "duration": 4.79}, {"text": "Also when you access\nthings from hard disk,", "start": 236.13, "duration": 2.45}, {"text": "you copy them into cache.", "start": 238.58, "duration": 1.05}, {"text": "When you copy a block of\nsize b, you take it up", "start": 239.63, "duration": 2.36}, {"text": "from the hard disk,\nand you take a block,", "start": 241.99, "duration": 2.81}, {"text": "and you put it into cache.", "start": 244.8, "duration": 1.12}, {"text": "And you have to get rid of\nsomething because it's fine.", "start": 245.92, "duration": 2.59}, {"text": "So what you want to do\nis you want to utilize", "start": 248.51, "duration": 2.95}, {"text": "that b block efficiently.", "start": 251.46, "duration": 2.55}, {"text": "You just want to bring\na b block every time", "start": 254.01, "duration": 2.449}, {"text": "you want to access a new node.", "start": 256.459, "duration": 1.711}, {"text": "In a binary search tree,\nnormal operations are what?", "start": 258.17, "duration": 3.0}, {"text": "You start in the root\nand go to a node.", "start": 261.17, "duration": 4.35}, {"text": "But that's not very easily\ncorrelated with this.", "start": 265.52, "duration": 2.36}, {"text": "Right?", "start": 267.88, "duration": 0.5}, {"text": "So if you want to\nutilize an entire block,", "start": 268.38, "duration": 2.399}, {"text": "you would want something like\na block which sort of goes down", "start": 270.779, "duration": 2.541}, {"text": "the tree.", "start": 273.32, "duration": 2.389}, {"text": "But that's not how\nbinary trees are stored.", "start": 275.709, "duration": 1.791}, {"text": "Binary trees are\nstored this way.", "start": 277.5, "duration": 3.95}, {"text": "So that's the nice\nthing about B-trees.", "start": 281.45, "duration": 2.21}, {"text": "So this is just a 2-3 tree.", "start": 283.66, "duration": 1.792}, {"text": "This is not a general B-tree.", "start": 285.452, "duration": 1.208}, {"text": "A general B-tree will\nhave a bunch of nodes,", "start": 286.66, "duration": 2.18}, {"text": "and we'll come to that number.", "start": 288.84, "duration": 1.85}, {"text": "But generally you want to make\nthat number of nodes something", "start": 290.69, "duration": 2.92}, {"text": "like the cache-- what is it?", "start": 293.61, "duration": 3.77}, {"text": "The word size in the cache.", "start": 297.38, "duration": 1.53}, {"text": "So once you do that, you can\nget an entire node from disk,", "start": 298.91, "duration": 3.95}, {"text": "like work on that, and then\nget another [INAUDIBLE],", "start": 302.86, "duration": 3.09}, {"text": "so your height is reduced.", "start": 305.95, "duration": 1.679}, {"text": "And you can do your\noperation much quicker,", "start": 307.629, "duration": 1.791}, {"text": "because you're not accessing\ndisk every time you're", "start": 309.42, "duration": 3.52}, {"text": "going down a level.", "start": 312.94, "duration": 2.12}, {"text": "Sorry.", "start": 315.06, "duration": 0.5}, {"text": "You are accessing disk every\ntime you go down a level,", "start": 315.56, "duration": 2.37}, {"text": "but you're utilizing\nthe whole block", "start": 317.93, "duration": 2.56}, {"text": "when you're accessing disk.", "start": 320.49, "duration": 1.736}, {"text": "Good?", "start": 322.226, "duration": 0.874}, {"text": "Sort of make sense?", "start": 323.1, "duration": 2.08}, {"text": "OK.", "start": 325.18, "duration": 2.19}, {"text": "So let's write down the\nspecifications for B-trees now.", "start": 327.37, "duration": 4.09}, {"text": "All right.", "start": 334.352, "duration": 0.964}, {"text": "So number of children.", "start": 340.62, "duration": 2.84}, {"text": "So first of all, a\nB-tree has something", "start": 350.09, "duration": 2.42}, {"text": "called a branching factor.", "start": 352.51, "duration": 2.45}, {"text": "So in the 2-3 tree, the\nbranching factor is two.", "start": 354.96, "duration": 3.607}, {"text": "So what that means is\nsimply that it just balances", "start": 358.567, "duration": 2.083}, {"text": "the number of children.", "start": 360.65, "duration": 0.958}, {"text": "So the number of children has to\nbe greater than or equal to 2.", "start": 361.608, "duration": 2.852}, {"text": "Other than the root node.", "start": 364.46, "duration": 1.23}, {"text": "The root node can have\nless than B children.", "start": 365.69, "duration": 2.28}, {"text": "It's fine.", "start": 367.97, "duration": 1.23}, {"text": "Also it's upper bounded\nby 2B [? plus ?] 2B.", "start": 369.2, "duration": 4.47}, {"text": "Notice that this is\na strict upper bound.", "start": 373.67, "duration": 2.09}, {"text": "So you can have at most 2B\nminus 1 children from a node.", "start": 375.76, "duration": 6.38}, {"text": "Also remember that the number\nof keys, the number of keys", "start": 382.14, "duration": 7.65}, {"text": "is just 1 less than\nthe number of children.", "start": 389.79, "duration": 2.85}, {"text": "Therefore, these inequalities\nare just reduced by 1.", "start": 392.64, "duration": 8.09}, {"text": "So you have minus 1 and\nyou have 2B minus 1.", "start": 400.73, "duration": 4.53}, {"text": "So the number of keys can be\nbetween minus 1 and 2B minus 2.", "start": 405.26, "duration": 4.5}, {"text": "The rationale for that\nwill become clear-- yeah?", "start": 409.76, "duration": 2.51}, {"text": "AUDIENCE: Is B the\nheight of the tree?", "start": 412.27, "duration": 2.075}, {"text": "PROFESSOR: No, B\nis the branching.", "start": 414.345, "duration": 2.222}, {"text": "B is the branching factor.", "start": 416.567, "duration": 1.083}, {"text": "So that is the\nnumber of children.", "start": 417.65, "duration": 1.847}, {"text": "It's not the number of children.", "start": 419.497, "duration": 1.333}, {"text": "It's a bound of the\nnumber of children.", "start": 420.83, "duration": 1.82}, {"text": "So like in the 2-3\ntree, B is equal to 2,", "start": 422.65, "duration": 4.4}, {"text": "and this is a 2-3 tree.", "start": 427.05, "duration": 1.79}, {"text": "So the 2 refers to-- you\ncan have either two children", "start": 433.3, "duration": 5.65}, {"text": "or you can have three children.", "start": 438.95, "duration": 2.71}, {"text": "And so the upper bound on\nchildren is 2B minus 1.", "start": 441.66, "duration": 2.86}, {"text": "2B minus 1 is equal to 3.", "start": 447.11, "duration": 2.13}, {"text": "So you can have two\nor three children.", "start": 449.24, "duration": 2.94}, {"text": "And correspondingly, you\ncan have either one or two", "start": 452.18, "duration": 2.65}, {"text": "keys in a node.", "start": 454.83, "duration": 2.421}, {"text": "Make sense?", "start": 457.251, "duration": 0.499}, {"text": "AUDIENCE: Yeah.", "start": 457.75, "duration": 0.624}, {"text": "PROFESSOR: Cool.", "start": 458.374, "duration": 0.966}, {"text": "OK So coming back to this.", "start": 459.34, "duration": 2.86}, {"text": "So the root does not\nhave a lower bound.", "start": 462.2, "duration": 2.43}, {"text": "The root can have one\nchild in any tree.", "start": 464.63, "duration": 2.53}, {"text": "So you have a B equal\nto 5 tree, the root", "start": 467.16, "duration": 3.195}, {"text": "can still have\none child-- sorry.", "start": 470.355, "duration": 1.695}, {"text": "Not one child, one key\nelement, two children.", "start": 472.05, "duration": 3.43}, {"text": "All right.", "start": 475.48, "duration": 1.42}, {"text": "It's good.", "start": 476.9, "duration": 0.86}, {"text": "Also it's completely balanced.", "start": 477.76, "duration": 2.61}, {"text": "So all the leaves\nare the same depth.", "start": 480.37, "duration": 3.94}, {"text": "So you can see it here, right?", "start": 499.33, "duration": 2.45}, {"text": "So you can't have a\ndangling node here.", "start": 501.78, "duration": 2.57}, {"text": "This is not allowed.", "start": 504.35, "duration": 1.53}, {"text": "You have to have a leaf.", "start": 505.88, "duration": 1.167}, {"text": "You have to have\nsomething going down,", "start": 507.047, "duration": 1.583}, {"text": "and everything ends\nat the same level.", "start": 508.63, "duration": 2.77}, {"text": "All right.", "start": 511.4, "duration": 0.5}, {"text": "So that's the thing.", "start": 511.9, "duration": 1.21}, {"text": "So also the leaves obviously\ndon't have children,", "start": 513.11, "duration": 3.41}, {"text": "so this condition is\nviolated by the leaf.", "start": 516.52, "duration": 6.61}, {"text": "So that's the basic\nstructure of a B-tree.", "start": 523.13, "duration": 3.25}, {"text": "So the first operation\nwe'll consider on B-trees", "start": 529.101, "duration": 1.999}, {"text": "is searching.", "start": 531.1, "duration": 1.46}, {"text": "So that should be\nrelatively straightforward.", "start": 532.56, "duration": 2.6}, {"text": "So remember how searching is\ndone in the binary search tree.", "start": 535.16, "duration": 2.95}, {"text": "You bring in a value\nx compared to the key.", "start": 538.11, "duration": 3.79}, {"text": "Let's say x is less than\nK, you go down this path.", "start": 541.9, "duration": 2.975}, {"text": "Let's say x is greater than\nK, you go down this path.", "start": 544.875, "duration": 3.245}, {"text": "So similarly in a B-tree.", "start": 548.12, "duration": 1.45}, {"text": "So let's say we\nbring in a value.", "start": 549.57, "duration": 2.44}, {"text": "Let's say you are\nlooking for 20.", "start": 552.01, "duration": 3.76}, {"text": "So you bring in 20\ncompared to this.", "start": 555.77, "duration": 2.35}, {"text": "20 is less than 30,\nso you go down here.", "start": 558.12, "duration": 3.07}, {"text": "Now you have two values.", "start": 561.19, "duration": 2.662}, {"text": "So where does 20 fit in here?", "start": 563.852, "duration": 1.208}, {"text": "Not here.", "start": 565.06, "duration": 0.791}, {"text": "Not here.", "start": 565.851, "duration": 0.499}, {"text": "It fits here.", "start": 566.35, "duration": 0.601}, {"text": "OK.", "start": 566.951, "duration": 0.499}, {"text": "Go down this tree.", "start": 567.45, "duration": 1.66}, {"text": "You find 20, that's it.", "start": 569.11, "duration": 1.87}, {"text": "So in general, you bring in a\nkey K, you look at this node,", "start": 570.98, "duration": 6.43}, {"text": "and you go through\nall the values.", "start": 577.41, "duration": 1.7}, {"text": "So something I forgot to\nmention, which should be clear.", "start": 579.11, "duration": 4.48}, {"text": "All the keys in a node, they're\nsorted, one after the other.", "start": 583.59, "duration": 3.66}, {"text": "So your values go like this.", "start": 587.25, "duration": 2.1}, {"text": "So they're increasing\nin this way.", "start": 589.35, "duration": 2.79}, {"text": "Make sense?", "start": 592.14, "duration": 2.695}, {"text": "So you bring in a key.", "start": 594.835, "duration": 1.605}, {"text": "Look at all the keys in\nthe node you're looking at,", "start": 596.44, "duration": 3.46}, {"text": "pick the place where K fits\nin, unless it's already", "start": 599.9, "duration": 2.33}, {"text": "in the node.", "start": 602.23, "duration": 0.5}, {"text": "Then you're done.", "start": 602.73, "duration": 0.708}, {"text": "You've found it.", "start": 603.438, "duration": 1.222}, {"text": "Otherwise, let's say K fits\nin between these two guys.", "start": 604.66, "duration": 4.19}, {"text": "So you go down this\nchild and continue.", "start": 608.85, "duration": 4.4}, {"text": "So searching with log\nn, similar to BSTs.", "start": 613.25, "duration": 2.69}, {"text": "So searching is not\nvery interesting.", "start": 620.294, "duration": 1.541}, {"text": "So next is insertion.", "start": 638.48, "duration": 1.745}, {"text": "So insertion is a little more\ninteresting than searching.", "start": 644.44, "duration": 2.42}, {"text": "So what you do in\ninsertion is you--", "start": 646.86, "duration": 1.5}, {"text": "[SIDE CONVERSATION]", "start": 648.36, "duration": 20.66}, {"text": "PROFESSOR: So before we resume,\ndoes anyone have any questions", "start": 669.02, "duration": 3.199}, {"text": "about the structure of B-trees.", "start": 672.219, "duration": 1.291}, {"text": "We rushed through\nthat quite fast.", "start": 673.51, "duration": 3.35}, {"text": "About how B-trees\nare structured,", "start": 676.86, "duration": 1.795}, {"text": "everyone good with that?", "start": 678.655, "duration": 1.51}, {"text": "OK, also any questions about\nsearching in a B-tree or a BST?", "start": 680.165, "duration": 5.129}, {"text": "Go ahead.", "start": 685.294, "duration": 0.5}, {"text": "AUDIENCE: Just a\nrandom question.", "start": 685.794, "duration": 1.976}, {"text": "So the 38 there, it can\nonly have two children.", "start": 687.77, "duration": 3.952}, {"text": "PROFESSOR: Yep.", "start": 691.722, "duration": 1.488}, {"text": "So one value, two children.", "start": 693.21, "duration": 3.06}, {"text": "So you have some\nnode in the B-tree,", "start": 696.27, "duration": 3.49}, {"text": "and whatever is\nbelow it is split", "start": 699.76, "duration": 1.66}, {"text": "into parts by the elements.", "start": 701.42, "duration": 1.93}, {"text": "So if you have n\nelements, it splits it up", "start": 703.35, "duration": 1.75}, {"text": "into n plus 1 segments.", "start": 705.1, "duration": 1.175}, {"text": "AUDIENCE: You said that the root\ndidn't have to follow the root.", "start": 709.83, "duration": 3.257}, {"text": "PROFESSOR: No.", "start": 713.087, "duration": 0.583}, {"text": "AUDIENCE: Why is that?", "start": 713.67, "duration": 0.919}, {"text": "PROFESSOR: Well, you'll see when\nwe do insertion and deletion", "start": 714.589, "duration": 2.541}, {"text": "why that's necessary.", "start": 717.13, "duration": 0.875}, {"text": "But essentially you can\nconsider that it's an invariant.", "start": 718.005, "duration": 4.345}, {"text": "And all we have to do is\npreserve that invariant.", "start": 722.35, "duration": 2.42}, {"text": "So the root, it has to\nstill have less than two--", "start": 724.77, "duration": 3.46}, {"text": "it still has to have\nthe upper bound.", "start": 728.23, "duration": 1.91}, {"text": "But it doesn't need\nto have a lower bound.", "start": 730.14, "duration": 4.429}, {"text": "AUDIENCE: How do you choose B?", "start": 734.569, "duration": 2.921}, {"text": "PROFESSOR: Well, the whole\n[INAUDIBLE] cache size,", "start": 737.49, "duration": 2.63}, {"text": "so something with that.", "start": 740.12, "duration": 1.1}, {"text": "So you probably want 2B to\nbe about your cache size", "start": 741.22, "duration": 2.63}, {"text": "so you can get the\nwhole block in one go.", "start": 743.85, "duration": 1.91}, {"text": "I've never implemented\na B-tree, so I", "start": 745.76, "duration": 2.29}, {"text": "don't know how it's\nactually done in practice.", "start": 748.05, "duration": 1.1}, {"text": "But that is the reason, so\nI'm assuming it's something", "start": 749.15, "duration": 2.249}, {"text": "to do with the cache length.", "start": 751.399, "duration": 2.331}, {"text": "AUDIENCE: Is the 14, is it\na child of both 10 and 17?", "start": 753.73, "duration": 4.372}, {"text": "PROFESSOR: Well, it's\nnot a child of either.", "start": 758.102, "duration": 1.833}, {"text": "It's a child of this node.", "start": 759.935, "duration": 1.325}, {"text": "So this node has two\nelements, so it's", "start": 761.26, "duration": 2.31}, {"text": "being divided-- dividing the\ninterval up into three parts.", "start": 763.57, "duration": 2.81}, {"text": "So it's in between 10\nand 17 is the point here.", "start": 766.38, "duration": 3.42}, {"text": "AUDIENCE: So then this\nnode has five children?", "start": 769.8, "duration": 4.8}, {"text": "PROFESSOR: Sorry?", "start": 774.6, "duration": 1.257}, {"text": "No, it has three children.", "start": 775.857, "duration": 1.083}, {"text": "So don't think of\nevery key as a node.", "start": 776.94, "duration": 3.07}, {"text": "Think of the whole\nunit as a node.", "start": 780.01, "duration": 3.99}, {"text": "So it's not necessarily--\nin a binary search tree,", "start": 784.0, "duration": 2.115}, {"text": "you have one element,\nbut here every node", "start": 786.115, "duration": 2.019}, {"text": "has multiple elements.", "start": 788.134, "duration": 0.916}, {"text": "That's the point of it.", "start": 789.05, "duration": 2.574}, {"text": "Anyone else?", "start": 791.624, "duration": 3.216}, {"text": "OK, let's start with searching.", "start": 794.84, "duration": 2.81}, {"text": "So let's leave this here.", "start": 797.65, "duration": 4.586}, {"text": "Well, you have the formulas\nup there, so that's good.", "start": 810.21, "duration": 2.56}, {"text": "Insertion.", "start": 822.57, "duration": 0.59}, {"text": "Let's start with insertion.", "start": 823.16, "duration": 0.87}, {"text": "We already did searching.", "start": 824.03, "duration": 1.125}, {"text": "So insertion is you\nbring in a new key K,", "start": 832.39, "duration": 2.054}, {"text": "and you want to insert\nit into the tree.", "start": 834.444, "duration": 1.666}, {"text": "So what's the problem\nthat could happen?", "start": 836.11, "duration": 1.01}, {"text": "You can find the location where\nyou want to insert it, just", "start": 837.12, "duration": 2.38}, {"text": "like searching.", "start": 839.5, "duration": 0.625}, {"text": "You just go down the tree and\nfind where it should be placed.", "start": 840.125, "duration": 3.265}, {"text": "But once you do place\nit, you have a problem.", "start": 843.39, "duration": 1.89}, {"text": "What is the problem?", "start": 845.28, "duration": 0.833}, {"text": "The problem is that one of your\nnodes will become overfull.", "start": 846.113, "duration": 4.457}, {"text": "Whatever.", "start": 850.57, "duration": 0.5}, {"text": "It'll overflow, and\nthat's not what you want.", "start": 851.07, "duration": 2.77}, {"text": "So you want some way\nso you can manage this.", "start": 853.84, "duration": 2.92}, {"text": "How do you manage this?", "start": 856.76, "duration": 1.18}, {"text": "So I have this lovely prop here,\nwhich I hope to demonstrate.", "start": 857.94, "duration": 7.25}, {"text": "OK.", "start": 865.19, "duration": 0.5}, {"text": "So here we have B equal to 4.", "start": 869.13, "duration": 3.64}, {"text": "So let's first figure\nout the number of keys.", "start": 872.77, "duration": 6.34}, {"text": "So what is the minimum number of\nkeys, anyone for B equal to 4?", "start": 879.11, "duration": 3.12}, {"text": "AUDIENCE: Three.", "start": 882.23, "duration": 0.729}, {"text": "PROFESSOR: Three, precisely.", "start": 882.959, "duration": 1.166}, {"text": "So what is the maximum\nnumber of keys?", "start": 884.125, "duration": 5.563}, {"text": "AUDIENCE: Six.", "start": 889.688, "duration": 1.868}, {"text": "PROFESSOR: 4 into\n2 minus 3, yeah.", "start": 891.556, "duration": 2.214}, {"text": "Correct.", "start": 893.77, "duration": 1.23}, {"text": "3, 4.", "start": 895.0, "duration": 1.17}, {"text": "It's not seven, there's\na strictly less than sign", "start": 896.17, "duration": 2.33}, {"text": "somewhere.", "start": 898.5, "duration": 1.59}, {"text": "Yes.", "start": 900.09, "duration": 0.98}, {"text": "And you'll see why it's\nnot seven in a minute.", "start": 901.07, "duration": 4.128}, {"text": "[LAUGHTER]", "start": 905.198, "duration": 0.852}, {"text": "Oh.", "start": 906.05, "duration": 2.1}, {"text": "Hypocritical of me.", "start": 908.15, "duration": 0.92}, {"text": "All right.", "start": 911.64, "duration": 0.5}, {"text": "So as you can see,\n1, 2, 3, 4, 5, 6, 7.", "start": 912.14, "duration": 3.04}, {"text": "So some insertion happened.", "start": 915.18, "duration": 2.93}, {"text": "Is the writing clear?", "start": 918.11, "duration": 1.14}, {"text": "Can everyone read the numbers?", "start": 919.25, "duration": 3.33}, {"text": "49 looks a little skewed.", "start": 922.58, "duration": 1.17}, {"text": "Anyway, essentially\nthese are all sorted.", "start": 923.75, "duration": 2.41}, {"text": "This is the parent node.", "start": 926.16, "duration": 1.13}, {"text": "Doesn't matter what's over here.", "start": 927.29, "duration": 1.36}, {"text": "All that matters is 8, 56,\nand whatever's in between.", "start": 928.65, "duration": 4.45}, {"text": "So what we do when we\nhave an overfull node", "start": 938.9, "duration": 2.68}, {"text": "is something that's\ncalled a split operation.", "start": 941.58, "duration": 2.21}, {"text": "So split.", "start": 943.79, "duration": 1.939}, {"text": "And there's something\nwhich is called", "start": 945.729, "duration": 1.541}, {"text": "a merge, which we'll\ncome to later when", "start": 947.27, "duration": 1.4}, {"text": "we're doing deletion.", "start": 948.67, "duration": 1.01}, {"text": "But a split is--\nvery intuitively,", "start": 949.68, "duration": 3.04}, {"text": "it splits the node\ninto two parts.", "start": 952.72, "duration": 2.766}, {"text": "So what it does is when\nyou have an overfull node--", "start": 955.486, "duration": 2.124}, {"text": "so the number of\nelements here is what?", "start": 957.61, "duration": 2.09}, {"text": "2B minus 1, which is\njust 1 over the max.", "start": 959.7, "duration": 3.52}, {"text": "So what do you do is you\ntake the middle element", "start": 963.22, "duration": 2.99}, {"text": "and remove it.", "start": 966.21, "duration": 2.905}, {"text": "and now you split the\nnode into two parts.", "start": 969.115, "duration": 2.685}, {"text": "Observe that there are\nthree here and three here,", "start": 971.8, "duration": 2.93}, {"text": "which is perfect.", "start": 974.73, "duration": 1.381}, {"text": "And now what you do\nwith the middle node--", "start": 976.111, "duration": 1.749}, {"text": "so now you're\nactually disrupting", "start": 977.86, "duration": 1.914}, {"text": "the structure of the\ntree, because there", "start": 979.774, "duration": 1.666}, {"text": "was one pointer going in.", "start": 981.44, "duration": 1.622}, {"text": "There was one child.", "start": 983.062, "duration": 0.833}, {"text": "And now you have two children.", "start": 983.895, "duration": 1.765}, {"text": "So somehow you need to\nadjust the parent node,", "start": 985.66, "duration": 2.28}, {"text": "because the parent node\nhad only one child.", "start": 987.94, "duration": 2.15}, {"text": "Well, at least there are other\nchildren off to the side.", "start": 990.09, "duration": 3.15}, {"text": "But here it had only one child,\nand now it's split apart.", "start": 993.24, "duration": 3.66}, {"text": "So you do something very simple.", "start": 996.9, "duration": 1.68}, {"text": "You just insert\nthis guy in here.", "start": 998.58, "duration": 4.095}, {"text": "And then you say,\noh, this points here,", "start": 1002.675, "duration": 1.625}, {"text": "and this points here.", "start": 1004.3, "duration": 2.71}, {"text": "Make sense?", "start": 1007.01, "duration": 0.6}, {"text": "I'm going to get\nrid of these two.", "start": 1010.31, "duration": 1.5}, {"text": "And you can even\nconvince yourself", "start": 1019.85, "duration": 2.27}, {"text": "that this preserves all\nthe nice properties.", "start": 1022.12, "duration": 2.79}, {"text": "So your children have\nnicely fallen back", "start": 1024.91, "duration": 4.4}, {"text": "into their interval.", "start": 1029.31, "duration": 2.279}, {"text": "Your sequence is\ncompletely correct,", "start": 1031.589, "duration": 2.038}, {"text": "because this was the\nmiddle element of this.", "start": 1033.627, "duration": 1.833}, {"text": "So this divides this\ninterval properly.", "start": 1035.46, "duration": 2.869}, {"text": "This is also between 8 and 56,\nbecause this was in this node.", "start": 1038.329, "duration": 3.641}, {"text": "So all the properties.", "start": 1041.97, "duration": 1.289}, {"text": "But there's one property\nthat is a problem.", "start": 1043.259, "duration": 1.791}, {"text": "So you have just increased the\nsize of the parent node by 1.", "start": 1045.05, "duration": 3.84}, {"text": "So now it's possible that the\nparent node has overflowed.", "start": 1048.89, "duration": 3.86}, {"text": "So what do you do?", "start": 1052.75, "duration": 0.93}, {"text": "You split it again.", "start": 1053.68, "duration": 2.12}, {"text": "And split it again.", "start": 1055.8, "duration": 1.15}, {"text": "And if at any\npoint, you're fine,", "start": 1056.95, "duration": 2.594}, {"text": "you look at the parent node\nand go, OK, that's fine.", "start": 1059.544, "duration": 2.166}, {"text": "That's in the range.", "start": 1061.71, "duration": 1.54}, {"text": "But every time it overflows,\nyou can keep going.", "start": 1063.25, "duration": 2.03}, {"text": "And how many times\ncan you do this?", "start": 1065.28, "duration": 0.93}, {"text": "You can do this all\nthe way up to the root.", "start": 1066.21, "duration": 1.97}, {"text": "And when you reach the\nroot, either it's fine", "start": 1068.18, "duration": 3.53}, {"text": "or the root is too big.", "start": 1071.71, "duration": 1.22}, {"text": "It's reached 2B minus 1.", "start": 1072.93, "duration": 1.91}, {"text": "And then you split\nthe root, and you", "start": 1074.84, "duration": 1.84}, {"text": "get one single\n[INAUDIBLE] up there.", "start": 1076.68, "duration": 2.04}, {"text": "So that, in answer\nto your question,", "start": 1078.72, "duration": 1.5}, {"text": "that is why you need that\nproperty in some sense.", "start": 1080.22, "duration": 2.56}, {"text": "Not a very convincing\nargument, but sort of.", "start": 1082.78, "duration": 3.97}, {"text": "So let's actually\ndo an insertion", "start": 1086.75, "duration": 1.97}, {"text": "in this tree we have here.", "start": 1088.72, "duration": 2.82}, {"text": "So we are going to insert 16.", "start": 1091.54, "duration": 2.06}, {"text": "So 16 comes in here.", "start": 1100.25, "duration": 2.88}, {"text": "It's less than 30,\nit goes to the left.", "start": 1103.13, "duration": 2.32}, {"text": "It's between 10 and 17,\nit goes in the middle.", "start": 1105.45, "duration": 2.94}, {"text": "16.", "start": 1108.39, "duration": 0.89}, {"text": "And it's greater than\n14, so we add 16 here.", "start": 1109.28, "duration": 4.2}, {"text": "All right.", "start": 1134.15, "duration": 0.77}, {"text": "That seems good.", "start": 1134.92, "duration": 1.12}, {"text": "All the properties fine.", "start": 1136.04, "duration": 1.53}, {"text": "This still has two elements,\nwhich is the maximum,", "start": 1137.57, "duration": 2.09}, {"text": "but it's good.", "start": 1139.66, "duration": 1.15}, {"text": "It doesn't overflow.", "start": 1140.81, "duration": 2.514}, {"text": "Let's insert something else.", "start": 1143.324, "duration": 1.166}, {"text": "Let's insert 2.", "start": 1144.49, "duration": 1.34}, {"text": "So 2 goes to 30,\ngoes down, goes down.", "start": 1148.6, "duration": 3.26}, {"text": "And we have a problem, because\n2 has overflowed this node.", "start": 1151.86, "duration": 4.81}, {"text": "So we split.", "start": 1156.67, "duration": 1.92}, {"text": "And the way we split is we\ntake the middle element.", "start": 1158.59, "duration": 2.777}, {"text": "So we split the node here.", "start": 1161.367, "duration": 1.083}, {"text": "And 3 goes up to the\nparent, so 3 goes here.", "start": 1165.0, "duration": 6.68}, {"text": "And all good, except for\nthe parent has overflowed.", "start": 1171.68, "duration": 6.335}, {"text": "So what do we do\nwith the parent?", "start": 1178.015, "duration": 1.375}, {"text": "We split the parent again.", "start": 1179.39, "duration": 1.505}, {"text": "And this time, it's right down\nthe middle, the 10 goes up.", "start": 1180.895, "duration": 3.975}, {"text": "So OK, let's get rid of this.", "start": 1184.87, "duration": 3.65}, {"text": "So now that we split the\nparent, the 10 goes up here.", "start": 1188.52, "duration": 4.57}, {"text": "And you're good.", "start": 1193.09, "duration": 1.4}, {"text": "It's a bit cluttered, so\nlet me reposition the 17.", "start": 1194.49, "duration": 4.02}, {"text": "Did those two\noperations make sense?", "start": 1207.94, "duration": 2.61}, {"text": "Questions?", "start": 1210.55, "duration": 2.326}, {"text": "AUDIENCE: If your node size\n[INAUDIBLE] number of--", "start": 1212.876, "duration": 4.994}, {"text": "PROFESSOR: So just pick\nthe-- first of all-- OK.", "start": 1217.87, "duration": 2.17}, {"text": "If the way we're doing it--\nwhen your node is overflowing,", "start": 1222.97, "duration": 2.417}, {"text": "it's returning only one\nthing at a time, right?", "start": 1225.387, "duration": 1.957}, {"text": "AUDIENCE: Yeah.", "start": 1227.344, "duration": 0.656}, {"text": "PROFESSOR: So if your\nnode is overflowing,", "start": 1228.0, "duration": 1.749}, {"text": "it'll be 2t minus 1, which\nis an odd number always.", "start": 1229.749, "duration": 2.838}, {"text": "There might be a case where\nyou get an even number", "start": 1232.587, "duration": 2.083}, {"text": "if you do something weird.", "start": 1234.67, "duration": 1.083}, {"text": "Maybe you have a-- there are\ndifferent ways to do B-trees.", "start": 1235.753, "duration": 2.447}, {"text": "But if it does, you can probably\npick the one, either of them,", "start": 1238.2, "duration": 3.51}, {"text": "and then [INAUDIBLE].", "start": 1241.71, "duration": 1.53}, {"text": "I'm not sure about that.", "start": 1243.24, "duration": 1.0}, {"text": "I'll look into it.", "start": 1244.24, "duration": 1.16}, {"text": "But in general, if you're doing\nit this way, it's always odd.", "start": 1245.4, "duration": 3.51}, {"text": "So you don't have\nto worry about that.", "start": 1248.91, "duration": 2.364}, {"text": "Anything else?", "start": 1251.274, "duration": 2.634}, {"text": "AUDIENCE: If we did reach\nall the way to the root", "start": 1253.908, "duration": 3.0}, {"text": "and then went one more up--", "start": 1256.908, "duration": 1.242}, {"text": "PROFESSOR: So what\nyou would do is--", "start": 1258.15, "duration": 0.88}, {"text": "AUDIENCE: That root would have--", "start": 1259.03, "duration": 1.416}, {"text": "PROFESSOR: That root would\nhave two children, one element", "start": 1260.446, "duration": 2.624}, {"text": "and two children, which is\nfine because we didn't put", "start": 1263.07, "duration": 2.34}, {"text": "that restriction on the root.", "start": 1265.41, "duration": 1.456}, {"text": "That's good.", "start": 1266.866, "duration": 0.929}, {"text": "How we doing on time?", "start": 1267.795, "duration": 0.875}, {"text": "OK, we have some time.", "start": 1268.67, "duration": 2.81}, {"text": "Let's jump into deletion, unless\nanyone else has questions.", "start": 1271.48, "duration": 3.486}, {"text": "AUDIENCE: [INAUDIBLE] any point?", "start": 1274.966, "duration": 1.874}, {"text": "PROFESSOR: So-- oh, yeah.", "start": 1276.84, "duration": 1.28}, {"text": "That's a good-- thank you.", "start": 1278.12, "duration": 1.4}, {"text": "So you are going\ndown to the leaves", "start": 1279.52, "duration": 2.33}, {"text": "at most-- at most\nof the leaf ones,", "start": 1281.85, "duration": 2.165}, {"text": "and you're going back up one.", "start": 1284.015, "duration": 1.475}, {"text": "So it's like log n plus\nlog n, and you're good.", "start": 1285.49, "duration": 2.39}, {"text": "Let's do deletion.", "start": 1291.61, "duration": 1.1}, {"text": "So deletion is more complicated.", "start": 1303.15, "duration": 3.06}, {"text": "So the reason, it'll be clear.", "start": 1306.21, "duration": 2.31}, {"text": "So the problem in deletion\nwill be remove a node", "start": 1308.52, "duration": 3.27}, {"text": "and a node is now underfull.", "start": 1311.79, "duration": 1.7}, {"text": "So it has less than B minus\n1 keys in it suddenly.", "start": 1313.49, "duration": 3.91}, {"text": "So let's turn this around.", "start": 1317.4, "duration": 3.2}, {"text": "So again B equal to 4.", "start": 1324.95, "duration": 3.03}, {"text": "This node is a problem.", "start": 1327.98, "duration": 1.92}, {"text": "Only two things in it.", "start": 1329.9, "duration": 1.71}, {"text": "So what do we do?", "start": 1331.61, "duration": 2.32}, {"text": "So before we go into that,\nlet's make this assumption", "start": 1333.93, "duration": 4.05}, {"text": "that-- there are two\nsteps to deletion.", "start": 1337.98, "duration": 4.03}, {"text": "The first step is making\nthe deletion at a leaf.", "start": 1342.01, "duration": 2.94}, {"text": "How do you do that?", "start": 1344.95, "duration": 1.099}, {"text": "So the way you make a deletion\nat a leaf is, let's say,", "start": 1346.049, "duration": 2.291}, {"text": "you have a key.", "start": 1348.34, "duration": 1.76}, {"text": "You come down in your\nB-tree, and you add a node.", "start": 1350.1, "duration": 4.37}, {"text": "Oh, this key needs\nto be deleted.", "start": 1354.47, "duration": 3.547}, {"text": "But it's not a leaf.", "start": 1358.017, "duration": 0.833}, {"text": "So what do you do?", "start": 1358.85, "duration": 1.62}, {"text": "So essentially what you do is\nyou look at these two subtrees.", "start": 1360.47, "duration": 5.76}, {"text": "So it might have\nonly one subtree.", "start": 1366.23, "duration": 1.55}, {"text": "If it's at the end,\nit will have only one.", "start": 1367.78, "duration": 1.75}, {"text": "Actually, no, that's not true.", "start": 1369.53, "duration": 1.83}, {"text": "Ignore that.", "start": 1371.36, "duration": 0.58}, {"text": "If it's not a leaf,\nit has two subtrees.", "start": 1371.94, "duration": 2.74}, {"text": "So either take the\nrightmost element", "start": 1374.68, "duration": 2.45}, {"text": "in this subtree,\nwhich is a leaf,", "start": 1377.13, "duration": 1.495}, {"text": "because you can always\nkeep going down,", "start": 1378.625, "duration": 1.625}, {"text": "right, right, right, right\ntill you get to a leaf,", "start": 1380.25, "duration": 2.083}, {"text": "or the leftmost element\nin this subtree.", "start": 1382.333, "duration": 2.477}, {"text": "So that is just the next\nelement after this guy.", "start": 1384.81, "duration": 4.5}, {"text": "So you delete this, and\nyou bring this up to here.", "start": 1389.31, "duration": 4.39}, {"text": "We'll do an example of\nthis, and it'll be clearer.", "start": 1393.7, "duration": 3.21}, {"text": "So you take either the rightmost\nelement in the left subtree", "start": 1396.91, "duration": 2.74}, {"text": "or the leftmost element\nin the right subtree", "start": 1399.65, "duration": 1.9}, {"text": "and bring it up here.", "start": 1401.55, "duration": 1.07}, {"text": "So you sort of like move\nthe deletion to the leaf.", "start": 1402.62, "duration": 3.24}, {"text": "And now it's easier\nto deal with.", "start": 1405.86, "duration": 1.45}, {"text": "So we will come to that.", "start": 1407.31, "duration": 1.0}, {"text": "Also just note that this is not\nwhat is done in the recitation.", "start": 1408.31, "duration": 4.68}, {"text": "This algorithm for\ndeletion, I think,", "start": 1412.99, "duration": 1.59}, {"text": "is not done in the\nrecitation notes.", "start": 1414.58, "duration": 1.3}, {"text": "This is a different thing, which\nI'll send out a link for later.", "start": 1415.88, "duration": 2.666}, {"text": "But I believe it\nworks, because I got it", "start": 1418.546, "duration": 1.994}, {"text": "from the [INAUDIBLE] reference.", "start": 1420.54, "duration": 3.96}, {"text": "So once you move to the leaf--\nso now let's look at this.", "start": 1424.5, "duration": 4.66}, {"text": "So this is a node\nthat is underfull.", "start": 1429.16, "duration": 2.35}, {"text": "And you want to fix it.", "start": 1431.51, "duration": 2.54}, {"text": "So how do you fix it?", "start": 1434.05, "duration": 0.99}, {"text": "So what do is you\nlook at its siblings.", "start": 1435.04, "duration": 3.71}, {"text": "So in this case,\nit has one sibling.", "start": 1438.75, "duration": 1.53}, {"text": "It can have up to two siblings.", "start": 1440.28, "duration": 1.49}, {"text": "It can have left or right.", "start": 1441.77, "duration": 2.47}, {"text": "So what you do is you\nlook at a sibling.", "start": 1444.24, "duration": 2.15}, {"text": "And this sibling is\nactually 1 over the minimum.", "start": 1446.39, "duration": 3.97}, {"text": "And if it's 1 over the\nminimum, then it's really easy.", "start": 1450.36, "duration": 3.1}, {"text": "All you have to do is take\nthe leftmost thing here--", "start": 1453.46, "duration": 2.38}, {"text": "or if it's the\nsibling on this side,", "start": 1455.84, "duration": 1.5}, {"text": "take the rightmost thing here.", "start": 1457.34, "duration": 3.7}, {"text": "And look at its parent.", "start": 1461.04, "duration": 1.69}, {"text": "So you bring the parent down,\nand you move the sibling up.", "start": 1462.73, "duration": 7.6}, {"text": "And there we go.", "start": 1470.33, "duration": 0.89}, {"text": "So you basically are rotating\nthe thing into place.", "start": 1471.22, "duration": 4.73}, {"text": "So you move the parent down\ninto the underfull node,", "start": 1475.95, "duration": 3.47}, {"text": "and you replace the parent\nby the leftmost thing here.", "start": 1479.42, "duration": 3.909}, {"text": "Everyone see why that\npreserves everything?", "start": 1483.329, "duration": 1.791}, {"text": "And the child is also shifted.", "start": 1490.15, "duration": 2.23}, {"text": "Make sure you see that.", "start": 1492.38, "duration": 1.11}, {"text": "So the child which was in this\nsubtree is now in this subtree.", "start": 1493.49, "duration": 3.7}, {"text": "But then you can\nhave the situation", "start": 1499.76, "duration": 2.01}, {"text": "where you don't\nhave a nice sibling", "start": 1501.77, "duration": 2.85}, {"text": "to take care of your problems.", "start": 1504.62, "duration": 1.79}, {"text": "So in this scenario, the\nsibling is barely full.", "start": 1506.41, "duration": 4.08}, {"text": "It has three things, and it\ncan't donate anything to you.", "start": 1510.49, "duration": 2.49}, {"text": "So what do you do in that case?", "start": 1512.98, "duration": 2.46}, {"text": "So then you do something which\nis a parallel of the split", "start": 1515.44, "duration": 2.73}, {"text": "operation.", "start": 1518.17, "duration": 0.56}, {"text": "You do a merge.", "start": 1518.73, "duration": 1.84}, {"text": "So what do you have?", "start": 1520.57, "duration": 0.86}, {"text": "So here you have B minus 2,\nand here you have B minus 1.", "start": 1521.43, "duration": 9.06}, {"text": "And you get 2B minus 3.", "start": 1530.49, "duration": 3.065}, {"text": "Well, you've got\nanother element.", "start": 1533.555, "duration": 1.375}, {"text": "You also take the parent.", "start": 1534.93, "duration": 1.6}, {"text": "So how do you do the merge.", "start": 1536.53, "duration": 0.51}, {"text": "I just want to show\nyou the merge first.", "start": 1537.04, "duration": 1.666}, {"text": "So the way you do it is\nyou move the parent down,", "start": 1538.706, "duration": 3.185}, {"text": "and you merge these two.", "start": 1541.891, "duration": 0.999}, {"text": "Seems OK?", "start": 1546.22, "duration": 2.16}, {"text": "So you move the parent node\ndown and merge these two.", "start": 1548.38, "duration": 3.63}, {"text": "And, well, now this\ncomes together,", "start": 1552.01, "duration": 1.985}, {"text": "and this points\ninto the new node.", "start": 1553.995, "duration": 1.485}, {"text": "Sort of clear what's going on?", "start": 1558.4, "duration": 4.13}, {"text": "Questions?", "start": 1562.53, "duration": 2.582}, {"text": "Yes?", "start": 1565.112, "duration": 0.976}, {"text": "AUDIENCE: So now the\nparent is underfull?", "start": 1566.088, "duration": 3.727}, {"text": "PROFESSOR: Well, so you\nhave-- yeah, exactly.", "start": 1569.815, "duration": 1.875}, {"text": "So you have decreased\nthe size of the parent,", "start": 1571.69, "duration": 2.3}, {"text": "so it might be underfull.", "start": 1573.99, "duration": 1.08}, {"text": "So you propagate.", "start": 1575.07, "duration": 2.12}, {"text": "Anything else?", "start": 1577.19, "duration": 1.03}, {"text": "AUDIENCE: So are these\nall different techniques", "start": 1578.22, "duration": 2.41}, {"text": "for doing that?", "start": 1580.63, "duration": 1.144}, {"text": "PROFESSOR: So there\nare two cases.", "start": 1581.774, "duration": 1.416}, {"text": "So either you have a sibling\nwhich has extra nodes to donate", "start": 1583.19, "duration": 3.92}, {"text": "to you or you don't.", "start": 1587.11, "duration": 1.926}, {"text": "If you don't, then\nyou have to do this.", "start": 1589.036, "duration": 1.624}, {"text": "AUDIENCE: But what\nabout that case?", "start": 1590.66, "duration": 2.675}, {"text": "Or is that just like--", "start": 1593.335, "duration": 1.385}, {"text": "PROFESSOR: No, that is\nmoving it down to the leaf.", "start": 1594.72, "duration": 2.155}, {"text": "Once you move the\ndeletion down to the leaf,", "start": 1596.875, "duration": 1.833}, {"text": "so here we have something now.", "start": 1598.708, "duration": 1.592}, {"text": "And now you move it\nall the way back up.", "start": 1600.3, "duration": 3.8}, {"text": "So there are two cases.", "start": 1604.1, "duration": 1.62}, {"text": "Let's do an example.", "start": 1605.72, "duration": 0.93}, {"text": "That'll make it clearer.", "start": 1606.65, "duration": 2.2}, {"text": "How are we doing on time?", "start": 1608.85, "duration": 1.516}, {"text": "Five minutes, all right.", "start": 1610.366, "duration": 1.398}, {"text": "So we are going to delete 38.", "start": 1614.28, "duration": 4.155}, {"text": "38 is gone.", "start": 1618.435, "duration": 2.405}, {"text": "But we want to move\nit down to the leaf.", "start": 1620.84, "duration": 2.0}, {"text": "So let's take an element.", "start": 1622.84, "duration": 1.74}, {"text": "Let's say we take 41.", "start": 1624.58, "duration": 3.23}, {"text": "So we take 41 and\nmove it up here.", "start": 1627.81, "duration": 5.75}, {"text": "41 is the leftmost thing\nin the right subtree.", "start": 1633.56, "duration": 3.922}, {"text": "So this vacancy doesn't\nreally affect anything,", "start": 1637.482, "duration": 1.958}, {"text": "because this node still has\nthe right number of things,", "start": 1639.44, "duration": 2.941}, {"text": "because it's still got one\nthing in it, which is good.", "start": 1642.381, "duration": 2.249}, {"text": "So you're fine.", "start": 1644.63, "duration": 1.29}, {"text": "This is now just 48.", "start": 1645.92, "duration": 3.16}, {"text": "Let's say we now delete 41.", "start": 1649.08, "duration": 3.77}, {"text": "So 41 is gone.", "start": 1652.85, "duration": 3.69}, {"text": "So now that 41 is\ngone, what do you", "start": 1656.54, "duration": 4.94}, {"text": "replace this blank spot with?", "start": 1661.48, "duration": 1.37}, {"text": "Either this or this, right?", "start": 1667.84, "duration": 1.55}, {"text": "Doesn't matter.", "start": 1669.39, "duration": 1.13}, {"text": "So let's just do this\none for consistency.", "start": 1670.52, "duration": 3.38}, {"text": "So you have 48 here.", "start": 1673.9, "duration": 1.52}, {"text": "And now you a problem\nbecause you have a blank box.", "start": 1675.42, "duration": 3.81}, {"text": "So can you rotate?", "start": 1679.23, "duration": 4.36}, {"text": "Yes, no?", "start": 1683.59, "duration": 0.87}, {"text": "No, right?", "start": 1684.46, "duration": 1.41}, {"text": "Because sibling is barely full.", "start": 1685.87, "duration": 3.99}, {"text": "So what can you do?", "start": 1689.86, "duration": 1.14}, {"text": "So you merge.", "start": 1691.0, "duration": 1.016}, {"text": "And how do you merge?", "start": 1692.016, "duration": 0.874}, {"text": "You move the 48 down, and\nyou combine everything.", "start": 1692.89, "duration": 4.177}, {"text": "So this is kind of\nhard to understand,", "start": 1697.067, "duration": 1.583}, {"text": "but this is like a\nzero-element node.", "start": 1698.65, "duration": 2.29}, {"text": "So when you merge, you\nhave 32, 48, and nothing,", "start": 1703.96, "duration": 2.16}, {"text": "so it's just 32 and 48.", "start": 1706.12, "duration": 1.95}, {"text": "So what you do is--\nso this seems weird,", "start": 1708.07, "duration": 10.7}, {"text": "but this is just\nanother empty node.", "start": 1718.77, "duration": 2.14}, {"text": "You just propagated\nthe emptiness upwards.", "start": 1720.91, "duration": 2.165}, {"text": "Now you take this empty node,\nand you look for its siblings.", "start": 1726.52, "duration": 3.34}, {"text": "Again, its sibling is--\nwell, it's barely full.", "start": 1729.86, "duration": 4.47}, {"text": "So what do you do now?", "start": 1734.33, "duration": 1.0}, {"text": "You bring the 30 down,\nand you merge this.", "start": 1735.33, "duration": 2.46}, {"text": "So let's do that.", "start": 1737.79, "duration": 1.16}, {"text": "30 comes down, and there we go.", "start": 1746.08, "duration": 4.685}, {"text": "Looks fine?", "start": 1753.41, "duration": 0.835}, {"text": "Does that tree look good?", "start": 1754.245, "duration": 1.695}, {"text": "Questions about the operation?", "start": 1755.94, "duration": 1.25}, {"text": "I'm sure it was not\nclear, but-- anything?", "start": 1760.4, "duration": 6.65}, {"text": "Make sense?", "start": 1767.05, "duration": 1.32}, {"text": "OK, let's do a deletion where\nwe can actually do a rotation.", "start": 1768.37, "duration": 4.36}, {"text": "So let's go ahead and delete 20.", "start": 1772.73, "duration": 3.47}, {"text": "So you do your searching,\ngo down the tree.", "start": 1776.2, "duration": 2.005}, {"text": "You find the 20 under here.", "start": 1778.205, "duration": 2.705}, {"text": "So now, OK.", "start": 1780.91, "duration": 2.39}, {"text": "So you're left with just--\nactually never mind.", "start": 1783.3, "duration": 2.32}, {"text": "We'll do another one.", "start": 1785.62, "duration": 0.95}, {"text": "So this doesn't do anything.", "start": 1786.57, "duration": 1.2}, {"text": "You lost the 20, and you're\nleft with the 24 this time.", "start": 1787.77, "duration": 3.25}, {"text": "So now you delete the 24.", "start": 1791.02, "duration": 2.339}, {"text": "So now that you've\ngot rid of the 24,", "start": 1793.359, "duration": 1.541}, {"text": "you have a blank box here now.", "start": 1794.9, "duration": 1.25}, {"text": "But its sibling is\nnot barely full.", "start": 1798.38, "duration": 1.93}, {"text": "It has something to donate.", "start": 1800.31, "duration": 2.44}, {"text": "So anyone, which elements\nare going to rotate?", "start": 1802.75, "duration": 4.114}, {"text": "AUDIENCE: 17 and 16.", "start": 1806.864, "duration": 0.976}, {"text": "PROFESSOR: 16 and 17, right.", "start": 1807.84, "duration": 1.563}, {"text": "Cool.", "start": 1809.403, "duration": 0.967}, {"text": "So 16 goes up, 17 goes down.", "start": 1810.37, "duration": 5.69}, {"text": "And you're done.", "start": 1816.06, "duration": 1.2}, {"text": "You're consistent again.", "start": 1817.26, "duration": 1.0}, {"text": "So that was deletion.", "start": 1820.85, "duration": 1.03}, {"text": "Those are the two\ncases for deletion.", "start": 1821.88, "duration": 2.3}, {"text": "Does that make sense?", "start": 1824.18, "duration": 2.572}, {"text": "Anyone?", "start": 1826.752, "duration": 2.468}, {"text": "Any questions?", "start": 1829.22, "duration": 1.8}, {"text": "OK.", "start": 1831.02, "duration": 1.27}, {"text": "So that's all the topics we\nwere supposed to cover today.", "start": 1832.29, "duration": 4.13}, {"text": "Any questions about\nany of the operations,", "start": 1836.42, "duration": 3.39}, {"text": "any of the other topics,\nlecture, anything?", "start": 1839.81, "duration": 3.71}]