[{"text": "The following content is\nprovided under a Creative", "start": 0.79, "duration": 2.34}, {"text": "Commons license.", "start": 3.13, "duration": 1.42}, {"text": "Your support will help\nMIT OpenCourseWare", "start": 4.55, "duration": 2.21}, {"text": "continue to offer high quality\neducational resources for free.", "start": 6.76, "duration": 4.09}, {"text": "To make a donation or to\nview additional materials", "start": 10.85, "duration": 2.54}, {"text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare", "start": 13.39, "duration": 3.93}, {"text": "at ocw.mit.edu.", "start": 17.32, "duration": 1.25}, {"text": "JOHN GUTTAG: All right,\nwelcome to the 60002,", "start": 30.962, "duration": 5.488}, {"text": "or if you were in 600,\nthe second half of 600.", "start": 36.45, "duration": 3.82}, {"text": "I'm John Guttag.", "start": 40.27, "duration": 2.17}, {"text": "Let me start with a few\nadministrative things.", "start": 42.44, "duration": 2.15}, {"text": "What's the workload?", "start": 47.51, "duration": 1.26}, {"text": "There are problem sets.", "start": 48.77, "duration": 2.13}, {"text": "They'll all be\nprogramming problems", "start": 50.9, "duration": 1.95}, {"text": "much in the style of 60001.", "start": 52.85, "duration": 3.36}, {"text": "And the goal-- really twofold.", "start": 56.21, "duration": 3.47}, {"text": "60001 problem sets\nwere mostly about you", "start": 59.68, "duration": 3.79}, {"text": "learning to be a programmer.", "start": 63.47, "duration": 3.12}, {"text": "A lot of that carries over.", "start": 66.59, "duration": 1.77}, {"text": "No one learns to be a\nprogrammer in half a semester.", "start": 68.36, "duration": 4.17}, {"text": "So a lot of it is to\nimprove your skills,", "start": 72.53, "duration": 2.94}, {"text": "but also there's a\nlot more, I would say,", "start": 75.47, "duration": 3.15}, {"text": "conceptual, algorithmic\nmaterial in 60002,", "start": 78.62, "duration": 5.76}, {"text": "and the problem\nsets are designed", "start": 84.38, "duration": 1.89}, {"text": "to help cement that\nas well as just", "start": 86.27, "duration": 2.01}, {"text": "to give you\nprogramming experience.", "start": 88.28, "duration": 2.98}, {"text": "Finger exercises, small things.", "start": 91.26, "duration": 3.27}, {"text": "If they're taking you more\nthan 15 minutes, let us know.", "start": 94.53, "duration": 4.62}, {"text": "They really shouldn't,\nand they're generally", "start": 99.15, "duration": 2.94}, {"text": "designed to help you learn\na single concept, usually", "start": 102.09, "duration": 3.18}, {"text": "a programming concept.", "start": 105.27, "duration": 2.73}, {"text": "Reading assignments\nin the textbooks,", "start": 108.0, "duration": 2.67}, {"text": "I've already posted the\nfirst reading assignment,", "start": 110.67, "duration": 3.78}, {"text": "and essentially they should\nprovide you a very different", "start": 114.45, "duration": 3.99}, {"text": "take on the same\nmaterial we're covering", "start": 118.44, "duration": 1.86}, {"text": "in lectures and recitations.", "start": 120.3, "duration": 3.24}, {"text": "We've tried to choose\ndifferent examples for lectures", "start": 123.54, "duration": 2.73}, {"text": "and from the textbooks\nfor the most part,", "start": 126.27, "duration": 2.25}, {"text": "so you get to see things in\ntwo slightly different ways.", "start": 128.52, "duration": 3.81}, {"text": "There'll be a final exam\nbased upon all of the above.", "start": 132.33, "duration": 4.35}, {"text": "All right,\nprerequisites-- experience", "start": 136.68, "duration": 1.92}, {"text": "writing object-oriented\nprograms in Python, preferably", "start": 138.6, "duration": 4.23}, {"text": "Python 3.5.", "start": 142.83, "duration": 4.74}, {"text": "Familiarity with concepts\nof computational complexity.", "start": 147.57, "duration": 3.69}, {"text": "You'll see even in\ntoday's lecture,", "start": 151.26, "duration": 1.69}, {"text": "we'll be assuming that.", "start": 152.95, "duration": 2.36}, {"text": "Familiarity with some\nsimple algorithms.", "start": 155.31, "duration": 2.34}, {"text": "If you took 60001 or you\ntook the 60001 advanced", "start": 160.87, "duration": 4.41}, {"text": "standing exam, you'll be fine.", "start": 165.28, "duration": 4.08}, {"text": "Odds are you'll be\nfine anyway, but that's", "start": 169.36, "duration": 2.55}, {"text": "the safest way to do it.", "start": 171.91, "duration": 2.35}, {"text": "So the programming\nassignments are", "start": 174.26, "duration": 2.63}, {"text": "going to be a bit\neasier, at least that's", "start": 176.89, "duration": 2.61}, {"text": "what students have\nreported in the past,", "start": 179.5, "duration": 2.34}, {"text": "because they'll be more focused\non the problem to be solved", "start": 181.84, "duration": 3.09}, {"text": "than on the actual programming.", "start": 184.93, "duration": 2.31}, {"text": "The lecture content,\nmore abstract.", "start": 187.24, "duration": 2.76}, {"text": "The lectures will be--", "start": 190.0, "duration": 1.41}, {"text": "and maybe I'm speaking\neuphemistically--", "start": 191.41, "duration": 1.86}, {"text": "a bit faster paced.", "start": 193.27, "duration": 1.99}, {"text": "So hang on to your seats.", "start": 195.26, "duration": 3.41}, {"text": "And the course is really\nless about programming", "start": 198.67, "duration": 3.0}, {"text": "and more about dipping your toe\ninto the exotic world of data", "start": 201.67, "duration": 4.02}, {"text": "science.", "start": 205.69, "duration": 2.19}, {"text": "We do want you to hone\nyour programming skills.", "start": 207.88, "duration": 2.88}, {"text": "There'll be a few\nadditional bits of Python.", "start": 210.76, "duration": 2.34}, {"text": "Today, for example, we'll\ntalk about lambda abstraction.", "start": 213.1, "duration": 4.77}, {"text": "Inevitably, some comments\nabout software engineering,", "start": 217.87, "duration": 2.55}, {"text": "how to structure your code,\nmore emphasis in using packages.", "start": 220.42, "duration": 5.04}, {"text": "Hopefully it will go\na little bit smoother", "start": 225.46, "duration": 1.83}, {"text": "than in the last\nproblem set in 60001.", "start": 227.29, "duration": 4.08}, {"text": "And finally, it's the old\njoke about programming", "start": 231.37, "duration": 3.18}, {"text": "that somebody walks up to a\ntaxi driver in New York City", "start": 234.55, "duration": 5.84}, {"text": "and says, \"I'm lost.", "start": 240.39, "duration": 1.44}, {"text": "How do I get to Carnegie Hall?\"", "start": 241.83, "duration": 2.1}, {"text": "The taxi driver\nturns to the person", "start": 243.93, "duration": 1.89}, {"text": "and says, \"practice,\npractice, practice.\"", "start": 245.82, "duration": 3.97}, {"text": "And that's really the only\nway to learn to program", "start": 249.79, "duration": 2.3}, {"text": "is practice, practice, practice.", "start": 252.09, "duration": 2.045}, {"text": "The main topic of the\ncourse is what I think", "start": 257.29, "duration": 2.7}, {"text": "of as computational models.", "start": 259.99, "duration": 2.59}, {"text": "How do we use\ncomputation to understand", "start": 262.58, "duration": 2.39}, {"text": "the world in which we live?", "start": 264.97, "duration": 3.8}, {"text": "What is a model?", "start": 268.77, "duration": 1.05}, {"text": "To me I think of it as\nan experimental device", "start": 269.82, "duration": 3.36}, {"text": "that can help us to either\nunderstand something that", "start": 273.18, "duration": 2.7}, {"text": "has happened, to sort of build\na model that explains phenomena", "start": 275.88, "duration": 5.1}, {"text": "we see every day,\nor a model that", "start": 280.98, "duration": 3.27}, {"text": "will allow us to predict\nthe future, something", "start": 284.25, "duration": 2.07}, {"text": "that hasn't happened.", "start": 286.32, "duration": 2.4}, {"text": "So you can think of, for\nexample, a climate change", "start": 288.72, "duration": 2.43}, {"text": "model.", "start": 291.15, "duration": 1.17}, {"text": "We can build models that sort\nof explain how the climate has", "start": 292.32, "duration": 3.21}, {"text": "changed over the\nmillennia, and then we", "start": 295.53, "duration": 2.85}, {"text": "can build probably a\nslightly different model", "start": 298.38, "duration": 2.07}, {"text": "that might predict what it\nwill be like in the future.", "start": 300.45, "duration": 2.88}, {"text": "So essentially\nwhat's happening is", "start": 306.63, "duration": 3.99}, {"text": "science is moving out of the\nwet lab and into the computer.", "start": 310.62, "duration": 7.02}, {"text": "Increasingly, I'm sure\nyou all see this--", "start": 317.64, "duration": 2.19}, {"text": "those of you who\nare science majors--", "start": 319.83, "duration": 2.22}, {"text": "an increasing reliance on\ncomputation rather than", "start": 322.05, "duration": 3.63}, {"text": "traditional experimentation.", "start": 325.68, "duration": 2.97}, {"text": "As we'll talk about,\ntraditional experimentation", "start": 328.65, "duration": 3.39}, {"text": "is and will remain\nimportant, but now it", "start": 332.04, "duration": 2.94}, {"text": "has to really be\nsupplemented by computation.", "start": 334.98, "duration": 4.32}, {"text": "We'll talk about three\nkinds of models--", "start": 339.3, "duration": 2.49}, {"text": "optimization models, statistical\nmodels, and simulation models.", "start": 341.79, "duration": 6.45}, {"text": "So let's talk first about\noptimization models.", "start": 348.24, "duration": 4.37}, {"text": "An optimization model\nis a very simple thing.", "start": 352.61, "duration": 3.61}, {"text": "We start with an objective\nfunction that's either", "start": 356.22, "duration": 3.38}, {"text": "to be maximized or minimized.", "start": 359.6, "duration": 3.74}, {"text": "So for, example, if I'm going\nfrom New York to Boston,", "start": 363.34, "duration": 3.27}, {"text": "I might want to find a\nroute by car or plane", "start": 366.61, "duration": 2.79}, {"text": "or train that minimizes\nthe total travel time.", "start": 369.4, "duration": 4.53}, {"text": "So my objective\nfunction would be", "start": 373.93, "duration": 1.68}, {"text": "the number of minutes spent in\ntransit getting from a to b.", "start": 375.61, "duration": 4.26}, {"text": "We then often have to layer on\ntop of that objective function", "start": 383.38, "duration": 5.14}, {"text": "a set of constraints, sometimes\nempty, that we have to obey.", "start": 388.52, "duration": 5.86}, {"text": "So maybe the fastest way to\nget from New York to Boston", "start": 394.38, "duration": 4.19}, {"text": "is to take a plane, but I\nonly have $100 to spend.", "start": 398.57, "duration": 4.0}, {"text": "So that option is off the table.", "start": 402.57, "duration": 2.14}, {"text": "So I have the constraints\nthere on the amount", "start": 404.71, "duration": 2.98}, {"text": "of money I can spend.", "start": 407.69, "duration": 2.34}, {"text": "Or maybe I have to be\nin Boston before 5:00 PM", "start": 410.03, "duration": 3.45}, {"text": "and while the bus would\nget me there for $15,", "start": 413.48, "duration": 4.74}, {"text": "it won't get me\nthere before 5:00.", "start": 418.22, "duration": 2.26}, {"text": "And so maybe what I'm\nleft with is driving,", "start": 420.48, "duration": 3.98}, {"text": "something like that.", "start": 424.46, "duration": 1.41}, {"text": "So objective function,\nsomething you're either", "start": 425.87, "duration": 2.7}, {"text": "minimizing or maximizing,\nand a set of constraints", "start": 428.57, "duration": 4.38}, {"text": "that eliminate some solutions.", "start": 432.95, "duration": 3.75}, {"text": "And as we'll see, there's\nan asymmetry here.", "start": 436.7, "duration": 2.85}, {"text": "We handle these two\nthings differently.", "start": 439.55, "duration": 3.241}, {"text": "We use these things\nall the time.", "start": 446.85, "duration": 1.7}, {"text": "I commute to work using Waze,\nwhich essentially is solving--", "start": 451.22, "duration": 4.2}, {"text": "not very well, I believe--\nan optimization problem", "start": 455.42, "duration": 3.24}, {"text": "to minimize my time\nfrom home to here.", "start": 458.66, "duration": 3.72}, {"text": "When you travel, maybe you log\ninto various advisory programs", "start": 462.38, "duration": 4.76}, {"text": "that try and optimize\nthings for you.", "start": 467.14, "duration": 4.33}, {"text": "They're all over the place.", "start": 471.47, "duration": 1.5}, {"text": "Today you really can't avoid\nusing optimization algorithm", "start": 472.97, "duration": 5.31}, {"text": "as you get through life.", "start": 478.28, "duration": 1.17}, {"text": "Pretty abstract.", "start": 483.2, "duration": 0.82}, {"text": "Let's talk about a specific\noptimization problem", "start": 484.02, "duration": 3.08}, {"text": "called the knapsack problem.", "start": 487.1, "duration": 3.36}, {"text": "The first time I talked\nabout the knapsack problem", "start": 490.46, "duration": 2.49}, {"text": "I neglected to show a\npicture of a knapsack,", "start": 492.95, "duration": 2.94}, {"text": "and I was 10 minutes\ninto it before I", "start": 495.89, "duration": 2.04}, {"text": "realized most of the class had\nno idea what a knapsack was.", "start": 497.93, "duration": 3.96}, {"text": "It's what we old people\nused to call a backpack,", "start": 501.89, "duration": 3.48}, {"text": "and they used to look more\nlike that than they look today.", "start": 505.37, "duration": 5.02}, {"text": "So the knapsack\nproblem involves--", "start": 510.39, "duration": 4.529}, {"text": "usually it's told in terms of a\nburglar who breaks into a house", "start": 514.919, "duration": 4.701}, {"text": "and wants to steal\na bunch of stuff", "start": 519.62, "duration": 2.429}, {"text": "but has a knapsack\nthat will only", "start": 522.049, "duration": 2.191}, {"text": "hold a finite amount of stuff\nthat he or she wishes to steal.", "start": 524.24, "duration": 4.5}, {"text": "And so the burglar has to\nsolve the optimization problem", "start": 528.74, "duration": 5.01}, {"text": "of stealing the stuff with\nthe most value while obeying", "start": 533.75, "duration": 4.17}, {"text": "the constraint that it all\nhas to fit in the knapsack.", "start": 537.92, "duration": 5.19}, {"text": "So we have an\nobjective function.", "start": 543.11, "duration": 4.63}, {"text": "I'll get the most for\nthis when I fence it.", "start": 547.74, "duration": 2.79}, {"text": "And a constraint, it has\nto fit in my backpack.", "start": 550.53, "duration": 3.42}, {"text": "And you can guess\nwhich of these might be", "start": 553.95, "duration": 3.15}, {"text": "the most valuable items here.", "start": 557.1, "duration": 1.48}, {"text": "So here is in words, written\nwords what I just said orally.", "start": 561.44, "duration": 6.45}, {"text": "There's more stuff\nthan you can carry,", "start": 567.89, "duration": 1.74}, {"text": "and you have to choose\nwhich stuff to take", "start": 569.63, "duration": 2.64}, {"text": "and which to leave behind.", "start": 572.27, "duration": 1.25}, {"text": "I should point out that\nthere are two variants of it.", "start": 576.21, "duration": 3.68}, {"text": "There's the 0/1 knapsack\nproblem and the continuous.", "start": 579.89, "duration": 6.85}, {"text": "The 0/1 would be illustrated\nby something like this.", "start": 586.74, "duration": 5.42}, {"text": "So the 0/1 knapsack problem\nmeans you either take", "start": 592.16, "duration": 2.9}, {"text": "the object or you don't.", "start": 595.06, "duration": 1.73}, {"text": "I take that whole gold\nbar or I take none of it.", "start": 596.79, "duration": 4.69}, {"text": "The continuous or so-called\nfractional knapsack problem", "start": 601.48, "duration": 3.0}, {"text": "says I can take pieces of it.", "start": 604.48, "duration": 2.62}, {"text": "So maybe if I take\nin my gold bar", "start": 607.1, "duration": 1.67}, {"text": "and shaved it into gold\ndust, I then can say,", "start": 608.77, "duration": 3.36}, {"text": "well, the whole\nthing won't fit in,", "start": 612.13, "duration": 1.57}, {"text": "but I can fit in a\npath, part of it.", "start": 613.7, "duration": 3.1}, {"text": "The continuous knapsack\nproblem is really boring.", "start": 616.8, "duration": 4.14}, {"text": "It's easy to solve.", "start": 620.94, "duration": 1.897}, {"text": "How do you think you would\nsolve the continuous problem?", "start": 622.837, "duration": 2.333}, {"text": "Suppose you had over here a pile\nof gold and a pile of silver", "start": 629.65, "duration": 4.91}, {"text": "and a pile of raisins, and you\nwanted to maximize your value.", "start": 634.56, "duration": 5.45}, {"text": "Well, you'd fill up\nyour knapsack with gold", "start": 640.01, "duration": 2.88}, {"text": "until you either ran out of\ngold or ran out of space.", "start": 642.89, "duration": 3.015}, {"text": "If you haven't run\nout of space, you'll", "start": 645.905, "duration": 2.325}, {"text": "now put silver in until\nyou run out of space.", "start": 648.23, "duration": 4.347}, {"text": "If you still haven't\nrun out of space,", "start": 652.577, "duration": 1.583}, {"text": "well, then you'll take as many\nraisins as you can fit in.", "start": 654.16, "duration": 3.5}, {"text": "But you can solve it with what's\ncalled a greedy algorithm,", "start": 657.66, "duration": 3.43}, {"text": "and we'll talk much more\nabout this as we go forward.", "start": 661.09, "duration": 2.32}, {"text": "Where you take the best\nthing first as long as", "start": 667.86, "duration": 3.06}, {"text": "you can and then you move\non to the next thing.", "start": 670.92, "duration": 4.4}, {"text": "As we'll see, the\n0/1 knapsack problem", "start": 675.32, "duration": 3.6}, {"text": "is much more complicated because\nonce you make a decision,", "start": 678.92, "duration": 3.9}, {"text": "it will affect the\nfuture decisions.", "start": 682.82, "duration": 4.13}, {"text": "Let's look at an example, and\nI should probably warn you,", "start": 686.95, "duration": 3.84}, {"text": "if you're hungry, this is not\ngoing to be a fun lecture.", "start": 690.79, "duration": 4.33}, {"text": "So here is my least\nfavorite because I always", "start": 695.12, "duration": 2.9}, {"text": "want to eat more than\nI'm supposed to eat.", "start": 698.02, "duration": 3.01}, {"text": "So the point is typically\nknapsack problems", "start": 701.03, "duration": 3.37}, {"text": "are not physical knapsacks\nbut some conceptual idea.", "start": 704.4, "duration": 4.33}, {"text": "So let's say that I'm allowed\n1,500 calories of food,", "start": 708.73, "duration": 5.1}, {"text": "and these are my options.", "start": 713.83, "duration": 2.98}, {"text": "I have to go about deciding,\nlooking at this food--", "start": 716.81, "duration": 3.77}, {"text": "and it's interesting, again,\nthere's things showing up", "start": 720.58, "duration": 2.25}, {"text": "on your screen that are not\nshowing up on my screen,", "start": 722.83, "duration": 3.22}, {"text": "but they're harmless, things\nlike how my mouse works.", "start": 726.05, "duration": 3.98}, {"text": "Anyway, so I'm trying to take\nsome fraction of this food,", "start": 730.03, "duration": 6.97}, {"text": "and it can't add up to\nmore than 1,500 calories.", "start": 737.0, "duration": 6.24}, {"text": "The problem might be that\nonce I take something that's", "start": 743.24, "duration": 4.68}, {"text": "1,485 calories, I\ncan't take anything", "start": 747.92, "duration": 2.91}, {"text": "else, or maybe 1,200 calories\nand everything else is", "start": 750.83, "duration": 3.81}, {"text": "more than 300.", "start": 754.64, "duration": 1.74}, {"text": "So once I take one thing, it\nconstrains possible solutions.", "start": 756.38, "duration": 4.38}, {"text": "A greedy algorithm,\nas we'll see,", "start": 760.76, "duration": 1.78}, {"text": "is not guaranteed to\ngive me the best answer.", "start": 762.54, "duration": 4.13}, {"text": "Let's look at a\nformalization of it.", "start": 766.67, "duration": 3.0}, {"text": "So each item is represented by\na pair, the value of the item", "start": 769.67, "duration": 5.84}, {"text": "and the weight of the item.", "start": 775.51, "duration": 1.16}, {"text": "And let's assume the knapsack\ncan accommodate items", "start": 781.27, "duration": 3.27}, {"text": "with the total weight\nof no more than w.", "start": 784.54, "duration": 5.46}, {"text": "I apologize for the\nshort variable names,", "start": 790.0, "duration": 2.56}, {"text": "but they're easier\nto fit on a slide.", "start": 792.56, "duration": 3.53}, {"text": "Finally, we're going\nto have a vector l", "start": 796.09, "duration": 3.45}, {"text": "of length n representing\nthe set of available items.", "start": 799.54, "duration": 4.97}, {"text": "This is assuming we have\nn items to choose from.", "start": 804.51, "duration": 4.7}, {"text": "So each element of the\nvector represents an item.", "start": 809.21, "duration": 2.63}, {"text": "So those are the items we have.", "start": 817.29, "duration": 2.31}, {"text": "And then another\nvector v is going", "start": 819.6, "duration": 3.54}, {"text": "to indicate whether or\nnot an item was taken.", "start": 823.14, "duration": 4.46}, {"text": "So essentially I'm going\nto use a binary number", "start": 827.6, "duration": 2.25}, {"text": "to represent the set of\nitems I choose to take.", "start": 829.85, "duration": 4.85}, {"text": "For item three say,\nif bit three is zero", "start": 834.7, "duration": 4.11}, {"text": "I'm not taking the item.", "start": 838.81, "duration": 2.22}, {"text": "If bit three is one, then\nI am taking the item.", "start": 841.03, "duration": 5.24}, {"text": "So it just shows I\ncan now very nicely", "start": 846.27, "duration": 3.18}, {"text": "represent what I've done\nby a single vector of zeros", "start": 849.45, "duration": 4.751}, {"text": "and ones.", "start": 854.201, "duration": 0.499}, {"text": "Let me pause for a second.", "start": 857.51, "duration": 2.49}, {"text": "Does anyone have any\nquestions about this setup?", "start": 860.0, "duration": 3.59}, {"text": "It's important to get\nthis setup because what", "start": 863.59, "duration": 2.04}, {"text": "we're going to see now depends\nupon that setting in your head.", "start": 865.63, "duration": 6.21}, {"text": "So I've kind of used mathematics\nto describe the backpack", "start": 871.84, "duration": 3.75}, {"text": "problem.", "start": 875.59, "duration": 1.27}, {"text": "And that's typically the way\nwe deal with these optimization", "start": 876.86, "duration": 2.72}, {"text": "problems.", "start": 879.58, "duration": 1.11}, {"text": "We start with some\ninformal description,", "start": 880.69, "duration": 3.18}, {"text": "and then we translate them into\na mathematical representation.", "start": 883.87, "duration": 5.05}, {"text": "So here it is.", "start": 888.92, "duration": 2.16}, {"text": "We're going to try\nand find a vector", "start": 891.08, "duration": 1.77}, {"text": "v that maximizes the sum\nof V sub i times I sub i.", "start": 892.85, "duration": 9.58}, {"text": "Now, remember I sub i is\nthe value of the item.", "start": 905.76, "duration": 3.99}, {"text": "V sub i is either zero or one\nSo if I didn't take the item,", "start": 909.75, "duration": 7.99}, {"text": "I'm multiplying\nits value by zero.", "start": 917.74, "duration": 2.61}, {"text": "So it contributes\nnothing to the sum.", "start": 920.35, "duration": 3.06}, {"text": "If I did take the item, I'm\nmultiplying its value by one.", "start": 923.41, "duration": 3.63}, {"text": "So the value of the item\ngets added to the sum.", "start": 927.04, "duration": 4.23}, {"text": "So that tells me the\nvalue of V. And I", "start": 931.27, "duration": 4.64}, {"text": "want to get the\nmost valuable V I", "start": 935.91, "duration": 2.25}, {"text": "can get subject\nto the constraint", "start": 938.16, "duration": 5.13}, {"text": "that if I look at the item's\ndot weight and multiply it by V,", "start": 943.29, "duration": 5.56}, {"text": "the sum of the weights\nis no greater than w.", "start": 948.85, "duration": 5.82}, {"text": "So I'm playing the same\ntrick with the values", "start": 954.67, "duration": 2.27}, {"text": "of multiplying each\none by zero or one,", "start": 956.94, "duration": 4.68}, {"text": "and that's my constraint.", "start": 961.62, "duration": 2.792}, {"text": "Make sense?", "start": 968.48, "duration": 2.78}, {"text": "All right, so now we have\nthe problem formalized.", "start": 971.26, "duration": 5.7}, {"text": "How do we solve it?", "start": 976.96, "duration": 2.41}, {"text": "Well, the most obvious\nsolution is brute force.", "start": 979.37, "duration": 5.49}, {"text": "I enumerate all\npossible combinations", "start": 984.86, "duration": 2.65}, {"text": "of items; that is to say,\nI generate all subsets", "start": 987.51, "duration": 8.556}, {"text": "of the items that\nare available--", "start": 996.066, "duration": 1.374}, {"text": "I don't know why it\nsays subjects here,", "start": 997.44, "duration": 2.58}, {"text": "but we should have said items.", "start": 1000.02, "duration": 1.5}, {"text": "Let me fix that.", "start": 1001.52, "duration": 2.95}, {"text": "This is called the power set.", "start": 1004.47, "duration": 2.7}, {"text": "So the power set of a set\nincludes the empty subset.", "start": 1007.17, "duration": 4.2}, {"text": "It includes the set\nthat includes everything", "start": 1011.37, "duration": 3.3}, {"text": "and everything in between.", "start": 1014.67, "duration": 4.06}, {"text": "So subsets of size one,\nsubsets of size two, et cetera.", "start": 1018.73, "duration": 4.82}, {"text": "So now I've generated all\npossible sets of items.", "start": 1023.55, "duration": 3.9}, {"text": "I can now go through\nand sum up the weights", "start": 1027.45, "duration": 3.51}, {"text": "and remove all those sets that\nweigh more than I'm allowed.", "start": 1030.96, "duration": 5.5}, {"text": "And then from the\nremaining combinations,", "start": 1036.46, "duration": 2.32}, {"text": "choose any one whose\nvalue is the largest.", "start": 1038.78, "duration": 4.61}, {"text": "I say choose any\none because there", "start": 1043.39, "duration": 1.89}, {"text": "could be ties, in which case\nI don't care which I choose.", "start": 1045.28, "duration": 2.615}, {"text": "So it's pretty obvious\nthat this is going", "start": 1050.74, "duration": 4.06}, {"text": "to give you a correct answer.", "start": 1054.8, "duration": 2.37}, {"text": "You're considering\nall possibilities", "start": 1057.17, "duration": 2.37}, {"text": "and choosing a winner.", "start": 1059.54, "duration": 1.08}, {"text": "Unfortunately, it's\nusually not very practical.", "start": 1063.29, "duration": 3.99}, {"text": "What we see here is\nthat's what the power", "start": 1067.28, "duration": 4.63}, {"text": "set is if you have 100 vec.", "start": 1071.91, "duration": 2.51}, {"text": "Not very practical, right,\neven for a fast computer", "start": 1074.42, "duration": 3.37}, {"text": "generating that many\npossibilities is going", "start": 1077.79, "duration": 3.38}, {"text": "to take a rather long time.", "start": 1081.17, "duration": 3.03}, {"text": "So kind of disappointing.", "start": 1084.2, "duration": 1.71}, {"text": "We look at it and say, well,\nwe got a brute force algorithm.", "start": 1085.91, "duration": 3.43}, {"text": "It will solve the problem,\nbut it'll take too long.", "start": 1089.34, "duration": 4.4}, {"text": "We can't actually do it.", "start": 1093.74, "duration": 1.35}, {"text": "100 is a pretty\nsmall number, right.", "start": 1095.09, "duration": 2.31}, {"text": "We often end up solving\noptimization problems", "start": 1097.4, "duration": 2.46}, {"text": "where n is something\ncloser to 1,000, sometimes", "start": 1099.86, "duration": 2.97}, {"text": "even a million.", "start": 1102.83, "duration": 2.19}, {"text": "Clearly, brute force\nisn't going to work.", "start": 1105.02, "duration": 2.95}, {"text": "So that raises\nthe next question,", "start": 1107.97, "duration": 2.07}, {"text": "are we just being stupid?", "start": 1110.04, "duration": 2.38}, {"text": "Is there a better algorithm\nthat I should have showed you?", "start": 1112.42, "duration": 2.55}, {"text": "I shouldn't say we.", "start": 1114.97, "duration": 1.0}, {"text": "Am I just being stupid?", "start": 1115.97, "duration": 1.76}, {"text": "Is there a better algorithm that\nwould have given us the answer?", "start": 1117.73, "duration": 5.22}, {"text": "The sad answer to that is\nno for the knapsack problem.", "start": 1122.95, "duration": 6.01}, {"text": "And indeed many\noptimization problems", "start": 1128.96, "duration": 3.86}, {"text": "are inherently exponential.", "start": 1132.82, "duration": 3.42}, {"text": "What that means is there\nis no algorithm that", "start": 1136.24, "duration": 4.35}, {"text": "provides an exact solution\nto this problem whose worst", "start": 1140.59, "duration": 4.29}, {"text": "case running time is not\nexponential in the number", "start": 1144.88, "duration": 3.966}, {"text": "of items.", "start": 1148.846, "duration": 0.499}, {"text": "It is an exponentially\nhard problem.", "start": 1152.64, "duration": 2.13}, {"text": "There is no really\ngood solution.", "start": 1157.47, "duration": 4.34}, {"text": "But that should not make you\nsad because while there's", "start": 1161.81, "duration": 6.2}, {"text": "no perfect solution, we're going\nto look at a couple of really", "start": 1168.01, "duration": 4.05}, {"text": "very good solutions that\nwill make this poor woman", "start": 1172.06, "duration": 3.96}, {"text": "a happier person.", "start": 1176.02, "duration": 2.38}, {"text": "So let's start with\nthe greedy algorithm.", "start": 1178.4, "duration": 1.82}, {"text": "I already talked to you\nabout greedy algorithms.", "start": 1180.22, "duration": 4.14}, {"text": "So it could hardly be simpler.", "start": 1184.36, "duration": 3.57}, {"text": "We say while the\nknapsack is not full,", "start": 1187.93, "duration": 2.67}, {"text": "put the best available\nitem into the knapsack.", "start": 1190.6, "duration": 2.17}, {"text": "When it's full, we're done.", "start": 1197.916, "duration": 1.124}, {"text": "You do need to ask a question.", "start": 1203.71, "duration": 2.39}, {"text": "What does best mean?", "start": 1206.1, "duration": 3.19}, {"text": "Is the best item\nthe most valuable?", "start": 1209.29, "duration": 4.81}, {"text": "Is it the least\nexpensive in terms", "start": 1214.1, "duration": 2.13}, {"text": "of, say, the fewest\ncalories, in my case?", "start": 1216.23, "duration": 3.96}, {"text": "Or is it the highest\nratio of value to units?", "start": 1220.19, "duration": 3.86}, {"text": "Now, maybe I think a\ncalorie in a glass of beer", "start": 1224.05, "duration": 3.07}, {"text": "is worth more than a calorie\nin a bar of chocolate,", "start": 1227.12, "duration": 3.47}, {"text": "maybe vice versa.", "start": 1230.59, "duration": 2.74}, {"text": "Which gets me to a\nconcrete example.", "start": 1233.33, "duration": 4.05}, {"text": "So you're about to\nsit down to a meal.", "start": 1237.38, "duration": 3.3}, {"text": "You know how much you value\nthe various different foods.", "start": 1240.68, "duration": 3.51}, {"text": "For example, maybe\nyou like donuts", "start": 1244.19, "duration": 1.74}, {"text": "more than you like apples.", "start": 1245.93, "duration": 2.43}, {"text": "You have a calorie\nbudget, and here we're", "start": 1248.36, "duration": 1.71}, {"text": "going to have a fairly\naustere budget--", "start": 1250.07, "duration": 2.22}, {"text": "it's only one meal;\nit's not the whole day--", "start": 1252.29, "duration": 2.69}, {"text": "of 750 calories, and we're going\nto have to go through menus", "start": 1254.98, "duration": 3.94}, {"text": "and choose what to eat.", "start": 1258.92, "duration": 2.55}, {"text": "That is as we've seen\na knapsack problem.", "start": 1261.47, "duration": 3.25}, {"text": "They should probably\nhave a knapsack solver", "start": 1264.72, "duration": 1.92}, {"text": "at every McDonald's\nand Burger King.", "start": 1266.64, "duration": 3.57}, {"text": "So here's a menu I just made up\nof wine, beer, pizza, burger,", "start": 1270.21, "duration": 6.48}, {"text": "fries, Coke,\napples, and a donut,", "start": 1276.69, "duration": 3.24}, {"text": "and the value I might\nplace on each of these", "start": 1279.93, "duration": 4.65}, {"text": "and the number of calories that\nactually are in each of these.", "start": 1284.58, "duration": 4.77}, {"text": "And we're going to\nbuild a program that", "start": 1289.35, "duration": 2.7}, {"text": "will find an optimal menu.", "start": 1292.05, "duration": 1.83}, {"text": "And if you don't like this\nmenu, you can run the program", "start": 1296.71, "duration": 3.44}, {"text": "and change the values\nto be whatever you like.", "start": 1300.15, "duration": 2.19}, {"text": "Well, as you saw\nif you took 60001,", "start": 1306.72, "duration": 3.21}, {"text": "we like to start with\nan abstract data type,", "start": 1309.93, "duration": 4.11}, {"text": "like to organize our program\naround data abstractions.", "start": 1314.04, "duration": 3.48}, {"text": "So I've got this class food.", "start": 1317.52, "duration": 3.06}, {"text": "I can initialize things.", "start": 1320.58, "duration": 2.31}, {"text": "I have a getValue,\na getCost, density,", "start": 1322.89, "duration": 4.99}, {"text": "which is going to be the value\ndivided by the cost, and then", "start": 1327.88, "duration": 3.635}, {"text": "a string representation.", "start": 1331.515, "duration": 3.065}, {"text": "So nothing here that you should\nnot all be very familiar with.", "start": 1334.58, "duration": 4.9}, {"text": "Then I'm going to have a\nfunction called buildMenu,", "start": 1343.01, "duration": 3.94}, {"text": "which will take\nin a list of names", "start": 1346.95, "duration": 2.46}, {"text": "and a list of values of equal\nlength and a list of calories.", "start": 1349.41, "duration": 4.815}, {"text": "They're all the same length.", "start": 1354.225, "duration": 2.325}, {"text": "And it will build the menu.", "start": 1356.55, "duration": 1.18}, {"text": "So it's going to be\na menu of tuples--", "start": 1361.38, "duration": 3.36}, {"text": "a menu of foods, rather.", "start": 1364.74, "duration": 2.1}, {"text": "And I build each food by\ngiving it its name, its value,", "start": 1366.84, "duration": 3.15}, {"text": "and its caloric content.", "start": 1369.99, "duration": 3.15}, {"text": "Now I have a menu.", "start": 1373.14, "duration": 0.84}, {"text": "Now comes the fun part.", "start": 1377.21, "duration": 2.55}, {"text": "Here is an implementation\nof a greedy algorithm.", "start": 1379.76, "duration": 3.33}, {"text": "I called it a flexible\ngreedy primarily because", "start": 1383.09, "duration": 3.72}, {"text": "of this key function over here.", "start": 1386.81, "duration": 1.63}, {"text": "So you'll notice in red there's\na parameter called keyfunction.", "start": 1391.07, "duration": 4.52}, {"text": "That's going to be-- map the\nelements of items to numbers.", "start": 1398.45, "duration": 4.33}, {"text": "So it will be used\nto sort the items.", "start": 1405.31, "duration": 8.28}, {"text": "So I want to sort them\nfrom best to worst,", "start": 1413.59, "duration": 3.52}, {"text": "and this function will be used\nto tell me what I mean by best.", "start": 1417.11, "duration": 5.54}, {"text": "So maybe keyfunction will\njust return the value or maybe", "start": 1422.65, "duration": 5.01}, {"text": "it will return the weight\nor maybe it will return", "start": 1427.66, "duration": 2.34}, {"text": "some function of the density.", "start": 1430.0, "duration": 3.96}, {"text": "But the idea here\nis I want to use", "start": 1433.96, "duration": 2.79}, {"text": "one greedy algorithm\nindependently", "start": 1436.75, "duration": 4.08}, {"text": "of my definition of best.", "start": 1440.83, "duration": 2.67}, {"text": "So I use keyfunction to\ndefine what I mean by best.", "start": 1443.5, "duration": 3.525}, {"text": "So I'm going to come in.", "start": 1451.721, "duration": 0.999}, {"text": "I'm going to sort it\nfrom best to worst.", "start": 1452.72, "duration": 3.2}, {"text": "And then for i in range\nlen of items sub copy--", "start": 1455.92, "duration": 5.1}, {"text": "I'm being good.", "start": 1461.02, "duration": 0.96}, {"text": "I've copied it.", "start": 1461.98, "duration": 0.81}, {"text": "That's why you sorted\nrather than sort.", "start": 1462.79, "duration": 2.79}, {"text": "I don't want to have a side\neffect in the parameter.", "start": 1465.58, "duration": 3.09}, {"text": "In general, it's not\ngood hygiene to do that.", "start": 1468.67, "duration": 5.08}, {"text": "And so for-- I'll go through\nit in order from best to worst.", "start": 1473.75, "duration": 3.86}, {"text": "And if the value is less\nthan the maximum cost,", "start": 1477.61, "duration": 6.63}, {"text": "if putting it in would keep\nme under the cost or not", "start": 1484.24, "duration": 2.95}, {"text": "over the cost, I put\nit in, and I just", "start": 1487.19, "duration": 3.12}, {"text": "do that until I can't\nput anything else in.", "start": 1490.31, "duration": 3.52}, {"text": "So I might skip a few because\nI might get to the point", "start": 1496.61, "duration": 3.51}, {"text": "where there's only\na few calories left,", "start": 1500.12, "duration": 2.28}, {"text": "and the next best item is\nover that budget but maybe", "start": 1502.4, "duration": 4.98}, {"text": "further down I'll find one that\nis not over it and put it in.", "start": 1507.38, "duration": 4.66}, {"text": "That's why I can't exit\nas soon as I reach--", "start": 1512.04, "duration": 4.17}, {"text": "as soon as I find an\nitem that won't fit.", "start": 1516.21, "duration": 3.39}, {"text": "And then I'll just return.", "start": 1519.6, "duration": 3.22}, {"text": "Does this make sense?", "start": 1522.82, "duration": 1.962}, {"text": "Does anyone have any doubts\nabout whether this algorithm", "start": 1524.782, "duration": 3.228}, {"text": "actually works?", "start": 1528.01, "duration": 0.765}, {"text": "I hope not because I\nthink it does work.", "start": 1533.974, "duration": 1.666}, {"text": "Let's ask the next question.", "start": 1538.28, "duration": 1.365}, {"text": "How efficient do we think it is?", "start": 1541.94, "duration": 2.61}, {"text": "What is the efficiency\nof this algorithm?", "start": 1547.84, "duration": 2.615}, {"text": "Let's see where the time goes.", "start": 1557.25, "duration": 3.586}, {"text": "That's the algorithm\nwe just looked at.", "start": 1560.836, "duration": 3.504}, {"text": "So I deleted the\ncomment, so we'd", "start": 1564.34, "duration": 2.049}, {"text": "have a little more\nroom in the slide.", "start": 1566.389, "duration": 1.541}, {"text": "Who wants to make a guess?", "start": 1571.15, "duration": 2.615}, {"text": "By the way, this\nis the question.", "start": 1573.765, "duration": 1.375}, {"text": "So please go answer\nthe questions.", "start": 1575.14, "duration": 2.29}, {"text": "We'll see how people do.", "start": 1577.43, "duration": 2.46}, {"text": "But we can think about\nit as well together.", "start": 1579.89, "duration": 1.875}, {"text": "Well, let's see\nwhere the time goes.", "start": 1585.01, "duration": 5.1}, {"text": "The first thing is at the sort.", "start": 1590.11, "duration": 3.45}, {"text": "So I'm going to\nsort all the items.", "start": 1593.56, "duration": 4.38}, {"text": "And we heard from\nProfessor Grimson", "start": 1597.94, "duration": 3.39}, {"text": "how long the sort takes.", "start": 1601.33, "duration": 3.25}, {"text": "See who remembers.", "start": 1604.58, "duration": 2.58}, {"text": "Python uses something\ncalled timsort,", "start": 1607.16, "duration": 3.03}, {"text": "which is a variant of something\ncalled quicksort, which", "start": 1610.19, "duration": 4.05}, {"text": "has the same worst-case\ncomplexity as merge sort.", "start": 1614.24, "duration": 5.7}, {"text": "And so we know that is n\nlog n where n in this case", "start": 1619.94, "duration": 9.32}, {"text": "would be the len of items.", "start": 1629.26, "duration": 1.26}, {"text": "So we know we have that.", "start": 1637.6, "duration": 3.32}, {"text": "Then we have a loop.", "start": 1645.78, "duration": 1.61}, {"text": "How many times do we\ngo through this loop?", "start": 1647.39, "duration": 1.75}, {"text": "Well, we go through the loop\nn times, once for each item", "start": 1654.67, "duration": 7.36}, {"text": "because we do end up\nlooking at every item.", "start": 1662.03, "duration": 1.85}, {"text": "And if we know that,\nwhat's the order?", "start": 1667.25, "duration": 4.026}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 1671.276, "duration": 1.482}, {"text": "JOHN GUTTAG: N log n plus n--", "start": 1679.674, "duration": 4.181}, {"text": "I guess is order n log n, right?", "start": 1683.855, "duration": 5.715}, {"text": "So it's pretty efficient.", "start": 1689.57, "duration": 4.71}, {"text": "And we can do this for big\nnumbers like a million.", "start": 1694.28, "duration": 3.09}, {"text": "Log of a million times a million\nis not a very big number.", "start": 1700.22, "duration": 2.97}, {"text": "So it's very efficient.", "start": 1706.15, "duration": 3.261}, {"text": "Here's some code\nthat uses greedy.", "start": 1712.72, "duration": 1.68}, {"text": "Takes in the items, the\nconstraint, in this case", "start": 1717.0, "duration": 4.39}, {"text": "will be the weight,\nand just calls greedy,", "start": 1721.39, "duration": 5.41}, {"text": "but with the keyfunction\nand prints what we have.", "start": 1726.8, "duration": 3.17}, {"text": "So we're going to test greedy.", "start": 1736.14, "duration": 2.37}, {"text": "I actually think I used 750 in\nthe code, but we can use 800.", "start": 1738.51, "duration": 3.77}, {"text": "It doesn't matter.", "start": 1742.28, "duration": 1.47}, {"text": "And here's something\nwe haven't seen before.", "start": 1743.75, "duration": 4.68}, {"text": "So used greedy by\nvalue to allocate", "start": 1748.43, "duration": 2.55}, {"text": "and calls testGreedy with food,\nmaxUnits and Food.getValue.", "start": 1750.98, "duration": 4.59}, {"text": "Notice it's passing\nthe function.", "start": 1755.57, "duration": 1.69}, {"text": "That's why it's not--", "start": 1757.26, "duration": 1.15}, {"text": "no closed parentheses after it.", "start": 1758.41, "duration": 3.15}, {"text": "Used greedy to allocate.", "start": 1761.56, "duration": 3.22}, {"text": "And then we have something\npretty interesting.", "start": 1764.78, "duration": 2.458}, {"text": "What's going on\nwith this lambda?", "start": 1769.93, "duration": 1.9}, {"text": "So here we're going to be using\ngreedy by density to allocate--", "start": 1775.66, "duration": 5.55}, {"text": "actually, sorry, this\nis greedy by cost.", "start": 1781.21, "duration": 3.36}, {"text": "And you'll notice\nwhat we're doing is--", "start": 1784.57, "duration": 2.46}, {"text": "we don't want to\npass in the cost,", "start": 1787.03, "duration": 3.15}, {"text": "right, because we really want\nthe opposite of the cost.", "start": 1790.18, "duration": 6.55}, {"text": "We want to reverse the sort\nbecause we want the cheaper", "start": 1796.73, "duration": 3.57}, {"text": "items to get chosen first.", "start": 1800.3, "duration": 2.31}, {"text": "The ones that have fewer\ncalories, not the ones that", "start": 1802.61, "duration": 2.34}, {"text": "have more calories.", "start": 1804.95, "duration": 2.13}, {"text": "As it happens,\nwhen I define cost,", "start": 1807.08, "duration": 3.66}, {"text": "I defined it in the obvious way,\nthe total number of calories.", "start": 1810.74, "duration": 4.39}, {"text": "So I could have gone and written\nanother function to do it,", "start": 1815.13, "duration": 3.89}, {"text": "but since it was so simple,\nI decided to do it in line.", "start": 1819.02, "duration": 5.28}, {"text": "So let's talk about lambda\nand then come back to it.", "start": 1824.3, "duration": 4.16}, {"text": "Lambda is used to create\nan anonymous function,", "start": 1828.46, "duration": 4.42}, {"text": "anonymous in the sense\nthat it has no name.", "start": 1832.88, "duration": 4.68}, {"text": "So you start with\nthe keyword lambda.", "start": 1837.56, "duration": 3.55}, {"text": "You then give it a\nsequence of identifiers", "start": 1841.11, "duration": 3.93}, {"text": "and then some expression.", "start": 1845.04, "duration": 1.17}, {"text": "What lambda does is\nit builds a function", "start": 1850.21, "duration": 5.35}, {"text": "that evaluates that expression\non those parameters and returns", "start": 1855.56, "duration": 5.85}, {"text": "the result of evaluating\nthe expression.", "start": 1861.41, "duration": 3.6}, {"text": "So instead of writing def, I\nhave inline defined a function.", "start": 1865.01, "duration": 7.12}, {"text": "So if we go back to it here,\nyou can see that what I've done", "start": 1872.13, "duration": 5.06}, {"text": "is lambda x one divided\nby Food.getCost of x.", "start": 1877.19, "duration": 7.572}, {"text": "Notice food is the\nclass name here.", "start": 1889.25, "duration": 4.04}, {"text": "So I'm taking the function\ngetCost from the class food,", "start": 1893.29, "duration": 5.19}, {"text": "and I'm passing it the parameter\nx, which is going to be what?", "start": 1898.48, "duration": 7.87}, {"text": "What's the type\nof x going to be?", "start": 1906.35, "duration": 1.61}, {"text": "I can wait you out.", "start": 1916.17, "duration": 3.03}, {"text": "What is the type of x have to\nbe for this lambda expression", "start": 1919.2, "duration": 3.37}, {"text": "to make sense?", "start": 1922.57, "duration": 0.59}, {"text": "Well, go back to the class food.", "start": 1929.83, "duration": 4.41}, {"text": "What's the type of the\nargument of getCost?", "start": 1934.24, "duration": 1.8}, {"text": "What's the name of the\nargument to getCost?", "start": 1942.02, "duration": 2.467}, {"text": "That's an easier question.", "start": 1944.487, "duration": 1.083}, {"text": "We'll go back and\nwe'll look at it.", "start": 1951.212, "duration": 1.458}, {"text": "What's the type of the\nargument to getCost?", "start": 1960.979, "duration": 1.791}, {"text": "AUDIENCE: Food.", "start": 1966.31, "duration": 1.5}, {"text": "JOHN GUTTAG: Food.", "start": 1967.81, "duration": 0.95}, {"text": "Thank you.", "start": 1968.76, "duration": 2.13}, {"text": "So I do have--\nspeaking of food, we", "start": 1970.89, "duration": 4.25}, {"text": "do have a tradition\nin this class", "start": 1975.14, "duration": 2.46}, {"text": "that people who answer\nquestions correctly get", "start": 1977.6, "duration": 2.89}, {"text": "rewarded with food.", "start": 1980.49, "duration": 2.85}, {"text": "Oh, Napoli would\nhave caught that.", "start": 1983.34, "duration": 4.45}, {"text": "So it has to be of\ntype food because it's", "start": 1992.56, "duration": 3.19}, {"text": "self in the class food.", "start": 1995.75, "duration": 2.71}, {"text": "So if we go back to here, this\nx has to be of type food, right.", "start": 2008.19, "duration": 6.96}, {"text": "And sure enough, when\nwe use it, it will be.", "start": 2020.45, "duration": 4.23}, {"text": "Let's now use it.", "start": 2024.68, "duration": 3.56}, {"text": "I should point out that lambda\ncan be really handy as it", "start": 2028.24, "duration": 6.11}, {"text": "is here, and it's\npossible to write", "start": 2034.35, "duration": 3.9}, {"text": "amazing, beautiful,\ncomplicated lambda expressions.", "start": 2038.25, "duration": 4.02}, {"text": "And back in the good old days of\n6001 people learned to do that.", "start": 2042.27, "duration": 6.52}, {"text": "And then they learned\nthat they shouldn't.", "start": 2048.79, "duration": 4.01}, {"text": "My view on lambda expressions\nis if I can't fit it", "start": 2052.8, "duration": 2.79}, {"text": "in a single line,\nI just go right", "start": 2055.59, "duration": 1.74}, {"text": "def and write a\nfunction definition", "start": 2057.33, "duration": 2.369}, {"text": "because it's easier to debug.", "start": 2059.699, "duration": 2.881}, {"text": "But for one-liners,\nlambda is great.", "start": 2062.58, "duration": 2.43}, {"text": "Let's look at using greedy.", "start": 2068.69, "duration": 2.469}, {"text": "So here's this\nfunction testGreedy,", "start": 2071.159, "duration": 3.181}, {"text": "takes foods and the\nmaximum number of units.", "start": 2074.34, "duration": 2.31}, {"text": "And it's going to\ngo through and it's", "start": 2079.52, "duration": 2.9}, {"text": "going to test all three\ngreedy algorithms.", "start": 2082.42, "duration": 3.372}, {"text": "And we just saw that, and\nthen here is the call of it.", "start": 2088.75, "duration": 3.59}, {"text": "And so I picked up some\nnames and the values.", "start": 2092.34, "duration": 3.39}, {"text": "This is just the menu we saw.", "start": 2095.73, "duration": 2.21}, {"text": "I'm going to build the\nmenus, and then I'm", "start": 2097.94, "duration": 1.75}, {"text": "going to call testGreedys.", "start": 2099.69, "duration": 3.21}, {"text": "So let's go look at the\ncode that does this.", "start": 2102.9, "duration": 3.35}, {"text": "So here you have it or maybe\nyou don't, because every time", "start": 2110.95, "duration": 4.52}, {"text": "I switch applications\nWindows decides I don't want", "start": 2115.47, "duration": 4.44}, {"text": "to show you the screen anyway.", "start": 2119.91, "duration": 1.3}, {"text": "This really shouldn't\nbe necessary.", "start": 2127.72, "duration": 1.54}, {"text": "Keep changes.", "start": 2135.23, "duration": 2.18}, {"text": "Why it keeps forgetting,\nI don't know.", "start": 2137.41, "duration": 1.83}, {"text": "Anyway, so here's the code.", "start": 2139.24, "duration": 2.03}, {"text": "It's all the code\nwe just looked at.", "start": 2141.27, "duration": 1.59}, {"text": "Now let's run it.", "start": 2142.86, "duration": 0.81}, {"text": "Well, what we see\nhere is that we", "start": 2147.69, "duration": 4.14}, {"text": "use greedy by value to\nallocate 750 calories,", "start": 2151.83, "duration": 4.17}, {"text": "and it chooses a\nburger, the pizza,", "start": 2156.0, "duration": 1.77}, {"text": "and the wine for a total of--", "start": 2157.77, "duration": 3.21}, {"text": "a value of 284 happiness\npoints, if you will.", "start": 2160.98, "duration": 6.16}, {"text": "On the other hand, if\nwe use greedy by cost,", "start": 2167.14, "duration": 3.23}, {"text": "I get 318 happiness points and\na different menu, the apple,", "start": 2170.37, "duration": 6.54}, {"text": "the wine, the cola, the\nbeer, and the donut.", "start": 2176.91, "duration": 2.37}, {"text": "I've lost the pizza\nand the burger.", "start": 2179.28, "duration": 2.22}, {"text": "I guess this is what\nI signed up for when", "start": 2185.01, "duration": 2.61}, {"text": "I put my preferences on.", "start": 2187.62, "duration": 1.29}, {"text": "And here's another solution\nwith 318, apple, wine--", "start": 2191.82, "duration": 10.51}, {"text": "yeah, all right.", "start": 2202.33, "duration": 2.16}, {"text": "So I actually got\nthe same solution,", "start": 2204.49, "duration": 2.8}, {"text": "but it just found them\nin a different order.", "start": 2207.29, "duration": 2.47}, {"text": "Why did it find them\nin a different order?", "start": 2209.76, "duration": 1.75}, {"text": "Because the sort order was\ndifferent because in this case", "start": 2211.51, "duration": 3.69}, {"text": "I was sorting by density.", "start": 2215.2, "duration": 1.74}, {"text": "From this, we see\nan important point", "start": 2220.39, "duration": 2.85}, {"text": "about greedy algorithms, right,\nthat we used the algorithm", "start": 2223.24, "duration": 5.43}, {"text": "and we got different answers.", "start": 2228.67, "duration": 1.59}, {"text": "Why do we have\ndifferent answers?", "start": 2233.11, "duration": 1.515}, {"text": "The problem is that\na greedy algorithm", "start": 2238.07, "duration": 2.79}, {"text": "makes a sequence of\nlocal optimizations,", "start": 2240.86, "duration": 4.71}, {"text": "chooses the locally optimal\nanswer at every point,", "start": 2245.57, "duration": 3.84}, {"text": "and that doesn't\nnecessarily add up", "start": 2249.41, "duration": 1.98}, {"text": "to a globally optimal answer.", "start": 2251.39, "duration": 3.12}, {"text": "This is often illustrated by\nshowing an example of, say,", "start": 2254.51, "duration": 4.5}, {"text": "hill climbing.", "start": 2259.01, "duration": 1.72}, {"text": "So imagine you're in a terrain\nthat looks something like this,", "start": 2260.73, "duration": 6.68}, {"text": "and you want to get to the\nhighest point you can get.", "start": 2267.41, "duration": 5.01}, {"text": "So you might choose\nas a greedy algorithm", "start": 2272.42, "duration": 3.99}, {"text": "if you can go up, go up; if\nyou can't go up, you stop.", "start": 2276.41, "duration": 7.11}, {"text": "So whenever you get\na choice, you go up.", "start": 2283.52, "duration": 3.19}, {"text": "And so if I start here, I\ncould right in the middle", "start": 2286.71, "duration": 7.88}, {"text": "maybe say, all right, it's not\nup but it's not down either.", "start": 2294.59, "duration": 4.36}, {"text": "So I'll go either left or right.", "start": 2298.95, "duration": 1.56}, {"text": "And let's say I go\nright, so I come to here.", "start": 2303.84, "duration": 3.28}, {"text": "Then I'll just make my way\nup to the top of the hill,", "start": 2307.12, "duration": 3.38}, {"text": "making a locally optimal\ndecision head up at each point,", "start": 2310.5, "duration": 4.17}, {"text": "and I'll get here and I'll\nsay, well, now any place I go", "start": 2314.67, "duration": 3.54}, {"text": "takes me to a lower point.", "start": 2318.21, "duration": 1.98}, {"text": "So I don't want to do it, right,\nbecause the greedy algorithm", "start": 2320.19, "duration": 4.14}, {"text": "says never go backwards.", "start": 2324.33, "duration": 2.78}, {"text": "So I'm here and I'm happy.", "start": 2327.11, "duration": 2.43}, {"text": "On the other hand, if I had\ngone here for my first step,", "start": 2329.54, "duration": 7.02}, {"text": "then my next step up would take\nme up, up, up, I'd get to here,", "start": 2336.56, "duration": 5.4}, {"text": "and I'd stop and say, OK,\nno way to go but down.", "start": 2341.96, "duration": 6.29}, {"text": "I don't want to go down.", "start": 2348.25, "duration": 1.0}, {"text": "I'm done.", "start": 2349.25, "duration": 1.2}, {"text": "And what I would find is I'm\nat a local maximum rather than", "start": 2350.45, "duration": 3.72}, {"text": "a global maximum.", "start": 2354.17, "duration": 0.815}, {"text": "And that's the problem\nwith greedy algorithms,", "start": 2357.74, "duration": 3.42}, {"text": "that you can get stuck\nat a local optimal point", "start": 2361.16, "duration": 5.22}, {"text": "and not get to the best one.", "start": 2366.38, "duration": 4.21}, {"text": "Now, we could ask\nthe question, can", "start": 2370.59, "duration": 6.43}, {"text": "I just say don't\nworry about a density", "start": 2377.02, "duration": 2.28}, {"text": "will always get me\nthe best answer?", "start": 2379.3, "duration": 3.96}, {"text": "Well, I've tried a\ndifferent experiment.", "start": 2383.26, "duration": 2.26}, {"text": "Let's say I'm feeling\nexpansive and I'm going", "start": 2385.52, "duration": 2.1}, {"text": "to allow myself 1,000 calories.", "start": 2387.62, "duration": 10.2}, {"text": "Well, here what we see is the\nwinner will be greedy by value,", "start": 2397.82, "duration": 11.98}, {"text": "happens to find a better\nanswer, 424 instead of 413.", "start": 2409.8, "duration": 3.83}, {"text": "So there is no way\nto know in advance.", "start": 2415.99, "duration": 3.71}, {"text": "Sometimes this definition\nof best might work.", "start": 2419.7, "duration": 2.82}, {"text": "Sometimes that might work.", "start": 2422.52, "duration": 1.83}, {"text": "Sometimes no definition\nof best will work,", "start": 2424.35, "duration": 3.6}, {"text": "and you can't get\nto a good solution--", "start": 2427.95, "duration": 3.63}, {"text": "you get to a good solution.", "start": 2431.58, "duration": 1.59}, {"text": "You can't get to\nan optimal solution", "start": 2433.17, "duration": 1.95}, {"text": "with a greedy algorithm.", "start": 2435.12, "duration": 2.25}, {"text": "On Wednesday, we'll talk\nabout how do you actually", "start": 2437.37, "duration": 3.57}, {"text": "guarantee finding an\noptimal solution in a better", "start": 2440.94, "duration": 3.66}, {"text": "way than brute force.", "start": 2444.6, "duration": 2.13}, {"text": "See you then.", "start": 2446.73, "duration": 1.89}]